window.__shortjsdoc_data = {
    "source": "\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js\n\n// Account.ForgotPassword.ServiceController.js\n// ----------------\n// Service to enable the user to recover the password when he forgets it\ndefine(\n\t'Account.ForgotPassword.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Account.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tAccountModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Account.ForgotPassword.ServiceController\n\t\t// Supports password recovery process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Account.ForgotPassword.ServiceController'\n\n\t\t\t// @method post The call to Account.ForgotPassword.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Boolean} True if the password retrieval email is successfully sent\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn AccountModel.forgotPassword(this.data.email);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js\n\n// Account.Login.ServiceController.js\n// ----------------\n// Service to handle the login of a user into the system\ndefine(\n\t'Account.Login.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Account.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tAccountModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Account.Login.ServiceController Supports login process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Account.Login.ServiceController'\n\n\t\t\t// @method post The call to Account.Login.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Account.Model.Attributes}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn AccountModel.login(this.data.email, this.data.password, this.data.redirect)\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js\n\n//@module Account\n// ----------\n// Handles account creation, login, logout and password reset\n// module Account\ndefine(\n\t'Account.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'Models.Init'\n\t,\t'Profile.Model'\n\t,\t'LiveOrder.Model'\n\t,\t'Address.Model'\n\t,\t'CreditCard.Model'\n\t,\t'SiteSettings.Model'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tApplication\n\t,\tModelsInit\n\t,\tProfile\n\t,\tLiveOrder\n\t,\tAddress\n\t,\tCreditCard\n\t,\tSiteSettings\n\t)\n{\n\t'use strict';\n\n\t// @class Account.Model Defines the model used by the all Account related services.\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\tname: 'Account'\n\n\t\t//@method login\n\t\t//@param {String} email\n\t\t//@param {String} password\n\t\t//@param {Boolean} redirect\n\t\t//@returns {Account.Model.Attributes} ret touchpoints and user profile data\n\t,\tlogin: function (email, password, redirect)\n\t\t{\n\t\t\tModelsInit.session.login({\n\t\t\t\temail: email\n\t\t\t,\tpassword: password\n\t\t\t});\n\n\t\t\tvar user = Profile.get();\n\t\t\tuser.isLoggedIn = ModelsInit.session.isLoggedIn2() ? 'T' : 'F';\n\t\t\tuser.isRecognized = ModelsInit.session.isRecognized() ? 'T' : 'F';\n\n\t\t\tvar ret = {\n\t\t\t\ttouchpoints: ModelsInit.session.getSiteSettings(['touchpoints']).touchpoints\n\t\t\t,\tuser: user\n\t\t\t};\n\n\t\t\tif (!redirect)\n\t\t\t{\n\t\t\t\tvar Environment = Application.getEnvironment(request)\n\t\t\t\t,\tlanguage = Environment && Environment.currentLanguage || {};\n\t\t\t\tlanguage.url = language.locale && ModelsInit.session.getAbsoluteUrl('checkout', '/languages/' + language.locale + '.js') || '';\n\n\t\t\t\t_.extend(ret, {\n\t\t\t\t\tcart: LiveOrder.get()\n\t\t\t\t,\taddress: Address.list()\n\t\t\t\t,\tcreditcard: CreditCard.list()\n\t\t\t\t,\tlanguage: language\n\t\t\t\t,\tcurrency: Environment && Environment.currentCurrency || ''\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// New record to return\n\t\t\t// @class Account.Model.Attributes\n\t\t\t\t// @property {Array<Object>} touchpoints\n\t\t\t\t// @property {Profile.Model} user\n\t\t\t\t// @property {LiveOrder.Model.Data} cart\n\t\t\t\t// @property {Array<Address.Model.Attributes>} address\n\t\t\t\t// @property {Array<Address.Model.Attributes>} creditcard\n\t\t\t\t// @property {Object} language\n\t\t\t\t// @property {Object} currency\n\t\t\t// @class Account.Model\n\t\t\treturn ret;\n\t\t}\n\n\t\t//@method forgotPassword\n\t\t//@param {String} email\n\t\t//@returns {Boolean} success\n\t,\tforgotPassword: function (email)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// this API method throws an exception if the email doesn't exist\n\t\t\t\t// 'The supplied email has not been registered as a customer at our Web store.'\n\t\t\t\tModelsInit.session.sendPasswordRetrievalEmail(email);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tvar error = Application.processError(e);\n\t\t\t\t// if the customer failed to log in previously\n\t\t\t\t// the password retrieval email is sent but an error is thrown\n\t\t\t\tif (error.errorCode !== 'ERR_WS_CUSTOMER_LOGIN')\n\t\t\t\t{\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn  {\n\t\t\t\tsuccess: true\n\t\t\t};\n\t\t}\n\n\t\t//@method resetPassword\n\t\t//@param {Object} params\n\t\t//@param {String} password\n\t\t//@returns {Boolean} success\n\t,\tresetPassword: function (params, password)\n\t\t{\n\t\t\tif (!ModelsInit.session.doChangePassword(params, password))\n\t\t\t{\n\t\t\t\tthrow new Error('An error has occurred');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t//@method registerAsGuest\n\t\t//@param {Object} user\n\t\t//@return {Account.Model.Attributes}\n\t,\tregisterAsGuest: function (user)\n\t\t{\n\t\t\tvar site_settings = SiteSettings.get();\n\n\t\t\tif (site_settings.registration.companyfieldmandatory === 'T')\n\t\t\t{\n\t\t\t\tuser.companyname = 'Guest Shopper';\n\t\t\t}\n\n\t\t\tModelsInit.session.registerGuest(user);\n\n\t\t\tuser = Profile.get();\n\t\t\tuser.isLoggedIn = ModelsInit.session.isLoggedIn2() ? 'T' : 'F';\n\t\t\tuser.isRecognized = ModelsInit.session.isRecognized() ? 'T' : 'F';\n\n\t\t\treturn {\n\t\t\t\ttouchpoints: ModelsInit.session.getSiteSettings(['touchpoints']).touchpoints\n\t\t\t,\tuser: user\n\t\t\t,\tcart: LiveOrder.get()\n\t\t\t,\taddress: Address.list()\n\t\t\t,\tcreditcard: CreditCard.list()\n\t\t\t};\n\t\t}\n\n\t\t//@method register\n\t\t//@param {UserData} user_data\n\t\t//@param {Account.Model.Attributes} user_data\n\t,\tregister: function (user_data)\n\t\t{\n\t\t\t//var customer = ModelsInit.getCustomer();\n\n\t\t\tif (ModelsInit.customer.isGuest())\n\t\t\t{\n\t\t\t\tvar guest_data = ModelsInit.customer.getFieldValues();\n\n\t\t\t\tModelsInit.customer.setLoginCredentials({\n\t\t\t\t\tinternalid: guest_data.internalid\n\t\t\t\t,\temail: user_data.email\n\t\t\t\t,\tpassword: user_data.password\n\t\t\t\t});\n\n\t\t\t\tModelsInit.session.login({\n\t\t\t\t\temail: user_data.email\n\t\t\t\t,\tpassword: user_data.password\n\t\t\t\t});\n\n\t\t\t\tModelsInit.customer.updateProfile({\n\t\t\t\t\tinternalid: guest_data.internalid\n\t\t\t\t,\tfirstname: user_data.firstname\n\t\t\t\t,\tlastname: user_data.lastname\n\t\t\t\t,\tcompanyname: user_data.company\n\t\t\t\t,\temailsubscribe: (user_data.emailsubscribe && user_data.emailsubscribe !== 'F') ? 'T' : 'F'\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tuser_data.emailsubscribe = (user_data.emailsubscribe && user_data.emailsubscribe !== 'F') ? 'T' : 'F';\n\n\t\t\t\tModelsInit.session.registerCustomer({\n\t\t\t\t\tfirstname: user_data.firstname\n\t\t\t\t,\tlastname: user_data.lastname\n\t\t\t\t,\tcompanyname: user_data.company\n\t\t\t\t,\temail:user_data.email\n\t\t\t\t,\tpassword:user_data.password\n\t\t\t\t,\tpassword2:user_data.password2\n\t\t\t\t,\temailsubscribe: (user_data.emailsubscribe && user_data.emailsubscribe !== 'F') ? 'T' : 'F'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar user = Profile.get();\n\t\t\tuser.isLoggedIn = ModelsInit.session.isLoggedIn2() ? 'T' : 'F';\n\t\t\tuser.isRecognized = ModelsInit.session.isRecognized() ? 'T' : 'F';\n\n\t\t\treturn {\n\t\t\t\ttouchpoints: ModelsInit.session.getSiteSettings(['touchpoints']).touchpoints\n\t\t\t,\tuser: user\n\t\t\t,\tcart: LiveOrder.get()\n\t\t\t,\taddress: Address.list()\n\t\t\t,\tcreditcard: CreditCard.list()\n\t\t\t};\n\t\t}\n\t});\n});\n\n\n//@class UserData\n//@property {String} email\n//@property {String} password\n//@property {String} password2\n//@property {String} firstname\n//@property {String} lastname\n//@property {String} company\n//@property {String} emailsubscribe T or F\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js\n\n// Account.Register.ServiceController.js\n// ----------------\n// Service to receive a new user registration\ndefine(\n\t'Account.Register.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Account.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tAccountModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Account.Register.ServiceController Supports register process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Account.Register.ServiceController'\n\n\t\t\t// @method post The call to Account.Register.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Account.Model.register.data} Object literal with registration related data\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn AccountModel.register(this.data);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js\n\n// Account.RegisterAsGuest.ServiceController.js\n// ----------------\n// Service to enable the user to be registered as a guest.\ndefine(\n\t'Account.RegisterAsGuest.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Account.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tAccountModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Account.RegisterAsGuest.ServiceController Supports register as guest process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Account.RegisterAsGuest.ServiceController'\n\n\t\t\t// @method post The call to Account.RegisterAsGuest.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Account.Model.Attributes}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn AccountModel.registerAsGuest(this.data);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js\n\n// Account.ResetPassword.ServiceController.js\n// ----------------\n// Service to reset the password of a user\ndefine(\n\t'Account.ResetPassword.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Account.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tAccountModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Account.ResetPassword.ServiceController Supports reset password process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Account.ResetPassword.ServiceController'\n\n\t\t\t// @method post The call to Account.ResetPassword.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Boolean} success\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn AccountModel.resetPassword(this.data.params, this.data.password);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js\n\n/* global customer */\n// Address.js\n// ----------\n// Handles fetching, creating and updating addresses\n// @module Address\ndefine('Address.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\n\t,\t'Backbone.Validation'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\n\t,\tBackboneValidation\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t// @class Address.Model Defines the model used by the Address frontent module.\n\t// @extends SCModel\n\treturn SCModel.extend({\n\t\tname: 'Address'\n\n\t\t// @property validation\n\t,\tvalidation: {\n\t\t\taddressee: {required: true, msg: 'Full Name is required'}\n\t\t,\taddr1: {required: true, msg: 'Address is required'}\n\t\t,\tcountry: {required: true, msg: 'Country is required'}\n\t\t,\tstate: function (value, attr, computedState)\n\t\t\t{\n\t\t\t\tvar selected_country = computedState.country;\n\n\t\t\t\tif (selected_country && ModelsInit.session.getStates([selected_country]) && !value)\n\t\t\t\t{\n\t\t\t\t\treturn 'State is required';\n\t\t\t\t}\n\t\t\t}\n\t\t,\tcity: {required: true, msg: 'City is required'}\n\t\t,\tzip: function (value, attr, computedState)\n\t\t\t{\n\t\t\t\tvar selected_country = computedState.country\n\t\t\t\t,\tcountries = ModelsInit.session.getCountries();\n\n\t\t\t\tif (!selected_country && !value || selected_country && countries[selected_country] && countries[selected_country].isziprequired === 'T' && !value)\n\t\t\t\t{\n\t\t\t\t\treturn 'State is required';\n\t\t\t\t}\n\t\t\t}\n\t\t,\tphone: {required: true, msg: 'Phone Number is required'}\n\t\t}\n\n\t,\tisValid: function (data)\n\t\t{\n\t\t\tdata = this.unwrapAddressee(_.clone(data));\n\n\t\t\tvar validator = _.extend({\n\t\t\t\t\tvalidation: this.validation\n\t\t\t\t,\tattributes: data\n\t\t\t\t}, BackboneValidation.mixin)\n\n\t\t\t,\tinvalidAttributes = validator.validate();\n\n\t\t\treturn validator.isValid();\n\t\t}\n\n\t\t// @method wrapAddressee\n\t\t// our model has \"fullname\" and \"company\" insted of  the fields \"addresse\" and \"attention\" used on netsuite.\n\t\t// this function prepare the address object for sending it to the frontend\n\t\t// @param {Object} address\n\t\t// @returns {Object} address\n\t,\twrapAddressee: function (address)\n\t\t{\n\t\t\tif (address.attention && address.addressee)\n\t\t\t{\n\t\t\t\taddress.fullname = address.attention;\n\t\t\t\taddress.company = address.addressee;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taddress.fullname = address.addressee;\n\t\t\t\taddress.company = null;\n\t\t\t}\n\n\t\t\tdelete address.attention;\n\t\t\tdelete address.addressee;\n\n\t\t\treturn address;\n\t\t}\n\n\t\t// @method unwrapAddressee\n\t\t// @param {Object} address\n\t\t// @returns {Object} address\n\t,\tunwrapAddressee: function (address)\n\t\t{\n\t\t\tif (address.company && address.company.trim().length > 0)\n\t\t\t{\n\t\t\t\taddress.attention = address.fullname;\n\t\t\t\taddress.addressee = address.company;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taddress.addressee = address.fullname;\n\t\t\t\taddress.attention = null;\n\t\t\t}\n\n\t\t\tdelete address.fullname;\n\t\t\tdelete address.company;\n\t\t\tdelete address.check;\n\n\t\t\treturn address;\n\t\t}\n\n\t\t// @method get\n\t\t// @param {Number} id\n\t\t// @returns {Object} address\n\t,\tget: function (id)\n\t\t{\n\t\t\t// @class Address.Model.Attributes\n\t\t\t\t//@property {String} company\n\t\t\t\t//@property {String} fullname\n\t\t\t\t//@property {String} internalid\n\t\t\t\t//@property {String} defaultbilling Valid values are 'T' or 'F'\n\t\t\t\t//@property {String} defaultshipping Valid values are 'T' or 'F'\n\t\t\t\t//@property {String} isvalid Valid values are 'T' or 'F'\n\t\t\t\t//@property {String} isresidential Valid values are 'T' or 'F'\n\t\t\t\t//@property {String?} addr3\n\t\t\t\t//@property {String} addr2\n\t\t\t\t//@property {String} addr1\n\t\t\t\t//@property {String} country\n\t\t\t\t//@property {String} city\n\t\t\t\t//@property {String} state\n\t\t\t\t//@property {String} phone\n\t\t\t\t//@property {String} zip\n\t\t\t// @class Address.Model\n\t\t\treturn this.wrapAddressee(ModelsInit.customer.getAddress(id));\n\t\t}\n\n\t\t// @method getDefaultBilling\n\t\t// @returns {Object} default billing address\n\t,\tgetDefaultBilling: function ()\n\t\t{\n\t\t\treturn _.find(ModelsInit.customer.getAddressBook(), function (address)\n\t\t\t{\n\t\t\t\treturn (address.defaultbilling === 'T');\n\t\t\t});\n\t\t}\n\n\t\t// @method getDefaultShipping\n\t\t// @returns {Object} default shipping address\n\t,\tgetDefaultShipping: function ()\n\t\t{\n\t\t\treturn _.find(ModelsInit.customer.getAddressBook(), function (address)\n\t\t\t{\n\t\t\t\treturn address.defaultshipping === 'T';\n\t\t\t});\n\t\t}\n\n\t\t// @method list\n\t\t// @returns {Array<Object>} all user addresses\n\t,\tlist: function ()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\treturn  _.map(ModelsInit.customer.getAddressBook(), function (address)\n\t\t\t{\n\t\t\t\treturn self.wrapAddressee(address);\n\t\t\t});\n\t\t}\n\n\t\t// @method update\n\t\t// updates a given address\n\t\t// @param {String} id\n\t\t// @param {String} data\n\t\t// @returns undefined\n\t,\tupdate: function (id, data)\n\t\t{\n\t\t\tdata = this.unwrapAddressee(data);\n\n\t\t\t// validate the model\n\t\t\tthis.validate(data);\n\t\t\tdata.internalid = id;\n\n\t\t\treturn ModelsInit.customer.updateAddress(data);\n\t\t}\n\n\t\t// @method create\n\t\t// creates a new address\n\t\t// @param {Address.Data.Model} data\n\t\t// @returns {String} key of the new address\n\t,\tcreate: function (data)\n\t\t{\n\t\t\tdata = this.unwrapAddressee(data);\n\t\t\t// validate the model\n\t\t\tthis.validate(data);\n\n\t\t\treturn ModelsInit.customer.addAddress(data);\n\t\t}\n\n\t\t// @method remove\n\t\t// removes a given address\n\t\t// @param {String} id\n\t\t// @returns undefined\n\t,\tremove: function (id)\n\t\t{\n\t\t\treturn ModelsInit.customer.removeAddress(id);\n\t\t}\n\t});\n});\n\n//@class Address.Data.Model This is the model to send address to the backend\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js\n\n// Address.ServiceController.js\n// ----------------\n// Service to manage addresses requests\ndefine(\n\t'Address.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Application'\n\t,\t'Address.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tApplication\n\t,\tAddressModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Address.ServiceController Manage addresses requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Address.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Address.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Address.Model.Attributes | Array<Address.Model.Attributes>} one or all user addresses\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn id ? AddressModel.get(id) : (AddressModel.list() || []);\n\t\t\t}\n\n\t\t\t// @method post The call to Address.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {AddressModel.Attributes}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar id = AddressModel.create(this.data);\n\t\t\t\t//Do not return anything here, we need send content with status 201\n\t\t\t\tthis.sendContent(AddressModel.get(id), {'status': 201});\n\t\t\t}\n\n\t\t\t// @method update The call to Address.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {Address.Model.Attributes}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tAddressModel.update(id, this.data);\n\t\t\t\treturn AddressModel.get(id);\n\t\t\t}\n\n\t\t\t// @method delete The call to Address.Service.ss with http method 'delete' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tdelete: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tAddressModel.remove(id);\n\t\t\t\t// If something goes wrong in the remove, an exception will fire\n\t\t\t\treturn {'status': 'ok'};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js\n\n// Case.Fields.ServiceController.js\n// ----------------\n// Service to manage support case fields\ndefine(\n\t'Case.Fields.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Case.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tCaseModel\n\t)\n\t{\n\t\t'use strict';\n\t\t// @class Case.Fields.ServiceController Manage support case fields\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname:'Case.Fields.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'lists.listCase.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Case.Fields.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Case.Model} New Case record\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\treturn CaseModel.getNew();\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js\n\n// @module Case\ndefine('Case.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'Utils'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tApplication\n\t,\tUtils\n\t)\n{\n\t'use strict';\t\n\n\t// @class Case.Model Defines the model used by the Case.Service.ss and Case.Fields.Service.ss services.\n\t// Handles fetching, creating and updating cases. @extends SCModel\n\treturn SCModel.extend({\n\t\tname: 'Case'\n\n\t\t// @property configuration general settings\n\t,\tconfiguration: SC.Configuration.cases\n\n\t\t// @property dummy_date for cases with no messages. Not common, but it could happen.\n\t,\tdummy_date: new Date()\n\n\t\t// @method getNew\n\t\t// @returns a new Case record\n\t,\tgetNew: function ()\n\t\t{\n\t\t\tvar case_record = nlapiCreateRecord('supportcase');\n\n\t\t\tvar category_field = case_record.getField('category'); \n\t\t\tvar category_options = category_field.getSelectOptions();\n\t\t\tvar category_option_values = [];\n\t\t\t\n\t\t\t_(category_options).each(function (category_option) {\n\t\t\t\tvar category_option_value = {\n\t\t\t\t\tid: category_option.id\n\t\t\t\t,\ttext: category_option.text\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcategory_option_values.push(category_option_value);\n\t\t\t});\n\n\t\t\t// Origins\n\t\t\tvar origin_field = case_record.getField('origin');\n\t\t\tvar origin_options = origin_field.getSelectOptions();\n\t\t\tvar origin_option_values = [];\n\t\t\t\n\t\t\t_(origin_options).each(function (origin_option) {\n\t\t\t\tvar origin_option_value = {\n\t\t\t\t\tid: origin_option.id\n\t\t\t\t,\ttext: origin_option.text\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\torigin_option_values.push(origin_option_value);\n\t\t\t});\n\n\t\t\t// Statuses\n\t\t\tvar status_field = case_record.getField('status');\n\t\t\tvar status_options = status_field.getSelectOptions();\n\t\t\tvar status_option_values = [];\n\t\t\t\n\t\t\t_(status_options).each(function (status_option) {\n\t\t\t\tvar status_option_value = {\n\t\t\t\t\tid: status_option.id\n\t\t\t\t,\ttext: status_option.text\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tstatus_option_values.push(status_option_value);\n\t\t\t});\n\n\t\t\t// Priorities\n\t\t\tvar priority_field = case_record.getField('priority');\n\t\t\tvar priority_options = priority_field.getSelectOptions();\n\t\t\tvar priority_option_values = [];\n\t\t\t\n\t\t\t_(priority_options).each(function (priority_option) {\n\t\t\t\tvar priority_option_value = {\n\t\t\t\t\tid: priority_option.id\n\t\t\t\t,\ttext: priority_option.text\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tpriority_option_values.push(priority_option_value);\n\t\t\t});\n\n\t\t\t// New record to return\n\t\t\t// @class Case.Fields.Model.Attributes\n\t\t\tvar newRecord = {\n\t\t\t\t// @property {Array<Case.Fields.Model.Attributes.Category>} categories\n\t\t\t\t// @class Case.Fields.Model.Attributes.Category\n\t\t\t\t\t// @property {String} id\n\t\t\t\t\t// @property {String} text\n\t\t\t\t// @class Case.Fields.Model.Attributes\n\t\t\t\tcategories: category_option_values\n\t\t\t\n\t\t\t\t// @property {Array<Case.Fields.Model.Attributes.Origin>} origins\n\t\t\t\t// @class Case.Fields.Model.Attributes.Origin\n\t\t\t\t\t// @property {String} id\n\t\t\t\t\t// @property {String} text\n\t\t\t\t// @class Case.Fields.Model.Attributes\n\t\t\t,\torigins: origin_option_values\n\n\t\t\t\t// @property {Array<Case.Fields.Model.Attributes.Status>} statuses\n\t\t\t\t// @class Case.Fields.Model.Attributes.Status\n\t\t\t\t\t// @property {String} id\n\t\t\t\t\t// @property {String} text\n\t\t\t\t// @class Case.Fields.Model.Attributes\n\t\t\t,\tstatuses: status_option_values\n\n\t\t\t\t// @property {Array<Case.Fields.Model.Attributes.Priority>} priorities\n\t\t\t\t// @class Case.Fields.Model.Attributes.Priority\n\t\t\t\t\t// @property {String} id\n\t\t\t\t\t// @property {String} text\n\t\t\t\t// @class Case.Fields.Model.Attributes\n\t\t\t,\tpriorities: priority_option_values\n\t\t\t};\n\n\t\t\t// @class Case.Model\n\t\t\treturn newRecord;\n\t\t}\n\n\t\t// @method getColumnsArray\n\t\t// Helper method for defining search columns.\n\t,\tgetColumnsArray: function ()\n\t\t{\n\t\t\treturn [\n\t\t\t\tnew nlobjSearchColumn('internalid')\n\t\t\t,\tnew nlobjSearchColumn('casenumber')\n\t\t\t,\tnew nlobjSearchColumn('title')\n\t\t\t,\tnew nlobjSearchColumn('status')\n\t\t\t,\tnew nlobjSearchColumn('origin')\n\t\t\t,\tnew nlobjSearchColumn('category')\n\t\t\t,\tnew nlobjSearchColumn('company')\n\t\t\t,\tnew nlobjSearchColumn('createddate')\n\t\t\t,\tnew nlobjSearchColumn('lastmessagedate')\n\t\t\t,\tnew nlobjSearchColumn('priority')\n\t\t\t,\tnew nlobjSearchColumn('email')\n\t\t\t];\n\t\t}\n\n\t\t// @method get\n\t\t// @param {String} id\n\t\t// @returns {Case.Model.Attributes}\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar filters = [new nlobjSearchFilter('internalid', null, 'is', id),\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')]\n\t\t\t,\tcolumns = this.getColumnsArray()\n\t\t\t,\tresult = this.searchHelper(filters, columns, 1, true);\n\n\t\t\tif (result.records.length >= 1)\n\t\t\t{\n\t\t\t\treturn result.records[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\t\t}\n\n\t\t// @method get\n\t\t// @param {String} customer_id\n\t\t// @param {Object} list_header_data\n\t\t// @returns {Array<Case.Model.Attributes>}\n\t,\tsearch: function (customer_id, list_header_data)\n\t\t{\n\t\t\tvar filters = [new nlobjSearchFilter('isinactive', null, 'is', 'F')]\n\t\t\t,\tcolumns = this.getColumnsArray()\n\t\t\t,\tselected_filter = parseInt(list_header_data.filter, 10);\n\t\t\t\n\t\t\tif (!_.isNaN(selected_filter))\n\t\t\t{\n\t\t\t\tfilters.push(new nlobjSearchFilter('status', null, 'anyof', selected_filter));\n\t\t\t}\n\n\t\t\tthis.setSortOrder(list_header_data.sort, list_header_data.order, columns);\n\n\t\t\treturn this.searchHelper(filters, columns, list_header_data.page, false);\n\t\t}\n\n\t\t// @method searchHelper\n\t\t// @param {Array<String>} filters\n\t\t// @param {Array<String>} columns\n\t\t// @param {Number} page\n\t\t// @param {Boolean} join_messages\n\t\t// @returns {Array<Case.Model.Attributes>}\n\t,\tsearchHelper: function (filters, columns, page, join_messages)\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\tresult = Application.getPaginatedSearchResults({\n\t\t\t\t\trecord_type: 'supportcase'\n\t\t\t\t,\tfilters: filters\n\t\t\t\t,\tcolumns: columns\n\t\t\t\t,\tpage: page\n\t\t\t\t});\n\n\t\t\tresult.records = _.map(result.records, function (case_record)\n\t\t\t{\n\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\tvar current_record_id = case_record.getId()\n\t\t\t\t,\tcreated_date = nlapiStringToDate(case_record.getValue('createddate'))\n\t\t\t\t,\tlast_message_date = nlapiStringToDate(case_record.getValue('lastmessagedate'))\n\t\t\t\t,\tsupport_case = {\n\t\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\t\tinternalid: current_record_id\n\n\t\t\t\t\t\t//@property {String} caseNumber\n\t\t\t\t\t,\tcaseNumber: case_record.getValue('casenumber')\n\n\t\t\t\t\t\t//@property {String} title\n\t\t\t\t\t,\ttitle: case_record.getValue('title')\n\n\t\t\t\t\t\t// @property {Array<String, Case.Model.Attributes.Message>} grouped_messages\n\t\t\t\t\t\t// @class Case.Model.Attributes.Message\n\t\t\t\t\t\t\t// @property {String} author\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t\t// @property {String} messageDate\n\t\t\t\t\t\t\t// @property {String} initialDate\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\tgrouped_messages: []\n\n\t\t\t\t\t\t// @property {Case.Model.Attributes.Status} status\t\t\n\t\t\t\t\t\t// @class Case.Model.Attributes.Status\n\t\t\t\t\t\t\t// @property {String} id\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\tstatus: {\t\n\t\t\t\t\t\t\tid: case_record.getValue('status')\n\t\t\t\t\t\t,\tname: case_record.getText('status')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// @property {Case.Model.Attributes.Origin} origin\t\t\n\t\t\t\t\t\t// @class Case.Model.Attributes.Origin\n\t\t\t\t\t\t\t// @property {String} id\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\torigin: {\n\t\t\t\t\t\t\tid: case_record.getValue('origin')\n\t\t\t\t\t\t,\tname: case_record.getText('origin')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// @property {Case.Model.Attributes.Category} category\t\t\n\t\t\t\t\t\t// @class Case.Model.Attributes.Category\n\t\t\t\t\t\t\t// @property {String} id\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\tcategory: {\n\t\t\t\t\t\t\tid: case_record.getValue('category')\n\t\t\t\t\t\t,\tname: case_record.getText('category')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// @property {Case.Model.Attributes.Company} company\t\t\n\t\t\t\t\t\t// @class Case.Model.Attributes.Company\n\t\t\t\t\t\t\t// @property {String} id\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\tcompany: {\n\t\t\t\t\t\t\tid: case_record.getValue('company')\n\t\t\t\t\t\t,\tname: case_record.getText('company')\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// @property {Case.Model.Attributes.Priority} priority\t\t\n\t\t\t\t\t\t// @class Case.Model.Attributes.Priority\n\t\t\t\t\t\t\t// @property {String} id\n\t\t\t\t\t\t\t// @property {String} text\n\t\t\t\t\t\t// @class Case.Model.Attributes\n\t\t\t\t\t,\tpriority: {\n\t\t\t\t\t\t\tid: case_record.getValue('priority')\n\t\t\t\t\t\t,\tname: case_record.getText('priority')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//@property {String} createdDate\n\t\t\t\t\t,\tcreatedDate: nlapiDateToString(created_date ? created_date : self.dummy_date, 'date')\n\n\t\t\t\t\t\t//@property {String} lastMessageDate\n\t\t\t\t\t,\tlastMessageDate: nlapiDateToString(last_message_date ? last_message_date : self.dummy_date, 'date')\n\n\t\t\t\t\t\t//@property {String} email\n\t\t\t\t\t,\temail: case_record.getValue('email')\n\t\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif (join_messages)\n\t\t\t\t{\n\t\t\t\t\tself.appendMessagesToCase(support_case);\n\t\t\t\t}\n\n\t\t\t\treturn support_case;\n\t\t\t});\n\n\t\t\t// @class Case.Model\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t\t// @method stripHtmlFromMessage\n\t\t// @param {String} message with HTML\n\t\t// @returns {String} message without HTML\n\t,\tstripHtmlFromMessage: function (message)\n\t\t{\n\t\t\treturn message.replace(/<br\\s*[\\/]?>/gi, '\\n').replace(/<(?:.|\\n)*?>/gm, '');\n\t\t}\n\n\t\t// @method appendMessagesToCase When requesting a case detail, messages are included in the response.\n\t\t// @param {Case.Model.Attributes}\t\t\n\t,\tappendMessagesToCase: function (support_case)\n\t\t{\n\t\t\tvar message_columns = {\n\t\t\t\t\t\tmessage_col: new nlobjSearchColumn('message', 'messages')\n\t\t\t\t\t,\tmessage_date_col: new nlobjSearchColumn('messagedate', 'messages').setSort(true)\n\t\t\t\t\t,\tauthor_col: new nlobjSearchColumn('author', 'messages')\t\t\t\t\t\n\t\t\t\t\t,\tmessage_id: new nlobjSearchColumn('internalid', 'messages')\t\t\t\n\t\t\t\t}\n\t\t\t,\tmessage_filters = [new nlobjSearchFilter('internalid', null, 'is', support_case.internalid), new nlobjSearchFilter('internalonly', 'messages', 'is', 'F')]\n\t\t\t,\tmessage_records = Application.getAllSearchResults('supportcase', message_filters, _.values(message_columns))\n\t\t\t,\tgrouped_messages = []\n\t\t\t,\tmessages_count = 0\n\t\t\t,\tself = this;\n\n\t\t\t_(message_records).each(function (message_record) \n\t\t\t{\n\t\t\t\tvar customer_id = nlapiGetUser() + ''\n\t\t\t\t,\tmessage_date_tmp = nlapiStringToDate(message_record.getValue('messagedate', 'messages'))\n\t\t\t\t,\tmessage_date = message_date_tmp ? message_date_tmp : self.dummy_date\n\t\t\t\t,\tmessage_date_to_group_by = message_date.getFullYear() + '-' + (message_date.getMonth() + 1) + '-' + message_date.getDate()\n\t\t\t\t,\tmessage = {\n\t\t\t\t\t\tauthor: message_record.getValue('author', 'messages') === customer_id ? 'You' : message_record.getText('author', 'messages')\n\t\t\t\t\t,\ttext: self.stripHtmlFromMessage(message_record.getValue('message', 'messages'))\n\t\t\t\t\t,\tmessageDate: nlapiDateToString(message_date, 'timeofday')\n\t\t\t\t\t,\tinternalid: message_record.getValue('internalid', 'messages') \n\t\t\t\t\t,\tinitialMessage: false\n\t\t\t\t\t};\n\n\t\t\t\tif (grouped_messages[message_date_to_group_by])\n\t\t\t\t{\n\t\t\t\t\tgrouped_messages[message_date_to_group_by].messages.push(message);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgrouped_messages[message_date_to_group_by] = {\n\t\t\t\t\t\tdate: self.getMessageDate(message_date)\n\t\t\t\t\t,\tmessages: [message]\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tmessages_count ++;\n\n\t\t\t\tif (messages_count === message_records.length)\n\t\t\t\t{\n\t\t\t\t\tmessage.initialMessage = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsupport_case.grouped_messages = _(grouped_messages).values();\n\t\t\tsupport_case.messages_count = messages_count;\n\t\t}\n\n\t\t// @method getMessageDate\n\t\t// @param {Date} validJsDate\n\t\t// @returns {String} string date with the correct format\n\t,\tgetMessageDate: function (validJsDate)\n\t\t{\n\t\t\tvar today = new Date()\n\t\t\t,\ttoday_dd = today.getDate()\n\t\t\t,\ttoday_mm = today.getMonth()\n\t\t\t,\ttoday_yyyy = today.getFullYear()\n\t\t\t,\tdd = validJsDate.getDate()\n\t\t\t,\tmm = validJsDate.getMonth()\n\t\t\t,\tyyyy = validJsDate.getFullYear();\n\n\t\t\tif (today_dd === dd && today_mm === mm && today_yyyy === yyyy)\n\t\t\t{\n\t\t\t\treturn 'Today';\n\t\t\t}\n\t\t\t\n\t\t\treturn nlapiDateToString(validJsDate, 'date');\n\t\t}\n\t\t\n\t\t// @method create\n\t\t// Creates a new case record\n\t\t// @param {String} customerId\n\t\t// @param {Object} data\n\t,\tcreate: function (customerId, data)\n\t\t{\n\t\t\tcustomerId = customerId || nlapiGetUser() + '';\n\t\t\t\n\t\t\tvar newCaseRecord = nlapiCreateRecord('supportcase');\n\t\t\t\n\t\t\tdata.title && newCaseRecord.setFieldValue('title', Utils.sanitizeString(data.title));\n\t\t\tdata.message && newCaseRecord.setFieldValue('incomingmessage', Utils.sanitizeString(data.message));\n\t\t\tdata.category && newCaseRecord.setFieldValue('category', data.category);\n\t\t\tdata.email && newCaseRecord.setFieldValue('email', data.email);\n\t\t\tcustomerId && newCaseRecord.setFieldValue('company', customerId);\n\n\t\t\tvar default_values = this.configuration.default_values;\n\n\t\t\tnewCaseRecord.setFieldValue('status', default_values.status_start.id); // Not Started\n\t\t\tnewCaseRecord.setFieldValue('origin', default_values.origin.id); // Web\n\n\t\t\treturn nlapiSubmitRecord(newCaseRecord);\n\t\t}\n\n\t\t// @method setSortOrder\n\t\t// Adds sort condition to the respective column\n\t\t// @param {String} sort column name\n\t\t// @param {Number} order\n\t\t// @param {Array} columns columns array\n\t,\tsetSortOrder: function (sort, order, columns) \n\t\t{\n\t\t\tswitch (sort)\n\t\t\t{\n\t\t\t\tcase 'createdDate':\n\t\t\t\t\tcolumns[7].setSort(order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\tcase 'lastMessageDate':\n\t\t\t\t\tcolumns[8].setSort(order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcolumns[1].setSort(order > 0);\n\t\t\t}\n\t\t}\n\n\t\t// @method update\n\t\t// Updates a Support Case given its id\n\t\t// @param {String} id\n\t\t// @param {String} data\n\t,\tupdate: function (id, data)\n\t\t{\n\t\t\tif (data && data.status)\n\t\t\t{\n\t\t\t\tif (data.reply && data.reply.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnlapiSubmitField('supportcase', id, ['incomingmessage', 'messagenew', 'status'], [Utils.sanitizeString(data.reply), 'T', data.status.id]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnlapiSubmitField('supportcase', id, ['status'], data.status.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js\n\n// Case.ServiceController.js\n// ----------------\n// Service to manage support cases\ndefine(\n\t'Case.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Case.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tCaseModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Case.ServiceController Manage support cases\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Case.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'lists.listCase.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Case.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Array<Case.Model.Attributes>}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid') || this.data.internalid;\n\t\t\t\tif(id)\n\t\t\t\t{\n\t\t\t\t\treturn CaseModel.get(id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar list_header_data = {\n\t\t\t\t\t\tfilter: this.request.getParameter('filter')\n\t\t\t\t\t,   order: this.request.getParameter('order')\n                    ,   sort: this.request.getParameter('sort')\n                    ,   from: this.request.getParameter('from')\n                    ,   to: this.request.getParameter('to')\n                    ,   page: this.request.getParameter('page')\n\t\t\t\t\t};\n\t\t\t\t\treturn CaseModel.search(nlapiGetUser() + '', list_header_data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method post The call to Case.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Case.Model.Attributes}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar new_case_id = CaseModel.create(nlapiGetUser() + '', this.data);\n\t\t\t\treturn CaseModel.get(new_case_id);\n\t\t\t}\n\n\t\t\t// @method put The call to Case.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {Case.Model.Attributes}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid') || this.data.internalid;\n\t\t\t\tCaseModel.update(id, this.data);\n\t\t\t\treturn CaseModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.Model.js\n\n// Category.js\n// -----------\n// Handles the Category tree\ndefine(\n\t'Categories.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t]\n,\tfunction (\n\t\t\tSCModel\n\t\t,\tModelsInit\n\t)\n{\n\t'use strict';\n\treturn SCModel.extend({\n\t\tname: 'Category'\n\n\t\t// if the root_id is blank then we should get all the top level categories of the site\n\t,\tget: function ()\n\t\t{\n\t\t\treturn this.fixCategories(ModelsInit.session.getSiteCategoryContents(true));\n\t\t}\n\n\t,\tfixCategories: function (categories)\n\t\t{\n\t\t\tvar result = {}\n\t\t\t,\tself = this;\n\n\t\t\t_.each(categories, function (category)\n\t\t\t{\n\t\t\t\tcategory.urlcomponent = category.urlcomponent || category.itemid;\n\t\t\t\tresult[category.urlcomponent] = category;\n\n\t\t\t\tif (category.categories && category.categories.length)\n\t\t\t\t{\n\t\t\t\t\tcategory.categories = self.fixCategories(category.categories);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.ServiceController.js\n\n// Categories.ServiceController.js\n// ----------------\n// Service to manage categories\ndefine(\n\t'Categories.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Categories.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tCategoriesModel\n\t)\n\t{\n\t\t'use strict';\n\t\treturn ServiceController.extend({\n\n\t\t\tname: 'Categories.ServiceController'\n\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar root_id = this.request.getParameter('rootId');\n\t\t\t\treturn CategoriesModel.get(root_id)\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js\n\n// @module CMSadapter\ndefine('CMSadapter.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'SiteSettings.Model'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tSiteSettingsModel\n\t)\n{\n\t'use strict';\n\n\t// @class CMSadapter.Model Mostly do the job of getting the landing pages of a CMS enabled site so they can be bootstrapped into the application environment.\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\tname: 'CMSadapter'\n\n\t\t// @method getPages @return {data:Array<CMSPages>}\n\t,\tgetPages: function(baseUrl)\n\t\t{\n\t\t\tvar siteSettings = SiteSettingsModel.get();\n\t\t\tvar cmsRequestT0 = new Date().getTime();\n\t\t\tvar cmsPagesHeader = {'Accept': 'application/json' };\n\t\t\tvar cmsPagesUrl = baseUrl + '/api/cms/pages?site_id=' + siteSettings.siteid + '&c=' + nlapiGetContext().getCompany() + '&{}';\n\t\t\tvar cmsPagesResponse = nlapiRequestURL(cmsPagesUrl, null, cmsPagesHeader);\n\t\t\tvar cmsPagesResponseBody = cmsPagesResponse.getBody();\n\t\t\tvar data = {\n\t\t\t\t_debug_requestTime: (new Date().getTime()) - cmsRequestT0\n\t\t\t,\tpages: JSON.parse(cmsPagesResponseBody)\n\t\t\t};\n\n\t\t\treturn data;\n\t\t}\n\n\t});\n});\n\n\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.Model.js\n\n/* global customer */\n// CreditCard.Model.js\n// ----------------\n// This file define the functions to be used on Credit Card service\ndefine('CreditCard.Model', ['SC.Model'], function (SCModel)\n{\n\t'use strict';\n\treturn SCModel.extend({\n\t\tname: 'CreditCard'\n\t\t\n\t,\tvalidation: {\n\t\t\tccname: {required: true, msg: 'Name is required'}\n\t\t,\tpaymentmethod: {required: true, msg: 'Card Type is required'}\n\t\t,\tccnumber: {required: true, msg: 'Card Number is required'}\n\t\t,\texpmonth: {required: true, msg: 'Expiration is required'}\n\t\t,\texpyear: {required: true, msg: 'Expiration is required'}\n\t\t}\n\t\t\n\t,\tget: function (id)\n\t\t{\n\t\t\t//Return a specific credit card\n\t\t\treturn customer.getCreditCard(id);\n\t\t}\n\t\t\n\t,\tgetDefault: function ()\n\t\t{\n\t\t\t//Return the credit card that the customer setted to default\n\t\t\treturn _.find(customer.getCreditCards(), function (credit_card)\n\t\t\t{\n\t\t\t\treturn credit_card.ccdefault === 'T';\n\t\t\t});\n\t\t}\n\t\t\n\t,\tlist: function ()\n\t\t{\n\t\t\t//Return all the credit cards with paymentmethod\n\t\t\treturn _.filter(customer.getCreditCards(), function (credit_card)\n\t\t\t{\n\t\t\t\treturn credit_card.paymentmethod;\n\t\t\t});\n\t\t}\n\t\t\n\t,\tupdate: function (id, data)\n\t\t{\n\t\t\t//Update the credit card if the data is valid\n\t\t\tthis.validate(data);\n\t\t\tdata.internalid = id;\n\n\t\t\treturn customer.updateCreditCard(data);\n\t\t}\n\t\t\n\t,\tcreate: function (data)\n\t\t{\n\t\t\t//Create a new credit card if the data is valid\n\t\t\tthis.validate(data);\n\n\t\t\treturn customer.addCreditCard(data);\n\t\t}\n\t\t\n\t,\tremove: function (id)\n\t\t{\n\t\t\t//Remove a specific credit card\n\t\t\treturn customer.removeCreditCard(id);\n\t\t}\n\t});\t\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js\n\n// CreditCard.ServiceController.js\n// ----------------\n// Service to manage credit cards requests\ndefine(\n\t'CreditCard.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'CreditCard.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tCreditCardModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class CreditCard.ServiceController Manage credit cards requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'CreditCard.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to CreditCard.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {CreditCard.Model.Attributes || Array<CreditCard.Model.Attributes>} One or a list of credit cards\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn id ? CreditCardModel.get(id) : (CreditCardModel.list() || []);\n\t\t\t}\n\n\t\t\t// @method post The call to CreditCard.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar id = CreditCardModel.create(this.data);\n\t\t\t\tthis.sendContent(CreditCardModel.get(id), {'status': 201});\n\t\t\t\t// Do not return here as we need to output the status 201\n\t\t\t}\n\n\t\t\t// @method put The call to CreditCard.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {CreditCard.Model.Attributes} The updated credit card\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tCreditCardModel.update(id, this.data);\n\t\t\t\treturn CreditCardModel.get(id);\n\t\t\t}\n\n\t\t\t// @method delete The call to CreditCard.Service.ss with http method 'delete' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tdelete: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tCreditCardModel.remove(id);\n\n\t\t\t\treturn {'status':'ok'};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js\n\n//@module CreditMemo\ndefine('CreditMemo.Model'\n,\t[\t'SC.Model'\n\t,\t'StoreItem.Model'\n\t,\t'Application'\n\t,\t'underscore'\n\t,\t'Utils'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tStoreItem\n\t,\tApplication\n\t,\t_\n\t,\tUtils\n\t)\n{\n\t'use strict';\n\n\t//@class CreditMemo.Model @extend SCModel\n\treturn SCModel.extend({\n\t\tname: 'CreditMemo'\n\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar creditmemo = nlapiLoadRecord('creditmemo', id)\n\t\t\t,\tresult = {};\n\n\t\t\tthis.createRecord(creditmemo, result);\n\t\t\tthis.setInvoices(creditmemo, result);\n\t\t\tthis.getLines(creditmemo, result);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tcreateRecord: function(record, result)\n\t\t{\n\t\t\tresult.internalid = record.getId();\n\t\t\tresult.tranid = record.getFieldValue('tranid');\n\n\t\t\tresult.subtotal = Utils.toCurrency(record.getFieldValue('subtotal'));\n\t\t\tresult.subtotal_formatted = Utils.formatCurrency(record.getFieldValue('subtotal'));\n\t\t\tresult.discount = Utils.toCurrency(record.getFieldValue('discounttotal'));\n\t\t\tresult.discount_formatted = Utils.formatCurrency(record.getFieldValue('discounttotal'));\n\t\t\tresult.taxtotal = Utils.toCurrency(record.getFieldValue('taxtotal'));\n\t\t\tresult.taxtotal_formatted = Utils.formatCurrency(record.getFieldValue('taxtotal'));\n\t\t\tresult.shippingcost = Utils.toCurrency(record.getFieldValue('shippingcost'));\n\t\t\tresult.shippingcost_formatted = Utils.formatCurrency(record.getFieldValue('shippingcost'));\n\t\t\tresult.total = Utils.toCurrency(record.getFieldValue('total'));\n\t\t\tresult.total_formatted = Utils.formatCurrency(record.getFieldValue('total'));\n\t\t\tresult.amountpaid = Utils.toCurrency(record.getFieldValue('amountpaid'));\n\t\t\tresult.amountpaid_formatted = Utils.formatCurrency(record.getFieldValue('amountpaid'));\n\t\t\tresult.amountremaining = Utils.toCurrency(record.getFieldValue('amountremaining'));\n\t\t\tresult.amountremaining_formatted = Utils.formatCurrency(record.getFieldValue('amountremaining'));\n\n\t\t\tresult.trandate = record.getFieldValue('trandate');\n\t\t\tresult.status = record.getFieldValue('status');\n\t\t\tresult.memo = record.getFieldValue('memo');\n\t\t}\n\n\t,\tsetInvoices: function(record, result)\n\t\t{\n\t\t\tresult.invoices = [];\n\n\t\t\tfor (var i = 1; i <= record.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tvar invoice = {\n\t\t\t\t\t\tline: i\n\t\t\t\t\t,\tinternalid: record.getLineItemValue('apply', 'internalid', i)\n\t\t\t\t\t,\ttype: record.getLineItemValue('apply', 'type', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(record.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\tapply: record.getLineItemValue('apply', 'apply', i) === 'T'\n\t\t\t\t\t,\tapplydate: record.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t,\tcurrency: record.getLineItemValue('apply', 'currency', i)\n\n\t\t\t\t\t,\tamount: Utils.toCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tdue: Utils.toCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\tdue_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\trefnum: record.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t};\n\n\t\t\t\tresult.invoices.push(invoice);\n\t\t\t}\n\t\t}\n\n\t,\tgetLines: function (record, result)\n\t\t{\n\t\t\tvar result_lines = []\n\t\t\t,\titems_to_query = []\n\t\t\t,\titems_to_preload = {}\n\t\t\t,\tloaded_lines = [];\n\n\t\t\tfor (var i = 1; i <= record.getLineItemCount('item'); i++)\n\t\t\t{\n\t\t\t\tvar amount = record.getLineItemValue('item', 'amount', i)\n\t\t\t\t,\trate = record.getLineItemValue('item', 'rate', i)\n\t\t\t\t,\titem_id = record.getLineItemValue('item', 'item', i)\n\t\t\t\t,\titem_type = record.getLineItemValue('item', 'itemtype', i);\n\n\t\t\t\titems_to_preload[item_id] = {\n\t\t\t\t\tid: item_id\n\t\t\t\t,\ttype: item_type\n\t\t\t\t};\n\n\t\t\t\tresult_lines.push({\n\t\t\t\t\t// As we are returning the item, the quantity is negative\n\t\t\t\t\t// don't want to show that to the customer.\n\t\t\t\t\tquantity: Math.abs(record.getLineItemValue('item', 'quantity', i))\n\t\t\t\t,\toptions: Utils.getItemOptionsObject(record.getLineItemValue('item', 'options', i))\n\n\t\t\t\t,\titem: item_id\n\t\t\t\t,\ttype: item_type\n\n\t\t\t\t,\tamount: Utils.toCurrency(amount)\n\t\t\t\t,\tamount_formatted: Utils.formatCurrency(amount)\n\n\t\t\t\t,\trate: Utils.toCurrency(rate)\n\t\t\t\t,\trate_formatted: Utils.formatCurrency(rate)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\titems_to_preload = _.values(items_to_preload);\n\t\t\tStoreItem.preloadItems(items_to_preload);\n\n\n\t\t\t_.each(result_lines, function (line)\n\t\t\t{\n\t\t\t\tif (line.item)\n\t\t\t\t{\n\t\t\t\t\tvar item = StoreItem.get(line.item, line.type);\n\t\t\t\t\tif (!item || typeof item.itemid === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\titems_to_query.push(line.item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (items_to_query.length > 0)\n\t\t\t{\n\t\t\t\tvar filters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('entity', null, 'is', nlapiGetUser())\n\t\t\t\t\t,\tnew nlobjSearchFilter('internalid', 'item', 'anyof', items_to_query)\n\t\t\t\t\t]\n\n\t\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('internalid', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('type', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('parent', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('displayname', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('storedisplayname', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('itemid', 'item')\n\t\t\t\t\t]\n\n\t\t\t\t,\tinactive_items_search = Application.getAllSearchResults('transaction', filters, columns);\n\n\t\t\t\t_.each(inactive_items_search, function (item)\n\t\t\t\t{\n\t\t\t\t\tvar inactive_item = {\n\t\t\t\t\t\tinternalid: item.getValue('internalid', 'item')\n\t\t\t\t\t,\ttype: item.getValue('type', 'item')\n\t\t\t\t\t,\tdisplayname: item.getValue('displayname', 'item')\n\t\t\t\t\t,\tstoredisplayname: item.getValue('storedisplayname', 'item')\n\t\t\t\t\t,\titemid: item.getValue('itemid', 'item')\n\t\t\t\t\t};\n\n\t\t\t\t\tStoreItem.set(inactive_item);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t_.each(result_lines, function (line)\n\t\t\t{\n\t\t\t\tline.item = StoreItem.get(line.item, line.type);\n\t\t\t});\n\n\t\t\tresult.lines = result_lines;\n\t\t}\n\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js\n\n// CreditMemo.ServiceController.js\n// ----------------\n// Service to manage credit memo requests\ndefine(\n\t'CreditMemo.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'CreditMemo.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tCreditMemoModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class CreditMemo.ServiceController Manage credit memo requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'CreditMemo.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to CreditMemo.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {CreditMemo.Model}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn CreditMemoModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.Model.js\n\n// Deposit.Model.js\n// ----------------\n//\ndefine(\n\t'Deposit.Model'\n,\t['SC.Model', 'Utils']\n,\tfunction (SCModel, Utils)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\n\t\tname: 'Deposit'\n\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar deposit = nlapiLoadRecord('customerdeposit', id)\n\t\t\t,\tresult = {};\n\n\t\t\tthis.createRecord(deposit, result);\n\t\t\tthis.setInvoices(deposit, result);\n\t\t\tthis.setPaymentMethod(deposit, result);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tcreateRecord: function (record, result)\n\t\t{\n\t\t\tresult.internalid = record.getId();\n\t\t\tresult.tranid = record.getFieldValue('tranid');\n\t\t\tresult.payment = Utils.toCurrency(record.getFieldValue('payment'));\n\t\t\tresult.payment_formatted = Utils.formatCurrency(record.getFieldValue('payment'));\n\t\t\tresult.trandate = record.getFieldValue('trandate');\n\t\t\tresult.status = record.getFieldValue('status');\n\t\t\tresult.memo = record.getFieldValue('memo');\n\t\t}\n\n\t,\tsetInvoices: function (record, result)\n\t\t{\n\t\t\tresult.invoices = [];\n\t\t\tvar invoicesTotal = 0;\n\n\t\t\tfor (var i = 1; i <= record.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tvar invoice = {\n\t\t\t\t\t\tline: i\n\t\t\t\t\t,\tinvoice_id: record.getLineItemValue('apply', 'id2', i)\n\t\t\t\t\t,\tdeposit_id: record.getLineItemValue('apply', 'id', i)\n\n\t\t\t\t\t,\ttype: record.getLineItemValue('apply', 'type', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(record.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'total', i))\n\n\t\t\t\t\t,\tinvoicedate: record.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t,\tdepositdate: record.getLineItemValue('apply', 'depositdate', i)\n\n\t\t\t\t\t,\tcurrency: record.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t,\tamount: Utils.toCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tdue: Utils.toCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\tdue_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\trefnum: record.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t};\n\n\t\t\t\tinvoicesTotal += invoice.amount;\n\t\t\t\tresult.invoices.push(invoice);\n\t\t\t}\n\n\t\t\tresult.paid = Utils.toCurrency(invoicesTotal);\n\t\t\tresult.paid_formatted = Utils.formatCurrency(invoicesTotal);\n\t\t\tresult.remaining = Utils.toCurrency(result.payment - result.paid);\n\t\t\tresult.remaining_formatted = Utils.formatCurrency(result.remaining);\n\t\t}\n\n\t,\tsetPaymentMethod: function (record, result)\n\t\t{\n\t\t\tvar paymentmethod = {\n\t\t\t\ttype: record.getFieldValue('paymethtype')\n\t\t\t,\tprimary: true\n\t\t\t};\n\n\t\t\tif (paymentmethod.type === 'creditcard')\n\t\t\t{\n\t\t\t\tpaymentmethod.creditcard = {\n\t\t\t\t\tccnumber: record.getFieldValue('ccnumber')\n\t\t\t\t,\tccexpiredate: record.getFieldValue('ccexpiredate')\n\t\t\t\t,\tccname: record.getFieldValue('ccname')\n\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t\tispaypal: 'F'\n\t\t\t\t\t,\tname: record.getFieldText('paymentmethod')\n\t\t\t\t\t,\tcreditcard: 'T'\n\t\t\t\t\t,\tinternalid: record.getFieldValue('paymentmethod')\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('ccstreet'))\n\t\t\t{\n\t\t\t\tpaymentmethod.ccstreet = record.getFieldValue('ccstreet');\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('cczipcode'))\n\t\t\t{\n\t\t\t\tpaymentmethod.cczipcode = record.getFieldValue('cczipcode');\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('terms'))\n\t\t\t{\n\t\t\t\tpaymentmethod.type = 'invoice';\n\n\t\t\t\tpaymentmethod.purchasenumber = record.getFieldValue('otherrefnum');\n\n\t\t\t\tpaymentmethod.paymentterms = {\n\t\t\t\t\t\tinternalid: record.getFieldValue('terms')\n\t\t\t\t\t,\tname: record.getFieldText('terms')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tresult.paymentmethods = [paymentmethod];\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js\n\n// Deposit.ServiceController.js\n// ----------------\n// Service to manage deposit requests\ndefine(\n\t'Deposit.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Deposit.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tDepositModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Deposit.ServiceController Manage deposit requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Deposit.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Deposit.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Deposit.Model}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn DepositModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.Model.js\n\n// Deposit.Model.js\n// ----------------\n//\ndefine(\n\t'DepositApplication.Model'\n,\t['SC.Model', 'Utils']\n,\tfunction (SCModel, Utils)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\n\t\tname: 'DepositApplication'\n\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar record = nlapiLoadRecord('depositapplication', id)\n\t\t\t,\tresult = {};\n\n\t\t\tthis.createResult(record, result);\n\t\t\tthis.setInvoices(record, result);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tcreateResult: function(record, result)\n\t\t{\n\t\t\tresult.internalid = record.getId();\n\t\t\tresult.tranid = record.getFieldValue('tranid');\n\t\t\tresult.total = Utils.toCurrency(record.getFieldValue('total'));\n\t\t\tresult.total_formatted = Utils.formatCurrency(record.getFieldValue('total'));\n\n\t\t\tresult.deposit =\n\t\t\t{\n\t\t\t\tinternalid: record.getFieldValue('deposit')\n\t\t\t,\tname: record.getFieldText('deposit')\n\t\t\t};\n\n\t\t\tresult.depositdate = record.getFieldValue('depositdate');\n\t\t\tresult.trandate = record.getFieldValue('trandate');\n\t\t\tresult.memo = record.getFieldValue('memo');\n\t\t}\n\n\t,\tsetInvoices: function(record, result)\n\t\t{\n\t\t\tresult.invoices = [];\n\n\t\t\tfor (var i = 1; i <= record.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tvar invoice = {\n\t\t\t\t\t\tline: i\n\t\t\t\t\t,\tinternalid: record.getLineItemValue('apply', 'internalid', i)\n\t\t\t\t\t,\ttype: record.getLineItemValue('apply', 'type', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(record.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\tapply: record.getLineItemValue('apply', 'apply', i) === 'T'\n\t\t\t\t\t,\tapplydate: record.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t,\tcurrency: record.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t,\tamount: Utils.toCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tdue: Utils.toCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\tdue_formatted: Utils.formatCurrency(record.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\trefnum: record.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t};\n\n\t\t\t\tresult.invoices.push(invoice);\n\t\t\t}\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js\n\n// DepositApplication.ServiceController.js\n// ----------------\n// Service to manage credit cards requests\ndefine(\n\t'DepositApplication.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'DepositApplication.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tDepositApplicationModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class DepositApplication.ServiceController Supports login process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'DepositApplication.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to DepositApplication.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {DepositApplication.Model}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn DepositApplicationModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.Model.js\n\n// Invoice.Model.js\n// ----------\n// Handles fetching invoices\ndefine(\n\t'Invoice.Model'\n,\t[\t'Application'\n\t,\t'Utils'\n\t,\t'Transaction.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tApplication\n\t,\tUtils\n\t,\tTransactionModel\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\treturn TransactionModel.extend({\n\t\n\t\tname: 'Invoice'\n\n\t,\tsetExtraListColumns: function ()\n\t\t{\n\t\t\tif (this.isMultiCurrency)\n\t\t\t{\n\t\t\t\tthis.columns.amount_remaining = new nlobjSearchColumn('formulanumeric').setFormula('{amountremaining} / {exchangerate}');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.columns.amount_remaining = new nlobjSearchColumn('amountremaining');\n\t\t\t}\n\n\t\t\tthis.columns.closedate = new nlobjSearchColumn('closedate');\n\t\t\tthis.columns.duedate = new nlobjSearchColumn('duedate');\n\t\t}\n\n\t,\tsetExtraListFilters: function ()\n\t\t{\n\t\t\tvar status = this.data.status;\n\t\t\t\n\t\t\tif (status)\n\t\t\t{\n\t\t\t\tvar value = null;\n\n\t\t\t\tswitch (status)\n\t\t\t\t{\n\t\t\t\t\tcase 'open':\n\t\t\t\t\t\tvalue = 'CustInvc:A';\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'paid':\n\t\t\t\t\t\tvalue = 'CustInvc:B';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value)\n\t\t\t\t{\n\t\t\t\t\tthis.filters.status_operator = 'and';\n\t\t\t\t\tthis.filters.status = ['status', 'anyof', value];\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t,\tmapListResult: function (result, record)\n\t\t{\t\t\t\n\t\t\tvar due_date = record.getValue('duedate')\n\t\t\t,\tclose_date = record.getValue('closedate')\n\t\t\t,\tdue_in_milliseconds = new Date(due_date).getTime() - this.now;\n\t\t\n\t\t\tresult.amountremaining = Utils.toCurrency(record.getValue(this.columns.amount_remaining));\n\t\t\tresult.amountremaining_formatted = Utils.formatCurrency(record.getValue(this.columns.amount_remaining));\n\t\t\tresult.closedate = close_date;\n\t\t\tresult.closedateInMilliseconds = new Date(close_date).getTime();\n\t\t\tresult.tranDateInMilliseconds = new Date(record.getValue('trandate')).getTime();\n\t\t\tresult.duedate = due_date;\n\t\t\tresult.dueinmilliseconds = due_in_milliseconds;\n\t\t\tresult.isOverdue = due_in_milliseconds <= 0 && ((-1 * due_in_milliseconds) / 1000 / 60 / 60 / 24) >= 1;\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t,\tgetExtraRecordFields: function ()\n\t\t{\n\t\t\tthis.getAdjustments();\n\t\t\tthis.getSalesRep();\n\n\t\t\tthis.result.purchasenumber = this.record.getFieldValue('otherrefnum');\n\t\t\tthis.result.dueDate = this.record.getFieldValue('duedate');\n\t\t\tthis.result.amountDue = Utils.toCurrency(this.record.getFieldValue('amountremainingtotalbox'));\n\t\t\tthis.result.amountDue_formatted = Utils.formatCurrency(this.record.getFieldValue('amountremainingtotalbox'));\n\t\t}\n\n\t,\tpostGet: function ()\n\t\t{\n\t\t\tthis.result.lines = _.reject(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\treturn line.quantity === 0;\n\t\t\t});\n\t\t}\n\n\t,\tgetStatus: function ()\n\t\t{\n\t\t\tthis.result.status =\n\t\t\t{\n\t\t\t\tinternalid: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status')\n\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status', true)\n\t\t\t};\n\t\t}\n\t,\tgetCreatedFrom: function()\n\t\t{\n\t\t\tvar created_from_internalid = nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom')\n\t\t\t,\trecordtype = created_from_internalid ? Utils.getTransactionType(created_from_internalid) : ''\n\t\t\t,\ttranid = recordtype ? nlapiLookupField(recordtype, created_from_internalid, 'tranid') : '';\n\n\t\t\tthis.result.createdfrom =\n\t\t\t{\n\t\t\t\t\tinternalid: created_from_internalid\n\t\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom', true) || ''\n\t\t\t\t,\trecordtype: recordtype\n\t\t\t\t,\ttranid: tranid\n\t\t\t};\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js\n\n// Invoice.Service.ss\n// ----------------\n// Service to manage invoice requests\ndefine(\n\t'Invoice.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Invoice.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tInvoiceModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Invoice.ServiceController Supports login process\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Invoice.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\toperator: 'or'\n\t\t\t\t\t,\tlist: [\n\t\t\t\t\t\t\t'transactions.tranFind.1'\n\t\t\t\t\t\t,\t'transactions.tranCustInvc.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// @method get The call to Invoice.Service.ss with http method 'get' is managed by this function\n\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid')\n\t\t\t\t,\tstatus = this.request.getParameter('status')\n\t\t\t\t,\tpage = this.request.getParameter('page');\n\n\t\t\t\treturn id ?\n\t\t\t\t\tInvoiceModel.get('invoice', id) :\n\t\t\t\t\tInvoiceModel.list({\n\t\t\t\t\t\t\ttypes: 'CustInvc'\n\t\t\t\t\t\t,\tstatus: status\n\t\t\t\t\t\t,\tpage: page\n\t\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js\n\n// LiveOrder.GiftCertificate.ServiceController.js\n// ----------------\n// Service to manage gift certificates in the live order\ndefine(\n\t'LiveOrder.GiftCertificate.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'LiveOrder.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tLiveOrderModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class LiveOrder.GiftCertificate.ServiceController Manage gift certificates in the live order\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'LiveOrder.GiftCertificate.ServiceController'\n\n\t\t\t// @method post The call to LiveOrder.GiftCertificate.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data || EmptyObject} Returns the live order or an empty object\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tLiveOrderModel.setGiftCertificates(this.data.giftcertificates);\n\t\t\t\treturn LiveOrderModel.get() || {};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js\n\n// LiveOrder.Line.ServiceController.js\n// ----------------\n// Service to manage lines in the live order\ndefine(\n\t'LiveOrder.Line.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'LiveOrder.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tLiveOrderModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class LiveOrder.Line.ServiceController Manage lines in the live order\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'LiveOrder.Line.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\tcheckLoggedInCheckout : true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method post The call to LiveOrder.Line.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data || Object} Returns a LiveOrder object or an empty object\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tLiveOrderModel.addLines(_.isArray(this.data) ? this.data : [this.data]);\n\t\t\t\treturn LiveOrderModel.get() || {};\n\t\t\t}\n\n\t\t\t// @method put The call to LiveOrder.Line.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data || Object} Returns a LiveOrder object or an empty object\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\n\t\t\t\t// Pass the data to the Cart's update method and send it response\n\t\t\t\tif (this.data.options && this.data.options.void)\n\t\t\t\t{\n\t\t\t\t\tLiveOrderModel.voidLine(id);\n\t\t\t\t}\n\t\t\t\telse if (this.data.options && this.data.options['return'])\n\t\t\t\t{\n\t\t\t\t\tLiveOrderModel.returnLine(id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tLiveOrderModel.updateLine(id, this.data);\n\t\t\t\t}\n\t\t\t\treturn LiveOrderModel.get() || {};\n\t\t\t}\n\n\t\t\t// @method delete The call to LiveOrder.Line.Service.ss with http method 'delete' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data || Object} Returns a LiveOrder object or an empty object\n\t\t,\tdelete: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tLiveOrderModel.removeLine(id);\n\t\t\t\treturn LiveOrderModel.get() || {};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js\n\n/* jshint -W053 */\n// We HAVE to use \"new String\"\n// So we (disable the warning)[https://groups.google.com/forum/#!msg/jshint/O-vDyhVJgq4/hgttl3ozZscJ]\n/* global order,customer */\n// @module LiveOrder\ndefine(\n\t'LiveOrder.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'Profile.Model'\n\t,\t'StoreItem.Model'\n\t,\t'Models.Init'\n\t,\t'SiteSettings.Model'\n\t,\t'Utils'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tApplication\n\t,\tProfile\n\t,\tStoreItem\n\t,\tModelsInit\n\t,\tSiteSettings\n\t,\tUtils\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t// @class LiveOrder.Model Defines the model used by the LiveOrder.Service.ss service\n\t// Available methods allow fetching and updating Shopping Cart's data. Works against the\n\t// Shopping session order, this is, nlapiGetWebContainer().getShoppingSession().getOrder()\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\tname: 'LiveOrder'\n\n\t\t// @method get @returns {LiveOrder.Model.Data}\n\t,\tget: function ()\n\t\t{\n\t\t\tvar order_fields = this.getFieldValues()\n\t\t\t,\tresult = {};\n\n\t\t\t// @class LiveOrder.Model.Data object containing high level shopping order object information. Serializeble to JSON and this is the object that the .ss service will serve and so it will poblate front end Model objects\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//@property {Array<LiveOrder.Model.Line>} lines\n\t\t\t\tresult.lines = this.getLines(order_fields);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.code === 'ERR_CHK_ITEM_NOT_FOUND')\n\t\t\t\t{\n\t\t\t\t\treturn this.get();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torder_fields = this.hidePaymentPageWhenNoBalance(order_fields);\n\n\t\t\t// @property {Array<String>} lines_sort sorted lines ids\n\t\t\tresult.lines_sort = this.getLinesSort();\n\n\t\t\t// @property {String} latest_addition\n\t\t\tresult.latest_addition = ModelsInit.context.getSessionObject('latest_addition');\n\n\t\t\t// @property {LiveOrder.Model.PromoCode} promocode\n\t\t\tresult.promocode = this.getPromoCode(order_fields);\n\n\t\t\t// @property {Boolean} ismultishipto\n\t\t\tresult.ismultishipto = this.getIsMultiShipTo(order_fields);\n\n\t\t\t// Ship Methods\n\t\t\tif (result.ismultishipto)\n\t\t\t{\n\t\t\t\t// @property {Array<OrderShipMethod>} multishipmethods\n\t\t\t\tresult.multishipmethods = this.getMultiShipMethods(result.lines);\n\n\t\t\t\t// These are set so it is compatible with non multiple shipping.\n\t\t\t\tresult.shipmethods = [];\n\t\t\t\tresult.shipmethod = null;\n\n\t\t\t\t//Correct promocodes\n\t\t\t\tif(result.promocode && result.promocode.code)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removePromotionCode(result.promocode.code);\n\t\t\t\t\treturn this.get(); //Recursive, as it might impact the summary information\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// @property {Array<OrderShipMethod>} shipmethods\n\t\t\t\tresult.shipmethods = this.getShipMethods(order_fields);\n\t\t\t\t// @property {OrderShipMethod} shipmethod\n\t\t\t\tresult.shipmethod = order_fields.shipmethod ? order_fields.shipmethod.shipmethod : null;\n\t\t\t}\n\n\t\t\t// Addresses\n\t\t\tresult.addresses = this.getAddresses(order_fields);\n\t\t\tresult.billaddress = order_fields.billaddress ? order_fields.billaddress.internalid : null;\n\t\t\tresult.shipaddress = !result.ismultishipto ? order_fields.shipaddress.internalid : null;\n\n\t\t\t// @property {Array<ShoppingSession.PaymentMethod>} paymentmethods Payments\n\t\t\tresult.paymentmethods = this.getPaymentMethods(order_fields);\n\n\t\t\t// @property {Boolean} isPaypalComplete Paypal complete\n\t\t\tresult.isPaypalComplete = ModelsInit.context.getSessionObject('paypal_complete') === 'T';\n\n\t\t\t// @property {Array<String>} touchpoints Some actions in the live order may change the URL of the checkout so to be sure we re send all the touchpoints\n\t\t\tresult.touchpoints = SiteSettings.getTouchPoints();\n\n\t\t\t// @property {Boolean} agreetermcondition Terms And Conditions\n\t\t\tresult.agreetermcondition = order_fields.agreetermcondition === 'T';\n\n\t\t\t// @property {OrderSummary} Summary\n\t\t\tresult.summary = order_fields.summary;\n\n\t\t\t// @property {Object} options Transaction Body Field\n\t\t\tresult.options = this.getTransactionBodyField();\n\n\t\t\t// @class LiveOrder.Model\n\t\t\treturn result;\n\t\t}\n\n\t\t// @method update will update the commerce order object with given data. @param {LiveOrder.Model.Data} data\n\t,\tupdate: function (data)\n\t\t{\n\t\t\tvar current_order = this.get();\n\n\t\t\t// Only do this if it's capable of shipping multiple items.\n\t\t\tif (this.isMultiShippingEnabled)\n\t\t\t{\n\t\t\t\tif (this.isSecure && ModelsInit.session.isLoggedIn2())\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.setEnableItemLineShipping(!!data.ismultishipto);\n\t\t\t\t}\n\n\t\t\t\t// Do the following only if multishipto is active (if the data received determine that MST is enabled and pass the MST Validation)\n\t\t\t\tif (data.ismultishipto)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removeShippingAddress();\n\n\t\t\t\t\tModelsInit.order.removeShippingMethod();\n\n\t\t\t\t\tthis.removePromoCode(current_order);\n\n\t\t\t\t\tthis.splitLines(data, current_order);\n\n\t\t\t\t\tthis.setShippingAddressAndMethod(data, current_order);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.isMultiShippingEnabled || !data.ismultishipto)\n\t\t\t{\n\n\t\t\t\tthis.setShippingAddress(data, current_order);\n\n\t\t\t\tthis.setShippingMethod(data, current_order);\n\n\t\t\t\tthis.setPromoCode(data, current_order);\n\t\t\t}\n\n\t\t\tthis.setBillingAddress(data, current_order);\n\n\t\t\tthis.setPaymentMethods(data);\n\n\t\t\tthis.setTermsAndConditions(data);\n\n\t\t\tthis.setTransactionBodyField(data);\n\n\t\t}\n\n\t\t// @method submit will call ModelsInit.order.submit() taking in account paypal payment\n\t,\tsubmit: function ()\n\t\t{\n\t\t\tvar payment_method = ModelsInit.order.getPayment(['thankyouurl'])\n\t\t\t,\tpaypal_address = _.find(ModelsInit.customer.getAddressBook(), function (address){ return !address.phone && address.isvalid === 'T'; })\n\t\t\t,\tconfirmation = ModelsInit.order.submit();\n\t\t\t// We need remove the paypal's address because after order submit the address is invalid for the next time.\n\t\t\tthis.removePaypalAddress(paypal_address);\n\n\t\t\tModelsInit.context.setSessionObject('paypal_complete', 'F');\n\n\t\t\tif (this.isMultiShippingEnabled)\n\t\t\t{\n\t\t\t\tModelsInit.order.setEnableItemLineShipping(false); // By default non order should be MST\n\t\t\t}\n\n\t\t\tif (confirmation.statuscode !== 'redirect')\n\t\t\t{\n\t\t\t\tconfirmation = _.extend(this.getConfirmation(confirmation.internalid), confirmation);\n\t\t\t}\n\n\t\t\treturn confirmation;\n\t\t}\n\n\t\t// @property {Boolean} isSecure\n\t,\tisSecure: request.getURL().indexOf('https') === 0\n\n\t\t// @property {Boolean} isMultiShippingEnabled\n\t,\tisMultiShippingEnabled: ModelsInit.context.getSetting('FEATURE', 'MULTISHIPTO') === 'T' && SC.Configuration.isMultiShippingEnabled\n\n\t\t// @method addAddress @param {OrderAddress} address @param {Array<OrderAddress>} addresses @returns {String} the given address internal id\n\t,\taddAddress: function (address, addresses)\n\t\t{\n\t\t\tif (!address)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\taddresses = addresses || {};\n\n\t\t\tif (!address.fullname)\n\t\t\t{\n\t\t\t\taddress.fullname = address.attention ? address.attention : address.addressee;\n\t\t\t}\n\n\t\t\tif (!address.company)\n\t\t\t{\n\t\t\t\taddress.company = address.attention ? address.addressee : null;\n\t\t\t}\n\n\t\t\tdelete address.attention;\n\t\t\tdelete address.addressee;\n\n\t\t\tif (!address.internalid)\n\t\t\t{\n\t\t\t\taddress.internalid =\t(address.country || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.state || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.city || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.zip || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.addr1 || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.addr2 || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.fullname || '') + '-' +\n\t\t\t\t\t\t\t\t\t\taddress.company;\n\n\t\t\t\taddress.internalid = address.internalid.replace(/\\s/g, '-');\n\t\t\t}\n\n\t\t\tif (address.internalid !== '-------null')\n\t\t\t{\n\t\t\t\taddresses[address.internalid] = address;\n\t\t\t}\n\n\t\t\treturn address.internalid;\n\t\t}\n\n\t\t// @method hidePaymentPageWhenNoBalance @param {Array<String>}order_fields\n\t,\thidePaymentPageWhenNoBalance: function (order_fields)\n\t\t{\n\t\t\tif (this.isSecure && ModelsInit.session.isLoggedIn2() && order_fields.payment && ModelsInit.session.getSiteSettings(['checkout']).checkout.hidepaymentpagewhennobalance === 'T' && order_fields.summary.total === 0)\n\t\t\t{\n\t\t\t\tModelsInit.order.removePayment();\n\t\t\t\torder_fields = this.getFieldValues();\n\t\t\t}\n\t\t\treturn order_fields;\n\t\t}\n\n\t\t// @method redirectToPayPal calls ModelsInit.order.proceedToCheckout() method passing information for paypal third party checkout provider\n\t,\tredirectToPayPal: function ()\n\t\t{\n\t\t\tvar touchpoints = ModelsInit.session.getSiteSettings( ['touchpoints'] ).touchpoints\n\t\t\t,\tcontinue_url = 'https://' + request.getHeader('Host') + touchpoints.checkout\n\t\t\t,\tjoint = ~continue_url.indexOf('?') ? '&' : '?';\n\n\t\t\tcontinue_url = continue_url + joint + 'paypal=DONE&fragment=' + request.getParameter('next_step');\n\n\t\t\tModelsInit.session.proceedToCheckout({\n\t\t\t\tcancelurl: touchpoints.viewcart\n\t\t\t,\tcontinueurl: continue_url\n\t\t\t,\tcreateorder: 'F'\n\t\t\t,\ttype: 'paypalexpress'\n\t\t\t,\tshippingaddrfirst: 'T'\n\t\t\t,\tshowpurchaseorder: 'T'\n\t\t\t});\n\t\t}\n\n\t\t// @method redirectToPayPalExpress calls ModelsInit.order.proceedToCheckout() method passing information for paypal-express third party checkout provider\n\t,\tredirectToPayPalExpress: function ()\n\t\t{\n\t\t\tvar touchpoints = ModelsInit.session.getSiteSettings( ['touchpoints'] ).touchpoints\n\t\t\t,\tcontinue_url = 'https://' + request.getHeader('Host') + touchpoints.checkout\n\t\t\t,\tjoint = ~continue_url.indexOf('?') ? '&' : '?';\n\n\t\t\tcontinue_url = continue_url + joint + 'paypal=DONE';\n\n\t\t\tModelsInit.session.proceedToCheckout({\n\t\t\t\tcancelurl: touchpoints.viewcart\n\t\t\t,\tcontinueurl: continue_url\n\t\t\t,\tcreateorder: 'F'\n\t\t\t,\ttype: 'paypalexpress'\n\t\t\t});\n\t\t}\n\n\t\t// @method getConfirmation\n\t,\tgetConfirmation: function (internalid)\n\t\t{\n\t\t\tvar confirmation = {internalid: internalid};\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar record = nlapiLoadRecord('salesorder', confirmation.internalid);\n\t\t\t\tconfirmation = this.confirmationCreateResult(record);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.warn('Cart Confirmation could not be loaded, reason: ' + JSON.stringify(e));\n\t\t\t}\n\n\t\t\treturn confirmation;\n\t\t}\n\t\t// @method confirmationCreateResult\n\t,\tconfirmationCreateResult: function (placed_order)\n\t\t{\n\t\t\tvar result = {\n\t\t\t\tinternalid: placed_order.getId()\n\t\t\t,\ttranid: placed_order.getFieldValue('tranid')\n\t\t\t,\tsummary: {\n\t\t\t\t\tsubtotal: Utils.toCurrency(placed_order.getFieldValue('subtotal'))\n\t\t\t\t,\tsubtotal_formatted: Utils.formatCurrency(placed_order.getFieldValue('subtotal'))\n\n\t\t\t\t,\ttaxtotal: Utils.toCurrency(placed_order.getFieldValue('taxtotal'))\n\t\t\t\t,\ttaxtotal_formatted: Utils.formatCurrency(placed_order.getFieldValue('taxtotal'))\n\n\t\t\t\t,\tshippingcost: Utils.toCurrency(placed_order.getFieldValue('shippingcost'))\n\t\t\t\t,\tshippingcost_formatted: Utils.formatCurrency(placed_order.getFieldValue('shippingcost'))\n\n\t\t\t\t,\thandlingcost: Utils.toCurrency(placed_order.getFieldValue('althandlingcost'))\n\t\t\t\t,\thandlingcost_formatted: Utils.formatCurrency(placed_order.getFieldValue('althandlingcost'))\n\n\n\t\t\t\t,\tdiscounttotal: Utils.toCurrency(placed_order.getFieldValue('discounttotal'))\n\t\t\t\t,\tdiscounttotal_formatted: Utils.formatCurrency(placed_order.getFieldValue('discounttotal'))\n\n\n\t\t\t\t,\tgiftcertapplied: Utils.toCurrency(placed_order.getFieldValue('giftcertapplied'))\n\t\t\t\t,\tgiftcertapplied_formatted: Utils.formatCurrency(placed_order.getFieldValue('giftcertapplied'))\n\n\t\t\t\t,\ttotal: Utils.toCurrency(placed_order.getFieldValue('total'))\n\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(placed_order.getFieldValue('total'))\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tresult.promocode = (placed_order.getFieldValue('promocode')) ? {\n\t\t\t\tinternalid: placed_order.getFieldValue('promocode')\n\t\t\t,\tname: placed_order.getFieldText('promocode')\n\t\t\t,\tcode: placed_order.getFieldText('couponcode')\n\t\t\t,\tisvalid: true\n\t\t\t} : null;\n\n\t\t\tresult.paymentmethods = [];\n\t\t\tfor (var i = 1; i <= placed_order.getLineItemCount('giftcertredemption'); i++)\n\t\t\t{\n\t\t\t\tresult.paymentmethods.push({\n\t\t\t\t\ttype: 'giftcertificate'\n\t\t\t\t,\tgiftcertificate: {\n\t\t\t\t\t\t\tcode: placed_order.getLineItemValue('giftcertredemption', 'authcode_display', i)\n\t\t\t\t\t\t,\tamountapplied: placed_order.getLineItemValue('giftcertredemption', 'authcodeapplied', i)\n\t\t\t\t\t\t,\tamountapplied_formatted: Utils.formatCurrency(placed_order.getLineItemValue('giftcertredemption', 'authcodeapplied', i))\n\t\t\t\t\t\t,\tamountremaining: placed_order.getLineItemValue('giftcertredemption', 'authcodeamtremaining', i)\n\t\t\t\t\t\t,\tamountremaining_formatted: Utils.formatCurrency(placed_order.getLineItemValue('giftcertredemption', 'authcodeamtremaining', i))\n\t\t\t\t\t\t,\toriginalamount: placed_order.getLineItemValue('giftcertredemption', 'giftcertavailable', i)\n\t\t\t\t\t\t,\toriginalamount_formatted:  Utils.formatCurrency(placed_order.getLineItemValue('giftcertredemption', 'giftcertavailable', i))\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult.lines = [];\n\n\t\t\tfor (var i = 1; i <= placed_order.getLineItemCount('item'); i++)\n\t\t\t{\n\t\t\t\tresult.lines.push({\n\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\tinternalid: placed_order.getLineItemValue('item', 'item', i)\n\t\t\t\t\t\t\t// 'item_display' returns the 'sku' or if is a matrix returns 'sku_parent : sku_child'\n\t\t\t\t\t\t\t// getLineItemValue of 'item_display' returns the same as getLineItemText of 'item'\n\t\t\t\t\t\t\t,\titemDisplay: placed_order.getLineItemValue('item', 'item_display', i)\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tquantity: parseInt(placed_order.getLineItemValue('item', 'quantity', i), 10)\n\t\t\t\t\t\t,\trate: parseInt(placed_order.getLineItemValue('item', 'rate', i), 10)\n\t\t\t\t\t\t,\toptions: placed_order.getLineItemValue('item', 'options', i)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\t// @method backFromPayPal\n\t,\tbackFromPayPal: function ()\n\t\t{\n\t\t\tvar customer_values = Profile.get()\n\t\t\t,\tbill_address = ModelsInit.order.getBillingAddress()\n\t\t\t,\tship_address = ModelsInit.order.getShippingAddress();\n\n\t\t\tif (customer_values.isGuest === 'T' && ModelsInit.session.getSiteSettings(['registration']).registration.companyfieldmandatory === 'T')\n\t\t\t{\n\t\t\t\tcustomer_values.companyname = 'Guest Shopper';\n\t\t\t\tModelsInit.customer.updateProfile(customer_values);\n\t\t\t}\n\n\t\t\tif (ship_address.internalid && ship_address.isvalid === 'T' && !bill_address.internalid)\n\t\t\t{\n\t\t\t\tModelsInit.order.setBillingAddress(ship_address.internalid);\n\t\t\t}\n\n\t\t\tModelsInit.context.setSessionObject('paypal_complete', 'T');\n\t\t}\n\n\t\t// @method removePaypalAddress remove the shipping address or billing address if phone number is null.\n\t\t// This is because addresses are not valid created by Paypal. @param {Object} paypal_address\n\t,\tremovePaypalAddress: function (paypal_address)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (paypal_address && paypal_address.internalid)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.customer.removeAddress(paypal_address.internalid);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore this exception, it is only for the cases that we can't remove pay-pal's address.\n\t\t\t\t// This exception will not send to the front-end\n\t\t\t\tvar error = Application.processError(e);\n\t\t\t\tconsole.log('Error ' + error.errorStatusCode + ': ' + error.errorCode + ' - ' + error.errorMessage);\n\t\t\t}\n\t\t}\n\n\t\t// @method addLine @param {LiveOrder.Model.Line} line_data\n\t,\taddLine: function (line_data)\n\t\t{\n\t\t\t// Adds the line to the order\n\t\t\tvar line_id = ModelsInit.order.addItem({\n\t\t\t\tinternalid: line_data.item.internalid.toString()\n\t\t\t,\tquantity: _.isNumber(line_data.quantity) ? parseInt(line_data.quantity, 10) : 1\n\t\t\t,\toptions: line_data.options || {}\n\t\t\t});\n\n\n\t\t\tif (this.isMultiShippingEnabled)\n\t\t\t{\n\t\t\t\t// Sets it ship address (if present)\n\t\t\t\tline_data.shipaddress && ModelsInit.order.setItemShippingAddress(line_id, line_data.shipaddress);\n\n\t\t\t\t// Sets it ship method (if present)\n\t\t\t\tline_data.shipmethod && ModelsInit.order.setItemShippingMethod(line_id, line_data.shipmethod);\n\t\t\t}\n\n\t\t\t// Stores the latest addition\n\t\t\tModelsInit.context.setSessionObject('latest_addition', line_id);\n\n\t\t\t// Stores the current order\n\t\t\tvar lines_sort = this.getLinesSort();\n\t\t\tlines_sort.unshift(line_id);\n\t\t\tthis.setLinesSort(lines_sort);\n\n\t\t\treturn line_id;\n\t\t}\n\n\t\t// @method addLines @param {Array<LiveOrder.Model.Line>} lines_data\n\t,\taddLines: function (lines_data)\n\t\t{\n\t\t\tvar items = [];\n\n\t\t\t_.each(lines_data, function (line_data)\n\t\t\t{\n\t\t\t\tvar item = {\n\t\t\t\t\t\tinternalid: line_data.item.internalid.toString()\n\t\t\t\t\t,\tquantity:  _.isNumber(line_data.quantity) ? parseInt(line_data.quantity, 10) : 1\n\t\t\t\t\t,\toptions: line_data.options || {}\n\t\t\t\t};\n\n\t\t\t\titems.push(item);\n\t\t\t});\n\n\t\t\tvar lines_ids = ModelsInit.order.addItems(items)\n\t\t\t,\tlatest_addition = _.last(lines_ids).orderitemid\n\t\t\t// Stores the current order\n\t\t\t,\tlines_sort = this.getLinesSort();\n\n\t\t\tlines_sort.unshift(latest_addition);\n\t\t\tthis.setLinesSort(lines_sort);\n\n\t\t\tModelsInit.context.setSessionObject('latest_addition', latest_addition);\n\n\t\t\treturn lines_ids;\n\t\t}\n\n\t\t// @method removeLine @param {String} line_id\n\t,\tremoveLine: function (line_id)\n\t\t{\n\t\t\t// Removes the line\n\t\t\tModelsInit.order.removeItem(line_id);\n\n\t\t\t// Stores the current order\n\t\t\tvar lines_sort = this.getLinesSort();\n\t\t\tlines_sort = _.without(lines_sort, line_id);\n\t\t\tthis.setLinesSort(lines_sort);\n\t\t}\n\n\t\t// @method updateLine @param {String} line_id @param {LiveOrder.Model.Line} line_data\n\t,\tupdateLine: function (line_id, line_data)\n\t\t{\n\t\t\tvar lines_sort = this.getLinesSort()\n\t\t\t,\tcurrent_position = _.indexOf(lines_sort, line_id)\n\t\t\t,\toriginal_line_object = ModelsInit.order.getItem(line_id, [\n\t\t\t\t\t'quantity'\n\t\t\t\t,\t'internalid'\n\t\t\t\t,\t'options'\n\t\t\t]);\n\n\t\t\tthis.removeLine(line_id);\n\n\t\t\tif (!_.isNumber(line_data.quantity) || line_data.quantity > 0)\n\t\t\t{\n\t\t\t\tvar new_line_id;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tnew_line_id = this.addLine(line_data);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// we try to roll back the item to the original state\n\t\t\t\t\tvar roll_back_item = {\n\t\t\t\t\t\titem: { internalid: parseInt(original_line_object.internalid, 10) }\n\t\t\t\t\t,\tquantity: parseInt(original_line_object.quantity, 10)\n\t\t\t\t\t};\n\n\t\t\t\t\tif (original_line_object.options && original_line_object.options.length)\n\t\t\t\t\t{\n\t\t\t\t\t\troll_back_item.options = {};\n\t\t\t\t\t\t_.each(original_line_object.options, function (option)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\troll_back_item.options[option.id.toLowerCase()] = option.value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tnew_line_id = this.addLine(roll_back_item);\n\n\t\t\t\t\te.errorDetails = {\n\t\t\t\t\t\tstatus: 'LINE_ROLLBACK'\n\t\t\t\t\t,\toldLineId: line_id\n\t\t\t\t\t,\tnewLineId: new_line_id\n\t\t\t\t\t};\n\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\tlines_sort = _.without(lines_sort, line_id, new_line_id);\n\t\t\t\tlines_sort.splice(current_position, 0, new_line_id);\n\t\t\t\tthis.setLinesSort(lines_sort);\n\t\t\t}\n\t\t}\n\n\t\t// @method splitLines @param {LiveOrder.Model.Line} data @param current_order\n\t,\tsplitLines: function (data, current_order)\n\t\t{\n\t\t\t_.each(data.lines, function (line)\n\t\t\t{\n\t\t\t\tif (line.splitquantity)\n\t\t\t\t{\n\t\t\t\t\tvar splitquantity = typeof line.splitquantity === 'string' ? parseInt(line.splitquantity,10) : line.splitquantity\n\t\t\t\t\t,\toriginal_line = _.find(current_order.lines, function (order_line)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn order_line.internalid === line.internalid;\n\t\t\t\t\t\t})\n\t\t\t\t\t,\tremaining = original_line ? (original_line.quantity - splitquantity) : -1;\n\n\t\t\t\t\tif (remaining > 0 && splitquantity > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tModelsInit.order.splitItem({\n\t\t\t\t\t\t\t'orderitemid' : original_line.internalid\n\t\t\t\t\t\t,\t'quantities': [\n\t\t\t\t\t\t\t\tsplitquantity\n\t\t\t\t\t\t\t,\tremaining\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// @method removePromoCode @param {LiveOrder.Model.Data} current_order\n\t,\tremovePromoCode: function(current_order)\n\t\t{\n\t\t\tif (current_order.promocode && current_order.promocode.code)\n\t\t\t{\n\t\t\t\tModelsInit.order.removePromotionCode(current_order.promocode.code);\n\t\t\t}\n\t\t}\n\n\t\t// @method getFieldValues @returns {Array<String>}\n\t,\tgetFieldValues: function ()\n\t\t{\n\t\t\tvar order_field_keys = this.isSecure && ModelsInit.session.isLoggedIn2() ? SC.Configuration.order_checkout_field_keys : SC.Configuration.order_shopping_field_keys;\n\n\t\t\tif (this.isMultiShippingEnabled)\n\t\t\t{\n\t\t\t\tif (!_.contains(order_field_keys.items, 'shipaddress'))\n\t\t\t\t{\n\t\t\t\t\torder_field_keys.items.push('shipaddress');\n\t\t\t\t}\n\t\t\t\tif (!_.contains(order_field_keys.items, 'shipmethod'))\n\t\t\t\t{\n\t\t\t\t\torder_field_keys.items.push('shipmethod');\n\t\t\t\t}\n\t\t\t\torder_field_keys.ismultishipto = null;\n\t\t\t}\n\n\t\t\treturn ModelsInit.order.getFieldValues(order_field_keys, false);\n\t\t}\n\n\t\t// @method getPromoCode @param {Array<String>} order_fields @return {LiveOrder.Model.PromoCode}\n\t,\tgetPromoCode: function (order_fields)\n\t\t{\n\t\t\tif (order_fields.promocodes && order_fields.promocodes.length)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t// @class LiveOrder.Model.PromoCode\n\t\t\t\t\t// @property {String} internalid\n\t\t\t\t\tinternalid: order_fields.promocodes[0].internalid\n\t\t\t\t\t// @property {String} code\n\t\t\t\t,\tcode: order_fields.promocodes[0].promocode\n\t\t\t\t\t// @property {Boolean} isvalid\n\t\t\t\t,\tisvalid: true\n\t\t\t\t};\n\t\t\t\t//@class LiveOrder.Model\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// @method getMultiShipMethods @param {Array<LiveOrder.Model.Line>} lines\n\t,\tgetMultiShipMethods: function (lines)\n\t\t{\n\t\t\t// Get multi ship methods\n\t\t\tvar multishipmethods = {};\n\n\t\t\t_.each(lines, function (line)\n\t\t\t{\n\t\t\t\tif (line.shipaddress)\n\t\t\t\t{\n\t\t\t\t\tmultishipmethods[line.shipaddress] = multishipmethods[line.shipaddress] || [];\n\n\t\t\t\t\tmultishipmethods[line.shipaddress].push(line.internalid);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_.each(_.keys(multishipmethods), function (address)\n\t\t\t{\n\t\t\t\tvar methods = ModelsInit.order.getAvailableShippingMethods(multishipmethods[address], address);\n\n\t\t\t\t_.each(methods, function (method)\n\t\t\t\t{\n\t\t\t\t\tmethod.internalid = method.shipmethod;\n\t\t\t\t\tmethod.rate_formatted = Utils.formatCurrency(method.rate);\n\t\t\t\t\tdelete method.shipmethod;\n\t\t\t\t});\n\n\t\t\t\tmultishipmethods[address] = methods;\n\t\t\t});\n\n\t\t\treturn multishipmethods;\n\t\t}\n\n\t\t// @method getShipMethods @param {Array<String>} order_fields @returns {Array<OrderShipMethod>}\n\t,\tgetShipMethods: function (order_fields)\n\t\t{\n\t\t\tvar shipmethods = _.map(order_fields.shipmethods, function (shipmethod)\n\t\t\t{\n\t\t\t\tvar rate = Utils.toCurrency(shipmethod.rate.replace( /^\\D+/g, '')) || 0;\n\n\t\t\t\treturn {\n\t\t\t\t\tinternalid: shipmethod.shipmethod\n\t\t\t\t,\tname: shipmethod.name\n\t\t\t\t,\tshipcarrier: shipmethod.shipcarrier\n\t\t\t\t,\trate: rate\n\t\t\t\t,\trate_formatted: shipmethod.rate\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn shipmethods;\n\t\t}\n\n\t\t// @method getLinesSort @returns {Array<String>}\n\t,\tgetLinesSort: function ()\n\t\t{\n\t\t\treturn ModelsInit.context.getSessionObject('lines_sort') ? ModelsInit.context.getSessionObject('lines_sort').split(',') : [];\n\t\t}\n\n\t\t// @method getPaymentMethods @param {Array<String>} order_fields @returns {Array<ShoppingSession.PaymentMethod>}\n\t,\tgetPaymentMethods: function (order_fields)\n\t\t{\n\t\t\tvar paymentmethods = []\n\t\t\t,\tgiftcertificates = ModelsInit.order.getAppliedGiftCertificates()\n\t\t\t,\tpayment = order_fields && order_fields.payment\n\t\t\t,\tpaypal = payment && _.findWhere(ModelsInit.session.getPaymentMethods(), {ispaypal: 'T'})\n\t\t\t,\tcredit_card = payment && payment.creditcard;\n\n\t\t\tif (credit_card && credit_card.paymentmethod && credit_card.paymentmethod.creditcard === 'T')\n\t\t\t{\n\t\t\t\t// Main\n\t\t\t\tpaymentmethods.push({\n\t\t\t\t\ttype: 'creditcard'\n\t\t\t\t,\tprimary: true\n\t\t\t\t,\tcreditcard: {\n\t\t\t\t\t\tinternalid: credit_card.internalid\n\t\t\t\t\t,\tccnumber: credit_card.ccnumber\n\t\t\t\t\t,\tccname: credit_card.ccname\n\t\t\t\t\t,\tccexpiredate: credit_card.expmonth + '/' + credit_card.expyear\n\t\t\t\t\t,\tccsecuritycode: credit_card.ccsecuritycode\n\t\t\t\t\t,\texpmonth: credit_card.expmonth\n\t\t\t\t\t,\texpyear: credit_card.expyear\n\t\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t\t\tinternalid: credit_card.paymentmethod.internalid\n\t\t\t\t\t\t,\tname: credit_card.paymentmethod.name\n\t\t\t\t\t\t,\tcreditcard: credit_card.paymentmethod.creditcard === 'T'\n\t\t\t\t\t\t,\tispaypal: credit_card.paymentmethod.ispaypal === 'T'\n\t\t\t\t\t\t,\tisexternal: credit_card.paymentmethod.isexternal === 'T'\n\t\t\t\t\t\t,\tkey: credit_card.paymentmethod.key\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (paypal && payment.paymentmethod === paypal.internalid)\n\t\t\t{\n\t\t\t\tpaymentmethods.push({\n\t\t\t\t\ttype: 'paypal'\n\t\t\t\t,\tprimary: true\n\t\t\t\t,\tcomplete: ModelsInit.context.getSessionObject('paypal_complete') === 'T'\n\t\t\t\t,\tinternalid: paypal.internalid\n\t\t\t\t,\tname: paypal.name\n\t\t\t\t,\tcreditcard: paypal.creditcard === 'T'\n\t\t\t\t,\tispaypal: paypal.ispaypal === 'T'\n\t\t\t\t,\tisexternal: paypal.isexternal === 'T'\n\t\t\t\t,\tkey: paypal.key\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (credit_card && credit_card.paymentmethod && credit_card.paymentmethod.isexternal === 'T')\n\t\t\t{\n\t\t\t\tpaymentmethods.push({\n\t\t\t\t\ttype: 'external_checkout_' + credit_card.paymentmethod.key\n\t\t\t\t,\tprimary: true\n\t\t\t\t,\tinternalid: credit_card.paymentmethod.internalid\n\t\t\t\t,\tname: credit_card.paymentmethod.name\n\t\t\t\t,\tcreditcard: credit_card.paymentmethod.creditcard === 'T'\n\t\t\t\t,\tispaypal: credit_card.paymentmethod.ispaypal === 'T'\n\t\t\t\t,\tisexternal: credit_card.paymentmethod.isexternal === 'T'\n\t\t\t\t,\tkey: credit_card.paymentmethod.key\n\t\t\t\t,\terrorurl: payment.errorurl\n\t\t\t\t,\tthankyouurl: payment.thankyouurl\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (order_fields.payment && order_fields.payment.paymentterms === 'Invoice')\n\t\t\t{\n\t\t\t\tvar customer_invoice = ModelsInit.customer.getFieldValues([\n\t\t\t\t\t'paymentterms'\n\t\t\t\t,\t'creditlimit'\n\t\t\t\t,\t'balance'\n\t\t\t\t,\t'creditholdoverride'\n\t\t\t\t]);\n\n\t\t\t\tpaymentmethods.push({\n\t\t\t\t\ttype: 'invoice'\n\t\t\t\t,\tprimary: true\n\t\t\t\t,\tpaymentterms: customer_invoice.paymentterms\n\t\t\t\t,\tcreditlimit: parseFloat(customer_invoice.creditlimit || 0)\n\t\t\t\t,\tcreditlimit_formatted: Utils.formatCurrency(customer_invoice.creditlimit)\n\t\t\t\t,\tbalance: parseFloat(customer_invoice.balance || 0)\n\t\t\t\t,\tbalance_formatted: Utils.formatCurrency(customer_invoice.balance)\n\t\t\t\t,\tcreditholdoverride: customer_invoice.creditholdoverride\n\t\t\t\t,\tpurchasenumber: order_fields.purchasenumber\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (giftcertificates && giftcertificates.length)\n\t\t\t{\n\t\t\t\t_.forEach(giftcertificates, function (giftcertificate)\n\t\t\t\t{\n\t\t\t\t\tpaymentmethods.push({\n\t\t\t\t\t\ttype: 'giftcertificate'\n\t\t\t\t\t,\tgiftcertificate: {\n\t\t\t\t\t\t\tcode: giftcertificate.giftcertcode\n\n\t\t\t\t\t\t,\tamountapplied: Utils.toCurrency(giftcertificate.amountapplied || 0)\n\t\t\t\t\t\t,\tamountapplied_formatted: Utils.formatCurrency(giftcertificate.amountapplied || 0)\n\n\t\t\t\t\t\t,\tamountremaining: Utils.toCurrency(giftcertificate.amountremaining || 0)\n\t\t\t\t\t\t,\tamountremaining_formatted: Utils.formatCurrency(giftcertificate.amountremaining || 0)\n\n\t\t\t\t\t\t,\toriginalamount: Utils.toCurrency(giftcertificate.originalamount || 0)\n\t\t\t\t\t\t,\toriginalamount_formatted: Utils.formatCurrency(giftcertificate.originalamount || 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn paymentmethods;\n\t\t}\n\n\t\t// @method getTransactionBodyField @returns {Object}\n\t,\tgetTransactionBodyField: function ()\n\t\t{\n\t\t\tvar options = {};\n\n\t\t\tif (this.isSecure)\n\t\t\t{\n\t\t\t\t_.each(ModelsInit.order.getCustomFieldValues(), function (option)\n\t\t\t\t{\n\t\t\t\t\toptions[option.name] = option.value;\n\t\t\t\t});\n\n\t\t\t}\n\t\t\treturn options;\n\t\t}\n\n\t\t// @method getAddresses @param {Array<String>} order_fields @returns {Array<OrderAddress>}\n\t,\tgetAddresses: function (order_fields)\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\taddresses = {}\n\t\t\t,\taddress_book = ModelsInit.session.isLoggedIn2() && this.isSecure ? ModelsInit.customer.getAddressBook() : [];\n\n\t\t\taddress_book = _.object(_.pluck(address_book, 'internalid'), address_book);\n\t\t\t// General Addresses\n\t\t\tif (order_fields.ismultishipto === 'T')\n\t\t\t{\n\t\t\t\t_.each(order_fields.items || [], function (line)\n\t\t\t\t{\n\t\t\t\t\tif (line.shipaddress && !addresses[line.shipaddress])\n\t\t\t\t\t{\n\t\t\t\t\t\tself.addAddress(address_book[line.shipaddress], addresses);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addAddress(order_fields.shipaddress, addresses);\n\t\t\t}\n\n\t\t\tthis.addAddress(order_fields.billaddress, addresses);\n\n\t\t\treturn _.values(addresses);\n\t\t}\n\n\t\t// @method getLines Set Order Lines into the result. Standardizes the result of the lines\n\t\t// @param {Object} order_fields\n\t\t// @returns {Array<LiveOrder.Model.Line>}\n\t,\tgetLines: function (order_fields)\n\t\t{\n\t\t\tvar lines = [];\n\t\t\tif (order_fields.items && order_fields.items.length)\n\t\t\t{\n\t\t\t\tvar self = this\n\t\t\t\t,\titems_to_preload = []\n\t\t\t\t,\taddress_book = ModelsInit.session.isLoggedIn2() && this.isSecure ? ModelsInit.customer.getAddressBook() : []\n\t\t\t\t,\titem_ids_to_clean = [];\n\n\t\t\t\taddress_book = _.object(_.pluck(address_book, 'internalid'), address_book);\n\n\t\t\t\t_.each(order_fields.items, function (original_line)\n\t\t\t\t{\n\t\t\t\t\t// Total may be 0\n\t\t\t\t\tvar\ttotal = (original_line.promotionamount) ? Utils.toCurrency(original_line.promotionamount) : Utils.toCurrency(original_line.amount)\n\t\t\t\t\t,\tdiscount = Utils.toCurrency(original_line.promotiondiscount) || 0\n\t\t\t\t\t,\tline_to_add;\n\n\t\t\t\t\t// @class LiveOrder.Model.Line represents a line in the LiveOrder\n\t\t\t\t\tline_to_add = {\n\t\t\t\t\t\t// @property {String} internalid\n\t\t\t\t\t\tinternalid: original_line.orderitemid\n\t\t\t\t\t\t// @property {Number} quantity\n\t\t\t\t\t,\tquantity: original_line.quantity\n\t\t\t\t\t\t// @property {Number} rate\n\t\t\t\t\t,\trate: parseFloat(original_line.rate)\n\t\t\t\t\t\t// @property {String} rate_formatted\n\t\t\t\t\t,\trate_formatted: original_line.rate_formatted\n\t\t\t\t\t\t// @property {Number} amount\n\t\t\t\t\t,\tamount: Utils.toCurrency(original_line.amount)\n\t\t\t\t\t\t// @property {Number} tax_amount\n\t\t\t\t\t,\ttax_amount: 0\n\t\t\t\t\t\t// @property {Number} tax_rate\n\t\t\t\t\t,\ttax_rate: null\n\t\t\t\t\t\t// @property {String} tax_rate\n\t\t\t\t\t,\ttax_code: null\n\t\t\t\t\t\t// @property {Number} discount\n\t\t\t\t\t,\tdiscount: discount\n\t\t\t\t\t\t// @property {Number} total\n\t\t\t\t\t,\ttotal: total\n\t\t\t\t\t\t// @property {String} item internal id of the line's item\n\t\t\t\t\t,\titem: original_line.internalid\n\t\t\t\t\t\t// @property {String} itemtype\n\t\t\t\t\t,\titemtype: original_line.itemtype\n\t\t\t\t\t\t// @property {Object} options\n\t\t\t\t\t,\toptions: original_line.options\n\t\t\t\t\t\t// @property {OrderAddress} shipaddress\n\t\t\t\t\t,\tshipaddress: original_line.shipaddress\n\t\t\t\t\t\t// @property {OrderShipMethod} shipmethod\n\t\t\t\t\t,\tshipmethod: original_line.shipmethod\n\t\t\t\t\t};\n\t\t\t\t\t// @class LiveOrder.Model\n\n\t\t\t\t\tlines.push(line_to_add);\n\n\t\t\t\t\tif (line_to_add.shipaddress && !address_book[line_to_add.shipaddress])\n\t\t\t\t\t{\n\t\t\t\t\t\tline_to_add.shipaddress = null;\n\t\t\t\t\t\tline_to_add.shipmethod = null;\n\t\t\t\t\t\titem_ids_to_clean.push(line_to_add.internalid);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\titems_to_preload.push({\n\t\t\t\t\t\t\tid: original_line.internalid\n\t\t\t\t\t\t,\ttype: original_line.itemtype\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (item_ids_to_clean.length)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.setItemShippingAddress(item_ids_to_clean, null);\n\t\t\t\t\tModelsInit.order.setItemShippingMethod(item_ids_to_clean, null);\n\t\t\t\t}\n\n\t\t\t\tvar\trestart = false;\n\n\t\t\t\tStoreItem.preloadItems(items_to_preload);\n\n\t\t\t\tlines.forEach(function (line)\n\t\t\t\t{\n\t\t\t\t\tline.item = StoreItem.get(line.item, line.itemtype);\n\n\t\t\t\t\tif (!line.item)\n\t\t\t\t\t{\n\t\t\t\t\t\tself.removeLine(line.internalid);\n\t\t\t\t\t\trestart = true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tline.rate_formatted = Utils.formatCurrency(line.rate);\n\t\t\t\t\t\tline.amount_formatted = Utils.formatCurrency(line.amount);\n\t\t\t\t\t\tline.tax_amount_formatted = Utils.formatCurrency(line.tax_amount);\n\t\t\t\t\t\tline.discount_formatted = Utils.formatCurrency(line.discount);\n\t\t\t\t\t\tline.total_formatted = Utils.formatCurrency(line.total);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (restart)\n\t\t\t\t{\n\t\t\t\t\tthrow {code: 'ERR_CHK_ITEM_NOT_FOUND'};\n\t\t\t\t}\n\n\t\t\t\t// Sort the items in the order they were added, this is because the update operation alters the order\n\t\t\t\tvar lines_sort = this.getLinesSort();\n\n\t\t\t\tif (lines_sort.length)\n\t\t\t\t{\n\t\t\t\t\tlines = _.sortBy(lines, function (line)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn _.indexOf(lines_sort, line.internalid);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setLinesSort(_.pluck(lines, 'internalid'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lines;\n\t\t}\n\n\t\t// @method getIsMultiShipTo @param {Array<String>} order_fields @returns {Boolean}\n\t,\tgetIsMultiShipTo: function (order_fields)\n\t\t{\n\t\t\treturn this.isMultiShippingEnabled && order_fields.ismultishipto === 'T';\n\t\t}\n\n\t\t// @method setLinesSort @param {String} lines_sort @returns {String}\n\t,\tsetLinesSort: function (lines_sort)\n\t\t{\n\t\t\treturn ModelsInit.context.setSessionObject('lines_sort', lines_sort || []);\n\t\t}\n\n\t\t// @method setBillingAddress @param data @param {LiveOrder.Model.Data} current_order\n\t,\tsetBillingAddress: function (data, current_order)\n\t\t{\n\t\t\tif (data.sameAs)\n\t\t\t{\n\t\t\t\tdata.billaddress = data.shipaddress;\n\t\t\t}\n\n\t\t\tif (data.billaddress !== current_order.billaddress)\n\t\t\t{\n\t\t\t\tif (data.billaddress)\n\t\t\t\t{\n\t\t\t\t\tif (data.billaddress && !~data.billaddress.indexOf('null'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Heads Up!: This \"new String\" is to fix a nasty bug\n\t\t\t\t\t\tModelsInit.order.setBillingAddress(new String(data.billaddress).toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isSecure)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removeBillingAddress();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// @method setShippingAddressAndMethod @param {LiveOrder.Model.Data} data @param current_order\n\t,\tsetShippingAddressAndMethod: function (data, current_order)\n\t\t{\n\t\t\tvar current_package\n\t\t\t,\tpackages = {}\n\t\t\t,\titem_ids_to_clean = []\n\t\t\t,\toriginal_line;\n\n\t\t\t_.each(data.lines, function (line)\n\t\t\t{\n\t\t\t\toriginal_line = _.find(current_order.lines, function (order_line)\n\t\t\t\t{\n\t\t\t\t\treturn order_line.internalid === line.internalid;\n\t\t\t\t});\n\n\t\t\t\tif (original_line && original_line.item && original_line.item.isfulfillable !== false)\n\t\t\t\t{\n\t\t\t\t\tif (line.shipaddress)\n\t\t\t\t\t{\n\t\t\t\t\t\tpackages[line.shipaddress] = packages[line.shipaddress] || {\n\t\t\t\t\t\t\tshipMethodId: null\n\t\t\t\t\t\t,\titemIds: []\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tpackages[line.shipaddress].itemIds.push(line.internalid);\n\t\t\t\t\t\tif (!packages[line.shipaddress].shipMethodId && line.shipmethod)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpackages[line.shipaddress].shipMethodId = line.shipmethod;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\titem_ids_to_clean.push(line.internalid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//CLEAR Shipping address and shipping methods\n\t\t\tif (item_ids_to_clean.length)\n\t\t\t{\n\t\t\t\tModelsInit.order.setItemShippingAddress(item_ids_to_clean, null);\n\t\t\t\tModelsInit.order.setItemShippingMethod(item_ids_to_clean, null);\n\t\t\t}\n\n\t\t\t//SET Shipping address and shipping methods\n\t\t\t_.each(_.keys(packages), function (address_id)\n\t\t\t{\n\t\t\t\tcurrent_package = packages[address_id];\n\t\t\t\tModelsInit.order.setItemShippingAddress(current_package.itemIds, parseInt(address_id, 10));\n\n\t\t\t\tif (current_package.shipMethodId)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.setItemShippingMethod(current_package.itemIds, parseInt(current_package.shipMethodId, 10));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// @method setShippingAddress @param {LiveOrder.Model.Data} data @param current_order\n\t,\tsetShippingAddress: function (data, current_order)\n\t\t{\n\t\t\tif (data.shipaddress !== current_order.shipaddress)\n\t\t\t{\n\t\t\t\tif (data.shipaddress)\n\t\t\t\t{\n\t\t\t\t\tif (this.isSecure && !~data.shipaddress.indexOf('null'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// Heads Up!: This \"new String\" is to fix a nasty bug\n\t\t\t\t\t\tModelsInit.order.setShippingAddress(new String(data.shipaddress).toString());\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar address = _.find(data.addresses, function (address)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn address.internalid === data.shipaddress;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\taddress && ModelsInit.order.estimateShippingCost(address);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isSecure)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removeShippingAddress();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.estimateShippingCost({\n\t\t\t\t\t\tzip: null\n\t\t\t\t\t,\tcountry: null\n\t\t\t\t\t});\n\t\t\t\t\tModelsInit.order.removeShippingMethod();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// @method setPaymentMethods @param {LiveOrder.Model.Data} data\n\t,\tsetPaymentMethods: function (data)\n\t\t{\n\t\t\t// Because of an api issue regarding Gift Certificates, we are going to handle them separately\n\t\t\tvar self = this\n\t\t\t,\tgift_certificate_methods = _.where(data.paymentmethods, {type: 'giftcertificate'})\n\t\t\t,\tnon_certificate_methods = _.difference(data.paymentmethods, gift_certificate_methods);\n\n\t\t\t// Payment Methods non gift certificate\n\t\t\tif (this.isSecure && non_certificate_methods && non_certificate_methods.length && ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\t_.each(non_certificate_methods, function (paymentmethod)\n\t\t\t\t{\n\t\t\t\t\tif (paymentmethod.type === 'creditcard' && paymentmethod.creditcard)\n\t\t\t\t\t{\n\n\t\t\t\t\t\tvar credit_card = paymentmethod.creditcard\n\t\t\t\t\t\t,\trequire_cc_security_code = ModelsInit.session.getSiteSettings(['checkout']).checkout.requireccsecuritycode === 'T'\n\t\t\t\t\t\t,\tcc_obj = credit_card && {\n\t\t\t\t\t\t\t\t\t\tinternalid: credit_card.internalid\n\t\t\t\t\t\t\t\t\t,\tccnumber: credit_card.ccnumber\n\t\t\t\t\t\t\t\t\t,\tccname: credit_card.ccname\n\t\t\t\t\t\t\t\t\t,\tccexpiredate: credit_card.ccexpiredate\n\t\t\t\t\t\t\t\t\t,\texpmonth: credit_card.expmonth\n\t\t\t\t\t\t\t\t\t,\texpyear:  credit_card.expyear\n\t\t\t\t\t\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t\t\t\t\t\t\tinternalid: credit_card.paymentmethod.internalid\n\t\t\t\t\t\t\t\t\t\t,\tname: credit_card.paymentmethod.name\n\t\t\t\t\t\t\t\t\t\t,\tcreditcard: credit_card.paymentmethod.creditcard ? 'T' : 'F'\n\t\t\t\t\t\t\t\t\t\t,\tispaypal:  credit_card.paymentmethod.ispaypal ? 'T' : 'F'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (credit_card.ccsecuritycode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcc_obj.ccsecuritycode = credit_card.ccsecuritycode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!require_cc_security_code || require_cc_security_code && credit_card.ccsecuritycode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the user's default credit card may be expired so we detect this using try & catch and if it is we remove the payment methods.\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModelsInit.order.removePayment();\n\n\t\t\t\t\t\t\t\tModelsInit.order.setPayment({\n\t\t\t\t\t\t\t\t\tpaymentterms: 'CreditCard'\n\t\t\t\t\t\t\t\t,\tcreditcard: cc_obj\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tModelsInit.context.setSessionObject('paypal_complete', 'F');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (e && e.code && e.code === 'ERR_WS_INVALID_PAYMENT')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tModelsInit.order.removePayment();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the the given credit card don't have a security code and it is required we just remove it from the order\n\t\t\t\t\t\telse if (require_cc_security_code && !credit_card.ccsecuritycode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tModelsInit.order.removePayment();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (paymentmethod.type === 'invoice')\n\t\t\t\t\t{\n\t\t\t\t\t\tModelsInit.order.removePayment();\n\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tModelsInit.order.setPayment({ paymentterms: 'Invoice' });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (e && e.code && e.code === 'ERR_WS_INVALID_PAYMENT')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tModelsInit.order.removePayment();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (paymentmethod.purchasenumber)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tModelsInit.order.setPurchaseNumber(paymentmethod.purchasenumber);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tModelsInit.order.removePurchaseNumber();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tModelsInit.context.setSessionObject('paypal_complete', 'F');\n\t\t\t\t\t}\n\t\t\t\t\telse if (paymentmethod.type === 'paypal' && ModelsInit.context.getSessionObject('paypal_complete') === 'F')\n\t\t\t\t\t{\n\t\t\t\t\t\tModelsInit.order.removePayment();\n\n\t\t\t\t\t\tvar paypal = _.findWhere(ModelsInit.session.getPaymentMethods(), {ispaypal: 'T'});\n\t\t\t\t\t\tpaypal && ModelsInit.order.setPayment({paymentterms: '', paymentmethod: paypal.key});\n\t\t\t\t\t}\n\t\t\t\t\telse if (paymentmethod.type && ~paymentmethod.type.indexOf('external_checkout'))\n\t\t\t\t\t{\n\t\t\t\t\t\tModelsInit.order.removePayment();\n\n\t\t\t\t\t\tModelsInit.order.setPayment({\n\t\t\t\t\t\t\t\tpaymentmethod: paymentmethod.key\n\t\t\t\t\t\t\t,\tthankyouurl: paymentmethod.thankyouurl\n\t\t\t\t\t\t\t,\terrorurl: paymentmethod.errorurl\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (this.isSecure && ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tModelsInit.order.removePayment();\n\t\t\t}\n\n\t\t\tgift_certificate_methods = _.map(gift_certificate_methods, function (gift_certificate) { return gift_certificate.giftcertificate; });\n\t\t\tthis.setGiftCertificates(gift_certificate_methods);\n\t\t}\n\n\t\t// @method setGiftCertificates @param {Array<Object>} gift_certificates\n\t,\tsetGiftCertificates:  function (gift_certificates)\n\t\t{\n\t\t\t// Remove all gift certificates so we can re-enter them in the appropriate order\n\t\t\tModelsInit.order.removeAllGiftCertificates();\n\n\t\t\t_.forEach(gift_certificates, function (gift_certificate)\n\t\t\t{\n\t\t\t\tModelsInit.order.applyGiftCertificate(gift_certificate.code);\n\t\t\t});\n\t\t}\n\n\t\t// @method setShippingMethod @param {LiveOrder.Model.Data} data @param current_order\n\t,\tsetShippingMethod: function (data, current_order)\n\t\t{\n\t\t\tif ((!this.isMultiShippingEnabled || !data.ismultishipto) && this.isSecure && data.shipmethod !== current_order.shipmethod)\n\t\t\t{\n\t\t\t\tvar shipmethod = _.findWhere(current_order.shipmethods, {internalid: data.shipmethod});\n\n\t\t\t\tif (shipmethod)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.setShippingMethod({\n\t\t\t\t\t\tshipmethod: shipmethod.internalid\n\t\t\t\t\t,\tshipcarrier: shipmethod.shipcarrier\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removeShippingMethod();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// @method setPromoCode @param {LiveOrder.Model.Data} data @param current_order\n\t,\tsetPromoCode: function (data, current_order)\n\t\t{\n\t\t\tif (data.promocode && (!current_order.promocode || data.promocode.code !== current_order.promocode.code))\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.applyPromotionCode(data.promocode.code);\n\n\t\t\t\t\t//If we are estimating shipping address it is needed to re-calculate the shipping cost as the promo code can affect it\n\t\t\t\t\tif (data.shipaddress && (!this.isSecure || ~data.shipaddress.indexOf('null')))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar address = _.find(data.addresses, function (address)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn address.internalid === data.shipaddress;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\taddress && ModelsInit.order.estimateShippingCost(address);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\tModelsInit.order.removePromotionCode(data.promocode.code);\n\t\t\t\t\tcurrent_order.promocode && ModelsInit.order.removePromotionCode(current_order.promocode.code);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!data.promocode && current_order.promocode)\n\t\t\t{\n\t\t\t\tModelsInit.order.removePromotionCode(current_order.promocode.code);\n\t\t\t}\n\t\t}\n\n\t\t// @method setTermsAndConditions @param {LiveOrder.Model.Data} data\n\t,\tsetTermsAndConditions: function (data)\n\t\t{\n\t\t\tvar require_terms_and_conditions = ModelsInit.session.getSiteSettings(['checkout']).checkout.requiretermsandconditions;\n\n\t\t\tif (require_terms_and_conditions.toString() === 'T' && this.isSecure && !_.isUndefined(data.agreetermcondition))\n\t\t\t{\n\t\t\t\tModelsInit.order.setTermsAndConditions(data.agreetermcondition);\n\t\t\t}\n\t\t}\n\n\t\t// @method setTransactionBodyField @param {LiveOrder.Model.Data} data\n\t,\tsetTransactionBodyField: function (data)\n\t\t{\n\t\t\t// Transaction Body Field\n\t\t\tif (this.isSecure && !_.isEmpty(data.options))\n\t\t\t{\n\t\t\t\tModelsInit.order.setCustomFieldValues(data.options);\n\t\t\t}\n\t\t}\n\t});\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js\n\n// LiveOrder.ServiceController.js\n// ----------------\n// Service to manage cart items requests\ndefine(\n\t'LiveOrder.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'LiveOrder.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tLiveOrderModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class LiveOrder.ServiceController Manage cart items requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'LiveOrder.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tput: {\n\t\t\t\t\tcheckLoggedInCheckout : true\n\t\t\t\t}\n\t\t\t,\tpost: {\n\t\t\t\t\tcheckLoggedInCheckout : true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to LiveOrder.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\treturn LiveOrderModel.get();\n\t\t\t}\n\n\t\t\t// @method post The call to LiveOrder.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\t// Updates the order with the passed in data\n\t\t\t\tLiveOrderModel.update(this.data);\n\n\t\t\t\t// Submit the order\n\t\t\t\tvar confirmation = LiveOrderModel.submit()\n\n\t\t\t\t// Get the new order\n\t\t\t\t,\torder_info = LiveOrderModel.get();\n\n\t\t\t\t// Set the confirmation\n\t\t\t\torder_info.confirmation = confirmation;\n\n\t\t\t\t// Update touchpoints after submit order\n\t\t\t\torder_info.touchpoints = ModelsInit.session.getSiteSettings(['touchpoints']).touchpoints;\n\n\t\t\t\treturn order_info;\n\t\t\t}\n\n\t\t\t// @method put The call to LiveOrder.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {LiveOrder.Model.Data}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tLiveOrderModel.update(this.data);\n\t\t\t\treturn LiveOrderModel.get();\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.Model.js\n\n/* global customer,stringtodate */\n// LivePayment.js\n// -------\n// Defines the model used by the LivePayment.Service.ss service\ndefine(\n\t'LivePayment.Model'\n,\t['SC.Model', 'Payment.Model', 'Application', 'bignumber', 'Utils']\n,\tfunction (SCModel, Payment, Application, BigNumber, Utils)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\t\tname: 'LivePayment'\n\n\t,\tcreate: function()\n\t\t{\n\t\t\tvar customer_payment = nlapiCreateRecord('customerpayment');\n\n\t\t\tcustomer_payment.setFieldValue('customer', nlapiGetUser());\n\t\t\tcustomer_payment.setFieldValue('autoapply', 'F');\n\n\t\t\treturn customer_payment;\n\t\t}\n\n\t,\tget: function()\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar customer_payment = this.create();\n\t\t\t\treturn this.createResult(customer_payment);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\n\t\t\t\tif (e instanceof nlobjError && e.getCode() === 'INSUFFICIENT_PERMISSION')\n\t\t\t\t{\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t,\tsetPaymentMethod: function (customer_payment, result)\n\t\t{\n\t\t\tresult.paymentmethods = [];\n\n\t\t\treturn Utils.setPaymentMethodToResult(customer_payment, result);\n\t\t}\n\n\t,\tcreateResult: function (customer_payment)\n\t\t{\n\t\t\tvar result = {};\n\n\t\t\tresult.internalid = customer_payment.getId();\n\t\t\tresult.type =  customer_payment.getRecordType();\n\t\t\tresult.tranid = customer_payment.getFieldValue('tranid');\n\t\t\tresult.autoapply = customer_payment.getFieldValue('autoapply');\n\t\t\tresult.trandate = customer_payment.getFieldValue('trandate');\n\t\t\tresult.status = customer_payment.getFieldValue('status');\n\t\t\tresult.payment = Utils.toCurrency(customer_payment.getFieldValue('payment'));\n\t\t\tresult.payment_formatted = Utils.formatCurrency(customer_payment.getFieldValue('payment'));\n\t\t\tresult.lastmodifieddate = customer_payment.getFieldValue('lastmodifieddate');\n\t\t\tresult.balance = Utils.toCurrency(customer_payment.getFieldValue('balance'));\n\t\t\tresult.balance_formatted = Utils.formatCurrency(customer_payment.getFieldValue('balance'));\n\n\t\t\tthis.setPaymentMethod(customer_payment, result);\n\t\t\tthis.setInvoices(customer_payment, result);\n\t\t\tthis.setCredits(customer_payment, result);\n\t\t\tthis.setDeposits(customer_payment, result);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tsetInvoices: function(customer_payment, result)\n\t\t{\n\t\t\tresult.invoices = [];\n\n\t\t\tvar invoice_ids_to_search = [];\n\n\t\t\tfor (var i = 1; i <= customer_payment.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tvar invoice = {\n\t\t\t\t\t\tinternalid: customer_payment.getLineItemValue('apply', 'internalid', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\tapply: customer_payment.getLineItemValue('apply', 'apply', i) === 'T'\n\t\t\t\t\t,\tapplydate: customer_payment.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t,\tcurrency: customer_payment.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t,\tdiscamt: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'discamt', i))\n\t\t\t\t\t,\tdiscamt_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'discamt', i))\n\t\t\t\t\t,\tdisc: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'disc', i))\n\t\t\t\t\t,\tdisc_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'disc', i))\n\t\t\t\t\t,\tdiscdate: customer_payment.getLineItemValue('apply', 'discdate', i)\n\t\t\t\t\t,\tamount: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tdue: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\tdue_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\ttranid: customer_payment.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t};\n\n\t\t\t\tresult.invoices.push(invoice);\n\t\t\t\tinvoice_ids_to_search.push(invoice.internalid);\n\t\t\t}\n\n\t\t\t// Invoices are expanded with the missing fields (the ones required by front end)\n\t\t\tif (result.invoices.length)\n\t\t\t{\n\t\t\t\tvar filters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('mainline', null, 'is', 'T')\n\t\t\t\t\t,\tnew nlobjSearchFilter('internalid', null, 'anyof', invoice_ids_to_search)\n\t\t\t\t\t]\n\t\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('duedate')\n\t\t\t\t\t,\tnew nlobjSearchColumn('trandate')\n\t\t\t\t\t,\tnew nlobjSearchColumn('internalid')\n\t\t\t\t\t]\n\t\t\t\t,\tnow = new Date().getTime()\n\t\t\t\t,\tinvoices_expanded = Application.getAllSearchResults('invoice', filters, columns);\n\n\t\t\t\t_.each(result.invoices, function(invoice)\n\t\t\t\t{\n\t\t\t\t\tvar selected_invoice =_.find(invoices_expanded, function (expaded_invoice_filter)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn expaded_invoice_filter.getValue('internalid') === invoice.internalid;\n\t\t\t\t\t\t})\n\t\t\t\t\t,\tdue_date = selected_invoice.getValue('duedate')\n\t\t\t\t\t,\tdue_in_milliseconds = new Date(due_date).getTime() - now;\n\n\t\t\t\t\tinvoice.discountapplies = (invoice.due === invoice.total) && (invoice.discdate && stringtodate(invoice.discdate) >= new Date());\n\t\t\t\t\tinvoice.duewithdiscount = BigNumber(invoice.due).minus(invoice.discountapplies ? invoice.discamt : 0).toNumber();\n\t\t\t\t\tinvoice.duewithdiscount_formatted = Utils.formatCurrency(invoice.duewithdiscount);\n\t\t\t\t\tinvoice.discount = invoice.discamt && invoice.total ? BigNumber(invoice.discamt).div(invoice.total).times(100).round(2).toNumber() : 0;\n\t\t\t\t\tinvoice.discount_formatted = invoice.discount + '%';\n\n\t\t\t\t\tvar\tamount = BigNumber(invoice.due).minus(invoice.discountapplies ? invoice.discamt : 0).toNumber();\n\n\t\t\t\t\tinvoice.trandate = selected_invoice.getValue('trandate');\n\t\t\t\t\tinvoice.duedate = due_date;\n\t\t\t\t\tinvoice.dueinmilliseconds = due_in_milliseconds;\n\t\t\t\t\tinvoice.amount = amount;\n\t\t\t\t\tinvoice.amount_formatted = Utils.formatCurrency(amount);\n\t\t\t\t\tinvoice.isOverdue = due_in_milliseconds <= 0 && ((-1 * due_in_milliseconds) / 1000 / 60 / 60 / 24) >= 1;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tsetCredits: function(customer_payment, result)\n\t\t{\n\t\t\tresult.credits = [];\n\t\t\tresult.creditmemosremaining = 0;\n\n\t\t\tfor (var i = 1; i <= customer_payment.getLineItemCount('credit') ; i++)\n\t\t\t{\n\t\t\t\tvar creditmemo = {\n\t\t\t\t\t\tinternalid: customer_payment.getLineItemValue('credit', 'internalid', i)\n\t\t\t\t\t,\ttype: customer_payment.getLineItemValue('credit', 'type', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(customer_payment.getLineItemValue('credit', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('credit', 'total', i))\n\t\t\t\t\t,\tapply: customer_payment.getLineItemValue('credit', 'apply', i) === 'T'\n\t\t\t\t\t,\tcurrency: customer_payment.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t,\tremaining: Utils.toCurrency(customer_payment.getLineItemValue('credit', 'due', i))\n\t\t\t\t\t,\tremaining_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('credit', 'due', i))\n\t\t\t\t\t,\tamount: Utils.toCurrency(customer_payment.getLineItemValue('credit', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('credit', 'amount', i))\n\t\t\t\t\t,\trefnum: customer_payment.getLineItemValue('credit', 'refnum', i)\n\t\t\t\t};\n\n\t\t\t\tresult.creditmemosremaining = BigNumber(creditmemo.remaining).plus(result.creditmemosremaining).toNumber();\n\t\t\t\tresult.credits.push(creditmemo);\n\t\t\t}\n\n\t\t\tresult.creditmemosremaining_formatted = Utils.formatCurrency(result.creditmemosremaining);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tsetDeposits: function(customer_payment, result)\n\t\t{\n\t\t\tresult.deposits = [];\n\n\t\t\tresult.depositsremaining = 0;\n\n\t\t\tfor (var i = 1; i <= customer_payment.getLineItemCount('deposit') ; i++)\n\t\t\t{\n\t\t\t\tvar deposit = {\n\t\t\t\t\t\tinternalid: customer_payment.getLineItemValue('deposit', 'doc', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(customer_payment.getLineItemValue('deposit', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('deposit', 'total', i))\n\t\t\t\t\t,\tapply: customer_payment.getLineItemValue('deposit', 'apply', i) === 'T'\n\t\t\t\t\t,\tcurrency: customer_payment.getLineItemValue('deposit', 'currency', i)\n\t\t\t\t\t,\tdepositdate: customer_payment.getLineItemValue('deposit', 'depositdate', i)\n\t\t\t\t\t,\tremaining: Utils.toCurrency(customer_payment.getLineItemValue('deposit', 'remaining', i))\n\t\t\t\t\t,\tremaining_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('deposit', 'remaining', i))\n\t\t\t\t\t,\tamount: Utils.toCurrency(customer_payment.getLineItemValue('deposit', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('deposit', 'amount', i))\n\t\t\t\t\t,\trefnum: customer_payment.getLineItemValue('deposit', 'refnum', i)\n\t\t\t\t\t};\n\n\t\t\t\tresult.depositsremaining = BigNumber(deposit.remaining).plus(result.depositsremaining).toNumber();\n\t\t\t\tresult.deposits.push(deposit);\n\t\t\t}\n\n\t\t\tresult.depositsremaining_formatted = Utils.formatCurrency(result.depositsremaining);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tupdate: function (payment_record, data)\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\tinvoices = data.invoices\n\t\t\t,\tcredits = data.credits\n\t\t\t,\tdeposits = data.deposits\n\t\t\t,\tcredit_card = data.paymentmethods && data.paymentmethods[0] && data.paymentmethods[0].creditcard;\n\n\t\t\t// invoices\n\n\t\t\tfor (var i = 1; i <= payment_record.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tvar invoice = _.findWhere(invoices, {\n\t\t\t\t\tinternalid: payment_record.getLineItemValue('apply', 'internalid', i)\n\t\t\t\t});\n\n\t\t\t\tif (invoice && invoice.apply)\n\t\t\t\t{\n\t\t\t\t\tpayment_record.setLineItemValue('apply', 'apply', i, 'T');\n\t\t\t\t\tpayment_record.setLineItemValue('apply', 'amount', i, invoice.amount);\n\n\t\t\t\t\tinvoice.due = payment_record.getLineItemValue('apply', 'due', i);\n\t\t\t\t\tinvoice.total = payment_record.getLineItemValue('apply', 'total', i);\n\t\t\t\t\tinvoice.discdate = payment_record.getLineItemValue('apply', 'discdate', i);\n\t\t\t\t\tinvoice.discamt = payment_record.getLineItemValue('apply', 'discamt', i);\n\t\t\t\t\tinvoice.discountapplies = (invoice.due === invoice.total) && (invoice.discdate && stringtodate(invoice.discdate) >= new Date());\n\t\t\t\t\tinvoice.duewithdiscount = BigNumber(invoice.due).minus(invoice.discountapplies ? invoice.discamt : 0).toNumber();\n\n\t\t\t\t\tif (self._isPayFull(invoice) && invoice.discountapplies && invoice.discamt)\n\t\t\t\t\t{\n\t\t\t\t\t\tpayment_record.setLineItemValue('apply', 'disc', i, invoice.discamt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// deposits\n\n\t\t\tfor (i = 1; i <= payment_record.getLineItemCount('deposit'); i++)\n\t\t\t{\n\t\t\t\tvar deposit = _.findWhere(deposits, {\n\t\t\t\t\tinternalid: payment_record.getLineItemValue('deposit', 'doc', i)\n\t\t\t\t});\n\n\t\t\t\tif (deposit && deposit.apply)\n\t\t\t\t{\n\t\t\t\t\tpayment_record.setLineItemValue('deposit', 'apply', i, 'T');\n\t\t\t\t\tpayment_record.setLineItemValue('deposit', 'amount', i, deposit.amount);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// credits\n\n\t\t\tfor (i = 1; i <= payment_record.getLineItemCount('credit'); i++)\n\t\t\t{\n\t\t\t\tvar credit = _.findWhere(credits, {\n\t\t\t\t\tinternalid: payment_record.getLineItemValue('credit', 'internalid', i)\n\t\t\t\t});\n\n\t\t\t\tif (credit && credit.apply)\n\t\t\t\t{\n\t\t\t\t\tpayment_record.setLineItemValue('credit', 'apply', i, 'T');\n\t\t\t\t\tpayment_record.setLineItemValue('credit', 'amount', i, credit.amount);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.payment && credit_card && data.billaddress)\n\t\t\t{\n\t\t\t\tvar selected_address = customer.getAddress(data.billaddress);\n\n\t\t\t\tif (selected_address)\n\t\t\t\t{\n\t\t\t\t\tcustomer.updateAddress({\n\t\t\t\t\t\tinternalid: selected_address.internalid\n\t\t\t\t\t,\taddressee: selected_address.addressee\n\t\t\t\t\t,\tdefaultbilling : 'T'\n\t\t\t\t\t});\n\n\t\t\t\t\tpayment_record.setFieldValue('ccstreet', selected_address.addr1);\n\t\t\t\t\tpayment_record.setFieldValue('cczipcode', selected_address.zip);\n\t\t\t\t}\n\n\t\t\t\tcustomer.updateCreditCard({\n\t\t\t\t\tinternalid: credit_card.internalid\n\t\t\t\t,\tccdefault : 'T'\n\t\t\t\t});\n\n\t\t\t\tpayment_record.setFieldValue('paymentmethod', credit_card.paymentmethod.internalid);\n\n\t\t\t\tif (credit_card.ccsecuritycode)\n\t\t\t\t{\n\t\t\t\t\tpayment_record.setFieldValue('ccsecuritycode', credit_card.ccsecuritycode);\n\t\t\t\t}\n\n\t\t\t\tpayment_record.setFieldValue('payment', data.payment);\n\n\t\t\t}\n\n\t\t\treturn payment_record;\n\n\t\t}\n\n\t,\t_isPayFull: function (invoice)\n\t\t{\n\t\t\tif (invoice.discountapplies)\n\t\t\t{\n\t\t\t\treturn invoice.amount === invoice.duewithdiscount;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn invoice.amount === invoice.due;\n\t\t\t}\n\t\t}\n\n\t,\tsubmit: function (data)\n\t\t{\n\t\t\t// update record\n\t\t\tvar payment_record = this.update(this.create(), data)\n\t\t\t// save record.\n\t\t\t,\tpayment_record_id = nlapiSubmitRecord(payment_record)\n\t\t\t// create new record to next payment.\n\t\t\t,\tnew_payment_record = this.get();\n\n\t\t\tif (payment_record_id !== '0')\n\t\t\t{\n\t\t\t\t// send confirmation\n\t\t\t\tnew_payment_record.confirmation = _.extend(data, Payment.get(payment_record_id));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdata.internalid = '0';\n\t\t\t\tnew_payment_record.confirmation = data;\n\t\t\t}\n\n\t\t\treturn new_payment_record;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js\n\n// LivePayment.ServiceController.js\n// ----------------\n// Service to manage cart items requests\ndefine(\n\t'LivePayment.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'LivePayment.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tLivePaymentModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class LivePayment.ServiceController Manage cart items requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'LivePayment.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'transactions.tranCustPymt.2'\n\t\t\t\t\t\t,\t'transactions.tranCustInvc.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to LivePayment.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {LivePayment.Model}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\treturn LivePaymentModel.get();\n\t\t\t}\n\n\t\t\t// @method post The call to LivePayment.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {LivePayment.Model}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn LivePaymentModel.submit(this.data);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/NativesExtras@ML/JavaScript/String.format.js\n\n//! © 2015 NetSuite Inc.\n// String.format.js\n// ----------------\n// Used for the translation method in Utils.js\n// Will replace $(n) for the n parameter entered \n// eg: \"This $(0) a $(1), $(0) it?\".format(\"is\", \"test\");\n//     returns \"This is a test, is it?\"\ndefine('String.format', function ()\n{\n\t'use strict';\n\t\n\tString.prototype.format = function ()\n\t{\n\t\tvar args = arguments;\n\n\t\treturn this.replace(/\\$\\((\\d+)\\)/g, function (match, number)\n\t\t{ \n\t\t\treturn typeof args[number] !== 'undefined' ? args[number] : match;\n\t\t});\n\t};\n\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/NativesExtras@ML/JavaScript/Synthetic.Click.js\n\ndefine('Synthetic.Click'\n\t, [\n\t\t\t'DeviceDetection'\n\t\t,\t'jQuery'\n\t\t,\t'underscore'\n \t\t]\n\t,\tfunction (\n\t\t\tDeviceDetection\n\t\t,\tjQuery\n\t\t,\t_\n\t\t)\n{\n\t'use strict';\n\n\tfunction onClick(ev, clientX, clientY)\n\t{\n\t\tev.target.dispatchEvent(\n\t\t\tnew MouseEvent('click', {\n\t\t\t\tview: window\n\t\t\t, bubbles: true\n\t\t\t, cancelable: true\n\t\t\t, clientX: clientX\n\t\t\t, clientY: clientY\n\t\t\t})\n\t\t);\n\n\t\t//prevents default to avoid double click (synthetic + native)\n\t\tev.preventDefault();\n\t}\n\n\tfunction onFocus(ev)\n\t{\n\t\tev.target.focus();\n\t}\n\n\tvar touch_data = {\n\t\tmaxDelay: 120\n\t,\tmaxDelta: 4\n\t,\ttags: {\n\t\t\tbutton: 'click'\n\t\t,\ta: 'click'\n\t\t, select: 'focus'\n\t\t, input: 'focus'\n\t\t, textarea: 'focus'\n\t}\n\t,\ttimestamp: null\n\t,\tclientX: 0\n\t,\tclientY: 0\n\t,\tclick: onClick\n\t,\tfocus: onFocus\n\t};\n\n\tfunction getClientX(ev)\n\t{\n\t\treturn _.result(getChangedTouch(ev), 'clientX');\n\t}\n\n\tfunction getClientY(ev)\n\t{\n\t\treturn _.result(getChangedTouch(ev), 'clientY');\n\t}\n\n\tfunction getChangedTouch(ev)\n\t{\n\t\treturn _.chain(ev).result('changedTouches').first().value();\n\t}\n\n\tfunction onTouchStart(ev)\n\t{\n\t\ttouch_data.timestamp = ev.timeStamp;\n\t\ttouch_data.clientX = getClientX(ev);\n\t\ttouch_data.clientY = getClientY(ev);\n\t}\n\n\tfunction onTouchEnd(ev)\n\t{\n\t\tvar tagName = ev.target.tagName.toLowerCase()\n\t\t, handler = touch_data.tags[tagName];\n\n\t\t//ignore because not a clickable element\n\t\tif (handler === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar delay = ev.timeStamp - touch_data.timestamp\n\t\t, clientX = getClientX(ev)\n\t\t, clientY = getClientY(ev)\n\t\t, deltaX = Math.abs(clientX - touch_data.clientX)\n\t\t, deltaY = Math.abs(clientY - touch_data.clientY);\n\n\t\t//ignore because delay or scroll\n\t\tif (delay > touch_data.maxDelay ||\n\t\t\t\tdeltaX > touch_data.maxDelta ||\n\t\t\t\tdeltaY > touch_data.maxDelta)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t//GO! dispatch synthetic action\n\t\ttouch_data[handler](ev, clientX, clientY);\n\t}\n\n\tfunction mountToApp()\n\t{\n\t\tif(!DeviceDetection.isIPad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tjQuery('body')\n\t\t\t.on('touchstart', onTouchStart)\n\t\t\t.on('touchend', onTouchEnd);\n\t}\n\n\treturn {\n\t\tmountToApp: mountToApp\n\t};\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js\n\n// OrderHistory.Model.js\n// ----------\n// Handles fetching orders\ndefine(\n\t'OrderHistory.Model'\n,\t[\t\n\t\t'Application'\n\t,\t'Utils'\n\t,\t'StoreItem.Model'\n\t,\t'Transaction.Model'\n\t,\t'SiteSettings.Model'\n\t,\t'SC.Model'\n\t,\t'ReturnAuthorization.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tApplication\n\t,\tUtils\n\t,\tStoreItem\n\t,\tTransaction\n\t,\tSiteSettings\n\t,\tSCModel\n\t,\tReturnAuthorization\n\t\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\treturn Transaction.extend({\n\t\n\t\tname: 'OrderHistory'\n\t,\tsetExtraListColumns: function ()\n\t\t{\n\t\t\tthis.columns.trackingnumbers = new nlobjSearchColumn('trackingnumbers');\n\n\t\t\tif (!this.isSCISIntegrationEnabled)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.columns.origin = new nlobjSearchColumn('formulatext');\n\t\t\t\n\t\t\tthis.columns.origin.setFormula('case when LENGTH({source})>0 then 2 else (case when {location.locationtype.id} = \\'' + SC.Configuration.locationTypeMapping.store.internalid + '\\' then 1 else 0 end) end');\n\t\t}\n\t,\tsetExtraListFilters: function ()\n\t\t{\n\t\t\tif (this.isSCISIntegrationEnabled)\n\t\t\t{\n\t\t\t\tthis.filters.scisrecords_operator = 'and';\n\t\t\t\tthis.filters.scisrecords = [\n\t\t\t\t\t[\n\t\t\t\t\t\t['type', 'anyof', ['CashSale','CustInvc']] \n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t['createdfrom.type', 'noneof', ['SalesOrd']]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t[ 'location.locationtype', 'is', SC.Configuration.locationTypeMapping.store.internalid ]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t['source', 'is', '@NONE@']\n\t\t\t\t\t]\n\t\t\t\t,\t'or'\n\t\t\t\t,\t[\n\t\t\t\t\t\t['type', 'anyof', ['SalesOrd']]\n\t\t\t\t\t]\n\t\t\t\t];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.filters.type_operator = 'and';\n\t\t\t\tthis.filters.type = ['type', 'anyof', ['SalesOrd']];\n\t\t\t}\n\t\t}\n\t,\tmapListResult: function (result, record)\n\t\t{\n\t\t\tresult = result || {};\n\n\t\t\tresult.trackingnumbers = record.getValue('trackingnumbers') ? record.getValue('trackingnumbers').split('<BR>') : null;\n\t\t\t\n\t\t\tif (this.isSCISIntegrationEnabled)\n\t\t\t{\n\t\t\t\tresult.origin = parseInt(record.getValue(this.columns.origin), 10);\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\t,\tgetExtraRecordFields: function ()\n\t\t{\n\t\t\tthis.getReceipts();\n\n\t\t\tthis.getReturnAuthorizations();\n\n\t\t\tvar origin = 0\n\t\t\t,\tapplied_to_transaction;\n\n\n\t\t\tif (this.isSCISIntegrationEnabled && !this.record.getFieldValue('source') && this.record.getFieldValue('location') && nlapiLookupField(this.result.recordtype, this.result.internalid, 'location.locationtype') === SC.Configuration.locationTypeMapping.store.internalid)\n\t\t\t{\n\t\t\t\torigin = 1; //store\n\t\t\t}\n\t\t\telse if (this.record.getFieldValue('source'))\n\t\t\t{\n\t\t\t\torigin = 2; //online\n\t\t\t}\n\n\t\t\tthis.result.origin = origin;\n\n\t\t\tif (this.result.recordtype === 'salesorder')\n\t\t\t{\n\t\t\t\tthis.getFulfillments();\n\t\t\t\tapplied_to_transaction = _(_.where(this.result.receipts || [], {recordtype: 'invoice'})).pluck('internalid');\n\t\t\t}\n\t\t\telse if (this.result.recordtype === 'invoice')\n\t\t\t{\n\t\t\t\tapplied_to_transaction = [this.result.internalid];\n\t\t\t}\n\t\t\t\n\t\t\tif (applied_to_transaction && applied_to_transaction.length)\n\t\t\t{\n\t\t\t\tthis.getAdjustments({paymentMethodInformation: true, appliedToTransaction: applied_to_transaction});\n\t\t\t}\n\t\t\t\n\t\t\tthis.result.ismultishipto = this.record.getFieldValue('ismultishipto') === 'T';\n\n\t\t\tthis.getLinesGroups();\n\n\t\t\tthis.result.receipts = _.values(this.result.receipts);\n\n\t\t\t//@property {Boolean} isReturnable\n\t\t\tthis.result.isReturnable = this.isReturnable();\n\n\t\t\tthis.getPaymentEvent();\n\n\t\t\t//@property {Boolean} isCancelable\n\t\t\tthis.result.isCancelable = this.isCancelable();\n\t\t}\n\n\t,\tgetTerms: function ()\n\t\t{\n\t\t\tvar terms = nlapiLookupField(this.result.recordtype, this.result.internalid, 'terms');\n\t\t\t\n\t\t\tif (terms)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\tinternalid: terms\n\t\t\t\t\t//@property {String} name\n\t\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'terms', true)\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\n\t,\tgetStatus: function ()\n\t\t{\n\t\t\tthis.result.status =\n\t\t\t{\n\t\t\t\tinternalid: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status')\n\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status', true)\n\t\t\t};\n\t\t}\n\t,\tgetLinesGroups: function ()\n\t\t{\t\n\t\t\tvar self = this;\n\n\t\t\t_.each(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\tvar line_group_id = '';\n\n\t\t\t\tif (self.result.recordtype === 'salesorder')\n\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\tif ((!self.result.ismultishipto && (!line.isfulfillable || !self.result.shipaddress)) || (self.result.ismultishipto && (!line.shipaddress || !line.shipmethod)))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (self.isSCISIntegrationEnabled && self.result.origin === 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tline_group_id = 'instore';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tline_group_id = 'nonshippable';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tline_group_id = 'shippable';\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tline_group_id = 'instore';\n\t\t\t\t}\n\n\t\t\t\tline.linegroup = line_group_id;\n\t\t\t});\n\n\t\t}\n\t,\tgetFulfillments: function ()\n\t\t{\n\t\t\tthis.result.fulfillments = {};\n\n\t\t\tvar self = this\n\t\t\t,\tfilters = [\n\t\t\t\t\tnew nlobjSearchFilter('internalid', null, 'is', this.result.internalid)\n\t\t\t\t,\tnew nlobjSearchFilter('mainline', null, 'is', 'F')\n\t\t\t\t,\tnew nlobjSearchFilter('shipping', null, 'is', 'F')\n\t\t\t\t,\tnew nlobjSearchFilter('taxline', null, 'is', 'F')\n\t\t\t\t]\n\t\t\t,\tcolumns = [\n\t\t\t\t\tnew nlobjSearchColumn('line')\n\t\t\t\t,\tnew nlobjSearchColumn('fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('quantitypicked')\n\t\t\t\t,\tnew nlobjSearchColumn('quantitypacked')\n\t\t\t\t,\tnew nlobjSearchColumn('quantityshiprecv')\n\n\t\t\t\t,\tnew nlobjSearchColumn('actualshipdate')\n\t\t\t\t,\tnew nlobjSearchColumn('quantity','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('item','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipmethod','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipto','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('trackingnumbers','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('trandate','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('status','fulfillingtransaction')\n\n\t\t\t\t\t// Ship Address\n\t\t\t\t,\tnew nlobjSearchColumn('shipaddress','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipaddress1','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipaddress2','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipaddressee','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipattention','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipcity','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipcountry','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipstate','fulfillingtransaction')\n\t\t\t\t,\tnew nlobjSearchColumn('shipzip','fulfillingtransaction')\n\t\t\t\t];\n\n\t\t\tApplication.getAllSearchResults('salesorder', filters, columns).forEach(function (ffline)\n\t\t\t{\n\t\t\t\tvar fulfillment_id = ffline.getValue('fulfillingtransaction')\n\t\t\t\t,\tline_internalid = self.result.internalid + '_' + ffline.getValue('line')\n\t\t\t\t,\tline = _.findWhere(self.result.lines, {internalid: line_internalid});\n\n\t\t\t\tif (fulfillment_id)\n\t\t\t\t{\n\t\t\t\t\tvar shipaddress = self.addAddress({\n\t\t\t\t\t\t\tinternalid: ffline.getValue('shipaddress', 'fulfillingtransaction')\n\t\t\t\t\t\t,\tcountry: ffline.getValue('shipcountry', 'fulfillingtransaction')\n\t\t\t\t\t\t,\tstate: ffline.getValue('shipstate', 'fulfillingtransaction')\n\t\t\t\t\t\t,\tcity: ffline.getValue('shipcity', 'fulfillingtransaction')\n\t\t\t\t\t\t,\tzip: ffline.getValue('shipzip', 'fulfillingtransaction')\n\t\t\t\t\t\t,\taddr1: ffline.getValue('shipaddress1', 'fulfillingtransaction')\n\t\t\t\t\t\t,\taddr2: ffline.getValue('shipaddress2', 'fulfillingtransaction')\n\t\t\t\t\t\t,\tattention: ffline.getValue('shipattention', 'fulfillingtransaction')\n\t\t\t\t\t\t,\taddressee: ffline.getValue('shipaddressee', 'fulfillingtransaction')\n\t\t\t\t\t}, self.result);\n\n\t\t\t\t\tself.result.fulfillments[fulfillment_id] = self.result.fulfillments[fulfillment_id] || {\n\t\t\t\t\t\tinternalid: fulfillment_id\n\t\t\t\t\t,\tshipaddress: shipaddress\n\t\t\t\t\t,\tshipmethod: self.addShippingMethod({\n\t\t\t\t\t\t\tinternalid : ffline.getValue('shipmethod','fulfillingtransaction')\n\t\t\t\t\t\t,\tname : ffline.getText('shipmethod','fulfillingtransaction')\n\t\t\t\t\t\t})\n\t\t\t\t\t,\tdate: ffline.getValue('actualshipdate')\n\t\t\t\t\t,\ttrackingnumbers: ffline.getValue('trackingnumbers','fulfillingtransaction') ? ffline.getValue('trackingnumbers','fulfillingtransaction').split('<BR>') : null\n\t\t\t\t\t,\tlines: []\n\t\t\t\t\t,\tstatus: {\n\t\t\t\t\t\t\t\tinternalid: ffline.getValue('status','fulfillingtransaction')\n\t\t\t\t\t\t\t,\tname: ffline.getText('status','fulfillingtransaction')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\t\n\t\t\t\t\t};\n\n\t\t\t\t\tself.result.fulfillments[fulfillment_id].lines.push({\n\t\t\t\t\t\tinternalid: line_internalid\n\t\t\t\t\t,\tquantity: parseInt(ffline.getValue('quantity','fulfillingtransaction'), 10)\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (line)\n\t\t\t\t{\n\t\t\t\t\tline.quantityfulfilled = parseInt(ffline.getValue('quantityshiprecv') || 0, 10);\n\t\t\t\t\tline.quantitypacked = parseInt(ffline.getValue('quantitypacked') || 0, 10) - line.quantityfulfilled;\n\t\t\t\t\tline.quantitypicked = parseInt(ffline.getValue('quantitypicked') || 0, 10) - line.quantitypacked - line.quantityfulfilled;\n\t\t\t\t\tline.quantitybackordered = line.quantity - line.quantityfulfilled - line.quantitypacked - line.quantitypicked;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t});\n\n\t\t\tthis.result.fulfillments = _.values(this.result.fulfillments);\n\t\t}\n\n\t\t//@method isReturnable Indicate if the current loaded transaction is returnable or not\n\t\t//@return {Boolean}\n\t,\tisReturnable: function ()\n\t\t{\n\t\t\tif (this.result.recordtype === 'salesorder')\n\t\t\t{\n\t\t\t\tvar status_id = this.record.getFieldValue('statusRef');\n\t\t\t\t\n\t\t\t\treturn status_id !== 'pendingFulfillment' && status_id !== 'pendingApproval' && status_id !== 'closed' && status_id !== 'canceled';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\t\n\t\t}\n\t,\tgetReceipts: function ()\n\t\t{\n\t\t\tthis.result.receipts = Transaction.list({\n\t\t\t\tcreatedfrom: this.result.internalid\n\t\t\t,\ttypes: 'CustInvc,CashSale'\n\t\t\t,\tpage: 'all'\n\t\t\t});\n\n\n\t\t}\n\t,\tgetReturnAuthorizations: function ()\n\t\t{\n\t\t\tvar created_from = _(this.result.receipts || []).pluck('internalid');\n\n\t\t\tcreated_from.push(this.result.internalid);\n\n\t\t\tthis.result.returnauthorizations = ReturnAuthorization.list({\n\t\t\t\t\tcreatedfrom: created_from\n\t\t\t\t,\tpage: 'all'\n\t\t\t\t,\tgetLines: true\n\t\t\t});\n\t\t}\n\n\t,\tloadSCISIntegrationStatus: function ()\n\t\t{\n\t\t\tvar site_settings = SiteSettings.get();\n\n\t\t\tthis.isSCISIntegrationEnabled = site_settings.isSCISIntegrationEnabled;\n\t\t}\n\n\t,\tgetIsSCISIntegrationEnabled: function ()\n\t\t{\n\t\t\treturn _.isUndefined(this.isSCISIntegrationEnabled) ? false : !!this.isSCISIntegrationEnabled;\n\t\t}\n\n\t,\tpostGet: function ()\n\t\t{\n\t\t\tthis.result.lines = _.reject(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\treturn line.quantity === 0;\n\t\t\t});\n\t\t}\n\n\t,\tpreList: function () \n\t\t{\n\t\t\tthis.loadSCISIntegrationStatus();\n\t\t}\n\n\t,\tpreGet: function () \n\t\t{\n\t\t\tthis.loadSCISIntegrationStatus();\n\t\t}\n\n\t,\tgetPaymentEvent: function ()\n\t\t{\n\t\t\tthis.result.paymentevent = {\n\t\t\t\tholdreason: this.record.getFieldValue('paymenteventholdreason')\n\t\t\t,\tredirecturl: this.record.getFieldValue('redirecturl')\n\t\t\t};\n\t\t}\n\t\n\t,\tupdate: function (id, data, headers)\n\t\t{\t\n\t\t\tvar result = 'OK';\n\n\t\t\tif (data.status ==='cancelled')\n\t\t\t{\n\n\t\t\t\tvar url = 'https://' + Application.getHost() + '/app/accounting/transactions/salesordermanager.nl?type=cancel&xml=T&id=' + id\n    \t\t   \t,\tcancel_response = nlapiRequestURL(url, null, headers);\n\n\t\t\t\tif (cancel_response.getCode() === 206)\n\t\t\t\t{\n\t\t\t\t\tif (nlapiLookupField('salesorder', id, 'statusRef') !== 'cancelled')\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = 'ERR_ALREADY_APPROVED_STATUS';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = 'ERR_ALREADY_CANCELLED_STATUS';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t//@method isCancelable\n\t\t//@return {Boolean}\n\t,\tisCancelable: function ()\n\t\t{\n\t\t\treturn this.result.recordtype === 'salesorder' && this.result.status.internalid === 'pendingApproval';\n\t\t}\n\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js\n\n// OrderHistory.ServiceController.js\n// ----------------\n// Service to manage placed orders requests\ndefine(\n\t'OrderHistory.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'OrderHistory.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tOrderHistoryModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\tOrderHistoryModel.loadSCISIntegrationStatus();\n\t\tvar enabled = OrderHistoryModel.getIsSCISIntegrationEnabled();\n\n\t\t// @class OrderHistory.ServiceController Manage placed orders requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'OrderHistory.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'transactions.tranFind.1'\n\t\t\t\t\t\t,\tenabled ? 'transactions.tranPurchases.1' : 'transactions.tranSalesOrd.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to OrderHistory.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function ()\n\t\t\t{\n\t\t\t\tvar recordtype = this.request.getParameter('recordtype')\n\t\t\t\t,\tid = this.request.getParameter('internalid');\n\t\t\t\t//If the id exist, sends the response of Order.get(id), else sends the response of (Order.list(options) || [])\n\t\t\t\tif (recordtype && id)\n\t\t\t\t{\n\t\t\t\t\treturn OrderHistoryModel.get(recordtype, id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn OrderHistoryModel.list({\n\t\t\t\t\t\tfilter: this.request.getParameter('filter')\n\t\t\t\t\t,\torder: this.request.getParameter('order')\n\t\t\t\t\t,\tsort: this.request.getParameter('sort')\n\t\t\t\t\t,\tfrom: this.request.getParameter('from')\n\t\t\t\t\t,\tto: this.request.getParameter('to')\n\t\t\t\t\t,\tpage: this.request.getParameter('page') || 1\n\t\t\t\t\t,\tresults_per_page: this.request.getParameter('results_per_page')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method put The call to OrderHistory.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar recordtype = this.request.getParameter('recordtype')\n\t\t\t\t,\tid = this.request.getParameter('internalid');\n\n\t\t\t\tvar cancel_result = OrderHistoryModel.update(id, this.data, this.request.getAllHeaders())\n\t\t\t\t,\trecord = OrderHistoryModel.get(this.data.recordtype, id);\n\t\t\t\trecord.cancel_response = cancel_result;\n\t\t\t\treturn record;\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ReleaseMetadata@ML/SuiteScript/ReleaseMetadata.js\n\n//! © 2015 NetSuite Inc.\n\n/* global release_metadata  */\ndefine(\n\t'ReleaseMetadata'\n,\t[ 'underscore' ]\n,\tfunction(_)\n{\n\t'use strict';\n\treturn {\n\t\tavailable: function()\n\t\t{\t\n\t\t\treturn release_metadata !== undefined;\t\n\t\t}\n\n\t,\tget: function()\n\t\t{\n\t\t\treturn release_metadata;\n\t\t}\n\n\t,\tasHTMLComment: function()\n\t\t{\n\t\t\tif(!release_metadata)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// Generates something like [ bundle_id \"48040\" ] [ baselabel \"POS_ML\" ] ...\n\t\t\tvar bracketVals = _.chain(release_metadata)\n\t\t\t\t.omit('name')\n\t\t\t\t.map(function(value, key)\n\t\t\t\t{\n\t\t\t\t\treturn '[ ' + key + ' ' + JSON.stringify(value) + ' ]';\n\t\t\t\t})\n\t\t\t\t.value()\n\t\t\t\t.join(' ');\n\n\t\t\treturn '<!-- ' + release_metadata.name + ' ' + bracketVals + ' -->';\n\t\t}\n\t};\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js\n\n// ReorderItems.Model.js\n// ----------\n// Handles fetching of ordered items\ndefine(\n\t'ReorderItems.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'StoreItem.Model'\n\t,\t'SiteSettings.Model'\n\t,\t'Utils'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\t,\tApplication\n\t,\tStoreItem\n\t,\tSiteSettings\n\t,\tUtils\n\t)\n{\n\t'use strict';\n\n\t// @class ReorderItems.Model Defines the model used by the ReorderItems.Service.ss service\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\t//@property {String} name\n\t\tname: 'OrderItem'\n\n\t\t//@property {Boolean} isMultiSite\n\t,\tisMultiSite: ModelsInit.context.getFeature('MULTISITE')\n\n\t\t//@method search\n\t\t//@param {String} order_id\n\t\t//@param {Object} query_filters\n\t\t//@return {Array<ReorderItems.Model.Attributes>}\n\t,\tsearch: function (order_id, query_filters)\n\t\t{\n\n\t\t\tvar filters = {\n\t\t\t\t\t'entity': ['entity', 'is', nlapiGetUser()]\n\t\t\t\t,\t'entity_operator': 'and'\n\t\t\t\t,\t'quantity': [ 'quantity', 'greaterthan', 0 ]\n\t\t\t\t,\t'quantity_operator': 'and'\n\t\t\t\t,\t'mainline': ['mainline','is', 'F']\n\t\t\t\t,\t'mainline_operator': 'and'\n\t\t\t\t,\t'cogs': ['cogs', 'is', 'F']\n\t\t\t\t,\t'cogs_operator': 'and'\n\t\t\t\t,\t'taxline': ['taxline', 'is', 'F']\n\t\t\t\t,\t'taxline_operator': 'and'\n\t\t\t\t,\t'shipping': ['shipping', 'is', 'F']\n\t\t\t\t,\t'shipping_operator': 'and'\n\t\t\t\t,\t'transactiondiscount': ['transactiondiscount', 'is', 'F']\n\t\t\t\t,\t'transactiondiscount_operator': 'and'\n\t\t\t\t,\t'item_is_active': ['item.isinactive', 'is', 'F']\n\t\t\t\t,\t'item_is_active_operator': 'and'\n\t\t\t\t,\t'item_type': [ 'item.type', 'noneof', 'GiftCert' ]\n\t\t\t}\n\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('internalid', 'item', 'group')\n\t\t\t\t\t,\tnew nlobjSearchColumn('type', 'item', 'group')\n\t\t\t\t\t,\tnew nlobjSearchColumn('parent', 'item', 'group')\n\t\t\t\t\t,\tnew nlobjSearchColumn('options', null, 'group')\n\t\t\t\t\t// to sort by price we fetch the max onlinecustomerprice\n\t\t\t\t\t,\tnew nlobjSearchColumn('onlinecustomerprice', 'item', 'max')\n\t\t\t\t\t// to sort by recently purchased we grab the last date the item was purchased\n\t\t\t\t\t,\tnew nlobjSearchColumn('trandate', null, 'max')\n\t\t\t\t\t// to sort by frequently purchased we count the number of orders which contains an item\n\t\t\t\t\t,\tnew nlobjSearchColumn('internalid', null, 'count')\n\t\t\t\t]\n\n\t\t\t\t,\titem_name =  new nlobjSearchColumn('formulatext','item', 'group');\n\n\t\t\t// when sorting by name, if the item has displayname we sort by that field, if not we sort by itemid\n\t\t\titem_name.setFormula('case when LENGTH({item.storedisplayname}) > 0 then {item.storedisplayname} else (case when LENGTH({item.displayname}) > 0 then {item.displayname} else {item.itemid} end) end');\n\n\t\t\tcolumns.push(item_name);\n\n\t\t\tvar site_settings = SiteSettings.get();\n\n\t\t\tif (site_settings.isSCISIntegrationEnabled)\n\t\t\t{\n\t\t\t\tfilters.scisrecords_operator = 'and';\n\t\t\t\tfilters.scisrecords = [\n\t\t\t\t\t[\n\t\t\t\t\t\t['type', 'anyof', ['CashSale','CustInvc']]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t[ 'createdfrom', 'is', '@NONE@' ]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t[ 'location.locationtype', 'is', SC.Configuration.locationTypeMapping.store.internalid ]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t[ 'source', 'is', '@NONE@' ]\n\t\t\t\t\t]\n\t\t\t\t,\t'or'\n\t\t\t\t,\t[\n\t\t\t\t\t\t['type', 'anyof', ['SalesOrd']]\n\t\t\t\t\t]\n\t\t\t\t];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfilters.type_operator = 'and';\n\t\t\t\tfilters.type = ['type', 'anyof', ['SalesOrd']];\n\t\t\t}\n\n\t \t\tif (this.isMultiSite)\n\t\t\t{\n\t\t\t\tvar site_id = ModelsInit.session.getSiteSettings(['siteid']).siteid\n\t\t\t\t,\tfilter_site = SC.Configuration.filter_site\n\t\t\t\t,\tsearch_filter_array = null;\n\n\t\t\t\tif (_.isString(filter_site) && filter_site === 'current')\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = [site_id, '@NONE@'];\n\t\t\t\t}\n\t\t\t\telse if (_.isString(filter_site) && filter_site === 'all')\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = [];\n\t\t\t\t}\n\t\t\t\telse if (_.isArray(filter_site))\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = filter_site;\n\t\t\t\t\tsearch_filter_array.push('@NONE@');\n\t\t\t\t}\n\n\n\t\t\t\tif (search_filter_array && search_filter_array.length)\n\t\t\t\t{\n\t\t\t\t\tfilters.site_operator = 'and';\n\t\t\t\t\tfilters.site = ['website', 'anyof', _.uniq(search_filter_array)];\n\n\t\t\t\t\tfilters.item_website_operator = 'and';\n\t\t\t\t\tfilters.item_website = ['item.website', 'anyof',  _.uniq(search_filter_array)];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// show only items from one order\n\t\t\tif (order_id)\n\t\t\t{\n\t\t\t\tfilters.order_operator = 'and';\n\t\t\t\tfilters.order_id = ['internalid', 'is', order_id];\n\n\t\t\t\tcolumns.push(new nlobjSearchColumn('tranid', null, 'group'));\n\t\t\t}\n\n\t\t\tif (query_filters.date.from && query_filters.date.to)\n\t\t\t{\n\t\t\t\tvar offset = new Date().getTimezoneOffset() * 60 * 1000;\n\n\t\t\t\tfilters.date_operator = 'and';\n\t\t\t\tfilters.date = ['trandate', 'within', new Date(parseInt(query_filters.date.from, 10) + offset), new Date(parseInt(query_filters.date.to, 10) + offset)];\n\t\t\t}\n\n\t\t\t// select field to sort by\n\t\t\tswitch (query_filters.sort)\n\t\t\t{\n\t\t\t\t// sort by name\n\t\t\t\tcase 'name':\n\t\t\t\t\titem_name.setSort(query_filters.order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\t// sort by price\n\t\t\t\tcase 'price':\n\t\t\t\t\tcolumns[4].setSort(query_filters.order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\t// sort by recently purchased\n\t\t\t\tcase 'date':\n\t\t\t\t\tcolumns[5].setSort(query_filters.order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\t// sort by frequenlty purchased\n\t\t\t\tcase 'quantity':\n\t\t\t\t\tcolumns[6].setSort(query_filters.order > 0);\n\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcolumns[6].setSort(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// fetch items\n\t\t\tvar result = Application.getPaginatedSearchResults({\n\t\t\t\t\trecord_type: 'transaction'\n\t\t\t\t,\tfilters: _.values(filters)\n\t\t\t\t,\tcolumns: columns\n\t\t\t\t,\tpage: query_filters.page\n\t\t\t\t,\tcolumn_count: new nlobjSearchColumn('formulatext', null, 'count').setFormula('CONCAT({item}, {options})')\n\t\t\t\t})\n\t\t\t// prepare an item collection, this will be used to preload item's details\n\t\t\t,\titems_info = _.map(result.records, function (line)\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: line.getValue('internalid', 'item', 'group')\n\t\t\t\t\t,\ttype: line.getValue('type', 'item', 'group')\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tif (items_info.length)\n\t\t\t{\n\t\t\t\t// preload order's items information\n\t\t\t\tStoreItem.preloadItems(items_info);\n\n\t\t\t\tresult.records = _.map(result.records, function (line)\n\t\t\t\t{\n\t\t\t\t\t// prepare the collection for the frontend\n\t\t\t\t\t//@class ReorderItems.Model.Attributes\n\t\t\t\t\treturn {\n\t\t\t\t\t\t\t//@property {StoreItem} item\n\t\t\t\t\t\t\titem: StoreItem.get( line.getValue('internalid', 'item', 'group'), line.getValue('type', 'item', 'group') )\n\t\t\t\t\t\t\t//@property {String} tranid\n\t\t\t\t\t\t,\ttranid: line.getValue('tranid', null, 'group') ||  null\n\t\t\t\t\t\t\t//@property {Array<Utils.ItemOptionsObject>} options\n\t\t\t\t\t\t,\toptions: Utils.getItemOptionsObject( line.getValue('options', null, 'group') )\n\t\t\t\t\t\t\t//@property {String} trandate\n\t\t\t\t\t\t,\ttrandate: line.getValue('trandate', null, 'max')\n\t\t\t\t\t};\n\t\t\t\t\t//@class ReorderItems.Model\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js\n\n// ReorderItems.ServiceController.js\n// ----------------\n// Service to manage reorder items requests\ndefine(\n\t'ReorderItems.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'ReorderItems.Model'\n\t,\t'SiteSettings.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tReorderItemsModel\n\t,\tSiteSettingsModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\tvar enabled = SiteSettingsModel.get().isSCISIntegrationEnabled;\n\n\t\t// @class ReorderItems.ServiceController Manage reorder items requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'ReorderItems.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\tenabled ? 'transactions.tranPurchases.1' : 'transactions.tranSalesOrd.1'\n\t\t\t\t\t\t,\t'transactions.tranFind.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to ReorderItems.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Array<ReorderItems.Model.Attributes>}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\t//Call the search function defined on ssp_libraries/models/ReorderItems.js and send the respose\n\t\t\t\treturn ReorderItemsModel.search(\n\t\t\t\t\tthis.request.getParameter('order_id')\n\t\t\t\t,\t{\n\t\t\t\t\t\tdate : {\n\t\t\t\t\t\t\tfrom: this.request.getParameter('from')\n\t\t\t\t\t\t,\tto: this.request.getParameter('to')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tpage: this.request.getParameter('page') || 1\n\t\t\t\t\t,\tsort : this.request.getParameter('sort')\n\t\t\t\t\t,\torder: this.request.getParameter('order')\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js\n\n// Payment.js\n// -------\n// Defines the model used by the payment.ss service\n// @module Payment\ndefine(\n\t'Payment.Model'\n,\t['SC.Model', 'Utils']\n,\tfunction (SCModel, Utils)\n{\n\t'use strict';\n\n\t// @class Payment.Model\n\t// Defines the model used by the payment.ss service\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\tname: 'Payment'\n\n\t\t// @method get\n\t\t// @param {String} id \n\t\t// @returns {Payment.Model.Attributes}\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar customer_payment = nlapiLoadRecord('customerpayment', id);\n\n\t\t\treturn this.createResult(customer_payment);\n\t\t}\n\n\t\t// @method setPaymentMethod\n\t\t// Binds customer payment method to customer payment object to return.\n\t\t// @returns undefined\n\t,\tsetPaymentMethod: function (customer_payment, result)\n\t\t{\n\t\t\tresult.paymentmethods = [];\n\t\t\t\n\t\t\treturn Utils.setPaymentMethodToResult(customer_payment, result);\n\t\t}\n\t\t\n\t\t// @method createResult\n\t\t// @param {Object} customer_payment NetSuite record\n\t\t// @returns {Payment.Model.Attributes}\n\t,\tcreateResult: function (customer_payment)\n\t\t{\n\t\t\t// @class Payment.Model.Attributes\n\t\t\tvar result = {};\n\n\t\t\t//@property {String} internalid\t\t\n\t\t\tresult.internalid = customer_payment.getId();\n\n\t\t\t//@property {String} type\n\t\t\tresult.type =  customer_payment.getRecordType();\n\t\t\t\n\t\t\t//@property {String} tranid\n\t\t\tresult.tranid = customer_payment.getFieldValue('tranid');\n\t\t\t\n\t\t\t//@property {String} autoapply\n\t\t\tresult.autoapply = customer_payment.getFieldValue('autoapply');\n\t\t\t\n\t\t\t//@property {String} trandate\n\t\t\tresult.trandate = customer_payment.getFieldValue('trandate');\n\t\t\t\n\t\t\t//@property {String} status\n\t\t\tresult.status = customer_payment.getFieldValue('status');\n\n\t\t\t//@property {Number} payment\n\t\t\tresult.payment = Utils.toCurrency(customer_payment.getFieldValue('payment'));\n\t\t\t\n\t\t\t//@property {String} payment_formatted\n\t\t\tresult.payment_formatted = Utils.formatCurrency(customer_payment.getFieldValue('payment'));\n\t\t\t\n\t\t\t//@property {String} lastmodifieddate\n\t\t\tresult.lastmodifieddate = customer_payment.getFieldValue('lastmodifieddate');\n\t\t\t\n\t\t\t//@property {Number} balance\n\t\t\tresult.balance = Utils.toCurrency(customer_payment.getFieldValue('balance'));\n\t\t\t\n\t\t\t//@property {Number} balance_formatted\n\t\t\tresult.balance_formatted = Utils.formatCurrency(customer_payment.getFieldValue('balance'));\n\n\t\t\t// @property {Array<Object>} paymentMethods\n\t\t\tthis.setPaymentMethod(customer_payment, result);\n\n\t\t\t// @property {Array<Object>} invoices\n\t\t\tthis.setInvoices(customer_payment, result);\n\n\t\t\t// @class Payment.Model\n\t\t\treturn result;\n\t\t}\n\n\t\t// @method setInvoices\n\t\t// Binds invoices to customer payment object to return\n\t\t// @param {Object} customer_payment NetSuite record\n\t\t// @param {Payment.Model.Attributes} result\n\t\t// @returns invoices {Object}\n\t,\tsetInvoices: function(customer_payment, result)\n\t\t{\n\t\t\tresult.invoices = [];\n\n\t\t\tfor (var i = 1; i <= customer_payment.getLineItemCount('apply') ; i++)\n\t\t\t{\n\t\t\t\tvar apply = customer_payment.getLineItemValue('apply', 'apply', i) === 'T';\n\n\t\t\t\tif (apply)\n\t\t\t\t{\n\t\t\t\t\tvar invoice = {\n\n\t\t\t\t\t\tinternalid: customer_payment.getLineItemValue('apply', 'internalid', i)\n\t\t\t\t\t,\ttype: customer_payment.getLineItemValue('apply', 'type', i)\n\t\t\t\t\t,\ttotal: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\ttotal_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'total', i))\n\t\t\t\t\t,\tapply: apply\n\t\t\t\t\t,\tapplydate: customer_payment.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t,\tcurrency: customer_payment.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t,\tdisc: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'disc', i))\n\t\t\t\t\t,\tdisc_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'disc', i))\n\t\t\t\t\t,\tamount: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t,\tdue: Utils.toCurrency(customer_payment.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\tdue_formatted: Utils.formatCurrency(customer_payment.getLineItemValue('apply', 'due', i))\n\t\t\t\t\t,\trefnum: customer_payment.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t\t};\n\n\t\t\t\t\tresult.invoices.push(invoice);\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t});\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js\n\n// Payment.ServiceController.js\n// ----------------\n// Service to manage payment requests\ndefine(\n\t'Payment.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Payment.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tPaymentModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Payment.ServiceController Manage payment requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Payment.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'transactions.tranCustPymt.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Payment.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Payment.Model.Attributes}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\treturn PaymentModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.Model.js\n\n/* global customer */\n\n// PrintStatement.Model.js\n// ----------\ndefine(\n\t'PrintStatement.Model'\n,\t['SC.Model']\n,\tfunction (SCModel)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\n\t\tname: 'PrintStatement'\n\n\t,\tgetUrl: function(data)\n\t\t{\t\t\t\n\t\t\tvar customerId = customer.getFieldValues(['internalid']).internalid\n\t\t\t,\toffset = new Date().getTimezoneOffset() * 60 * 1000\n\t\t\t,\tstatementDate = null\n\t\t\t,\tstartDate = null\n\t\t\t,\topenOnly = data.openOnly ? 'T' : 'F'\n\t\t\t,\tinCustomerLocale = data.inCustomerLocale ? 'T' : 'F'\n\t\t\t,\tconsolidatedStatement = data.consolidatedStatement ? 'T' : 'F'\n\t\t\t,\tstatementTimestamp = parseInt(data.statementDate,10)\n\t\t\t,\tstartDateParam = data.startDate\n\t\t\t,\tstartTimestamp = parseInt(startDateParam,10)\n\t\t\t,\temail = data.email\n\t\t\t,\tbaseUrl = email ? '/app/accounting/transactions/email.nl' : '/app/accounting/print/NLSPrintForm.nl'\n\t\t\t,\turl = baseUrl + '?submitted=T&printtype=statement&currencyprecision=2&formdisplayview=NONE&type=statement';\n\n\t\t\tif(isNaN(statementTimestamp) || (startDateParam && isNaN(startTimestamp))){\n\t\t\t\tthrow {\n\t\t\t\t\tstatus: 500\n\t\t\t\t,\tcode: 'ERR_INVALID_DATE_FORMAT'\n\t\t\t\t,\tmessage: 'Invalid date format'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tstatementDate = nlapiDateToString(new Date(statementTimestamp + offset));\n\t\t\tstartDate = startDateParam ? nlapiDateToString(new Date(startTimestamp + offset)) : null;\n\n\t\t\turl += '&customer=' + customerId;\n\t\t\turl += startDate ? ('&start_date=' + startDate) : '';\n\t\t\turl += '&statement_date=' +  statementDate;\n\t\t\turl += '&consolstatement=' + consolidatedStatement;\n\t\t\turl += '&openonly=' + openOnly;\n\t\t\turl += '&incustlocale=' + inCustomerLocale;\n\n\t\t\treturn url;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js\n\n// PrintStatement.ServiceController.js\n// ----------------\n// Service to manage print requests\ndefine(\n\t'PrintStatement.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'PrintStatement.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tPrintStatementModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class PrintStatement.ServiceController Manage print requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'PrintStatement.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t,\tpost : {\n\t\t\t\t\trequirePermissions: {\n\t\t\t\t\t\textraList: [\n\t\t\t\t\t\t\t'transactions.tranStatement.2'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method post The call to PrintStatement.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {PrintStatementModel.UrlObject}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\treturn {'url': PrintStatementModel.getUrl(this.data)};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js\n\n// @module ProductList\n// @class ProductListItem\n// Handles creating, fetching and updating Product List Items @extends SCModel\ndefine(\n\t'ProductList.Item.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'Utils'\n\t,\t'ProductList.Model'\n\t,\t'ProductList.Item.Search'\n\t,\t'Configuration'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\t\tSCModel\n\t\t,\tModelsInit\n\t\t,\tApplication\n\t\t,\tUtils\n\t\t,\tProductList\n\t\t,\tSearch\n\t\t,\tConfiguration\n\n\t\t,\t_)\n{\n\t'use strict';\n\treturn SCModel.extend({\n\n\t\tname: 'ProductList.Item'\n\n\t\t// @property {Configuration.ProductLists} configuration General settings\n\t,\tconfiguration: Configuration.product_lists\n\n\t\t// @method verifySession @throws {unauthorizedError}it if the user has not the appropriate session for accessing product lists.\n\t,\tverifySession: function()\n\t\t{\n\t\t\tif (this.configuration.loginRequired && !ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\n\t\t// Returns a product list item based on a given id\n\t,\tget: function (user, id)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar filters = [new nlobjSearchFilter('internalid', null, 'is', id)\n\t\t\t\t\t,\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')\n\t\t\t\t\t,\tnew nlobjSearchFilter('custrecord_ns_pl_pl_owner', 'custrecord_ns_pl_pli_productlist', 'is', user)]\n\t\t\t,\tsort_column = 'custrecord_ns_pl_pli_item'\n\t\t\t,\tsort_direction = 'ASC'\n\t\t\t,\tproductlist_items = Search.searchHelper(filters, sort_column, sort_direction, true);\n\n\t\t\tif (productlist_items.length >= 1)\n\t\t\t{\n\t\t\t\treturn productlist_items[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\t\t}\n\n\t,\tdelete: function (user, id)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar product_list_item = nlapiLoadRecord('customrecord_ns_pl_productlistitem', id)\n\t\t\t,\tparent_product_list = ProductList.get(user, product_list_item.getFieldValue('custrecord_ns_pl_pli_productlist'));\n\n\t\t\tif (parseInt(parent_product_list.owner.id, 10) !== user)\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tproduct_list_item.setFieldValue('isinactive', 'T');\n\n\t\t\treturn nlapiSubmitRecord(product_list_item);\n\t\t}\n\n\t\t// Sanitize html input\n\t,\tsanitize: function (text)\n\t\t{\n\t\t\treturn text ? text.replace(/<br>/g, '\\n').replace(/</g, '&lt;').replace(/\\>/g, '&gt;') : '';\n\t\t}\n\n\t\t// Creates a new Product List Item record\n\t,\tcreate: function (user, data)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tif (!(data.productList && data.productList.id))\n\t\t\t{\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\n\t\t\tvar parent_product_list = ProductList.get(user, data.productList.id);\n\n\t\t\tif (parseInt(parent_product_list.owner.id, 10) !== user)\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tvar productListItem = nlapiCreateRecord('customrecord_ns_pl_productlistitem');\n\n\t\t\tdata.description && productListItem.setFieldValue('custrecord_ns_pl_pli_description', this.sanitize(data.description));\n\n\t\t\tif (data.options)\n\t\t\t{\n\t\t\t\tdata.options && productListItem.setFieldValue('custrecord_ns_pl_pli_options', JSON.stringify(data.options || {}));\n\t\t\t}\n\n\t\t\tdata.quantity && productListItem.setFieldValue('custrecord_ns_pl_pli_quantity', data.quantity);\n\t\t\tdata.item && data.item.internalid && productListItem.setFieldValue('custrecord_ns_pl_pli_item', data.item.internalid);\n\t\t\tdata.priority && data.priority.id && productListItem.setFieldValue('custrecord_ns_pl_pli_priority', data.priority.id);\n\t\t\tproductListItem.setFieldValue('custrecord_ns_pl_pli_productlist', data.productList.id);\n\n\t\t\tdata.internalid = nlapiSubmitRecord(productListItem);\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Updates a given Product List Item given its id\n\t,\tupdate: function (user, id, data)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar product_list_item = nlapiLoadRecord('customrecord_ns_pl_productlistitem', id)\n\t\t\t,\tparent_product_list = ProductList.get(user, product_list_item.getFieldValue('custrecord_ns_pl_pli_productlist'));\n\n\t\t\tif (parseInt(parent_product_list.owner.id, 10) !== user)\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tproduct_list_item.setFieldValue('custrecord_ns_pl_pli_description', this.sanitize(data.description));\n\t\t\tdata.options && product_list_item.setFieldValue('custrecord_ns_pl_pli_options', JSON.stringify(data.options || {}));\n\t\t\tdata.quantity && product_list_item.setFieldValue('custrecord_ns_pl_pli_quantity', data.quantity);\n\n\t\t\tdata.item && data.item.id && product_list_item.setFieldValue('custrecord_ns_pl_pli_item', data.item.id);\n\n\t\t\tif (data.priority)\n\t\t\t{\n\t\t\t\tif (_.isObject(data.priority))\n\t\t\t\t{\n\t\t\t\t\tdata.priority.id && product_list_item.setFieldValue('custrecord_ns_pl_pli_priority', data.priority.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tproduct_list_item.setFieldValue('custrecord_ns_pl_pli_priority', data.priority);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata.productList && data.productList.id && product_list_item.setFieldValue('custrecord_ns_pl_pli_productlist', data.productList.id);\n\n\t\t\tnlapiSubmitRecord(product_list_item);\n\t\t}\n\n\t\t// Retrieves all Product List Items related to the given Product List Id\n\t,\tsearch: function (user, product_list_id, include_store_item, sort_and_paging_data)\n\t\t{\n\t\t\tthis.verifySession();\n\t\t\treturn Search.search(user, product_list_id, include_store_item, sort_and_paging_data);\n\t\t}\n\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Search.js\n\ndefine('ProductList.Item.Search'\n,\t[\n\t\t'Application'\n\t,\t'Models.Init'\n\t,\t'Utils'\n\t,\t'Configuration'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tApplication\n\t,\tModelsInit\n\t,\tUtils\n\t,\tConfiguration\n\n\t,\t_)\n{\n\t'use strict';\n\n\tvar StoreItem;\n\n\ttry {\n\t\tStoreItem = require('StoreItem.Model');\n\t}\n\tcatch(e)\n\t{\n\t}\n\n\treturn {\n\n\t\tconfiguration: Configuration.product_lists\n\n\t,\tverifySession: function()\n\t\t{\n\t\t\tif (this.configuration.loginRequired && !ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\n\t,\tgetProductName: function (item)\n\t\t{\n\t\t\tif (!item)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// If its a matrix child it will use the name of the parent\n\t\t\tif (item && item.matrix_parent && item.matrix_parent.internalid)\n\t\t\t{\n\t\t\t\treturn item.matrix_parent.storedisplayname2 || item.matrix_parent.displayname;\n\t\t\t}\n\n\t\t\t// Other ways return its own name\n\t\t\treturn item.storedisplayname2 || item.displayname;\n\t\t}\n\n\t\t// Retrieves all Product List Items related to the given Product List Id\n\t,\tsearch: function (user, product_list_id, include_store_item, sort_and_paging_data)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tif (!product_list_id)\n\t\t\t{\n\t\t\t\treturn []; //it may happens when target list is a template and don't have a record yet.\n\t\t\t}\n\n\t\t\tvar filters = [\n\t\t\t\tnew nlobjSearchFilter('custrecord_ns_pl_pli_productlist', null, 'is', product_list_id)\n\t\t\t,\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')\n\t\t\t,\tnew nlobjSearchFilter('custrecord_ns_pl_pl_owner', 'custrecord_ns_pl_pli_productlist', 'is', user)]\n\t\t\t,\tsort_column = sort_and_paging_data.sort\n\t\t\t,\tsort_direction = sort_and_paging_data.order;\n\n\t\t\tif (!sort_column)\n\t\t\t{\n\t\t\t\tsort_column = 'created';\n\t\t\t}\n\n\t\t\tif (sort_column === 'priority')\n\t\t\t{\n\t\t\t\tsort_column = 'priority_value';\n\t\t\t}\n\n\t\t\tif (!sort_direction)\n\t\t\t{\n\t\t\t\tsort_direction = '-1';\n\t\t\t}\n\n\t\t\tvar search_lines = this.searchHelper(filters, sort_column, sort_direction === '-1' ? 'DESC' : 'ASC', include_store_item);\n\n\n\t\t\tif (include_store_item && sort_column === 'price')\n\t\t\t{\n\t\t\t\t//-1 for descending, 1 for ascending\n\t\t\t\tsearch_lines = this.sortLinesByPrice(search_lines, sort_direction === '-1' ? -1 : 1);\n\t\t\t}\n\n\t\t\treturn search_lines;\n\t\t}\n\n\t\t//UX expect the list to be sorted by price considering discounts and bulk pricing\n\t\t//this price is not present on data-store, so in memory rules and sorting are required.\n\t,\tsortLinesByPrice: function (lines, sort_direction)\n\t\t{\n\t\t\treturn _.sortBy(lines, function (line)\n\t\t\t{\n\t\t\t\t//defaults to price level 1\n\t\t\t\tvar price_detail = line.item.onlinecustomerprice_detail || {}\n\t\t\t\t,\tprice = price_detail.onlinecustomerprice || line.item.pricelevel1 || 0\n\t\t\t\t,\tquantity = line.quantity;\n\n\t\t\t\tif (quantity && price_detail.priceschedule && price_detail.priceschedule.length)\n\t\t\t\t{\n\t\t\t\t\tvar price_schedule = _.find(price_detail.priceschedule, function(price_schedule)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn\t(price_schedule.minimumquantity <= quantity && quantity < price_schedule.maximumquantity) ||\n\t\t\t\t\t\t\t\t(price_schedule.minimumquantity <= quantity && !price_schedule.maximumquantity);\n\t\t\t\t\t});\n\n\t\t\t\t\tprice = price_schedule.price;\n\t\t\t\t}\n\n\t\t\t\treturn price * sort_direction;\n\t\t\t});\n\t\t}\n\n\t,\tsearchHelper: function (filters, sort_column, sort_direction, include_store_item)\n\t\t{\n\t\t\t// Selects the columns\n\t\t\tvar productListItemColumns = {\n\t\t\t\tinternalid: new nlobjSearchColumn('internalid')\n\t\t\t,\tname:  new nlobjSearchColumn('formulatext', 'custrecord_ns_pl_pli_item').setFormula('case when LENGTH({custrecord_ns_pl_pli_item.displayname}) > 0 then {custrecord_ns_pl_pli_item.displayname} else {custrecord_ns_pl_pli_item.itemid} end')\n\t\t\t,\tsku:  new nlobjSearchColumn('formulatext', 'custrecord_ns_pl_pli_item').setFormula('{custrecord_ns_pl_pli_item.itemid}')\n\t\t\t,\tdescription: new nlobjSearchColumn('custrecord_ns_pl_pli_description')\n\t\t\t,\toptions: new nlobjSearchColumn('custrecord_ns_pl_pli_options')\n\t\t\t,\tquantity: new nlobjSearchColumn('custrecord_ns_pl_pli_quantity')\n\t\t\t,\tprice: new nlobjSearchColumn('price', 'custrecord_ns_pl_pli_item')\n\t\t\t,\tcreated: new nlobjSearchColumn('created')\n\t\t\t,\titem_id: new nlobjSearchColumn('custrecord_ns_pl_pli_item')\n\t\t\t,\titem_type: new nlobjSearchColumn('type', 'custrecord_ns_pl_pli_item')\n\t\t\t,\titem_matrix_parent: new nlobjSearchColumn('parent', 'custrecord_ns_pl_pli_item')\n\t\t\t,\tpriority: new nlobjSearchColumn('custrecord_ns_pl_pli_priority')\n\t\t\t,\tpriority_value: new nlobjSearchColumn('custrecord_ns_pl_plip_value', 'custrecord_ns_pl_pli_priority')\n\t\t\t,\tlastmodified: new nlobjSearchColumn('lastmodified')\n\t\t\t};\n\n\t\t\tproductListItemColumns[sort_column] && productListItemColumns[sort_column].setSort(sort_direction === 'DESC');\n\n\t\t\t// Makes the request and format the response\n\t\t\tvar records = Application.getAllSearchResults('customrecord_ns_pl_productlistitem', filters, _.values(productListItemColumns))\n\t\t\t,\tproductlist_items = []\n\t\t\t,\tself = this;\n\n\t\t\t_(records).each(function (productListItemSearchRecord)\n\t\t\t{\n\t\t\t\tvar itemInternalId = productListItemSearchRecord.getValue('custrecord_ns_pl_pli_item')\n\t\t\t\t,\titemId = productListItemSearchRecord.getText('custrecord_ns_pl_pli_item')\n\t\t\t\t,\titemMatrixParent = productListItemSearchRecord.getValue('parent', 'custrecord_ns_pl_pli_item')\n\t\t\t\t,\tcreated_date = nlapiStringToDate(productListItemSearchRecord.getValue('created'), window.dateformat)\n\t\t\t\t,\tcreated_date_str = nlapiDateToString(created_date, window.dateformat)\n\t\t\t\t,\titemType = productListItemSearchRecord.getValue('type', 'custrecord_ns_pl_pli_item')\n\t\t\t\t,\tproductListItem = {\n\t\t\t\t\t\tinternalid: productListItemSearchRecord.getId()\n\t\t\t\t\t,\tdescription: productListItemSearchRecord.getValue('custrecord_ns_pl_pli_description')\n\t\t\t\t\t,\toptions: JSON.parse(productListItemSearchRecord.getValue('custrecord_ns_pl_pli_options') || '{}')\n\t\t\t\t\t,\tquantity: parseInt(productListItemSearchRecord.getValue('custrecord_ns_pl_pli_quantity'), 10)\n\t\t\t\t\t,\tcreated: productListItemSearchRecord.getValue('created')\n\t\t\t\t\t,\tcreateddate: created_date_str\n\t\t\t\t\t,\tlastmodified: productListItemSearchRecord.getValue('lastmodified')\n\t\t\t\t\t// we temporary store the item reference, after this loop we use StoreItem.preloadItems instead doing multiple StoreItem.get()\n\t\t\t\t\t,\tstore_item_reference: {\n\t\t\t\t\t\t\tid: itemInternalId\n\t\t\t\t\t\t,\tinternalid: itemInternalId\n\t\t\t\t\t\t,\ttype: itemType\n\t\t\t\t\t\t,\tmatrix_parent: itemMatrixParent\n\t\t\t\t\t\t,\titemid: itemId\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tpriority: {\n\t\t\t\t\t\t\tid: productListItemSearchRecord.getValue('custrecord_ns_pl_pli_priority')\n\t\t\t\t\t\t,\tname: productListItemSearchRecord.getText('custrecord_ns_pl_pli_priority')\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\tproductlist_items.push(productListItem);\n\t\t\t});\n\n\t\t\tvar store_item_references = _(productlist_items).pluck('store_item_reference')\n\t\t\t,\tresults = [];\n\n\t\t\t// preload all the store items at once for performance\n\t\t\tStoreItem && StoreItem.preloadItems(store_item_references);\n\n\t\t\t_(productlist_items).each(function (productlist_item)\n\t\t\t{\n\t\t\t\tvar store_item_reference = productlist_item.store_item_reference\n\t\t\t\t// get the item - fast because it was preloaded before. Can be null!\n\t\t\t\t,\tstore_item = StoreItem ? StoreItem.get(store_item_reference.id, store_item_reference.type) : store_item_reference;\n\n\t\t\t\tdelete productlist_item.store_item_reference;\n\n\t\t\t\tif (!store_item)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (include_store_item || !StoreItem)\n\t\t\t\t{\n\t\t\t\t\tproductlist_item.item = store_item;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// only include basic store item data - fix the name to support matrix item names.\n\t\t\t\t\tproductlist_item.item = {\n\t\t\t\t\t\tinternalid: store_item_reference.id\n\t\t\t\t\t,\tdisplayname: self.getProductName(store_item)\n\t\t\t\t\t,\tispurchasable: store_item.ispurchasable\n\t\t\t\t\t,\titemoptions_detail: store_item.itemoptions_detail\n\t\t\t\t\t,\tminimumquantity: store_item.minimumquantity\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!include_store_item && store_item && store_item.matrix_parent)\n\t\t\t\t{\n\t\t\t\t\tproductlist_item.item.matrix_parent = store_item.matrix_parent;\n\t\t\t\t}\n\n\t\t\t\tresults.push(productlist_item);\n\t\t\t});\n\n\t\t\treturn results;\n\t\t}\n\t};\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js\n\n// ProductList.Item.ServiceController.js\n// ----------------\n// Service to manage product list items requests\ndefine(\n\t'ProductList.Item.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'ProductList.Item.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tApplication\n\t,\tProductListItemModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class ProductList.Item.ServiceController Manage product list items requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'ProductList.Item.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method getUser\n\t\t\t// @return {Integer} User id\n\t\t,\tgetUser: function()\n\t\t\t{\n\t\t\t\tvar role = ModelsInit.context.getRoleId()\n\t\t\t\t,\tuser = nlapiGetUser();\n\n\t\t\t\t// This is to ensure customers can't query other customer's product lists.\n\t\t\t\tif (role !== 'shopper' && role !== 'customer_center')\n\t\t\t\t{\n\t\t\t\t\tuser = parseInt(this.request.getParameter('user') || (this.data.productList && this.data.productList.owner) || user, 10);\n\t\t\t\t}\n\t\t\t\treturn user;\n\t\t\t}\n\n\t\t\t// @method getId\n\t\t\t// @return {String} internalid\n\t\t,\tgetId: function()\n\t\t\t{\n\t\t\t\treturn this.request.getParameter('internalid') ? this.request.getParameter('internalid') : this.data.internalid\n\t\t\t}\n\n\t\t\t// @method get The call to ProductList.Item.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {ProductList.Item.Model.Get.Result || ProductList.Item.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar product_list_id = this.request.getParameter('productlistid') ? this.request.getParameter('productlistid') : this.data.productlistid\n\t\t\t\t,\tid = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\n\t\t\t\treturn id ? ProductListItemModel.get(user, id) :\n\t\t\t\t\t\t\tProductListItemModel.search(user, product_list_id, true,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsort: this.request.getParameter('sort') ? this.request.getParameter('sort') : this.data.sort // Column name\n\t\t\t\t\t\t\t\t,\torder: this.request.getParameter('order') ? this.request.getParameter('order') : this.data.order // Sort direction\n\t\t\t\t\t\t\t\t,\tpage: this.request.getParameter('page') || -1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t}\n\n\t\t\t// @method post The call to ProductList.Item.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar\tid = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\t\t\t\t//Do not return this value, just send the content\n\t\t\t\tthis.sendContent(ProductListItemModel.create(user, this.data), {'status': 201});\n\t\t\t}\n\n\t\t\t// @method put The call to ProductList.Item.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {ProductList.Item.Model.Get.Result}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar\tid = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\t\t\t\tProductListItemModel.update(user, id, this.data);\n\t\t\t\treturn ProductListItemModel.get(user, id);\n\t\t\t}\n\n\t\t\t// @method delete The call to ProductList.Item.Service.ss with http method 'delete' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tdelete: function()\n\t\t\t{\n\t\t\t\tvar\tid = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\t\t\t\tProductListItemModel.delete(user, id);\n\n\t\t\t\treturn {'status': 'ok'};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Model.js\n\n// ProductList.Model.js\n// ----------------\n// Handles creating, fetching and updating Product Lists\ndefine(\n\t'ProductList.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'Models.Init'\n\t,\t'ProductList.Item.Search'\n\t,\t'Utils'\n\n\t,\t'underscore']\n,\tfunction(\n\t\tSCModel\n\t,\tApplication\n\t,\tModelsInit\n\t,\tProductListItemSearch\n\t,\tUtils\n\n\t,\t_)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\t\tname: 'ProductList'\n\t\t// ## General settings\n\t,\tconfiguration: SC.Configuration.product_lists\n\t,\tlater_type_id: '2'\n\t,\tquote_type_id: '4'\n\n\t,\tverifySession: function()\n\t\t{\n\t\t\tif (this.configuration.loginRequired && !ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\n\t,\tgetColumns: function ()\n\t\t{\n\t\t\treturn {\n\t\t\t\tinternalid: new nlobjSearchColumn('internalid')\n\t\t\t,\ttemplateid: new nlobjSearchColumn('custrecord_ns_pl_pl_templateid')\n\t\t\t,\tname: new nlobjSearchColumn('name')\n\t\t\t,\tdescription: new nlobjSearchColumn('custrecord_ns_pl_pl_description')\n\t\t\t,\towner: new nlobjSearchColumn('custrecord_ns_pl_pl_owner')\n\t\t\t,\tscope: new nlobjSearchColumn('custrecord_ns_pl_pl_scope')\n\t\t\t,\ttype: new nlobjSearchColumn('custrecord_ns_pl_pl_type')\n\t\t\t,\tcreated: new nlobjSearchColumn('created')\n\t\t\t,\tlastmodified: new nlobjSearchColumn('lastmodified')\n\t\t\t};\n\t\t}\n\n\t\t// Returns a product list based on a given userId and id\n\t,\tget: function (user, id)\n\t\t{\n\t\t\t// Verify session if and only if we are in My Account...\n\t\t\tif (request.getURL().indexOf('https') === 0)\n\t\t\t{\n\t\t\t\tthis.verifySession();\n\t\t\t}\n\n\t\t\tvar filters = [new nlobjSearchFilter('internalid', null, 'is', id)\n\t\t\t\t,\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')\n\t\t\t\t,\tnew nlobjSearchFilter('custrecord_ns_pl_pl_owner', null, 'is', user)\n\t\t\t\t]\n\t\t\t,\tproduct_lists = this.searchHelper(filters, this.getColumns(), true);\n\n\t\t\tif (product_lists.length >= 1)\n\t\t\t{\n\t\t\t\treturn product_lists[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\t\t}\n\n\t\t// Returns the user's saved for later product list\n\t,\tgetSavedForLaterProductList: function (user)\n\t\t{\n\t\t\treturn this.getSpecialTypeProductList(user, this.later_type_id);\n\t\t}\n\n\t,\tgetRequestAQuoteProductList: function (user)\n\t\t{\n\t\t\treturn this.getSpecialTypeProductList(user, this.quote_type_id);\n\t\t}\n\n\t,\tgetSpecialTypeProductList: function (user, type_id)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar filters = [new nlobjSearchFilter('custrecord_ns_pl_pl_type', null, 'is', type_id)\n\t\t\t\t,\tnew nlobjSearchFilter('custrecord_ns_pl_pl_owner', null, 'is', user)\n\t\t\t\t,\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')]\n\t\t\t,\tproduct_lists = this.searchHelper(filters, this.getColumns(), true);\n\n\t\t\tif (product_lists.length >= 1)\n\t\t\t{\n\t\t\t\treturn product_lists[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar self = this\n\t\t\t\t,\tsfl_template = _(_(this.configuration.list_templates).filter(function (pl)\n\t\t\t\t{\n\t\t\t\t\treturn pl.type && pl.type.id && pl.type.id === type_id;\n\t\t\t\t})).first();\n\n\t\t\t\tif (sfl_template)\n\t\t\t\t{\n\t\t\t\t\tif (!sfl_template.scope)\n\t\t\t\t\t{\n\t\t\t\t\t\tsfl_template.scope = { id: type_id, name: 'private' };\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!sfl_template.description)\n\t\t\t\t\t{\n\t\t\t\t\t\tsfl_template.description = '';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sfl_template;\n\t\t\t\t}\n\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\t\t}\n\n\t\t// Sanitize html input\n\t,\tsanitize: function (text)\n\t\t{\n\t\t\treturn text ? text.replace(/<br>/g, '\\n').replace(/</g, '&lt;').replace(/\\>/g, '&gt;') : '';\n\t\t}\n\n\t,\tsearchHelper: function(filters, columns, include_store_items, order, template_ids)\n\t\t{\n\t\t\t// Sets the sort order\n\t\t\tvar order_tokens = order && order.split(':') || []\n\t\t\t,\tsort_column = order_tokens[0] || 'name'\n\t\t\t,\tsort_direction = order_tokens[1] || 'ASC'\n\t\t\t,\tproductLists = [];\n\n\t\t\tcolumns[sort_column] && columns[sort_column].setSort(sort_direction === 'DESC');\n\n\t\t\t// Makes the request and format the response\n\t\t\tvar records = Application.getAllSearchResults('customrecord_ns_pl_productlist', filters, _.values(columns));\n\n\t\t\t_.each(records, function (productListSearchRecord)\n\t\t\t{\n\n\t\t\t\tvar product_list_type_text = productListSearchRecord.getText('custrecord_ns_pl_pl_type')\n\t\t\t\t,\tlast_modified_date = nlapiStringToDate(productListSearchRecord.getValue('lastmodified'), window.dateformat)\n\t\t\t\t,\tlast_modified_date_str = nlapiDateToString(last_modified_date, window.dateformat)\n\t\t\t\t,\tproductList = {\n\t\t\t\t\t\tinternalid: productListSearchRecord.getId()\n\t\t\t\t\t,\ttemplateid: productListSearchRecord.getValue('custrecord_ns_pl_pl_templateid')\n\t\t\t\t\t,\tname: productListSearchRecord.getValue('name')\n\t\t\t\t\t,\tdescription: productListSearchRecord.getValue('custrecord_ns_pl_pl_description') ? productListSearchRecord.getValue('custrecord_ns_pl_pl_description').replace(/\\n/g, '<br>') : ''\n\t\t\t\t\t,\towner: {\n\t\t\t\t\t\t\tid: productListSearchRecord.getValue('custrecord_ns_pl_pl_owner')\n\t\t\t\t\t\t,\tname: productListSearchRecord.getText('custrecord_ns_pl_pl_owner')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tscope: {\n\t\t\t\t\t\t\tid: productListSearchRecord.getValue('custrecord_ns_pl_pl_scope')\n\t\t\t\t\t\t,\tname: productListSearchRecord.getText('custrecord_ns_pl_pl_scope')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\ttype: {\n\t\t\t\t\t\t\tid: productListSearchRecord.getValue('custrecord_ns_pl_pl_type')\n\t\t\t\t\t\t,\tname: product_list_type_text\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tcreated: productListSearchRecord.getValue('created')\n\t\t\t\t\t,\tlastmodified: productListSearchRecord.getValue('lastmodified')\n\t\t\t\t\t,\tlastmodifieddate: last_modified_date_str\n\t\t\t\t\t,\titems: ProductListItemSearch.search(productListSearchRecord.getValue('custrecord_ns_pl_pl_owner'), productListSearchRecord.getId(), include_store_items, {\n\t\t\t\t\t\t\t\tsort: 'sku'\n\t\t\t\t\t\t\t,\torder: '1'\n\t\t\t\t\t\t\t,\tpage: -1\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\n\t\t\t\tif (template_ids && productList.templateid)\n\t\t\t\t{\n\t\t\t\t\ttemplate_ids.push(productList.templateid);\n\t\t\t\t}\n\n\t\t\t\tproductLists.push(productList);\n\t\t\t});\n\n\t\t\treturn productLists;\n\t\t}\n\n\t\t// Retrieves all Product Lists for a given user\n\t,\tsearch: function (user, order)\n\t\t{\n\t\t\t// Verify session if and only if we are in My Account...\n\t\t\tif (request.getURL().indexOf('https') === 0)\n\t\t\t{\n\t\t\t\tthis.verifySession();\n\t\t\t}\n\n\t\t\tvar filters = [new nlobjSearchFilter('isinactive', null, 'is', 'F')\n\t\t\t\t,\tnew nlobjSearchFilter('custrecord_ns_pl_pl_owner', null, 'is', user)]\n\t\t\t,\ttemplate_ids = []\n\t\t\t,\tproduct_lists = this.searchHelper(filters, this.getColumns(), false, order, template_ids)\n\t\t\t,\tself = this;\n\n\t\t\t// Add possible missing predefined list templates\n\t\t\t_(this.configuration.list_templates).each(function(template) {\n\t\t\t\tif (!_(template_ids).contains(template.templateid))\n\t\t\t\t{\n\t\t\t\t\tif (!template.templateid || !template.name)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('Error: Wrong predefined Product List. Please check backend configuration.');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!template.scope)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemplate.scope = { id: '2', name: 'private' };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!template.description)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemplate.description = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!template.type)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemplate.type = { id: '3', name: 'predefined' };\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tproduct_lists.push(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.isSingleList())\n\t\t\t{\n\t\t\t\treturn _.filter(product_lists, function(pl)\n\t\t\t\t{\n\t\t\t\t\t// Only return predefined lists.\n\t\t\t\t\treturn pl.type.name === 'predefined';\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn product_lists.filter(function (pl)\n\t\t\t{\n\t\t\t\treturn pl.type.id !== self.later_type_id && pl.type.id !== self.quote_type_id;\n\t\t\t});\n\t\t}\n\n\t,\tisSingleList: function ()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\treturn !this.configuration.additionEnabled && this.configuration.list_templates && _.filter(this.configuration.list_templates, function (pl) { return !pl.type || (pl.type.id !== self.later_type_id && pl.type.id !== self.quote_type_id); }).length === 1;\n\t\t}\n\n\t\t// Creates a new Product List record\n\t,\tcreate: function (user, data)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar productList = nlapiCreateRecord('customrecord_ns_pl_productlist');\n\n\t\t\tdata.templateid && productList.setFieldValue('custrecord_ns_pl_pl_templateid', data.templateid);\n\t\t\tdata.scope && data.scope.id && productList.setFieldValue('custrecord_ns_pl_pl_scope', data.scope.id);\n\t\t\tdata.type && data.type.id && productList.setFieldValue('custrecord_ns_pl_pl_type', data.type.id);\n\t\t\tdata.name && productList.setFieldValue('name', this.sanitize(data.name));\n\t\t\tdata.description && productList.setFieldValue('custrecord_ns_pl_pl_description', this.sanitize(data.description));\n\n\t\t\tproductList.setFieldValue('custrecord_ns_pl_pl_owner', user);\n\n\t\t\treturn nlapiSubmitRecord(productList);\n\t\t}\n\n\t\t// Updates a given Product List given its id\n\t,\tupdate: function (user, id, data)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar product_list = nlapiLoadRecord('customrecord_ns_pl_productlist', id);\n\n\t\t\tif (parseInt(product_list.getFieldValue('custrecord_ns_pl_pl_owner'), 10) !== user)\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tdata.templateid && product_list.setFieldValue('custrecord_ns_pl_pl_templateid', data.templateid);\n\t\t\tdata.scope && data.scope.id && product_list.setFieldValue('custrecord_ns_pl_pl_scope', data.scope.id);\n\t\t\tdata.type && data.type.id && product_list.setFieldValue('custrecord_ns_pl_pl_type', data.type.id);\n\t\t\tdata.name && product_list.setFieldValue('name', this.sanitize(data.name));\n\t\t\tproduct_list.setFieldValue('custrecord_ns_pl_pl_description', data.description ? this.sanitize(data.description) : '');\n\n\t\t\tnlapiSubmitRecord(product_list);\n\t\t}\n\n\t\t// Deletes a Product List given its id\n\t,\tdelete: function(user, id)\n\t\t{\n\t\t\tthis.verifySession();\n\n\t\t\tvar product_list = nlapiLoadRecord('customrecord_ns_pl_productlist', id);\n\n\t\t\tif (parseInt(product_list.getFieldValue('custrecord_ns_pl_pl_owner'), 10) !== user)\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tproduct_list.setFieldValue('isinactive', 'T');\n\n\t\t\tvar internalid = nlapiSubmitRecord(product_list);\n\n\t\t\treturn internalid;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js\n\n// ProductList.ServiceController.js\n// ----------------\n// Service to manage credit cards requests\ndefine(\n\t'ProductList.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'ProductList.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tApplication\n\t,\tProductListModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class ProductList.ServiceController  Manage product list request\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'ProductList.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method getUser\n\t\t\t// @return {Integer} user id\n\t\t,\tgetUser: function()\n\t\t\t{\n\t\t\t\tvar user = ModelsInit.session.isLoggedIn2() ? nlapiGetUser() : 0\n\t\t\t\t,\trole = ModelsInit.context.getRoleId();\n\n\t\t\t\t// This is to ensure customers can't query other customer's product lists.\n\t\t\t\tif (role !== 'shopper' && role !== 'customer_center')\n\t\t\t\t{\n\t\t\t\t\tuser = parseInt(this.request.getParameter('user') || (this.data.owner && this.data.owner.id) || user, 10);\n\t\t\t\t}\n\t\t\t\treturn user;\n\t\t\t}\n\n\t\t\t// @method getId\n\t\t\t// @return {String} internalid\n\t\t,\tgetId: function()\n\t\t\t{\n\t\t\t\treturn this.request.getParameter('internalid') || this.data.internalid;\n\t\t\t}\n\n\t\t\t// @method get The call to ProductList.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {ProductList.Model.Get.Result || ProductList.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\n\t\t\t\tvar id = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\n\t\t\t\tif (id)\n\t\t\t\t{\n\t\t\t\t\tif (id === 'later')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ProductListModel.getSavedForLaterProductList(user);\n\t\t\t\t\t}\n\t\t\t\t\telse if (id === 'quote')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ProductListModel.getRequestAQuoteProductList(user);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ProductListModel.get(user, id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn ProductListModel.search(user, 'name');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method post The call to ProductList.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar id = this.getId()\n\t\t\t\t,\tuser = this.getUser()\n\t\t\t\t,\tinternalid = ProductListModel.create(user, this.data);\n\t\t\t\t// Do not return here as we need to output the status 201\n\t\t\t\tthis.sendContent(ProductListModel.get(user, internalid), {'status': 201});\n\t\t\t}\n\n\t\t\t// @method put The call to ProductList.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {ProductList.Model.Get.Result}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\t\t\t\tProductListModel.update(user, id, this.data);\n\t\t\t\treturn ProductListModel.get(user, id);\n\t\t\t}\n\n\t\t\t// @method delete The call to ProductList.Service.ss with http method 'delete' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tdelete: function()\n\t\t\t{\n\t\t\t\tvar id = this.getId()\n\t\t\t\t,\tuser = this.getUser();\n\t\t\t\tProductListModel.delete(user, id);\n\t\t\t\treturn {'status': 'ok'};\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.Model.js\n\n// ProductReviews.Model.js\n// ----------------\n// Handles creating, fetching and updating ProductReviews\ndefine(\n\t'ProductReviews.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'Utils'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\t,\tApplication\n\t,\tUtils\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\t\tname: 'ProductReview'\n\t\t// ## General settings\n\t\t// maxFlagsCount is the number at which a review is marked as flagged by users\n\t,\tmaxFlagsCount: SC.Configuration.product_reviews.maxFlagsCount\n\t,\tloginRequired: SC.Configuration.product_reviews.loginRequired\n\t\t// the id of the flaggedStatus. If maxFlagsCount is reached, this will be its new status.\n\t,\tflaggedStatus: SC.Configuration.product_reviews.flaggedStatus\n\t\t// id of the approvedStatus\n\t,\tapprovedStatus: SC.Configuration.product_reviews.approvedStatus\n\t\t// id of pendingApprovalStatus\n\t,\tpendingApprovalStatus: SC.Configuration.product_reviews.pendingApprovalStatus\n\t,\tresultsPerPage: SC.Configuration.product_reviews.resultsPerPage\n\n\t\t// Returns a review based on the id\n\t,\tget: function (id)\n\t\t{\n\t\t\tvar review = nlapiLoadRecord('customrecord_ns_pr_review', id);\n\n\t\t\tif (review)\n\t\t\t{\n\t\t\t\t/// Loads Review main information\n\t\t\t\tvar result = {\n\t\t\t\t\t\tinternalid: review.getId()\n\t\t\t\t\t,\tstatus: review.getFieldValue('custrecord_ns_prr_status')\n\t\t\t\t\t,\tisinactive: review.getFieldValue('isinactive') === 'T'\n\t\t\t\t\t,\ttitle: review.getFieldValue('name') || ''\n\t\t\t\t\t\t// we parse the line breaks and get it ready for html\n\t\t\t\t\t,\ttext: review.getFieldValue('custrecord_ns_prr_text') ? review.getFieldValue('custrecord_ns_prr_text').replace(/\\n/g, '<br>') : ''\n\t\t\t\t\t,\titemid: review.getFieldValue('custrecord_ns_prr_item_id')\n\t\t\t\t\t,\trating: review.getFieldValue('custrecord_ns_prr_rating')\n\t\t\t\t\t,\tuseful_count: review.getFieldValue('custrecord_ns_prr_useful_count')\n\t\t\t\t\t,\tnot_useful_count: review.getFieldValue('custrecord_ns_prr_not_useful_count')\n\t\t\t\t\t,\tfalgs_count: review.getFieldValue('custrecord_ns_prr_falgs_count')\n\t\t\t\t\t,\tisVerified: review.getFieldValue('custrecord_ns_prr_verified') === 'T'\n\t\t\t\t\t,\tcreated_on: review.getFieldValue('custrecord_ns_prr_creation_date') || review.getFieldValue('created')\n\t\t\t\t\t,\twriter: {\n\t\t\t\t\t\t\tid: review.getFieldValue('custrecord_ns_prr_writer')\n\t\t\t\t\t\t,\tname: review.getFieldValue('custrecord_ns_prr_writer_name') || review.getFieldText('custrecord_ns_prr_writer')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\trating_per_attribute: {}\n\t\t\t\t\t}\n\t\t\t\t\t// Loads Attribute Rating\n\t\t\t\t,\tfilters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prar_review', null, 'is', id)\n\t\t\t\t\t]\n\n\t\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('custrecord_ns_prar_attribute')\n\t\t\t\t\t,\tnew nlobjSearchColumn('custrecord_ns_prar_rating')\n\t\t\t\t\t]\n\t\t\t\t\t// we search for the individual attribute rating records\n\t\t\t\t,\tratings_per_attribute = Application.getAllSearchResults('customrecord_ns_pr_attribute_rating', filters, columns);\n\n\t\t\t\t_.each(ratings_per_attribute, function (rating_per_attribute)\n\t\t\t\t{\n\t\t\t\t\tresult.rating_per_attribute[rating_per_attribute.getText('custrecord_ns_prar_attribute')] = rating_per_attribute.getValue('custrecord_ns_prar_rating');\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow notFoundError;\n\t\t\t}\n\t\t}\n\n\t,\tsearch: function (filters, order, page, records_per_page)\n\t\t{\n\t\t\tvar review_filters = [\n\t\t\t\t\t// only approved reviews\n\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prr_status', null, 'is', this.approvedStatus)\n\t\t\t\t\t// and not inactive\n\t\t\t\t,\tnew nlobjSearchFilter('isinactive', null, 'is', 'F')\n\t\t\t\t]\n\t\t\t,\treview_columns = {}\n\t\t\t,\tresult = {};\n\n\t\t\t// Creates the filters for the given arguments\n\t\t\tif (filters.itemid)\n\t\t\t{\n\t\t\t\treview_filters.push(\n\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prr_item_id', null, 'equalto', filters.itemid)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Only by verified buyer\n\t\t\tif (filters.writer)\n\t\t\t{\n\t\t\t\treview_filters.push(\n\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prr_writer', null, 'equalto', filters.writer)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// only by a rating\n\t\t\tif (filters.rating)\n\t\t\t{\n\t\t\t\treview_filters.push(\n\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prr_rating', null, 'equalto', filters.rating)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (filters.q)\n\t\t\t{\n\t\t\t\treview_filters.push(\n\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prr_text', null, 'contains', filters.q)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Selects the columns\n\t\t\treview_columns = {\n\t\t\t\tinternalid: new nlobjSearchColumn('internalid')\n\t\t\t,\ttitle: new nlobjSearchColumn('name')\n\t\t\t,\ttext: new nlobjSearchColumn('custrecord_ns_prr_text')\n\t\t\t,\titemid: new nlobjSearchColumn('custrecord_ns_prr_item_id')\n\t\t\t,\trating: new nlobjSearchColumn('custrecord_ns_prr_rating')\n\t\t\t,\tisVerified: new nlobjSearchColumn('custrecord_ns_prr_verified')\n\t\t\t,\tuseful_count: new nlobjSearchColumn('custrecord_ns_prr_useful_count')\n\t\t\t,\tnot_useful_count: new nlobjSearchColumn('custrecord_ns_prr_not_useful_count')\n\t\t\t,\twriter: new nlobjSearchColumn('custrecord_ns_prr_writer')\n\t\t\t,\twriter_name: new nlobjSearchColumn('custrecord_ns_prr_writer_name')\n\t\t\t,\tcreated_on: new nlobjSearchColumn('created')\n\t\t\t};\n\n\t\t\tvar custom_created_field_exists = Utils.recordTypeHasField('customrecord_ns_pr_review','custrecord_ns_prr_creation_date');\n\n\t\t\tif (custom_created_field_exists === true)\n\t\t\t{\n\t\t\t\treview_columns.custom_created_on = new nlobjSearchColumn('custrecord_ns_prr_creation_date');\n\t\t\t}\n\n\t\t\t// Sets the sort order\n\t\t\tvar order_tokens = order && order.split(':') || []\n\t\t\t,\tsort_column = order_tokens[0] || 'created'\n\t\t\t,\tsort_direction = order_tokens[1] || 'ASC';\n\n\t\t\treview_columns[sort_column] && review_columns[sort_column].setSort(sort_direction === 'DESC');\n\n\t\t\t// Makes the request and format the response\n\t\t\tresult = Application.getPaginatedSearchResults({\n\t\t\t\trecord_type: 'customrecord_ns_pr_review'\n\t\t\t,\tfilters: review_filters\n\t\t\t,\tcolumns: _.values(review_columns)\n\t\t\t,\tpage: parseInt(page, 10) || 1\n\t\t\t,\tresults_per_page: parseInt(records_per_page, 10) || this.resultsPerPage\n\t\t\t});\n\n\t\t\tvar reviews_by_id = {}\n\t\t\t,\treview_ids = [];\n\n\t\t\t_.each(result.records, function (review)\n\t\t\t{\n\t\t\t\treview_ids.push(review.getId());\n\n\t\t\t\treviews_by_id[review.getId()] = {\n\t\t\t\t\tinternalid: review.getId()\n\t\t\t\t,\ttitle: review.getValue('name')\n\t\t\t\t,\ttext: review.getValue('custrecord_ns_prr_text') ? review.getValue('custrecord_ns_prr_text').replace(/\\n/g, '<br>') : ''\n\t\t\t\t,\titemid: review.getValue('custrecord_ns_prr_item_id')\n\t\t\t\t,\trating: review.getValue('custrecord_ns_prr_rating')\n\t\t\t\t,\tuseful_count: review.getValue('custrecord_ns_prr_useful_count')\n\t\t\t\t,\tnot_useful_count: review.getValue('custrecord_ns_prr_not_useful_count')\n\t\t\t\t,\tisVerified: review.getValue('custrecord_ns_prr_verified') === 'T'\n\t\t\t\t,\tcreated_on: review.getValue('custrecord_ns_prr_creation_date') || review.getValue('created')\n\t\t\t\t,\twriter: {\n\t\t\t\t\t\tid: review.getValue('custrecord_ns_prr_writer')\n\t\t\t\t\t,\tname: review.getValue('custrecord_ns_prr_writer_name') || review.getText('custrecord_ns_prr_writer')\n\t\t\t\t\t}\n\t\t\t\t,\trating_per_attribute: {}\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tif (review_ids.length)\n\t\t\t{\n\t\t\t\t/// Loads Attribute Rating\n\t\t\t\tvar attribute_filters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('custrecord_ns_prar_review', null, 'anyof', review_ids)\n\t\t\t\t\t]\n\n\t\t\t\t,\tattribute_columns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('custrecord_ns_prar_attribute')\n\t\t\t\t\t,\tnew nlobjSearchColumn('custrecord_ns_prar_rating')\n\t\t\t\t\t,\tnew nlobjSearchColumn('custrecord_ns_prar_review')\n\t\t\t\t\t]\n\n\t\t\t\t,\tratings_per_attribute = Application.getAllSearchResults('customrecord_ns_pr_attribute_rating', attribute_filters, attribute_columns);\n\n\t\t\t\t_.each(ratings_per_attribute, function (rating_per_attribute)\n\t\t\t\t{\n\t\t\t\t\tvar review_id = rating_per_attribute.getValue('custrecord_ns_prar_review')\n\t\t\t\t\t,\tattribute_name = rating_per_attribute.getText('custrecord_ns_prar_attribute')\n\t\t\t\t\t,\trating = rating_per_attribute.getValue('custrecord_ns_prar_rating');\n\n\t\t\t\t\tif (reviews_by_id[review_id])\n\t\t\t\t\t{\n\t\t\t\t\t\treviews_by_id[review_id].rating_per_attribute[attribute_name] = rating;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult.records = _.values(reviews_by_id);\n\n\t\t\treturn result;\n\t\t}\n\n\t,\tcreate: function (data)\n\t\t{\n\t\t\tif (this.loginRequired && !ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\n\t\t\tvar review = nlapiCreateRecord('customrecord_ns_pr_review');\n\t\t\t\n\t\t\tif (ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\treview.setFieldValue('custrecord_ns_prr_writer', nlapiGetUser() + '');\t\n\t\t\t}\n\t\t\t\n\t\t\tif (data.writer)\n\t\t\t{\n\t\t\t\tdata.writer.name && review.setFieldValue('custrecord_ns_prr_writer_name', Utils.sanitizeString(data.writer.name));\n\t\t\t\tdata.writer.id && review.setFieldValue('custrecord_ns_prr_writer', data.writer.id);\n\t\t\t}\n\t\t\tdata.rating && review.setFieldValue('custrecord_ns_prr_rating', data.rating);\n\t\t\tdata.title && review.setFieldValue('name', Utils.sanitizeString(data.title));\n\t\t\t\n\t\t\tif (data.text)\n\t\t\t{\n\t\t\t\tvar sanitized_text = Utils.sanitizeString(data.text);\n\n\t\t\t\treview.setFieldValue('custrecord_ns_prr_text', sanitized_text);\n\t\t\t\tdata.text = sanitized_text.replace(/\\n/g, '<br>');\n\t\t\t}\n\t\t\t \n\t\t\tdata.itemid && review.setFieldValue('custrecord_ns_prr_item_id', data.itemid);\n\n\t\t\tvar review_id = nlapiSubmitRecord(review);\n\n\t\t\t_.each(data.rating_per_attribute, function (rating, name)\n\t\t\t{\n\t\t\t\tvar review_attribute = nlapiCreateRecord('customrecord_ns_pr_attribute_rating');\n\n\t\t\t\treview_attribute.setFieldValue('custrecord_ns_prar_item', data.itemid);\n\t\t\t\treview_attribute.setFieldValue('custrecord_ns_prar_review', review_id);\n\t\t\t\treview_attribute.setFieldValue('custrecord_ns_prar_rating', rating);\n\t\t\t\treview_attribute.setFieldText('custrecord_ns_prar_attribute', name);\n\n\t\t\t\tnlapiSubmitRecord(review_attribute);\n\t\t\t});\n\n\t\t\treturn data;\n\t\t}\n\t\t// This function updates the quantity of the counters\n\t,\tupdate: function (id, data)\n\t\t{\n\t\t\tvar action = data.action\n\n\t\t\t,\tfield_name_by_action = {\n\t\t\t\t\t'flag': 'custrecord_ns_prr_falgs_count'\n\t\t\t\t,\t'mark-as-useful': 'custrecord_ns_prr_useful_count'\n\t\t\t\t,\t'mark-as-not-useful': 'custrecord_ns_prr_not_useful_count'\n\t\t\t\t}\n\n\t\t\t,\tfield_name = field_name_by_action[action];\n\n\t\t\tif (field_name)\n\t\t\t{\n\t\t\t\tvar review = nlapiLoadRecord('customrecord_ns_pr_review', id)\n\t\t\t\t,\tcurrent_count = review.getFieldValue(field_name);\n\n\t\t\t\treview.setFieldValue(field_name, parseInt(current_count, 10) + 1 || 1);\n\t\t\t\t// if the review is beeing flagged, check the maxFlagsCount\n\t\t\t\tif (action === 'flag' && current_count >= this.maxFlagsCount)\n\t\t\t\t{\n\t\t\t\t\t// flag the review\n\t\t\t\t\treview.setFieldValue('custrecord_ns_prr_status', this.flaggedStatus);\n\t\t\t\t}\n\n\t\t\t\tnlapiSubmitRecord(review);\n\t\t\t}\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js\n\n// ProductReviews.ServiceController.js\n// ----------------\n// Service to manage product review requests\ndefine(\n\t'ProductReviews.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Application'\n\t,\t'ProductReviews.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tApplication\n\t,\tProductReviewsModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class ProductReviews.ServiceController Manage product review requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'ProductReviews.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to ProductReviews.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {EmptyObject}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar result\n\t\t\t\t,\tid = this.request.getParameter('internalid') ? this.request.getParameter('internalid') : this.data.internalid;\n\t\t\t\tif (id)\n\t\t\t\t{\n\t\t\t\t\t// we get the review\n\t\t\t\t\tresult = ProductReviewsModel.get(id);\n\t\t\t\t\t// if the review is not approved\n\t\t\t\t\tif (result.status !== ProductReviewsModel.approvedStatus || result.isinactive)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow notFoundError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar params = this.request.getAllParameters()\n\t\t\t\t\t,\tfilters = {}\n\t\t\t\t\t,\tparam = '';\n\n\t\t\t\t\tfor (param in params)\n\t\t\t\t\t{\n\t\t\t\t\t\tfilters[param] = params[param];\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = ProductReviewsModel.search(filters, filters.order, filters.page, filters.limit);\n\t\t\t\t}\n\t\t\t\t// send either the individual review, or the search result\n\t\t\t\tthis.sendContent(result,{'cache': response.CACHE_DURATION_LONG});\n\t\t\t}\n\n\t\t\t// @method post The call to ProductReviews.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\t// Do not return here as we need to output the status 201\n\t\t\t\tthis.sendContent(ProductReviewsModel.create(this.data), {'status': 201});\n\t\t\t}\n\n\t\t\t// @method put The call to ProductReviews.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {ProductReview.Model.Item}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid') ? this.request.getParameter('internalid') : this.data.internalid;\n\t\t\t\t// update review with the data\n\t\t\t\tProductReviewsModel.update(id, this.data);\n\t\t\t\t// and send the review itself\n\t\t\t\treturn ProductReviewsModel.get(id);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.Model.js\n\n/* global customer */\n// Profile.js\n// ----------------\n// This file define the functions to be used on profile service\n\ndefine(\n\t'Profile.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'Utils'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\t,\tUtils\n\t)\n{\n\t'use strict';\n\n\treturn SCModel.extend({\n\t\tname: 'Profile'\n\n\t,\tvalidation: {\n\t\t\tfirstname: {required: true, msg: 'First Name is required'}\n\n\t\t// This code is commented temporally, because of the inconsistences between Checkout and My Account regarding the require data from profile information (Checkout can miss last name)\n\t\t,\tlastname: {required: true, msg: 'Last Name is required'}\n\n\t\t,\temail: {required: true, pattern: 'email', msg: 'Email is required'}\n\t\t,\tconfirm_email: {equalTo: 'email', msg: 'Emails must match'}\n\t\t}\n\n\t,\tisSecure: request.getURL().indexOf('https') === 0\n\n\t,\tisLoggedIn: ModelsInit.session.isLoggedIn2()\n\n\t,\tget: function ()\n\t\t{\n\t\t\tvar profile = {};\n\n\t\t\t//You can get the profile information only if you are logged in.\n\t\t\tif (this.isLoggedIn && this.isSecure)\n\t\t\t{\n\n\t\t\t\t//Define the fields to be returned\n\t\t\t\tthis.fields = this.fields || ['isperson', 'email', 'internalid', 'name', 'overduebalance', 'phoneinfo', 'companyname', 'firstname', 'lastname', 'middlename', 'emailsubscribe', 'campaignsubscriptions', 'paymentterms', 'creditlimit', 'balance', 'creditholdoverride'];\n\n\t\t\t\tprofile = ModelsInit.customer.getFieldValues(this.fields);\n\n\t\t\t\t//Make some attributes more friendly to the response\n\t\t\t\tprofile.phone = profile.phoneinfo.phone;\n\t\t\t\tprofile.altphone = profile.phoneinfo.altphone;\n\t\t\t\tprofile.fax = profile.phoneinfo.fax;\n\t\t\t\tprofile.priceLevel = (ModelsInit.session.getShopperPriceLevel().internalid) ? ModelsInit.session.getShopperPriceLevel().internalid : ModelsInit.session.getSiteSettings(['defaultpricelevel']).defaultpricelevel;\n\t\t\t\tprofile.type = profile.isperson ? 'INDIVIDUAL' : 'COMPANY';\n\t\t\t\tprofile.isGuest = ModelsInit.customer.isGuest() ? 'T' : 'F';\n\n\t\t\t\tprofile.creditlimit = parseFloat(profile.creditlimit || 0);\n\t\t\t\tprofile.creditlimit_formatted = Utils.formatCurrency(profile.creditlimit);\n\n\t\t\t\tprofile.balance = parseFloat(profile.balance || 0);\n\t\t\t\tprofile.balance_formatted = Utils.formatCurrency(profile.balance);\n\n\t\t\t\tprofile.balance_available = profile.creditlimit - profile.balance;\n\t\t\t\tprofile.balance_available_formatted = Utils.formatCurrency(profile.balance_available);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprofile = ModelsInit.customer.getFieldValues();\n\t\t\t\tprofile.subsidiary = ModelsInit.session.getShopperSubsidiary();\n\t\t\t\tprofile.language = ModelsInit.session.getShopperLanguageLocale();\n\t\t\t\tprofile.currency = ModelsInit.session.getShopperCurrency();\n\t\t\t\t// @property {String} isLoggedIn. It saves the user logged status in the specified string.\n\t\t\t\tprofile.isLoggedIn = this.isLoggedIn ? 'T' : 'F';\n\t\t\t\tprofile.isGuest = ModelsInit.customer.isGuest() ? 'T' : 'F';\n\t\t\t\tprofile.priceLevel = ModelsInit.session.getShopperPriceLevel().internalid ? ModelsInit.session.getShopperPriceLevel().internalid : ModelsInit.session.getSiteSettings('defaultpricelevel');\n\n\t\t\t\tprofile.internalid = nlapiGetUser() + '';\n\t\t\t}\n\n\t\t\treturn profile;\n\t\t}\n\n\t,\tupdate: function (data)\n\t\t{\n\t\t\tvar login = nlapiGetLogin();\n\n\t\t\tif (data.current_password && data.password && data.password === data.confirm_password)\n\t\t\t{\n\t\t\t\t//Updating password\n\t\t\t\treturn login.changePassword(data.current_password, data.password);\n\t\t\t}\n\n\t\t\tthis.currentSettings = ModelsInit.customer.getFieldValues();\n\n\t\t\t//Define the customer to be updated\n\n\t\t\tvar customerUpdate = {\n\t\t\t\tinternalid: parseInt(nlapiGetUser(), 10)\n\t\t\t};\n\n\t\t\t//Assign the values to the customer to be updated\n\n\t\t\tcustomerUpdate.firstname = data.firstname;\n\n\t\t\tif(data.lastname !== '')\n\t\t\t{\n\t\t\t\tcustomerUpdate.lastname = data.lastname;\n\t\t\t}\n\n\t\t\tif(this.currentSettings.lastname === data.lastname)\n\t\t\t{\n\t\t\t\tdelete this.validation.lastname;\n\t\t\t}\n\n\t\t\tcustomerUpdate.companyname = data.companyname;\n\n\n\t\t\tcustomerUpdate.phoneinfo = {\n\t\t\t\t\taltphone: data.altphone\n\t\t\t\t,\tphone: data.phone\n\t\t\t\t,\tfax: data.fax\n\t\t\t};\n\n\t\t\tif(data.phone !== '')\n\t\t\t{\n\t\t\t\tcustomerUpdate.phone = data.phone;\n\t\t\t}\n\n\t\t\tif(this.currentSettings.phone === data.phone)\n\t\t\t{\n\t\t\t\tdelete this.validation.phone;\n\t\t\t}\n\n\t\t\tcustomerUpdate.emailsubscribe = (data.emailsubscribe && data.emailsubscribe !== 'F') ? 'T' : 'F';\n\n\t\t\tif (!(this.currentSettings.companyname === '' || this.currentSettings.isperson || ModelsInit.session.getSiteSettings(['registration']).registration.companyfieldmandatory !== 'T'))\n\t\t\t{\n\t\t\t\tthis.validation.companyname = {required: true, msg: 'Company Name is required'};\n\t\t\t}\n\n\t\t\tif (!this.currentSettings.isperson)\n\t\t\t{\n\t\t\t\tdelete this.validation.firstname;\n\t\t\t\tdelete this.validation.lastname;\n\t\t\t}\n\n\t\t\t//Updating customer data\n\t\t\tif (data.email && data.email !== this.currentSettings.email && data.email === data.confirm_email)\n\t\t\t{\n\t\t\t\tif(data.isGuest === 'T')\n\t\t\t\t{\n\t\t\t\t\tcustomerUpdate.email = data.email;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlogin.changeEmail(data.current_password, data.email, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Patch to make the updateProfile call work when the user is not updating the email\n\t\t\tdata.confirm_email = data.email;\n\n\t\t\tthis.validate(data);\n\t\t\t// check if this throws error\n\t\t\tModelsInit.customer.updateProfile(customerUpdate);\n\n\t\t\tif (data.campaignsubscriptions)\n\t\t\t{\n\t\t\t\tModelsInit.customer.updateCampaignSubscriptions(data.campaignsubscriptions);\n\t\t\t}\n\n\t\t\treturn this.get();\n\t\t}\n\t});\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js\n\n// Profile.ServiceController.js\n// ----------------\n// Service to manage profile requests\ndefine(\n\t'Profile.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'Profile.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tProfileModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Profile.ServiceController Manage profile requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Profile.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t,\tput:\n\t\t\t\t{\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t// @method get The call to Profile.Service.ss with http method 'get' is managed by this function\n\t\t// @return {Profile.Model.Item}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\treturn ProfileModel.get();\n\t\t\t}\n\n\t\t// @method put The call to Profile.Service.ss with http method 'put' is managed by this function\n\t\t// @return {Profile.Model.Item}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\t// Pass the data to the Profile's update method and send it response\n\t\t\t\tProfileModel.update(this.data);\n\t\t\t\treturn ProfileModel.get();\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js\n\n// @module Quote\ndefine(\n\t'Quote.Model'\n,\t[\n\t\t'Transaction.Model'\n\t,\t'Utils'\n\t,\t'Application'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tTransactionModel\n\t,\tUtils\n\t,\tApplication\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\tvar QuoteToSalesOrderValidatorModel;\n\n\ttry {\n\t\tQuoteToSalesOrderValidatorModel = require('QuoteToSalesOrderValidator.Model');\n\t}\n\tcatch(e)\n\t{\n\t}\n\n\t// @class Quote.Model Defines the model used by the Quote.Service.ss service\n\t// @extends Transaction.Model\n\treturn TransactionModel.extend({\n\n\t\t//@property {String} name\n\t\tname: 'Quote'\n\n\t\t//@method _isCreatingARecord Internal method used to indicate whether the current operation is a creation or not\n\t\t//@return {Boolean}\n\t,\t_isCreatingARecord: function ()\n\t\t{\n\t\t\treturn this.recordId === 'null';\n\t\t}\n\n\t\t//@method getTransactionRecord Load a NetSuite record (transaction)\n\t\t//@param {String} record_type\n\t\t//@param {String} id\n\t\t//@return {nlobjRecord}\n\t,\tgetTransactionRecord: function ()\n\t\t{\n\t\t\tif (this.record)\n\t\t\t{\n\t\t\t\treturn this.record;\n\t\t\t}\n\n\t\t\tif (!this._isCreatingARecord())\n\t\t\t{\n\t\t\t\treturn TransactionModel.getTransactionRecord.apply(this, arguments);\n\t\t\t}\n\n\t\t\treturn nlapiCreateRecord('estimate', {\n\t\t\t\trecordmode: 'dynamic'\n\t\t\t});\n\t\t}\n\n\t\t//@method get Returns an Estimate JSON object\n\t\t//@return {Quote.Model.Attributes}\n\t\t//@class Quote.Model.Attributes @extend Transaction.Model.Get.Result\n\t\t//@class Quote.Model\n\n\t\t//@method setExtraRecordFields Override empty base method to add extra values in the estimate\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetExtraRecordFields: function ()\n\t\t{\n\t\t\tif (!this._isCreatingARecord())\n\t\t\t{\n\t\t\t\tthis.getEntityStatus();\n\t\t\t}\n\t\t\t//@class Quote.Model.Attributes\n\n\t\t\t//@property {String} statusRef\n\t\t\tthis.result.statusRef = this.record.getFieldValue('statusRef');\n\t\t\t//@property {String} message\n\t\t\tthis.result.message = Utils.sanitizeString(this.record.getFieldValue('message'));\n\t\t\t//@property {Boolean} allowToPurchase\n\t\t\tthis.result.allowToPurchase = Application.getPermissions().transactions.tranSalesOrd >= 2;\n\t\t\t//@property {Boolean} isOpen\n\t\t\tthis.result.isOpen = this.record.getFieldValue('statusRef') === 'open';\n\n\t\t\tif (!this._isCreatingARecord())\n\t\t\t{\n\t\t\t\t//@property {QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus} purchasablestatus\n\t\t\t\tthis.getSalesRep();\n\t\t\t\tthis.result.purchasablestatus = QuoteToSalesOrderValidatorModel ? QuoteToSalesOrderValidatorModel.getQuoteToSalesOrderValidation(this.result) : {};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.result.salesrep =\n\t\t\t\t{\n\t\t\t\t\tname: this.record.getFieldText('salesrep')\n\t\t\t\t,\tinternalid: this.record.getFieldValue('salesrep')\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.getDiscountInformation();\n\t\t\tthis.getDueDate();\n\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method getRecordAddresses Override parent method to load address using real internal id\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordAddresses: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Address.Model.Attributes>} addresses\n\t\t\tthis.result.addresses = {};\n\t\t\tthis.result.listAddresseByIdTmp ={};\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('iladdrbook') ; i++)\n\t\t\t{\n\t\t\t\t// Adds all the addresses in the address book\n\t\t\t\tthis.result.listAddresseByIdTmp[this.record.getLineItemValue('iladdrbook', 'iladdrinternalid', i)] = this.addAddress({\n\t\t\t\t\tinternalid: this.record.getLineItemValue('iladdrbook', 'iladdrinternalid', i)\n\t\t\t\t,\tcountry: this.record.getLineItemValue('iladdrbook', 'iladdrshipcountry', i)\n\t\t\t\t,\tstate: this.record.getLineItemValue('iladdrbook', 'iladdrshipstate', i)\n\t\t\t\t,\tcity: this.record.getLineItemValue('iladdrbook', 'iladdrshipcity', i)\n\t\t\t\t,\tzip: this.record.getLineItemValue('iladdrbook', 'iladdrshipzip', i)\n\t\t\t\t,\taddr1: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr1', i)\n\t\t\t\t,\taddr2: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr2', i)\n\t\t\t\t,\tattention: this.record.getLineItemValue('iladdrbook', 'iladdrshipattention', i)\n\t\t\t\t,\taddressee: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddressee', i)\n\t\t\t\t,\tphone: this.record.getLineItemValue('iladdrbook', 'iladdrshipphone', i)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Adds Shipping Address\n\t\t\t// @property {String} shipaddress Id of the shipping address\n\t\t\tthis.result.shipaddress = this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('shipaddresslist')\n\t\t\t,\tcountry: this.record.getFieldValue('shipcountry')\n\t\t\t,\tstate: this.record.getFieldValue('shipstate')\n\t\t\t,\tcity: this.record.getFieldValue('shipcity')\n\t\t\t,\tzip: this.record.getFieldValue('shipzip')\n\t\t\t,\taddr1: this.record.getFieldValue('shipaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('shipaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('shipattention')\n\t\t\t,\taddressee: this.record.getFieldValue('shipaddressee')\n\t\t\t,\tphone:  this.record.getFieldValue('shipphone')\n\t\t\t});\n\n\t\t\t// Adds Bill Address\n\t\t\t// @property {String} billaddress Id of the billing address\n\t\t\tthis.result.billaddress = this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('billaddresslist')\n\t\t\t,\tcountry: this.record.getFieldValue('billcountry')\n\t\t\t,\tstate: this.record.getFieldValue('billstate')\n\t\t\t,\tcity: this.record.getFieldValue('billcity')\n\t\t\t,\tzip: this.record.getFieldValue('billzip')\n\t\t\t,\taddr1: this.record.getFieldValue('billaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('billaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('billattention')\n\t\t\t,\taddressee: this.record.getFieldValue('billaddressee')\n\t\t\t,\tphone: this.record.getFieldValue('billphone')\n\t\t\t});\n\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method getAddressInternalId Internal method used to generate the internal id of an address\n\t\t//@param {Address.Model.Attributes} address\n\t\t//@return  {String}\n\t,\tgetAddressInternalId: function (address)\n\t\t{\n\t\t\tif (_.isNaN(parseInt(address.internalid, 10)))\n\t\t\t{\n\t\t\t\treturn TransactionModel.getAddressInternalId.apply(this, arguments);\n\t\t\t}\n\n\t\t\treturn address.internalid;\n\t\t}\n\n\t\t//@method _getQuoteStatus\n\t\t// ALERT:\n\t\t// AWFUL HACK TO SOLVE SUITESCRIPT ISSUE: 359794 !!\n\t\t// @param {String} estimate_id\n\t\t// @return\n\t,\t_getQuoteStatus: function (estimate_id)\n\t\t{\n\t\t\tvar estimates = nlapiSearchRecord('estimate', null\n\t\t\t,\t[\n\t\t\t\t\t['internalid','is', estimate_id]\n\t\t\t\t,\t'and'\n\t\t\t\t,\t['mainline','is','T']]\n\t\t\t,\t[new nlobjSearchColumn('entitystatus')]);\n\n\t\t\treturn estimates[0];\n\t\t}\n\n\t\t//@method setEntityStatus Set the entity status of the current estimate (Quote)\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetEntityStatus: function ()\n\t\t{\n\t\t\t// Heads Up!: THIS is done in this way to \"TEMPORALLY\" solve a SuiteScript issue\n\t\t\tvar estimate_aux = this._getQuoteStatus(this.record.getId());\n\n\t\t\t//@class Quote.Model.Attributes\n\n\t\t\t//@property {Quote.Model.Attributes.EntityStatus} entitystatus\n\t\t\t//@class Quote.Model.Attributes.EntityStatus\n\t\t\tthis.result.entitystatus = {\n\t\t\t\t// @property {String} id\n\t\t\t\t// id: record.getFieldValue('entitystatus')\n\t\t\t\tid: estimate_aux.getValue('entitystatus')\n\t\t\t\t// @property {String} name\n\t\t\t// ,\tname: record.getFieldText('entitystatus')\n\t\t\t,\tname: estimate_aux.getText('entitystatus')\n\t\t\t};\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method getDiscountInformation Get the discount information of the current estimate\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetDiscountInformation: function ()\n\t\t{\n\t\t\t//@class Quote.Model.Attributes\n\n\t\t\t//@property {Quote.Model.Attributes.Discount?} discount\n\t\t\tthis.result.discount = this.record.getFieldValue('discountitem') ?\n\t\t\t//@class Quote.Model.Attributes.Discount\n\t\t\t{\n\t\t\t\t//@property {String} internalid\n\t\t\t\tinternalid: this.record.getFieldValue('discountitem')\n\t\t\t\t//@property {String} name\n\t\t\t,\tname: this.record.getFieldText('discountitem')\n\t\t\t\t//@property {String} rate\n\t\t\t,\trate: this.record.getFieldValue('discountrate')\n\t\t\t} : null;\n\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method getDueDate Get all date related field of the current estimate\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetDueDate: function ()\n\t\t{\n\t\t\t//@class Quote.Model.Attributes\n\t\t\tvar\tduedate = this.record.getFieldValue('duedate')\n\t\t\t,\tnow = new Date().getTime();\n\n\t\t\t//@property {String} duedate\n\t\t\tthis.result.duedate = duedate;\n\t\t\t//@property {Boolean} isOverdue\n\t\t\tthis.result.isOverdue = this.isDateInterval(new Date(nlapiStringToDate(duedate)).getTime() - now);\n\t\t\t//@property {Boolean} isCloseOverdue\n\t\t\tthis.result.isCloseOverdue = this.isDateInterval(new Date(nlapiStringToDate(duedate)).getTime() - (now + this.getDaysBeforeExpiration()));\n\t\t\t//@property {String} expectedclosedate\n\t\t\tthis.result.expectedclosedate = this.record.getFieldValue('expectedclosedate');\n\n\t\t\t// @class Quote.Model\n\t\t\t}\n\n\t\t//@method list\n\t\t//@param {Transaction.Model.List.Parameters} data\n\t\t//@return {Quote.Model.List.Result}\n\n\t\t//@class Quote.Model.List.Result @extend Transaction.Model.List.Result\n\t\t//@class Quote.Model\n\n\t\t//@method setExtraListColumns Overwritten method to add extra columns (due date, expected close date, entity status, and total)\n\t\t//@return {Void}\n\t,\tsetExtraListColumns: function ()\n\t\t{\n\t\t\tthis.columns.duedate = new nlobjSearchColumn('duedate');\n\t\t\tthis.columns.expectedclosedate = new nlobjSearchColumn('expectedclosedate');\n\t\t\tthis.columns.entitystatus = new nlobjSearchColumn('entitystatus');\n\t\t\tthis.columns.total = new nlobjSearchColumn('total');\n\t\t}\n\n\t\t//@method setExtraListFilters Overwritten method to add extra filter of the list (entity status filter)\n\t\t// @return {Void}\n\t,\tsetExtraListFilters: function ()\n\t\t{\n\t\t\tif (this.data.filter && this.data.filter !== 'ALL')\n\t\t\t{\n\t\t\t\tthis.filters.entitystatus_operator = 'and';\n\t\t \t\tthis.filters.entitystatus = ['entitystatus', 'is', this.data.filter];\n\t\t\t}\n\t\t}\n\n\t\t// @method mapListResult overrides method from Transaction.Model\n\t\t// We are able to apply any custom extension over each record returned\n\t\t// @param {Transaction.Model.List.Result.Record} result Base result to be extended\n\t\t// @param {nlobjSearchResult} record Instance of the record returned by NetSuite search\n\t\t// @return {Transaction.Model.List.Result.Record}\n\t,\tmapListResult: function (result, record)\n\t\t{\n\t\t\tvar duedate = record.getValue('duedate')\n\t\t\t,\tnow = new Date().getTime();\n\n\t\t\t// @class Quote.Model.List.Result.Record @extend Transaction.Model.List.Result.Record\n\t\t\t// @property {String} duedate\n\t\t\tresult.duedate = duedate;\n\t\t\t// @property {Boolean} isOverdue\n\t\t\tresult.isOverdue = this.isDateInterval(new Date(nlapiStringToDate(duedate)).getTime() - now);\n\t\t\t// @property {Boolean} isCloseOverdue\n\t\t\tresult.isCloseOverdue = this.isDateInterval(new Date(nlapiStringToDate(duedate)).getTime() - (now + this.getDaysBeforeExpiration()));\n\t\t\t// @property {String} expectedclosedate\n\t\t\tresult.expectedclosedate = record.getValue('expectedclosedate');\n\t\t\t// @property {Quote.Model.Attributes.EntityStatus} entitystatus\n\t\t\tresult.entitystatus = {\n\t\t\t\tid: record.getValue('entitystatus')\n\t\t\t,\tname: record.getText('entitystatus')\n\t\t\t};\n\t\t\t// @property {Number} total\n\t\t\tresult.total = Utils.toCurrency(record.getValue('total'));\n\t\t\t// @property {String} total_formatted\n\t\t\tresult.total_formatted = Utils.formatCurrency(record.getValue('total'));\n\n\t\t\treturn result;\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method isDateInterval\n\t\t//@param {Number} date\n\t\t//@return {Boolean}\n\t,\tisDateInterval: function (date)\n\t\t{\n\t\t\treturn date <= 0 && ((-1 * date) / 1000 / 60 / 60 / 24) >= 1;\n\t\t}\n\n\t\t//@method getDaysBeforeExpiration\n\t\t//return {Number}\n\t,\tgetDaysBeforeExpiration: function ()\n\t\t{\n\t\t\treturn SC.Configuration.quote.days_to_expire*24*60*60*1000;\n\t\t}\n\n\t\t//@method getSalesRepFromId This method does NOT depend on this.record and this.result\n\t\t//@param {String} quote_id\n\t\t//@return {Quote.Model.Get.SalesRepresentative}\n\t,\tgetSalesRepFromId: function (quote_id)\n\t\t{\n\t\t\tvar salesrep = {};\n\n\t\t\tvar search_result = nlapiLookupField(\n\t\t\t\t'estimate'\n\t\t\t,\tquote_id\n\t\t\t,\t['salesrep.phone', 'salesrep.email', 'salesrep.entityid', 'salesrep.mobilephone', 'salesrep.fax', 'salesrep']\n\t\t\t);\n\n\t\t\tif (search_result)\n\t\t\t{\n\t\t\t\t//@class Quote.Model.Get.SalesRepresentative\n\t\t\t\t//@property {String?} phone\n\t\t\t\tsalesrep.phone = search_result['salesrep.phone'];\n\t\t\t\t//@property {String} email\n\t\t\t\tsalesrep.email = search_result['salesrep.email'];\n\t\t\t\t//@property {String} fullname\n\t\t\t\tsalesrep.fullname = search_result['salesrep.entityid'];\n\t\t\t\t//@property {String} name\n\t\t\t\tsalesrep.name = search_result['salesrep.entityid'];\n\t\t\t\t//@property {String?} mobilephone\n\t\t\t\tsalesrep.mobilephone = search_result['salesrep.mobilephone'];\n\t\t\t\t//@property {String} fax\n\t\t\t\tsalesrep.fax = search_result['salesrep.fax'];\n\t\t\t\t//@property {String} internalid\n\t\t\t\tsalesrep.internalid = search_result.salesrep;\n\t\t\t}\n\n\t\t\treturn salesrep;\n\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method postSubmitRecord Overwritten method used to extend the confirmation submission result\n\t\t//@param {Transaction.Model.Confirmation} confirmation_result\n\t\t//@return {Quote.Model.Confirmation}\n\t,\tpostSubmitRecord: function (confirmation_result)\n\t\t{\n\t\t\tvar created_salesorder = nlapiLookupField('estimate', confirmation_result.internalid, ['tranid']) || {};\n\n\t\t\t//@class Quote.Model.Confirmation @extend Transaction.Model.Confirmation\n\n\t\t\tconfirmation_result.tranid = created_salesorder.tranid;\n\t\t\tconfirmation_result.salesrep = this.getSalesRepFromId(confirmation_result.internalid);\n\t\t\tconfirmation_result.confirmationnumber = created_salesorder.tranid;\n\t\t\t// @class Quote.Model\n\n\t\t\treturn confirmation_result;\n\t\t}\n\t});\n});\n\n\n\n//@class Quote.Model.List.Result @extend Transaction.Model.List.Result\n//@property {Arra<Quote.Model.List.Result.Record>} records\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js\n\n// Quote.ServiceController.js\n// ----------------\n// Service to manage quote requests\ndefine(\n\t'Quote.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Quote.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tQuoteModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Quote.ServiceController Manage quote requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Quote.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'transactions.tranEstimate.1'\n\t\t\t\t\t\t,\t'transactions.tranFind.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Quote.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid');\n\t\t\t\tif (id)\n\t\t\t\t{\n\t\t\t\t\treturn QuoteModel.get('estimate', id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn QuoteModel.list({\n\t\t\t\t\t\tfilter: this.request.getParameter('filter')\n\t\t\t\t\t,\torder: this.request.getParameter('order')\n\t\t\t\t\t,\tsort: this.request.getParameter('sort')\n\t\t\t\t\t,\tfrom: this.request.getParameter('from')\n\t\t\t\t\t,\tto: this.request.getParameter('to')\n\t\t\t\t\t,\tpage: this.request.getParameter('page') || 1\n\t\t\t\t\t,\ttypes: this.request.getParameter('types')\n\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method post The call to Quote.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\t// Updates the order with the passed in data\n\t\t\t\tQuoteModel.update('estimate', this.data.internalid || 'null', this.data);\n\n\t\t\t\t// Gets the status\n\t\t\t\tvar order_info = QuoteModel.get('estimate', this.data.internalid || 'null');\n\n\t\t\t\t// Finally Submits the order\n\t\t\t\torder_info.confirmation = QuoteModel.submit();\n\t\t\t\t// //Override tempid with the real sales order id that have been created\n\t\t\t\t// order_info.internalid = order_info.confirmation.internalid;\n\t\t\t\treturn order_info;\n\t\t\t}\n\n\t\t\t// @method put The call to Quote.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\t// Pass the data to the quote_model's update method and send it response\n\t\t\t\tQuoteModel.update('estimate', this.data.internalid, this.data);\n\t\t\t\treturn QuoteModel.get('estimate', this.data.internalid);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js\n\n//@module QuoteToSalesOrder\ndefine(\n\t'QuoteToSalesOrder.Model'\n,\t[\n\t\t'Transaction.Model'\n\t,\t'QuoteToSalesOrderValidator.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tTransactionModel\n\t,\tQuoteToSalesOrderValidatorModel\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t//@class RequireQuoteError\n\tvar\trequireQuoteIdError = {\n\t\t\t// @property {Number} status\n\t\t\tstatus: 500\n\t\t\t// @property {String} code\n\t\t,\tcode: 'ERR_MISSING_QUOTEID_PARAMETER'\n\t\t\t// @property {String} message\n\t\t,\tmessage: 'Sorry, the quoteid parameter is require to use this operation.'\n\t\t};\n\n\t// @class QuoteToSalesOrder.Model Defines the model used by the Quote.Service.ss service\n\t// @extends Transaction.Model\n\treturn TransactionModel.extend({\n\t\t//@property {String} name\n\t\tname: 'QuoteToSalesOrder'\n\n\t\t//@method getTransactionRecord Override default method to read record id from local property quoteId\n\t\t//@return {nlobjRecord}\n\t,\tgetTransactionRecord: function ()\n\t\t{\n\t\t\tif (this.record)\n\t\t\t{\n\t\t\t\treturn this.record;\n\t\t\t}\n\n\t\t\tvar payment_method_list = []\n\t\t\t,\tinvoice_payment_method = {};\n\n\t\t\tif (this.data && this.data.paymentmethods)\n\t\t\t{\n\t\t\t\tpayment_method_list = this.data.paymentmethods;\n\t\t\t}\n\n\t\t\tinvoice_payment_method = _.findWhere(payment_method_list, {primary:true, type: 'invoice'});\n\t\t\tif (!!invoice_payment_method)\n\t\t\t{\n\t\t\t\treturn nlapiTransformRecord('estimate'\n\t\t\t\t\t,\tthis.quoteId\n\t\t\t\t\t,\t'salesorder'\n\t\t\t\t\t,\t{\n\t\t\t\t\t\t\trecordmode: 'dynamic'\n\t\t\t\t\t\t,\tcustomform: this.getInvoiceCustomFormId()\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn nlapiTransformRecord('estimate', this.quoteId, 'salesorder', {recordmode: 'dynamic'});\n\t\t}\n\n\t\t//@method getInvoiceCustomFormId Returns the id of the form used to generate sales order that are begin pay using invoices (terms)\n\t\t//@return {String}\n\t,\tgetInvoiceCustomFormId: function ()\n\t\t{\n\t\t\t//TODO REVIEW THIS LINE!\n\t\t\treturn SC.Configuration.quote_to_salesorder_wizard.invoice_form_id;\n\t\t}\n\n\t\t//@method getExtraRecordFields Override empty base method to add extra values in the estimate & sales order\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetExtraRecordFields: function ()\n\t\t{\n\t\t\t//@class QuoteToSalesOrder.Model.Attributes\n\n\t\t\t//@property {QuoteToSalesOrder.Model.Attributes.QuoteDetails} quoteDetails\n\t\t\tthis.result.quoteDetails = this.getQuoteDetailsForValidation(this.quoteId);\n\n\t\t\tif (!this.skipQuoteValidation)\n\t\t\t{\n\t\t\t\tvar quote_validation = QuoteToSalesOrderValidatorModel.getQuoteToSalesOrderValidation(\n\t\t\t\t\t_.extend({}, this.result, this.result.quoteDetails));\n\n\t\t\t\tif (!quote_validation.isPurchasable)\n\t\t\t\t{\n\t\t\t\t\tthrow QuoteToSalesOrderValidatorModel.invalidQuoteError;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//@class QuoteToSalesOrder.Model\n\t\t}\n\n\t\t//@method getQuoteDetailsForValidation Returns all the extra quote information we return in the sales order.\n\t\t//It is used for two purposes, to validate that the quote you are transforming is valid to be transformed and to return\n\t\t//quote related information on the sales order\n\t\t//@param {String} quote_id\n\t\t//@return {QuoteToSalesOrder.Model.Attributes.QuoteDetails}\n\t,\tgetQuoteDetailsForValidation: function (quote_id)\n\t\t{\n\t\t\tvar basic_quote_values = nlapiLookupField('estimate'\n\t\t\t\t,\tquote_id\n\t\t\t\t,\t[\n\t\t\t\t\t\t'entitystatus'\n\t\t\t\t\t,\t'status'\n\t\t\t\t\t,\t'statusRef'\n\t\t\t\t\t,\t'tranid'\n\t\t\t\t\t]) || {};\n\n\n\t\t\t//@class QuoteToSalesOrder.Model.Attributes.QuoteDetails\n\t\t\treturn {\n\t\t\t\t//@property {QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus} entitystatus\n\t\t\t\t//@class QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus\n\t\t\t\tentitystatus: {\n\t\t\t\t\t//@property {String} id\n\t\t\t\t\tid: basic_quote_values.entitystatus\n\t\t\t\t}\n\t\t\t//@class QuoteToSalesOrder.Model.Attributes.QuoteDetails\n\t\t\t\t//@property {String} statusRef\n\t\t\t,\tstatusRef: basic_quote_values.statusRef\n\t\t\t\t//@property {String} internalid\n\t\t\t,\tinternalid: quote_id\n\t\t\t\t//@property {QuoteToSalesOrder.Model.Get.SalesRepresentative} salesrep\n\t\t\t,\tsalesrep: this.getSalesRep(quote_id)\n\t\t\t\t//@property {String} tranid\n\t\t\t,\ttranid: basic_quote_values.tranid\n\t\t\t};\n\n\t\t\t// @class QuoteToSalesOrder.Model\n\t\t}\n\n\t\t//@method getSalesRep Override base method to NOT depend on this.record and this.result\n\t\t//@param {String} quote_id\n\t\t//@return {QuoteToSalesOrder.Model.Get.SalesRepresentative}\n\t,\tgetSalesRep: function (quote_id)\n\t\t{\n\t\t\tvar salesrep = {};\n\n\t\t\tvar search_result = nlapiLookupField(\n\t\t\t\t'estimate'\n\t\t\t,\tquote_id\n\t\t\t,\t['salesrep.phone', 'salesrep.email', 'salesrep.entityid', 'salesrep.mobilephone', 'salesrep.fax', 'salesrep']\n\t\t\t);\n\n\t\t\tif (search_result)\n\t\t\t{\n\t\t\t\t//@class QuoteToSalesOrder.Model.Get.SalesRepresentative\n\t\t\t\t//@property {String?} phone\n\t\t\t\tsalesrep.phone = search_result['salesrep.phone'];\n\t\t\t\t//@property {String} email\n\t\t\t\tsalesrep.email = search_result['salesrep.email'];\n\t\t\t\t//@property {String} fullname\n\t\t\t\tsalesrep.fullname = search_result['salesrep.entityid'];\n\t\t\t\t//@property {String} name\n\t\t\t\tsalesrep.name = search_result['salesrep.entityid'];\n\t\t\t\t//@property {String?} mobilephone\n\t\t\t\tsalesrep.mobilephone = search_result['salesrep.mobilephone'];\n\t\t\t\t//@property {String} fax\n\t\t\t\tsalesrep.fax = search_result['salesrep.fax'];\n\t\t\t\t//@property {String} internalid\n\t\t\t\tsalesrep.internalid = search_result.salesrep;\n\t\t\t}\n\n\t\t\treturn salesrep;\n\n\t\t\t// @class QuoteToSalesOrder.Model\n\t\t}\n\n\t\t//@method get Override default method to specify quote id from which the sales order is loaded\n\t\t//@param {String} quote_id\n\t\t//@param {Boolean} skip_quote_validation\n\t\t//@return {QuoteToSalesOrder.Model.Attributes}\n\t,\tget: function (quote_id, skip_quote_validation)\n\t\t{\n\t\t\tif (!quote_id)\n\t\t\t{\n\t\t\t\tthrow requireQuoteIdError;\n\t\t\t}\n\n\t\t\tthis.skipQuoteValidation = skip_quote_validation;\n\t\t\tthis.quoteId = quote_id;\n\n\t\t\t//@class QuoteToSalesOrder.Model.Attributes @extend Transaction.Model.Get.Result\n\t\t\treturn TransactionModel.get.call(this, 'salesorder', 'tempid');\n\n\t\t\t// @class QuoteToSalesOrder.Model\n\t\t}\n\n\t\t//@method update Override default method to specify the quote id from which the transformation is done\n\t\t//@param {String} quote_id\n\t\t//@param {Transaction.Model.UpdateAttributes} data\n\t\t//@return {Void}\n\t,\tupdate: function (quote_id, data)\n\t\t{\n\t\t\tthis.quoteId = quote_id;\n\n\t\t\treturn TransactionModel.update.call(this, 'salesorder', quote_id, data);\n\t\t}\n\n\t\t//@method setLines Override default method so not lines are set. As those cannot be touched when creating a sales order\n\t\t//@return {Void}\n\t,\tsetLines: function () {}\n\n\t\t//@method getRecordAddresses Override parent method to load address using real internal id\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordAddresses: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Address.Model.Attributes>} addresses\n\t\t\tthis.result.addresses = {};\n\t\t\tthis.result.listAddresseByIdTmp = {};\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('iladdrbook') ; i++)\n\t\t\t{\n\t\t\t\t// Adds all the addresses in the address book\n\t\t\t\tthis.result.listAddresseByIdTmp[this.record.getLineItemValue('iladdrbook', 'iladdrinternalid', i)] = this.addAddress({\n\t\t\t\t\tinternalid: this.record.getLineItemValue('iladdrbook', 'iladdrinternalid', i)\n\t\t\t\t,\tcountry: this.record.getLineItemValue('iladdrbook', 'iladdrshipcountry', i)\n\t\t\t\t,\tstate: this.record.getLineItemValue('iladdrbook', 'iladdrshipstate', i)\n\t\t\t\t,\tcity: this.record.getLineItemValue('iladdrbook', 'iladdrshipcity', i)\n\t\t\t\t,\tzip: this.record.getLineItemValue('iladdrbook', 'iladdrshipzip', i)\n\t\t\t\t,\taddr1: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr1', i)\n\t\t\t\t,\taddr2: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr2', i)\n\t\t\t\t,\tattention: this.record.getLineItemValue('iladdrbook', 'iladdrshipattention', i)\n\t\t\t\t,\taddressee: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddressee', i)\n\t\t\t\t,\tphone: this.record.getLineItemValue('iladdrbook', 'iladdrshipphone', i)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Adds Shipping Address\n\t\t\t// @property {String} shipaddress Id of the shipping address\n\t\t\tthis.result.shipaddress = this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('shipaddresslist')\n\t\t\t,\tcountry: this.record.getFieldValue('shipcountry')\n\t\t\t,\tstate: this.record.getFieldValue('shipstate')\n\t\t\t,\tcity: this.record.getFieldValue('shipcity')\n\t\t\t,\tzip: this.record.getFieldValue('shipzip')\n\t\t\t,\taddr1: this.record.getFieldValue('shipaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('shipaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('shipattention')\n\t\t\t,\taddressee: this.record.getFieldValue('shipaddressee')\n\t\t\t,\tphone:  this.record.getFieldValue('shipphone')\n\t\t\t});\n\n\t\t\t// Adds Bill Address\n\t\t\t// @property {String} billaddress Id of the billing address\n\t\t\tthis.result.billaddress = this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('billaddresslist')\n\t\t\t,\tcountry: this.record.getFieldValue('billcountry')\n\t\t\t,\tstate: this.record.getFieldValue('billstate')\n\t\t\t,\tcity: this.record.getFieldValue('billcity')\n\t\t\t,\tzip: this.record.getFieldValue('billzip')\n\t\t\t,\taddr1: this.record.getFieldValue('billaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('billaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('billattention')\n\t\t\t,\taddressee: this.record.getFieldValue('billaddressee')\n\t\t\t,\tphone: this.record.getFieldValue('billphone')\n\t\t\t});\n\n\t\t\t// @class Quote.Model\n\t\t}\n\n\t\t//@method getAddressInternalId Internal method used to generate the internal id of an address\n\t\t//@param {Address.Model.Attributes} address\n\t\t//@return  {String}\n\t,\tgetAddressInternalId: function (address)\n\t\t{\n\t\t\tif (_.isNaN(parseInt(address.internalid, 10)))\n\t\t\t{\n\t\t\t\treturn TransactionModel.getAddressInternalId.apply(this, arguments);\n\t\t\t}\n\n\t\t\treturn address.internalid;\n\t\t}\n\n\t\t//@method postSubmitRecord Overwritten method used to extend the confirmation submission result\n\t\t//@param {Transaction.Model.Confirmation} confirmation_result\n\t\t//@return {QuoteToSalesOrder.Model.Confirmation}\n\t,\tpostSubmitRecord: function (confirmation_result)\n\t\t{\n\t\t\tvar created_salesorder = nlapiLookupField('salesorder', confirmation_result.internalid, ['tranid']) || {};\n\n\t\t\t//@class QuoteToSalesOrder.Model.Confirmation @extend Transaction.Model.Confirmation\n\n\t\t\tconfirmation_result.tranid = created_salesorder.tranid;\n\t\t\tconfirmation_result.confirmationnumber = created_salesorder.tranid;\n\t\t\t// @class QuoteToSalesOrder.Model\n\n\t\t\treturn confirmation_result;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js\n\n// QuoteToSalesOrder.ServiceController.js\n// ----------------\n// Service to manage quote to sales order request\ndefine(\n\t'QuoteToSalesOrder.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Models.Init'\n\t,\t'QuoteToSalesOrder.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tModelsInit\n\t,\tQuoteToSalesOrderModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class QuoteToSalesOrder.ServiceController Manage quote to sales order request\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'QuoteToSalesOrder.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\tcheckLoggedInCheckout : true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to QuoteToSalesOrder.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar quote_id = this.request.getParameter('quoteid');\n\t\t\t\treturn QuoteToSalesOrderModel.get(quote_id);\n\t\t\t}\n\n\t\t\t// @method post The call to QuoteToSalesOrder.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tpost: function()\n\t\t\t{\n\t\t\t\tvar quote_id = this.request.getParameter('quoteid');\n\t\t\t\t// Updates the order with the passed in data\n\t\t\t\tQuoteToSalesOrderModel.update(quote_id, this.data);\n\t\t\t\t// Gets the status\n\t\t\t\tvar order_info = QuoteToSalesOrderModel.get(quote_id, true);\n\t\t\t\t// Finally Submits the order\n\t\t\t\torder_info.confirmation = QuoteToSalesOrderModel.submit();\n\t\t\t\t//Override tempid with the real sales order id that have been created\n\t\t\t\torder_info.internalid = order_info.confirmation.internalid;\n\n\t\t\t\treturn order_info;\n\t\t\t}\n\n\t\t\t// @method put The call to QuoteToSalesOrder.Service.ss with http method 'put' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result}\n\t\t,\tput: function()\n\t\t\t{\n\t\t\t\tvar quote_id = this.request.getParameter('quoteid');\n\t\t\t\t// Pass the data to the quoteToSalesOrderModel's update method and send it response\n\t\t\t\tQuoteToSalesOrderModel.update(quote_id, this.data);\n\t\t\t\treturn QuoteToSalesOrderModel.get(quote_id, true);\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js\n\n//@module QuoteToSalesOrderValidator\ndefine(\n\t'QuoteToSalesOrderValidator.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'StoreItem.Model'\n\t,\t'Address.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tApplication\n\t,\tStoreItemModel\n\t,\tAddressModel\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t//@class InvalidQuoteError\n\tvar\tinvalidQuoteError = {\n\t\t\t// @property {Number} status\n\t\t\tstatus: 500\n\t\t\t// @property {String} code\n\t\t,\tcode: 'ERR_INVALID_QUOTE_STATUS'\n\t\t\t// @property {String} message\n\t\t,\tmessage: 'Sorry, the specified quote id is not valid to be purchased.'\n\t\t};\n\n\t//@class QuoteToSalesOrderValidator.Model @extend SC.Model\n\treturn SCModel.extend({\n\t\t//@property {String} name\n\t\tname: 'QuoteToSalesOrderValidator'\n\n\t\t//@property {InvalidQuoteError} invalidQuoteError\n\t,\tinvalidQuoteError: invalidQuoteError\n\n\t\t//@property {Array<QuoteToSalesOrderValidator.Model.PurchasableValidator>} purchasableQuoteConditions\n\t,\tpurchasableQuoteConditions: [\n\t\t\t//@class QuoteToSalesOrderValidator.Model.PurchasableValidator\n\t\t\t{\n\t\t\t\terrorCode: 'INVALIDPERMISSION'\n\t\t\t\t//@property {Boolean} stopValidation\n\t\t\t,\tstopValidation: true\n\t\t\t,\tvalidatesCondtion: function()\n\t\t\t\t{\n\t\t\t\t\treturn Application.getPermissions().transactions.tranSalesOrd >= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\t//@property {String} errorCode\n\t\t\t\terrorCode: 'INVALIDENTITYSTATUS'\n\t\t\t\t//@method validatesCondtion Validated ONE condition over a quote\n\t\t\t\t//@param {Quote.Model.Attributes} quote\n\t\t\t\t//@return {Boolean} True in case the quote is valid, false otherwise\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\treturn quote.entitystatus.id === SC.Configuration.quote.purchase_ready_status_id;\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\terrorCode: 'INVALIDSTATUS'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\treturn quote.statusRef === 'open';\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\terrorCode: 'MISSINGSHIPMETHOD'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\tvar all_items_fulfillable = _.all(_.pluck(quote.lines, 'isfulfillable'), function (fulfillable)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn !fulfillable;\n\t\t\t\t\t\t});\n\t\t\t\t\tif (all_items_fulfillable)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!quote.shipmethod;\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\terrorCode: 'MISSINGSHIPADDRESS'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\tvar all_items_fulfillable = _.all(_.pluck(quote.lines, 'isfulfillable'), function (fulfillable)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn !fulfillable;\n\t\t\t\t\t\t});\n\t\t\t\t\tif (all_items_fulfillable)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar shipping_address = quote.addresses[quote.shipaddress];\n\t\t\t\t\treturn  !!(shipping_address && shipping_address.isvalid === 'T');\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\terrorCode: 'MISSINGBILLADDRESS'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\tvar billing_address = quote.addresses[quote.billaddress];\n\t\t\t\t\treturn  !!(billing_address && billing_address.isvalid === 'T');\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Remove the following after the Issue 365284 is solved\n\t\t,\t{\n\t\t\t\terrorCode: 'MISSINGSALESREP'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\treturn  quote.salesrep && quote.salesrep.internalid;\n\t\t\t\t}\n\t\t\t}\n\t\t,\t{\n\t\t\t\terrorCode: 'GIFTCERTIFICATENOTALLOWED'\n\t\t\t,\tvalidatesCondtion: function (quote)\n\t\t\t\t{\n\t\t\t\t\treturn _.all(quote.lines, function (line)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn line.item.itemtype !== 'GiftCert';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t\t// @class QuoteToSalesOrderValidator.Model\n\n\t\t//@method getQuoteToSalesOrderValidation Set the purchasable status of the current estimate\n\t\t//@param {Quote.Model.Attributes} record\n\t\t//@param {Array<QuoteToSalesOrderValidator.Model.PurchasableValidator>?} validators\n\t\t//@return {QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus}\n\t,\tgetQuoteToSalesOrderValidation: function (record, validators)\n\t\t{\n\t\t\tvar purchase_validation_errors = []\n\t\t\t,\tis_valid_for_purchase = false;\n\n\t\t\tvalidators = validators || this.purchasableQuoteConditions;\n\n\t\t\t_.find(validators, function (validator)\n\t\t\t{\n\t\t\t\tif (!validator.validatesCondtion(record))\n\t\t\t\t{\n\t\t\t\t\tpurchase_validation_errors.push(validator.errorCode);\n\t\t\t\t\treturn !!validator.stopValidation;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tis_valid_for_purchase = !purchase_validation_errors.length;\n\n\t\t\t//@class QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus Container used to transport the result of validating a quote as ready for purchase\n\t\t\treturn {\n\t\t\t\t//@property {Boolean} isPurchasable\n\t\t\t\tisPurchasable: is_valid_for_purchase\n\t\t\t\t//@property {Array<String>} validationErrors\n\t\t\t,\tvalidationErrors: purchase_validation_errors\n\t\t\t};\n\t\t\t//@class QuoteToSalesOrderValidator.Model\n\t\t}\n\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.Model.js\n\n// Receipt.Model.js\n// ----------\n// Handles fetching receipts\ndefine(\n\t'Receipt.Model'\n,\t[\t'Application'\n\t,\t'Utils'\n\t,\t'Transaction.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tApplication\n\t,\tUtils\n\t,\tTransactionModel\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\treturn TransactionModel.extend({\n\t\n\t\tname: 'Receipt'\n\n\t,\tgetStatus: function ()\n\t\t{\n\t\t\tthis.result.status =\n\t\t\t{\n\t\t\t\tinternalid: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status')\n\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status', true)\n\t\t\t};\n\t\t}\n\n\t,\tgetCreatedFrom: function()\n\t\t{\n\t\t\tvar created_from_internalid = nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom')\n\t\t\t,\trecordtype = created_from_internalid ? Utils.getTransactionType(created_from_internalid) : ''\n\t\t\t,\ttranid = recordtype ? nlapiLookupField(recordtype, created_from_internalid, 'tranid') : ''\n\n\t\t\tthis.result.createdfrom =\n\t\t\t{\n\t\t\t\t\tinternalid: created_from_internalid\n\t\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom', true) || ''\n\t\t\t\t,\trecordtype: recordtype\n\t\t\t\t,\ttranid: tranid\n\t\t\t};\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js\n\n// Receipt.ServiceController.js\n// ----------------\n// Service to manage invoice requests\ndefine(\n\t'Receipt.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Receipt.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tReceiptModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Receipt.ServiceController Manage invoice requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Receipt.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t'transactions.tranFind.1'\n\t\t\t\t\t\t,\t'transactions.tranCashSale.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Receipt.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid')\n\t\t\t\t,\tstatus = this.request.getParameter('status')\n\t\t\t\t,\tpage = this.request.getParameter('page');\n\n\t\t\t\t// If the id exist, sends the response of Receipt.get(id), else send (Receipt.list(options) || [])\n\t\t\t\treturn id ? ReceiptModel.get('cashsale', id) : ReceiptModel.list({\n\t\t\t\t\t\t\ttypes: 'CashSale'\n\t\t\t\t\t\t,\tstatus: status\n\t\t\t\t\t\t,\tpage: page\n\t\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js\n\n// ReturnAuthorization.Model.js\n// ----------------\n//\ndefine(\n\t'ReturnAuthorization.Model'\n,\t[\t'Transaction.Model'\n\t,\t'Utils'\n\t,\t'Application'\n\t,\t'StoreItem.Model'\n\t,\t'SiteSettings.Model'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tTransaction\n\t,\tUtils\n\t,\tApplication\n\t,\tStoreItem\n\t,\tSiteSettings\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t// @class ReturnAuthorization.Model Defines the model used by the ReturnAuthorization.Service.ss service\n\t// @extends Transaction\n\treturn Transaction.extend({\n\n\t\t//@property {String} name\n\t\tname: 'ReturnAuthorization'\n\n\t\t//@property {Object} validation\n\t,\tvalidation: {}\n\n\t,\tgetExtraRecordFields: function ()\n\t\t{\n\t\t\tthis.result.isCancelable = this.isCancelable();\n\t\t\t\n\t\t\tif (this.isSCISIntegrationEnabled && this.result.recordtype === 'creditmemo')\n\t\t\t{\n\n\t\t\t\tthis.result.amountpaid = Utils.toCurrency(this.record.getFieldValue('amountpaid'));\n\t\t\t\tthis.result.amountpaid_formatted = Utils.formatCurrency(this.record.getFieldValue('amountpaid'));\n\t\t\t\tthis.result.amountremaining = Utils.toCurrency(this.record.getFieldValue('amountremaining'));\n\t\t\t\tthis.result.amountremaining_formatted = Utils.formatCurrency(this.record.getFieldValue('amountremaining'));\n\n\t\t\t\tthis.getApply();\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//@method isCancelable\n\t\t//@return {Boolean}\n\t,\tisCancelable: function ()\n\t\t{\n\t\t\treturn this.result.recordtype === 'returnauthorization' && this.result.status.internalid === 'pendingApproval';\n\t\t}\n\t,\tgetExtraLineFields: function (result, record, i)\n\t\t{\n\t\t\tresult.reason = this.result.recordtype === 'creditmemo' ? '' : record.getLineItemValue('item', 'description', i);\n\t\t}\n\t,\tgetApply: function()\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\tids = [];\n\n\t\t\tthis.result.applies = {};\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('apply'); i++)\n\t\t\t{\n\t\t\t\tif (self.record.getLineItemValue('apply', 'apply', i) === 'T')\n\t\t\t\t{\n\t\t\t\t\tvar internalid = self.record.getLineItemValue('apply', 'internalid', i);\n\n\t\t\t\t\tids.push(internalid);\n\n\t\t\t\t\tself.result.applies[internalid] = {\n\t\t\t\t\t\t\tline: i\n\t\t\t\t\t\t,\tinternalid: internalid\n\t\t\t\t\t\t,\ttranid: self.record.getLineItemValue('apply', 'refnum', i)\n\t\t\t\t\t\t,\tapplydate: self.record.getLineItemValue('apply', 'applydate', i)\n\t\t\t\t\t\t,\trecordtype: self.record.getLineItemValue('apply', 'type', i)\n\t\t\t\t\t\t,\tcurrency: self.record.getLineItemValue('apply', 'currency', i)\n\t\t\t\t\t\t,\tamount: Utils.toCurrency(self.record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(self.record.getLineItemValue('apply', 'amount', i))\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ids && ids.length)\n\t\t\t{\n\t\t\t\t_.each(this.getTransactionType(ids) || {}, function (recordtype, internalid)\n\t\t\t\t{\n\t\t\t\t\tself.result.applies[internalid].recordtype = recordtype;\n\t\t\t\t});\t\n\t\t\t}\n\t\t\tthis.result.applies = _.values(this.result.applies);\n\t\t}\n\n\t,\tupdate: function (id, data, headers)\n\t\t{\n\t\t\tif (data.status === 'cancelled')\n\t\t\t{\n\t\t\t\tvar url = 'https://' + Application.getHost() + '/app/accounting/transactions/returnauthmanager.nl?type=cancel&id=' + id;\n\t\t\t\tnlapiRequestURL(url, null, headers);\n\t\t\t}\n\t\t}\n\n\t\t//@method create\n\t\t//@param data\n\t\t//@return {Number}\n\t,\tcreate: function (data)\n        {\n        \tvar return_authorization = nlapiTransformRecord(data.type, data.id, 'returnauthorization')\n        \t,   transaction_lines = this.getTransactionLines(data.id);\n\n        \tthis.setLines(return_authorization, data.lines, transaction_lines);\n        \treturn_authorization.setFieldValue('memo', data.comments);\n\t\t\t\n\t\t\treturn nlapiSubmitRecord(return_authorization);\n        }\n\t,\tgetTransactionLines: function (transaction_internalid)\n\t\t{\n\t\t\tvar filters = {\n\t\t\t\tmainline: ['mainline', 'is', 'F']\n\t\t\t,   mainline_operator: 'and'\n\t\t\t,   internalid: ['internalid', 'is', transaction_internalid]\n\t\t\t}\n\t\t\t\n\t\t\t,   columns = [\n\t\t\t\tnew nlobjSearchColumn('line')\n\t\t\t,   new nlobjSearchColumn('rate')\n\t\t\t];\n\n\t\t\tvar search_results = Application.getAllSearchResults('transaction', _.values(filters), columns)\n\t\t\t,\titem_lines = [];            \n\n\t\t\t_.each(search_results, function (search_result) \n\t\t\t{\n\t\t\t\tvar item_line = {\n\t\t\t\t\tline: transaction_internalid + '_' + search_result.getValue('line')\n\t\t\t\t,   rate: search_result.getValue('rate')\n\t\t\t\t};\n\n\t\t\t\titem_lines.push(item_line);\n\t\t\t});\n\t\t\t\n\t\t\treturn item_lines;\n\t\t}\n\n\t\t//@method findLine\n\t\t//@param line_id\n\t\t//@param lines\n\t,\tgetCreatedFrom: function()\n\t\t{\n\t\t\tvar created_from_internalid\n\t\t\t,\tcreated_from_name\n\t\t\t,\trecordtype\n\t\t\t,\ttranid;\n\n\t\t\tif (this.isSCISIntegrationEnabled && this.result.recordtype === 'creditmemo')\n\t\t\t{\n\t\t\t\tcreated_from_internalid = this.record.getFieldValue('custbody_ns_pos_created_from');\n\t\t\t\tcreated_from_name = this.record.getFieldText('custbody_ns_pos_created_from');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcreated_from_internalid = nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom');\n\t\t\t\tcreated_from_name = created_from_internalid && nlapiLookupField(this.result.recordtype, this.result.internalid, 'createdfrom', true);\n\t\t\t}\n\t\t\t\n\t\t\trecordtype = created_from_internalid ? Utils.getTransactionType(created_from_internalid) : '';\n\t\t\ttranid = recordtype ? nlapiLookupField(recordtype, created_from_internalid, 'tranid') : '';\n\n\t\t\tthis.result.createdfrom =\n\t\t\t{\n\t\t\t\t\tinternalid: created_from_internalid\n\t\t\t\t,\tname: created_from_name\n\t\t\t\t,\trecordtype: recordtype\n\t\t\t\t,\ttranid: tranid\n\t\t\t};\n\t\t}\n\t,\tgetStatus: function ()\n\t\t{\n\t\t\tthis.result.status =\n\t\t\t{\n\t\t\t\tinternalid: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status')\n\t\t\t,\tname: nlapiLookupField(this.result.recordtype, this.result.internalid, 'status', true)\n\t\t\t};\n\t\t}\n\n\t,\tfindLine: function (line_id, lines)\n\t\t{\n\t\t\treturn _.findWhere(lines, {\n\t\t\t\tid: line_id\n\t\t\t});\n\t\t}\n\n\t\t//@method setLines\n\t\t//@param return_authorization\n\t\t//@param lines\n\t\t//@return {ReturnAuthorization.Model}\n \t,\tsetLines: function (return_authorization, lines, transaction_lines)\n \t\t{\n \t\t\tvar line_count = return_authorization.getLineItemCount('item')\n \t\t\t,   add_line = true\n \t\t\t,   i = 1;\n\n\t\t\twhile (add_line && i <= line_count)\n\t\t\t{\n\t\t\t\tvar line_item_value = return_authorization.getLineItemValue('item', 'id', i);\n\n\t\t\t\tadd_line = this.findLine(line_item_value, lines);\n\n\t\t\t\tif (add_line)\n\t\t\t\t{\n\t\t\t\t\tvar transaction_line = _.findWhere(transaction_lines, { line: line_item_value });\n\n\t\t\t\t\tif (transaction_line)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn_authorization.setLineItemValue('item', 'rate', i, transaction_line.rate);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn_authorization.setLineItemValue('item', 'quantity', i, add_line.quantity);\n\t\t\t\t\treturn_authorization.setLineItemValue('item', 'description', i, add_line.reason);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn_authorization.removeLineItem('item', i);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn !add_line ? this.setLines(return_authorization, lines, transaction_lines) : this;\n        }\n\n\t\t//@method list\n\t\t//@param {Object} data\n\t\t//@return {Object}\n\t,\tsetExtraListFilters: function ()\n\t\t{\n\t\t\tif (this.data.getLines && this.data.page === 'all')\n\t\t\t{\n\t\t\t\tdelete this.filters.mainline;\n\t\t\t\tdelete this.filters.mainline_operator;\n\n\t\t\t\tthis.filters.shipping_operator = 'and';\n\t\t\t\tthis.filters.shipping = ['shipping','is', 'F'];\n\n\t\t\t\tthis.filters.taxline_operator = 'and';\n\t\t\t\tthis.filters.taxline = ['taxline', 'is', 'F'];\n\n\t\t\t\tthis.filters.quantity_operator = 'and';\n\t\t\t\tthis.filters.quantity = ['quantity', 'notequalto', 0];\n\t\t\t}\n\n\t\t\tif (this.isSCISIntegrationEnabled)\n\t\t\t{\n\t\t\t\tthis.filters.scisrecords_operator = 'and';\n\t\t\t\tthis.filters.scisrecords = [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t['type', 'anyof', ['CustCred']]\n\t\t\t\t\t\t,\t'and'\n\t\t\t\t\t\t,\t[ 'location.locationtype', 'is', SC.Configuration.locationTypeMapping.store.internalid ]\n\t\t\t\t\t\t,\t'and'\n\t\t\t\t\t\t,\t[ 'source', 'is', '@NONE@' ]\n\t\t\t\t\t\t] \n\t\t\t\t\t,\t'or'\n\t\t\t\t\t,\t[\n\t\t\t\t\t\t\t['type', 'anyof', ['RtnAuth']]\n\t\t\t\t\t\t]\n\t\t\t\t];\t\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.filters.type_operator = 'and';\n\t\t\t\tthis.filters.type = ['type', 'anyof', ['RtnAuth']];\n\t\t\t}\n\n\t\t\tif (this.data.createdfrom)\n\t\t\t{\n\t\t\t\tdelete this.filters.createdfrom;\n\t\t\t\tdelete this.filters.createdfrom_operator;\n\t\t\t\t\n\t\t\t\tthis.data.createdfrom = _.isArray(this.data.createdfrom) ? this.data.createdfrom : this.data.createdfrom.split(',');\n\n\t\t\t\tvar internal_ids = []\n\t\t\t\t,\tfilters = [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t['createdfrom', 'anyof', this.data.createdfrom]\n\t\t\t\t\t\t,\t'and'\n\t\t\t\t\t\t,\t['type', 'anyof', ['RtnAuth']]\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t,\tcolumns = nlobjSearchColumn('internalid');\n\n\n\t\t\t\tif (this.isSCISIntegrationEnabled)\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tfilters.push('or');\n\t\t\t\t\tfilters.push([\n\t\t\t\t\t\t['custbody_ns_pos_created_from', 'anyof', this.data.createdfrom]\n\t\t\t\t\t,\t'and'\n\t\t\t\t\t,\t[\n\t\t\t\t\t\t\t\t['type', 'anyof', ['CustCred']]\n\t\t\t\t\t\t\t,\t'and'\n\t\t\t\t\t\t\t,\t[ 'location.locationtype', 'is', SC.Configuration.locationTypeMapping.store.internalid ]\n\t\t\t\t\t\t\t,\t'and'\n\t\t\t\t\t\t\t,\t[ 'source', 'is', '@NONE@' ]\n\t\t\t\t\t\t]\n\t\t\t\t\t]);\n\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\tinternal_ids = _(Application.getAllSearchResults('transaction', _.values(filters), columns) || []).pluck('id');\n\n\t\t\t\tif (this.data.internalid && this.data.internalid.length)\n\t\t\t\t{\n\t\t\t\t\tinternal_ids = _.intersection(internal_ids, this.data.internalid);\n\t\t\t\t}\n\n\t\t\t\tinternal_ids = internal_ids.length ? internal_ids : [0];\n\n\t\t\t\tthis.filters.internalid_operator = 'and';\n\t\t\t\tthis.filters.internalid  =  ['internalid', 'anyof', internal_ids];\n\t\t\t}\n\n\t\t}\n\t,\tsetExtraListColumns: function ()\n\t\t{\n\t\t\tif (this.data.getLines && this.data.page === 'all')\n\t\t\t{\n\t\t\t\tthis.columns.mainline = new nlobjSearchColumn('mainline');\n\t\t\t\tthis.columns.internalid_item = new nlobjSearchColumn('internalid', 'item');\n\t\t\t\tthis.columns.type_item = new nlobjSearchColumn('type', 'item');\n\t\t\t\tthis.columns.parent_item = new nlobjSearchColumn('parent', 'item');\n\t\t\t\tthis.columns.displayname_item = new nlobjSearchColumn('displayname', 'item');\n\t\t\t\tthis.columns.storedisplayname_item = new nlobjSearchColumn('storedisplayname', 'item');\n\t\t\t\tthis.columns.rate = new nlobjSearchColumn('rate');\n\t\t\t\tthis.columns.total = new nlobjSearchColumn('total');\n\t\t\t\tthis.columns.options = new nlobjSearchColumn('options');\n\t\t\t\tthis.columns.line = new nlobjSearchColumn('line').setSort();\n\t\t\t\tthis.columns.quantity = new nlobjSearchColumn('quantity');\n\t\t\t}\n\t\t}\n\t,\tmapListResult : function (result, record)\n\t\t{\n\n\t\t\tresult.amount = Math.abs(result.amount || 0);\n\t\t\tresult.amount_formatted =  Utils.formatCurrency(result.amount);\n\n\t\t\tresult.lines = record.getValue(this.columns.lines);\n\t\t\n\t\t\tif (this.data.getLines)\n\t\t\t{\n\t\t\t\tresult.mainline = record.getValue('mainline');\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t,\tpostList: function ()\n\t\t{\n\t\t\tif (this.data.getLines && this.data.page === 'all')\n\t\t\t{\n\t\t\t\tthis.results = _.where(this.results, {mainline: '*'});\n\n\t\t\t\tvar items_to_preload = {}\n\t\t\t\t,\tself = this;\n\n\t\t\t\t_.each(this.search_results || [], function (record)\n\t\t\t\t{\n\t\t\t\t\tif (record.getValue('mainline') !== '*')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar record_id = record.getId()\n\t\t\t\t\t\t,\tresult = _.findWhere(self.results, {internalid: record_id});\n\n\t\t\t\t\t\tif (result)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.lines = result.lines || [];\n\n\t\t\t\t\t\t\tvar item_id = record.getValue('internalid', 'item')\n\t\t\t\t\t\t\t,\titem_type = record.getValue('type', 'item');\n\n\t\t\t\t\t\t\tresult.lines.push({\n\t\t\t\t\t\t\t\tinternalid: record_id + '_' + record.getValue('line')\n\t\t\t\t\t\t\t,\tquantity: Math.abs(record.getValue('quantity'))\n\t\t\t\t\t\t\t,\trate: Utils.toCurrency(record.getValue('rate'))\n\t\t\t\t\t\t\t,\trate_formatted: Utils.formatCurrency(record.getValue('rate'))\n\t\t\t\t\t\t\t,\ttax_amount: Utils.toCurrency(Math.abs(record.getValue('taxtotal')))\n\t\t\t\t\t\t\t,\ttax_amount_formatted: Utils.formatCurrency(Math.abs(record.getValue('taxtotal')))\n\t\t\t\t\t\t\t,\tamount: Utils.toCurrency(Math.abs(record.getValue(self.amountField)))\n\t\t\t\t\t\t\t,\tamount_formatted: Utils.formatCurrency(Math.abs(record.getValue(self.amountField)))\n\t\t\t\t\t\t\t,\toptions: Utils.getItemOptionsObject(record.getValue('options'))\n\n\t\t\t\t\t\t\t,\titem: {\n\t\t\t\t\t\t\t\t\t\tinternalid: item_id\n\t\t\t\t\t\t\t\t\t,\ttype: item_type\n\t\t\t\t\t\t\t\t\t,\tparent: record.getValue('parent', 'item')\n\t\t\t\t\t\t\t\t\t,\tdisplayname: record.getValue('displayname', 'item')\n\t\t\t\t\t\t\t\t\t,\tstoredisplayname: record.getValue('storedisplayname', 'item')\n\t\t\t\t\t\t\t\t\t,\titemid: record.getValue('itemid', 'item')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\titems_to_preload[item_id] = {\n\t\t\t\t\t\t\t\tid: item_id\n\t\t\t\t\t\t\t,\ttype: item_type\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.store_item = StoreItem;\n\n\t\t\t\tthis.store_item.preloadItems( _.values(items_to_preload));\n\n\t\t\t\t_.each(this.results, function (result)\n\t\t\t\t{\n\t\t\t\t\t_.each(result.lines, function (line)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar item_details = self.store_item.get(line.item.internalid, line.item.type);\n\n\t\t\t\t\t\tif (item_details && !_.isUndefined(item_details.itemid))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tline.item = item_details;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (this.results.records && this.results.records.length)\n\t\t\t{\n\t\t\t\tvar filters = {}\n\t\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('internalid', null, 'group')\n\t\t\t\t\t,\tnew nlobjSearchColumn('quantity', null, 'sum')\n\t\t\t\t\t]\n\t\t\t\t,\tquantities = {};\n\n\t\t\t\tfilters.internalid  =  ['internalid', 'anyof', _(this.results.records || []).pluck('internalid')];\n\t\t\t\tfilters.mainline_operator = 'and';\t\n\t\t\t\tfilters.mainline = ['mainline','is', 'F'];\n\t\t\t\tfilters.cogs_operator = 'and';\n\t\t\t\tfilters.cogs = ['cogs', 'is', 'F'];\n\t\t\t\tfilters.taxline_operator = 'and';\n\t\t\t\tfilters.taxline = ['taxline', 'is', 'F'];\n\t\t\t\tfilters.shipping_operator = 'and';\n\t\t\t\tfilters.shipping = ['shipping','is', 'F'];\n\n\t\t\t\tApplication.getAllSearchResults('transaction', _.values(filters), columns).forEach(function (record) {\n\t\t\t\t \tquantities[record.getValue('internalid', null, 'group')] = record.getValue('quantity', null, 'sum');\n\t\t\t\t});\n\n\t\t\t\t_.each(this.results.records, function (record) {\n\t\t\t\t\trecord.quantity = Math.abs(quantities[record.internalid] || 0);\t\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t,\tloadSCISIntegrationStatus: function ()\n\t\t{\n\t\t\tvar site_settings = SiteSettings.get();\n\n\t\t\tthis.isSCISIntegrationEnabled = site_settings.isSCISIntegrationEnabled;\n\t\t}\n\t,\tgetIsSCISIntegrationEnabled: function ()\n\t\t{\n\t\t\treturn _.isUndefined(this.isSCISIntegrationEnabled) ? false : !!this.isSCISIntegrationEnabled;\n\t\t}\n\t,\tpreList: function () \n\t\t{\n\t\t\tthis.loadSCISIntegrationStatus();\n\t\t}\n\t,\tpreGet: function ()\n\t\t{\n\t\t\tthis.loadSCISIntegrationStatus();\n\t\t}\n\t,\tpostGet: function () \n\t\t{\n\t\t\tvar filters = {}\n\t\t\t,\tcolumns = [\n\t\t\t\tnew nlobjSearchColumn('createdfrom')\n\t\t\t,\tnew nlobjSearchColumn('tranid', 'createdfrom')\n\t\t\t]\n\t\t\t,\tself = this\n\t\t\t,\tisCreditMemo = this.result.recordtype === 'creditmemo'\n\t\t\t,\trecord_type = ''\n\t\t\t,\tcreated_from_internalid = ''\n\t\t\t,\tcreated_from_name = ''\n\t\t\t,\tcretaed_from_tranid = '';\n\n\t\t\tfilters.internalid  =  ['internalid', 'is', this.result.internalid];\n\t\t\t\t\n\t\t\tif (isCreditMemo)\n\t\t\t{\n\t\t\t\tcolumns.push(new nlobjSearchColumn('line'));\n\t\t\t\tcolumns.push(new nlobjSearchColumn('custcol_ns_pos_returnreason'));\n\n\t\t\t\tfilters.mainline_operator = 'and';\t\n\t\t\t\tfilters.mainline = ['mainline','is', 'F'];\n\t\t\t\tfilters.cogs_operator = 'and';\n\t\t\t\tfilters.cogs = ['cogs', 'is', 'F'];\n\t\t\t\tfilters.taxline_operator = 'and';\n\t\t\t\tfilters.taxline = ['taxline', 'is', 'F'];\n\t\t\t\tfilters.shipping_operator = 'and';\n\t\t\t\tfilters.shipping = ['shipping','is', 'F'];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfilters.createdfrom_operator = 'and';\n\t\t\t\tfilters.createdfrom = ['createdfrom', 'noneof', '@NONE@'];\n\t\t\t}\n\n\n\t\t\tApplication.getAllSearchResults('transaction', _.values(filters), columns).forEach(function (record) \n\t\t\t{\n\t\t\t\tcreated_from_internalid = record.getValue('createdfrom');\n\t\t\t\tcreated_from_name = record.getText('createdfrom');\n\t\t\t\tcretaed_from_tranid = record.getValue('tranid', 'createdfrom');\n\n\t\t\t\tif (isCreditMemo)\n\t\t\t\t{\n\t\t\t\t\tvar line = self.result.lines[self.result.internalid + '_' + record.getValue('line')];\n\t\t\t\t\t\n\t\t\t\t\tif (line)\n\t\t\t\t\t{\n\t\t\t\t \t\tline.reason = record.getText('custcol_ns_pos_returnreason');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tif (created_from_internalid)\n\t\t\t{\n\t\t\t\trecord_type = Utils.getTransactionType(created_from_internalid);\n\t\t\t}\n\n\t\t\tthis.result.createdfrom =\n\t\t\t//@class CreatedFrom\n\t\t\t{\n\t\t\t\t//@property {String} internalid\n\t\t\t\tinternalid: created_from_internalid\n\t\t\t\t//@property {String} name\n\t\t\t,\tname: created_from_name\n\t\t\t\t//@property {String} recordtype\n\t\t\t,\trecordtype: record_type || ''\n\t\t\t\t//@property {String} tranid\n\t\t\t,\ttranid: cretaed_from_tranid\n\t\t\t};\n\t\t\t\n\t\t\tthis.result.lines = _.reject(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\treturn line.quantity === 0;\n\t\t\t});\n\t\t}\n\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js\n\n// ReturnAuthorization.ServiceController.js\n// ----------------\n// Service to manage return authorization requests\ndefine(\n\t'ReturnAuthorization.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Application'\n\t,\t'ReturnAuthorization.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tApplication\n\t,\tReturnAuthorizationModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\tReturnAuthorizationModel.loadSCISIntegrationStatus();\n\t\tvar enabled = ReturnAuthorizationModel.getIsSCISIntegrationEnabled();\n\n\t\t// @class ReturnAuthorization.ServiceController Manage return authorization requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'ReturnAuthorization.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t,\trequirePermissions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\tenabled ? 'transactions.tranPurchasesReturns.1' : 'transactions.tranRtnAuth.1'\n\t\t\t\t\t\t,\t'transactions.tranFind.1'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t,\tpost: {\n\t\t\t\t\trequirePermissions: {\n\t\t\t\t\t\textraList: [\n\t\t\t\t\t\t\t'transactions.tranRtnAuth.2'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// @method get The call to ReturnAuthorization.Service.ss with http method 'get' is managed by this function\n\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function ()\n\t\t\t{\n\t\t\t\tvar recordtype = this.request.getParameter('recordtype')\n\t\t\t\t,\tid = this.request.getParameter('internalid');\n\n\t\t\t\treturn id && recordtype ? ReturnAuthorizationModel.get(recordtype, id) : ReturnAuthorizationModel.list(\n\t\t\t\t{\n\t\t\t\t\torder: this.request.getParameter('order')\n\t\t\t\t,\tsort: this.request.getParameter('sort')\n\t\t\t\t,\tfrom: this.request.getParameter('from')\n\t\t\t\t,\tto: this.request.getParameter('to')\n\t\t\t\t,\tpage: this.request.getParameter('page')\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// @method post The call to ReturnAuthorization.Service.ss with http method 'post' is managed by this function\n\t\t\t// @return {StatusObject}\n\t\t,\tpost: function ()\n\t\t\t{\n\t\t\t\tvar id = ReturnAuthorizationModel.create(this.data);\n\t\t\t\tthis.sendContent(ReturnAuthorizationModel.get('returnauthorization', id), {'status': 201});\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js\n\n// @module SiteSettings\n// Pre-processes the SiteSettings to be used on the site\ndefine(\n\t'SiteSettings.Model'\n,\t[\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'underscore'\n\t,\t'Utils'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\t,\t_\n\t,\tUtils\n\t)\n{\n\t'use strict';\n\n\t// @class SiteSettings Pre-processes the SiteSettings to be used on the site. For performance reasons it\n\t// adds a cache layer using netsuite's application cache. Cache use the siteid in the keyword to support multi sites.\n\t// Cache douration can be configured in cacheTtl property. Some properties like touchpoints, siteid, languages and currencies are never cached.\n\t// @extends SCModel\n\treturn SCModel.extend({\n\n\t\tname: 'SiteSettings'\n\n\t\t// @method get the site settings. Notice that can be cached @returns { ShoppingSession.SiteSettings}\n\t,\tget: function ()\n\t\t{\n\t\t\tvar i\n\t\t\t,\tcountries\n\t\t\t,\tshipToCountries\n\t\t\t,\tsettings = ModelsInit.session.getSiteSettings();\n\n\n\t\t\t// 'settings' is a global variable and contains session.getSiteSettings()\n\t\t\tif (settings.shipallcountries === 'F')\n\t\t\t{\n\t\t\t\tif (settings.shiptocountries)\n\t\t\t\t{\n\t\t\t\t\tshipToCountries = {};\n\n\t\t\t\t\tfor (i = 0; i < settings.shiptocountries.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tshipToCountries[settings.shiptocountries[i]] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get all available countries.\n\t\t\tvar allCountries = ModelsInit.session.getCountries();\n\n\t\t\tif (shipToCountries)\n\t\t\t{\n\t\t\t\t// Remove countries that are not in the shipping countries\n\t\t\t\tcountries = {};\n\n\t\t\t\tfor (i = 0; i < allCountries.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (shipToCountries[allCountries[i].code])\n\t\t\t\t\t{\n\t\t\t\t\t\tcountries[allCountries[i].code] = allCountries[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcountries = {};\n\n\t\t\t\tfor (i = 0; i < allCountries.length; i++)\n\t\t\t\t{\n\t\t\t\t\tcountries[allCountries[i].code] = allCountries[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get all the states for countries.\n\t\t\tvar allStates = ModelsInit.session.getStates();\n\n\t\t\tif (allStates)\n\t\t\t{\n\t\t\t\tfor (i = 0; i < allStates.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (countries[allStates[i].countrycode])\n\t\t\t\t\t{\n\t\t\t\t\t\tcountries[allStates[i].countrycode].states = allStates[i].states;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds extra information to the site settings\n\t\t\tsettings.countries = countries;\n\t\t\tsettings.phoneformat = ModelsInit.context.getPreference('phoneformat');\n\t\t\tsettings.minpasswordlength = ModelsInit.context.getPreference('minpasswordlength');\n\t\t\tsettings.campaignsubscriptions = ModelsInit.context.getFeature('CAMPAIGNSUBSCRIPTIONS');\n\t\t\tsettings.analytics.confpagetrackinghtml = _.escape(settings.analytics.confpagetrackinghtml);\n\t\t\tsettings.autolocationassignment = ModelsInit.context.getFeature('autolocationassignment');\n\n\t\t\t// Other settings that come in window object\n\t\t\tsettings.groupseparator = window.groupseparator;\n\t\t\tsettings.decimalseparator = window.decimalseparator;\n\t\t\tsettings.negativeprefix = window.negativeprefix;\n\t\t\tsettings.negativesuffix = window.negativesuffix;\n\t\t\tsettings.dateformat = window.dateformat;\n\t\t\tsettings.longdateformat = window.longdateformat;\n\n\t\t\tsettings.isMultiShippingRoutesEnabled = SC.Configuration.isMultiShippingEnabled && ModelsInit.context.getSetting('FEATURE', 'MULTISHIPTO') === 'T';\n\n\t\t\tsettings.isSCISIntegrationEnabled = SC.Configuration.isSCISIntegrationEnabled && Utils.recordTypeHasField('salesorder','custbody_ns_pos_transaction_status');\n\n\t\t\tsettings.is_logged_in = session.isLoggedIn2();\n\t\t\tsettings.shopperCurrency = session.getShopperCurrency();\n\t\t\tsettings.touchpoints = this.getTouchPoints();\n\n\t\t\t// delete unused fields\n\t\t\tdelete settings.entrypoints;\n\n\t\t\treturn settings;\n\t\t}\n\n\t,\tgetTouchPoints: function () {\n\t\t\tvar touchpoints = ModelsInit.session.getSiteSettings(['touchpoints']).touchpoints;\n\n\t\t\tif (touchpoints)\n\t\t\t{\n\t\t\t\ttouchpoints.storelocator = touchpoints.login.replace('is=login', 'is=storelocator');\n\t\t\t}\n\n\t\t\treturn touchpoints;\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js\n\n// SiteSettings.ServiceController.js\n// ----------------\n// Service to manage sitesettings requests\ndefine(\n\t'SiteSettings.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'SiteSettings.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tSiteSettingsModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class SiteSettings.ServiceController Manage sitesettings requests\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'SiteSettings.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLoggedInPPS: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to SiteSettings.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {ShoppingSession.SiteSettings}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\treturn SiteSettingsModel.get();\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js\n\n/* exported forbiddenError, unauthorizedError, notFoundError, methodNotAllowedError, sessionTimedOutError, invalidItemsFieldsAdvancedName */\n/* jshint -W079 */\n\n// @module ssp.libraries\n// Contains the @?class Application with basic utilities for accessing netsuite environment, searches, dealing with requests and \n// responses, defining error types. \nvar SC = {};\n\ndefine(\n\t'Application'\n,\t[\n\t\t'underscore'\n\t,\t'Events'\n\t,\t'Models.Init'\n\t,\t'Configuration'\n\t,\t'Console'\n\t]\n,\tfunction(\n\t\t_\n\t,\tEvents\n\t,\tModelsInit\n\t)\n{\n\t'use strict';\n\n\t// @class Application @extends Events\n\t// The Application object contains high level functions to interact with low level suitescript and Commerce API\n\t// like obtaining all the context environment information, sending http responses, defining http errors, searching with paginated results, etc.\n\tvar Application = _.extend({\n\n\t\tinit: function () {}\n\n//GENERAL-CONTEXT\n\n\t\t// @method getEnvironment returns an Object with high level settings. Gets the information with session.getSiteSettings()\n\t\t// and then mix it with high level information like languages, permissions, currencies, hosts, etc.  also it will take care of calling\n\t\t// session.setShopperCurrency and session.setShopperLanguage to automatically set this information in the shopper session according to passed request parameters. \n\t\t// @public \n\t\t// @param {ShoppingSession} session\n\t\t// @param {nlobjRequest} request - used for read passed parameters in the url, i.e. in sc.environment.ssp?lang=es_ES\n\t\t// @return {Object} an object with many environment properties serializable to JSON.\n\t,\tgetEnvironment: function (request)\n\t\t{\n\t\t\tvar isSecure = request.getURL().indexOf('https:') === 0;\n\n\t\t\t// HEADS UP!! This hack is because currently CMS doesn't support Secure Domain yet\n\t\t\t// When CMS does support it, delete this\n\t\t\tSC.Configuration.useCMS = !isSecure && SC.Configuration.useCMS && ModelsInit.context.getSetting('FEATURE', 'ADVANCEDSITEMANAGEMENT') === 'T';\n\n\t\t\t// Sets Default environment variables\n\t\t\t//,\tisSecure = request.getURL().indexOf('https:') === 0\n\t\t\tvar siteSettings = ModelsInit.session.getSiteSettings(['currencies', 'languages'])\n\t\t\t,\tresult = {\n\t\t\t\t\tbaseUrl: ModelsInit.session.getAbsoluteUrl(isSecure ? 'checkout' : 'shopping', '/{{file}}')\n\t\t\t\t,\tcurrentHostString: Application.getHost()\n\t\t\t\t,\tavailableHosts: SC.Configuration.hosts || []\n\t\t\t\t,\tavailableLanguages: siteSettings.languages || []\n\t\t\t\t,\tavailableCurrencies: siteSettings.currencies || []\n\t\t\t\t,\tcompanyId: ModelsInit.context.getCompany()\n\t\t\t\t,\tcasesManagementEnabled: ModelsInit.context.getSetting('FEATURE', 'SUPPORT') === 'T'\n\t\t\t\t,\tgiftCertificatesEnabled: ModelsInit.context.getSetting('FEATURE', 'GIFTCERTIFICATES') === 'T'\n\t\t\t\t,\tcurrencyCodeSpecifiedOnUrl : ''\n\t\t\t\t,\tuseCMS: SC.Configuration.useCMS\n\t\t\t\t};\n\n\t\t\t// If there are hosts associated in the site we iterate them to check which we are in\n\t\t\t// and which language and currency we are in\n\t\t\tif (result.availableHosts.length && !isSecure)\n\t\t\t{\n\t\t\t\tvar pushLanguage = function (language)\n\t\t\t\t{\n\t\t\t\t\tresult.availableLanguages.push(_.extend({}, language, available_languages_object[language.locale]));\n\t\t\t\t};\n\t\t\t\tvar pushCurrency = function(currency)\n\t\t\t\t{\n\t\t\t\t\tresult.availableCurrencies.push(_.extend({}, currency, available_currencies_object[currency.code]));\n\t\t\t\t};\n\t\t\t\tfor (var i = 0; i < result.availableHosts.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar host = result.availableHosts[i];\n\t\t\t\t\tif (host.languages && host.languages.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t// looks for the language match\n\t\t\t\t\t\tfor (var n = 0; n < host.languages.length; n++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar language = host.languages[n];\n\n\t\t\t\t\t\t\tif (language.host === result.currentHostString)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// if we found the language we mark the host and the language and we brake\n\t\t\t\t\t\t\t\tresult = _.extend(result, {\n\t\t\t\t\t\t\t\t\tcurrentHost: host\n\t\t\t\t\t\t\t\t,\tcurrentLanguage: language\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Enhaces the list of languages with the info provided by the site settings\n\t\t\t\t\t\t\t\tvar available_languages_object = _.object(_.pluck(result.availableLanguages, 'locale'), result.availableLanguages);\n\n\t\t\t\t\t\t\t\tresult.availableLanguages = [];\n\n\t\t\t\t\t\t\t\t_.each(host.languages, pushLanguage);\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (result.currentHost)\n\t\t\t\t\t{\n\t\t\t\t\t\t//////////////////////////////////////////////////////////////\n\t\t\t\t\t\t// Set the available currency based on the hosts currencies //\n\t\t\t\t\t\t//////////////////////////////////////////////////////////////\n\t\t\t\t\t\tvar available_currencies_object = _.object(_.pluck(result.availableCurrencies, 'code'), result.availableCurrencies);\n\t\t\t\t\t\tresult.availableCurrencies = [];\n\t\t\t\t\t\t_.each(host.currencies, pushCurrency);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//////////////////////////////////////\n\t\t\t// Sets the Currency of the shopper //\n\t\t\t//////////////////////////////////////\n\t\t\tvar currency_codes = _.pluck(result.availableCurrencies, 'code');\n\n\t\t\t// there is a code passed in and it's on the list lets use it\n\t\t\tif (request.getParameter('cur') && ~currency_codes.indexOf(request.getParameter('cur')))\n\t\t\t{\n\t\t\t\tresult.currentCurrency = _.find(result.availableCurrencies, function (currency)\n\t\t\t\t{\n\t\t\t\t\treturn currency.code === request.getParameter('cur');\n\t\t\t\t});\n\t\t\t\tresult.currencyCodeSpecifiedOnUrl = result.currentCurrency.code;\n\t\t\t}\n\t\t\t// The currency of the current user is valid fot this host let's just use that\n\t\t\telse if (ModelsInit.session.getShopperCurrency().code && ~currency_codes.indexOf(ModelsInit.session.getShopperCurrency().code))\n\t\t\t{\n\t\t\t\tresult.currentCurrency = _.find(result.availableCurrencies, function (currency)\n\t\t\t\t{\n\t\t\t\t\treturn currency.code === ModelsInit.session.getShopperCurrency().code;\n\t\t\t\t});\n\t\t\t\tresult.currencyCodeSpecifiedOnUrl = result.currentCurrency.code;\n\t\t\t}\n\t\t\telse if (result.availableCurrencies && result.availableCurrencies.length)\n\t\t\t{\n\t\t\t\tresult.currentCurrency = _.find(result.availableCurrencies, function (currency)\n\t\t\t\t{\n\t\t\t\t\tresult.currencyCodeSpecifiedOnUrl =  currency.code;\n\t\t\t\t\treturn currency.isdefault === 'T';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// We should have result.currentCurrency setted by now\n\t\t\tresult.currentCurrency && ModelsInit.session.setShopperCurrency(result.currentCurrency.internalid);\n\n\t\t\tresult.currentCurrency = _.find(result.availableCurrencies, function (currency)\n\t\t\t{\n\t\t\t\treturn currency.code === ModelsInit.session.getShopperCurrency().code;\n\t\t\t});\n\n\t\t\t///////////////////////////////////////\n\t\t\t// Sets the Language in the Shopper //\n\t\t\t///////////////////////////////////////\n\t\t\tif (!result.currentLanguage)\n\t\t\t{\n\t\t\t\tvar shopper_preferences = ModelsInit.session.getShopperPreferences()\n\t\t\t\t,\tshopper_locale = shopper_preferences.language.locale\n\t\t\t\t,\tlocales = _.pluck(result.availableLanguages, 'locale');\n\n\t\t\t\tif (request.getParameter('lang') && ~locales.indexOf(request.getParameter('lang')))\n\t\t\t\t{\n\t\t\t\t\tresult.currentLanguage = _.find(result.availableLanguages, function (language)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn language.locale === request.getParameter('lang');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (shopper_locale && ~locales.indexOf(shopper_locale))\n\t\t\t\t{\n\t\t\t\t\tresult.currentLanguage = _.find(result.availableLanguages, function (language)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn language.locale === shopper_locale;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (result.availableLanguages && result.availableLanguages.length)\n\t\t\t\t{\n\t\t\t\t\tresult.currentLanguage = _.find(result.availableLanguages, function (language)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn language.isdefault === 'T';\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We should have result.currentLanguage set by now\n\t\t\tresult.currentLanguage && ModelsInit.session.setShopperLanguageLocale(result.currentLanguage.locale);\n\n\t\t\t// Shopper Price Level\n\t\t\tresult.currentPriceLevel = ModelsInit.session.getShopperPriceLevel().internalid ? ModelsInit.session.getShopperPriceLevel().internalid : ModelsInit.session.getSiteSettings(['defaultpricelevel']).defaultpricelevel;\n\n\t\t\treturn result;\n\t\t}\n\n\t\t// @method getPermissions @return {transactions: Object, lists: Object} the permissions the current user has for each role. \n\t,\tgetPermissions: function ()\n\t\t{\n\t\t\t// transactions.tranCustInvc.1,transactions.tranCashSale.1\n\t\t\tvar purchases_permissions = [\n\t\t\t\t\tModelsInit.context.getPermission('TRAN_SALESORD')\n\t\t\t\t,\tModelsInit.context.getPermission('TRAN_CUSTINVC')\n\t\t\t\t,\tModelsInit.context.getPermission('TRAN_CASHSALE')\n\t\t\t\t]\n\t\t\t,\tpurchases_returns_permissions = [\n\t\t\t\t\tModelsInit.context.getPermission('TRAN_RTNAUTH')\n\t\t\t\t,\tModelsInit.context.getPermission('TRAN_CUSTCRED')\n\t\t\t\t];\n\n\t\t\treturn\t{\n\t\t\t\ttransactions: {\n\t\t\t\t\ttranCashSale: ModelsInit.context.getPermission('TRAN_CASHSALE')\n\t\t\t\t,\ttranCustCred: ModelsInit.context.getPermission('TRAN_CUSTCRED')\n\t\t\t\t,\ttranCustDep: ModelsInit.context.getPermission('TRAN_CUSTDEP')\n\t\t\t\t,\ttranCustPymt: ModelsInit.context.getPermission('TRAN_CUSTPYMT')\n\t\t\t\t,\ttranStatement: ModelsInit.context.getPermission('TRAN_STATEMENT')\n\t\t\t\t,\ttranCustInvc: ModelsInit.context.getPermission('TRAN_CUSTINVC')\n\t\t\t\t,\ttranItemShip: ModelsInit.context.getPermission('TRAN_ITEMSHIP')\n\t\t\t\t,\ttranSalesOrd: ModelsInit.context.getPermission('TRAN_SALESORD')\n\t\t\t\t,\ttranEstimate: ModelsInit.context.getPermission('TRAN_ESTIMATE')\n\t\t\t\t,\ttranRtnAuth: ModelsInit.context.getPermission('TRAN_RTNAUTH')\n\t\t\t\t,\ttranDepAppl: ModelsInit.context.getPermission('TRAN_DEPAPPL')\n\t\t\t\t,\ttranSalesOrdFulfill: ModelsInit.context.getPermission('TRAN_SALESORDFULFILL')\n\t\t\t\t,\ttranFind: ModelsInit.context.getPermission('TRAN_FIND')\n\t\t\t\t,\ttranPurchases: _.max(purchases_permissions)\n\t\t\t\t,\ttranPurchasesReturns: _.max(purchases_returns_permissions)\n\t\t\t\t}\n\t\t\t,\tlists: {\n\t\t\t\t\tregtAcctRec: ModelsInit.context.getPermission('REGT_ACCTREC')\n\t\t\t\t,\tregtNonPosting: ModelsInit.context.getPermission('REGT_NONPOSTING')\n\t\t\t\t,\tlistCase: ModelsInit.context.getPermission('LIST_CASE')\n\t\t\t\t,\tlistContact: ModelsInit.context.getPermission('LIST_CONTACT')\n\t\t\t\t,\tlistCustJob: ModelsInit.context.getPermission('LIST_CUSTJOB')\n\t\t\t\t,\tlistCompany: ModelsInit.context.getPermission('LIST_COMPANY')\n\t\t\t\t,\tlistIssue: ModelsInit.context.getPermission('LIST_ISSUE')\n\t\t\t\t,\tlistCustProfile: ModelsInit.context.getPermission('LIST_CUSTPROFILE')\n\t\t\t\t,\tlistExport: ModelsInit.context.getPermission('LIST_EXPORT')\n\t\t\t\t,\tlistFind: ModelsInit.context.getPermission('LIST_FIND')\n\t\t\t\t,\tlistCrmMessage: ModelsInit.context.getPermission('LIST_CRMMESSAGE')\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// @method getHost @return {String} return the current url's host\n\t,\tgetHost: function ()\n\t\t{\n\t\t\treturn request.getURL().match(/http(s?):\\/\\/([^\\/]*)\\//)[2];\n\t\t}\n\n//SERVICES\n\n\t\t// @method sendContent writes the given content in the request object using the right headers, and content type. \n\t\t// Deprecated: Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module\n\t\t// @param {String} content\n\t\t// @param {status: Number, cache: Boolean} options\n\t,\tsendContent: function (content, options)\n\t\t{\n\t\t\t// Default options\n\t\t\toptions = _.extend({status: 200, cache: false}, options || {});\n\n\t\t\t// Triggers an event for you to know that there is content being sent - this same event is also triggered in ServiceController\n\t\t\tApplication.trigger('before:Application.sendContent', content, options);\n\n\t\t\t// We set a custom status\n\t\t\tresponse.setHeader('Custom-Header-Status', parseInt(options.status, 10).toString());\n\n\t\t\t// The content type will be here\n\t\t\tvar content_type = false;\n\n\t\t\t// If its a complex object we transform it into an string\n\t\t\tif (_.isArray(content) || _.isObject(content))\n\t\t\t{\n\t\t\t\tcontent_type = 'JSON';\n\t\t\t\tcontent = JSON.stringify( content );\n\t\t\t}\n\n\t\t\t// If you set a jsonp callback this will honor it\n\t\t\tif (request.getParameter('jsonp_callback'))\n\t\t\t{\n\t\t\t\tcontent_type = 'JAVASCRIPT';\n\t\t\t\tcontent = request.getParameter('jsonp_callback') + '(' + content + ');';\n\t\t\t}\n\n\t\t\t//Set the response cache option\n\t\t\tif (options.cache)\n\t\t\t{\n\t\t\t\tresponse.setCDNCacheable(options.cache);\n\t\t\t}\n\n\t\t\t// Content type was set so we send it\n\t\t\tcontent_type && response.setContentType(content_type);\n\n\t\t\tresponse.write(content);\n\n\t\t\t// Triggers an event for you to know that there is content being sent - this same event is also triggered in ServiceController\n\t\t\tApplication.trigger('after:Application.sendContent', content, options);\n\t\t}\n\n\t\t// @method processError builds an error object suitable to send back in the http response.\n\t\t// @param {nlobjError|Application.Error}\n\t\t// @returns {errorStatusCode:Number,errorCode:String,errorMessage:String} an error object suitable to send back in the http response.\n\t\t// @deprecated Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module\n\t,\tprocessError: function (e)\n\t\t{\n\t\t\tvar status = 500\n\t\t\t,\tcode = 'ERR_UNEXPECTED'\n\t\t\t,\tmessage = 'error';\n\n\t\t\tif (e instanceof nlobjError)\n\t\t\t{\n\t\t\t\tcode = e.getCode();\n\t\t\t\tmessage = e.getDetails();\n\t\t\t\tstatus = badRequestError.status;\n\t\t\t}\n\t\t\telse if (_.isObject(e) && !_.isUndefined(e.status))\n\t\t\t{\n\t\t\t\tstatus = e.status;\n\t\t\t\tcode = e.code;\n\t\t\t\tmessage = e.message;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar error = nlapiCreateError(e);\n\t\t\t\tcode = error.getCode();\n\t\t\t\tmessage = (error.getDetails() !== '') ? error.getDetails() : error.getCode();\n\t\t\t}\n\n\t\t\tif (code === 'INSUFFICIENT_PERMISSION')\n\t\t\t{\n\t\t\t\tstatus = forbiddenError.status;\n\t\t\t\tcode = forbiddenError.code;\n\t\t\t\tmessage = forbiddenError.message;\n\t\t\t}\n\n\t\t\tvar content = {\n\t\t\t\terrorStatusCode: parseInt(status,10).toString()\n\t\t\t,\terrorCode: code\n\t\t\t,\terrorMessage: message\n\t\t\t};\n\n\t\t\tif (e.errorDetails)\n\t\t\t{\n\t\t\t\tcontent.errorDetails = e.errorDetails;\n\t\t\t}\n\n\t\t\treturn content;\n\t\t}\n\n\t\t// @method sendError process the error and then writes it in the http response. @param {nlobjError|Application.Error} e\n\t\t// @deprecated Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module\n\t,\tsendError: function (e)\n\t\t{\n\t\t\t// @event before:Application.sendError event triggered just before sending an application error response.\n\t\t\t// Handler receive the @?class Application.Error to be written in the response as first parameter\n\t\t\tApplication.trigger('before:Application.sendError', e);\n\n\t\t\tvar content = Application.processError(e)\n\t\t\t,\tcontent_type = 'JSON';\n\n\t\t\tresponse.setHeader('Custom-Header-Status', content.errorStatusCode);\n\n\t\t\tif (request.getParameter('jsonp_callback'))\n\t\t\t{\n\t\t\t\tcontent_type = 'JAVASCRIPT';\n\t\t\t\tcontent = request.getParameter('jsonp_callback') + '(' + JSON.stringify(content) + ');';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontent = JSON.stringify(content);\n\t\t\t}\n\n\t\t\tresponse.setContentType(content_type);\n\n\t\t\tresponse.write(content);\n\n\t\t\t// @event before:Application.sendError\n\t\t\tApplication.trigger('after:Application.sendError', e);\n\t\t}\n\n//SEARCHES\n\n\t\t// @method getPaginatedSearchResults @public \n\t\t// @param {page:Number,columns:Array<nlobjSearchColumn>,filters:Array<nlobjSearchFilter>,record_type:String,results_per_page:Number} options\n\t\t// @returns {records:Array<nlobjSearchResult>,totalRecordsFound:Number,page:Number}\n\t,\tgetPaginatedSearchResults: function (options)\n\t\t{\n\t\t\toptions = options || {};\n\n\t\t\tvar results_per_page = options.results_per_page || SC.Configuration.results_per_page\n\t\t\t,\tpage = options.page || 1\n\t\t\t,\tcolumns = options.columns || []\n\t\t\t,\tfilters = options.filters || []\n\t\t\t,\trecord_type = options.record_type\n\t\t\t,\trange_start = (page * results_per_page) - results_per_page\n\t\t\t,\trange_end = page * results_per_page\n\t\t\t,\tdo_real_count = _.any(columns, function (column)\n\t\t\t\t{\n\t\t\t\t\treturn column.getSummary();\n\t\t\t\t})\n\t\t\t,\tresult = {\n\t\t\t\t\tpage: page\n\t\t\t\t,\trecordsPerPage: results_per_page\n\t\t\t\t,\trecords: []\n\t\t\t\t};\n\n\t\t\tif (!do_real_count || options.column_count)\n\t\t\t{\n\t\t\t\tvar column_count = options.column_count || new nlobjSearchColumn('internalid', null, 'count')\n\t\t\t\t,\tcount_result = nlapiSearchRecord(record_type, null, filters, [column_count]);\n\n\t\t\t\tresult.totalRecordsFound = parseInt(count_result[0].getValue(column_count), 10);\n\t\t\t}\n\n\t\t\tif (do_real_count || (result.totalRecordsFound > 0 && result.totalRecordsFound > range_start))\n\t\t\t{\n\t\t\t\tvar search = nlapiCreateSearch(record_type, filters, columns).runSearch();\n\t\t\t\tresult.records = search.getResults(range_start, range_end);\n\n\t\t\t\tif (do_real_count && !options.column_count)\n\t\t\t\t{\n\t\t\t\t\tresult.totalRecordsFound = search.getResults(0, 1000).length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\n\t\t// @method getAllSearchResults @public \n\t\t// @param {String} record_type\n\t\t// @param {Array<nlobjSearchFilter>} filters\n\t\t// @param {Array<nlobjSearchColumn>} columns\n\t\t// @return {Array<nlobjSearchResult>}\n\t,\tgetAllSearchResults: function (record_type, filters, columns)\n\t\t{\n\t\t\tvar search = nlapiCreateSearch(record_type, filters, columns);\n\t\t\tsearch.setIsPublic(true);\n\n\t\t\tvar searchRan = search.runSearch()\n\t\t\t,\tbolStop = false\n\t\t\t,\tintMaxReg = 1000\n\t\t\t,\tintMinReg = 0\n\t\t\t,\tresult = [];\n\n\t\t\twhile (!bolStop && ModelsInit.context.getRemainingUsage() > 10)\n\t\t\t{\n\t\t\t\t// First loop get 1000 rows (from 0 to 1000), the second loop starts at 1001 to 2000 gets another 1000 rows and the same for the next loops\n\t\t\t\tvar extras = searchRan.getResults(intMinReg, intMaxReg);\n\n\t\t\t\tresult = Application.searchUnion(result, extras);\n\t\t\t\tintMinReg = intMaxReg;\n\t\t\t\tintMaxReg += 1000;\n\t\t\t\t// If the execution reach the the last result set stop the execution\n\t\t\t\tif (extras.length < 1000)\n\t\t\t\t{\n\t\t\t\t\tbolStop = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t// @method addFilterSite @public @param adds filters to current search filters so it matches given site ids.\n\t\t// @param {Array<String>} filters\n\t,\taddFilterSite: function (filters)\n\t\t{\n\t\t\tvar search_filter_array = this.getSearchFilterArray();\n\n\t\t\tsearch_filter_array.length && filters.push(new nlobjSearchFilter('website', null, 'anyof', search_filter_array));\n\t\t}\n\n\t\t// @method addFilterSite @public @param adds filters to current search filters so it matches given website item ids.\n\t\t// @param {Array<String>} filters\n\t,\taddFilterItem: function (filters)\n\t\t{\n\t\t\tvar search_filter_array = this.getSearchFilterArray();\n\n\t\t\tsearch_filter_array.length && filters.push(new nlobjSearchFilter('website', 'item', 'anyof', search_filter_array));\n\t\t}\n\n\t\t// @method getSearchFilterArray @public @return {Array<String>} current record search filters array taking in account multi site feature\n\t,\tgetSearchFilterArray: function ()\n\t\t{\n\t\t\tvar site_id = ModelsInit.session.getSiteSettings(['siteid']).siteid\n\t\t\t,\tfilter_site = SC.Configuration.filter_site\n\t\t\t,\tsearch_filter_array = [];\n\n\t\t\t// Validate if: MULTISITE, site_id, filter_site and also if filter_site is different of 'all'\n\t\t\tif (ModelsInit.context.getFeature('MULTISITE') && site_id && filter_site && 'all' !== filter_site)\n\t\t\t{\n\t\t\t\tsearch_filter_array = filter_site instanceof Array ? filter_site : [];\n\t\t\t\tsearch_filter_array.push(site_id, '@NONE@');\n\t\t\t}\n\n\t\t\treturn _.uniq(search_filter_array);\n\t\t}\n\n\t\t// @method searchUnion utility method for unite two arrays @param {Array} target @param {Array} array\n\t,\tsearchUnion: function (target, array)\n\t\t{\n\t\t\treturn target.concat(array); // TODO: use _.union\n\t\t}\n\n\t}, Events);\n\n\treturn Application;\n});\n\n\n// Default error objects\n\n// @class globals all properties and functions inside this class are accessible globally\n\n\t// @property {Application.Error} badRequestError\nvar badRequestError = {\n\t\tstatus: 400\n\t,\tcode: 'ERR_BAD_REQUEST'\n\t,\tmessage: 'Bad Request'\n\t}\n\n\t// @property {Application.Error} unauthorizedError\n,\tunauthorizedError = {\n\t\tstatus: 401\n\t,\tcode: 'ERR_USER_NOT_LOGGED_IN'\n\t,\tmessage: 'Not logged In'\n\t}\n\n\t// @property {Application.Error} sessionTimedOutError\n,\tsessionTimedOutError = {\n\t\tstatus: 401\n\t,\tcode: 'ERR_USER_SESSION_TIMED_OUT'\n\t,\tmessage: 'User session timed out'\n\t}\n\n\n\t// @property {Application.Error} forbiddenError\n,\tforbiddenError = {\n\t\tstatus: 403\n\t,\tcode: 'ERR_INSUFFICIENT_PERMISSIONS'\n\t,\tmessage: 'Insufficient permissions'\n\t}\n\n\t// @property {Application.Error} notFoundError\n,\tnotFoundError = {\n\t\tstatus: 404\n\t,\tcode: 'ERR_RECORD_NOT_FOUND'\n\t,\tmessage: 'Not found'\n\t}\n\n\t// @property {Application.Error} methodNotAllowedError\n,\tmethodNotAllowedError = {\n\t\tstatus: 405\n\t,\tcode: 'ERR_METHOD_NOT_ALLOWED'\n\t,\tmessage: 'Sorry, you are not allowed to perform this action.'\n\t}\n\n\t// @property {Application.Error} invalidItemsFieldsAdvancedName\n,\tinvalidItemsFieldsAdvancedName = {\n\t\tstatus: 500\n\t,\tcode:'ERR_INVALID_ITEMS_FIELDS_ADVANCED_NAME'\n\t,\tmessage: 'Please check if the fieldset is created.'\n\t};\n\n// @class Application.Error a high level error object that can be processed and written in the response using processError and sendError methods\n// @property {Number} status\n// @property {String} code\n// @property {String} message\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js\n\n//Backend Configuration file\n// @module ssp.libraries\n\n// @class Configuration Backend Configuration file\ndefine('Configuration', function()\n{\n\t'use strict';\n\n\tSC.Configuration = {\n\n\t\t// @property {String} filter_site Filter by site on Record Lists (possible values: 'all', 'current', [1,2,3])\n\t\t// 'all': all the sites in the account.\n\t\t// 'current': just records under current site.\n\t\t// [1,2,3]: Array of site ids. Current site and not related to any site records will be also considered.\n\t\tfilter_site: 'current'\n\n\t\t// @property {Object} order_checkout_field_keys\n\t,\torder_checkout_field_keys: {\n\t\t\t'items': [\n\t\t\t\t\t'amount'\n\t\t\t\t,\t'promotionamount'\n\t\t\t\t,\t'promotiondiscount'\n\t\t\t\t,\t'orderitemid'\n\t\t\t\t,\t'quantity'\n\t\t\t\t,\t'minimumquantity'\n\t\t\t\t,\t'onlinecustomerprice_detail'\n\t\t\t\t,\t'internalid'\n\t\t\t\t,\t'rate'\n\t\t\t\t,\t'rate_formatted'\n\t\t\t\t,\t'options'\n\t\t\t\t,\t'itemtype'\n\t\t\t\t,\t'itemid'\n\t\t\t\t]\n\t\t\t,\t'giftcertificates': null\n\t\t\t,\t'shipaddress': null\n\t\t\t,\t'billaddress': null\n\t\t\t,\t'payment': null\n\t\t\t,\t'summary': null\n\t\t\t,\t'promocodes': null\n\t\t\t,\t'shipmethod': null\n\t\t\t,\t'shipmethods': null\n\t\t\t,\t'agreetermcondition': null\n\t\t\t,\t'purchasenumber': null\n\t\t}\n\n\t\t// @property {Object} order_shopping_field_keys\n\t,\torder_shopping_field_keys: {\n\t\t\t'items': [\n\t\t\t\t\t'amount'\n\t\t\t\t,\t'promotionamount'\n\t\t\t\t,\t'promotiondiscount'\n\t\t\t\t,\t'orderitemid'\n\t\t\t\t,\t'quantity'\n\t\t\t\t,\t'minimumquantity'\n\t\t\t\t,\t'onlinecustomerprice_detail'\n\t\t\t\t,\t'internalid'\n\t\t\t\t,\t'options'\n\t\t\t\t,\t'itemtype'\n\t\t\t\t,\t'rate'\n\t\t\t\t,\t'rate_formatted'\n\t\t\t]\n\t\t\t,\t'shipaddress': null\n\t\t\t,\t'summary': null\n\t\t\t,\t'promocodes': null\n\t\t}\n\n\t\t// @property {String} items_fields_advanced_name\n\t,\titems_fields_advanced_name: 'order'\n\n\t\t// @property {Array<String>} items_fields_standard_keys\n\t,\titems_fields_standard_keys: [\n\t\t\t\t'canonicalurl'\n\t\t\t,\t'displayname'\n\t\t\t,\t'internalid'\n\t\t\t,\t'itemid'\n\t\t\t,\t'itemoptions_detail'\n\t\t\t,\t'itemtype'\n\t\t\t,\t'minimumquantity'\n\t\t\t,\t'onlinecustomerprice_detail'\n\t\t\t,\t'pricelevel1'\n\t\t\t,\t'pricelevel1_formatted'\n\t\t\t,\t'isinstock'\n\t\t\t,\t'ispurchasable'\n\t\t\t,\t'isbackorderable'\n\t\t\t,\t'outofstockmessage'\n\t\t\t,\t'stockdescription'\n\t\t\t,\t'showoutofstockmessage'\n\t\t\t,\t'storedisplayimage'\n\t\t\t,\t'storedisplayname2'\n\t\t\t,\t'storedisplaythumbnail'\n\t\t\t,\t'isfulfillable'\n\t\t]\n\n\t\t// @property {Configuration.ProductReviews} product_reviews product reviews configuration\n\t\t// @class Configuration.ProductReviews\n\t,\tproduct_reviews: {\n\t\t\t// @property {Number} maxFlagsCount is the number at which a review is marked as flagged by users\n\t\t\tmaxFlagsCount: 2\n\t\t\t// @property {Boolean} loginRequired\n\t\t,\tloginRequired: false\n\t\t\t// @property {Number} flaggedStatus the id of the flaggedStatus. If maxFlagsCount is reached, this will be its new status.\n\t\t,\tflaggedStatus: 4\n\t\t\t// @property {String} approvedStatus id of the approvedStatus\n\t\t,\tapprovedStatus: '2'\n\t\t\t// @property {Number} pendingApprovalStatus id of pendingApprovalStatus\n\t\t,\tpendingApprovalStatus:\t1\n\t\t\t// @property {Number} resultsPerPage\n\t\t,\tresultsPerPage: 25\n\t\t}\n\t\t// @class Configuration\n\n\t\t// @property {Configuration.ProductLists} product_lists Product lists configuration.\n\t\t// Note: for activating the \"single list\" user experience use additionEnabled==false && list_templates.length === 1\n\t\t// @class Configuration.ProductLists\n\t,\tproduct_lists: {\n\n\t\t\t// @propert {Boolean} additionEnabled can the user modify product lists ?  This is add new ones, edit and delete them.\n\t\t\tadditionEnabled: true\n\n\t\t\t// @propert {Boolean} loginRequired must the user be logged in for the product list experience to be enabled ?\n\t\t,\tloginRequired: true\n\n\t\t\t// @propert {Array<Configuration.ProductReviews.Template>} list_templates loginRequired Predefined lists, a.k.a templates:\n\t\t\t// Administrators can define predefined list of templates. New customers will have these template lists\n\t\t\t// by default. This lists will be of type=predefined and they cannot be modified/deleted.\n\t\t\t// Note: Associated record will be created only when the customer add some product to the list.\n\t\t\t// @class Configuration.ProductReviews.Template\n\t\t,\tlist_templates: [\n\t\t\t\t{\n\t\t\t\t\t// @property {String} templateid\n\t\t\t\t\ttemplateid: '1'\n\t\t\t\t\t// @property {String} name\n\t\t\t\t,\tname: 'My list'\n\t\t\t\t\t// @property {String} description\n\t\t\t\t,\tdescription: 'An example predefined list'\n\t\t\t\t\t// @property {id:String,name:String} scope\n\t\t\t\t,\tscope: {\n\t\t\t\t\t\tid: '2'\n\t\t\t\t\t,\tname: 'private'\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t,\t{\n\t\t\t\t\ttemplateid: '2'\n\t\t\t\t,\tname: 'Saved for Later'\n\t\t\t\t,\tdescription: 'This is for the cart saved for later items'\n\t\t\t\t,\tscope: {\n\t\t\t\t\t\tid: '2'\n\t\t\t\t\t,\tname: 'private'\n\t\t\t\t\t}\n\t\t\t\t,\ttype: {\n\t\t\t\t\t\tid: '2'\n\t\t\t\t\t,\tname: 'later'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t,\t{\n\t\t\t\t\ttemplateid: '3'\n\t\t\t\t,\tname: 'Request a Quote'\n\t\t\t\t,\tdescription: 'This is for the request a quote items'\n\t\t\t\t,\tscope: {\n\t\t\t\t\t\tid: '2'\n\t\t\t\t\t,\tname: 'private'\n\t\t\t\t\t}\n\t\t\t\t,\ttype: {\n\t\t\t\t\t\tid: '4'\n\t\t\t\t\t,\tname: 'quote'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t\t// @class Configuration.ProductReviews\n\t\t}\n\t\t// @class Configuration\n\n\t\t// @property {default_values:Object} cases Support Cases configuration\n\t,\tcases: {\n\t\t\t// Initial required default values.\n\t\t\tdefault_values:\n\t\t\t{\n\t\t\t\t// Status value used when submitting a new case.\n\t\t\t\tstatus_start: {\n\t\t\t\t\tid: '1'\n\t\t\t\t,\tname: 'Not Started'\n\t\t\t\t}\n\n\t\t\t\t// Status value used when closing an existing case.\n\t\t\t,\tstatus_close: {\n\t\t\t\t\tid: '5'\n\t\t\t\t,\tname: 'Closed'\n\t\t\t\t}\n\n\t\t\t\t// Case origin\n\t\t\t,\torigin: {\n\t\t\t\t\tid: '-5'\n\t\t\t\t,\tname: 'Web'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// @property {QuotesBackendConfiguration} quote Quote configuration\n\t\t// @class QuotesBackendConfiguration\n\t,\tquote: {\n\t\t\t// @property {Number} days_to_expire Days before the expiration of the quote\n\t\t\tdays_to_expire: 7\n\t\t\t//@property {String} purchase_ready_status_id Set the id used by SCA to know when the estimate/Quote have is ready to be purchased by the shopper\n\t\t\t//The list of status is configured in: Setup > Sales > Customer Statuses\n\t\t,\tpurchase_ready_status_id: '12'\n\t\t}\n\t\t// @class Configuration\n\n\t\t// @property {QuotesToSalesOrderWizardBackendConfiguration} quote_to_salesorder_wizard QuoteToSalesOrder configuration\n\t\t// @class QuotesToSalesOrderWizardBackendConfiguration\n\t,\tquote_to_salesorder_wizard: {\n\t\t\t//@property {String} invoice_form_id Set the id of the invoice form used to generate sales order using terms\n\t\t\t//This value can be set by going to: Customization > Forms > Transaction Forms. Find the entry of type: Sales Order and name: Standard Sales Order - Invoice\n\t\t\t//for that value copy here its INTERNAL ID\n\t\t\tinvoice_form_id: '89'\n\t\t}\n\t\t// @class Configuration\n\n\t\t// @property {cancelUrlRoot:String} returnAuthorizations Return Authorization Configuration\n\t,\treturnAuthorizations: {\n\t\t\t// Cancel Return System Path\n\t\t\tcancelUrlRoot: 'https://system.netsuite.com'\n\t\t\t// cancelUrlRoot: 'https://system.f.netsuite.com'\n\t\t\t// cancelUrlRoot: 'https://system.na1.netsuite.com'\n\t\t\t// cancelUrlRoot: 'https://system.na1.beta.netsuite.com'\n\t\t\t// cancelUrlRoot: 'https://system.sandbox.netsuite.com'\n\t\t}\n\n\t\t// @property {Number} results_per_page results per page in default Application record search pagination\n\t,\tresults_per_page: 20\n\n\t\t// @property {Boolean} checkout_skip_login Checkout skip login mode - false by default. If enabled,\n\t\t// anonymous users will skip the login page and go directly to the Checkout's wizard first step with\n\t\t// the possibility of login.\n\t,\tcheckout_skip_login: false\n\n\t\t// @property {Array<Configuration.Host>} hosts Multi Language Support - not included by default.\n\t\t// If included, must set the according hosts for each language. Next, a sample configuration:\n\t,\thosts: [\n\n\t\t\t// @class Configuration.Host\n\t\t\t// @property {String} title\n\t\t\t// @property {Array<Configuration.Host.Currency>} currencies\n\t\t\t// @property {Array<Configuration.Host.Language>} languages\n\n\t\t\t// @class Configuration.Host.Currency\n\t\t\t// @property {String} title\n\t\t\t// @property {String} code\n\n\t\t\t// @class Configuration.Host.Language\n\t\t\t// @property {String} title\n\t\t\t// @property {String} host\n\t\t\t// @property {String} locale\n\n\t\t\t// @class Configuration\n\n\t\t\t/*\n\t\t\t{\n\t\t\t\ttitle:'United States'\n\t\t\t,\tcurrencies:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'American Dolars'\n\t\t\t\t\t,\tcode:'USD'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t,\tlanguages:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'English'\n\t\t\t\t\t,\thost:'en.site.com'\n\t\t\t\t\t,\tlocale:'en_US'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\t,\t{\n\t\t\t\ttitle:'South America'\n\t\t\t,\tcurrencies:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'American Dolars'\n\t\t\t\t\t,\tcode:'USD'\n\t\t\t\t\t}\n\t\t\t\t,\t{\n\t\t\t\t\t\ttitle:'Peso Argentino'\n\t\t\t\t\t,\tcode:'ARS'\n\t\t\t\t\t}\n\t\t\t\t,\t{\n\t\t\t\t\t\ttitle:'Peso Uruguayo'\n\t\t\t\t\t,\tcode:'UYU'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t,\tlanguages:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'Spanish'\n\t\t\t\t\t,\thost:'sa.site.dev'\n\t\t\t\t\t,\tlocale:'es_ES'\n\t\t\t\t\t}   \n\t\t\t\t,\t{\n\t\t\t\t\t\ttitle:'Portuguese'\n\t\t\t\t\t,\thost:'pt.sa.site.dev'\n\t\t\t\t\t,\tlocale:'pt_BR'\n\t\t\t\t\t}\n\t\t\t\t,\t{\n\t\t\t\t\t\ttitle:'English'\n\t\t\t\t\t,\thost:'en.sa.site.dev'\n\t\t\t\t\t,\tlocale:'en'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle:'French'\n\t\t\t,\tcurrencies:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'Euro'\n\t\t\t\t\t,\tcode:'EUR'\n\t\t\t\t\t}\n\t\t\t\t,\t{\n\t\t\t\t\t\ttitle:'American Dolars'\n\t\t\t\t\t,\tcode:'USD'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t,\tlanguages:[\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:'French'\n\t\t\t\t\t,\thost:'fr.site.com'\n\t\t\t\t\t,\tlocale:'fr_FR'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\t*/\n\t\t]\n\n\t\t// @property {Array<Configuration.Publish>} publish Here you can specify objects that will be exported to the frontend using environment.ssp.\n\t\t// A model specified in \"model\" will be created and the function specified in \"call\" will return\n\t\t// a value that will be retrieved in the frontend by \"key\" calling SC.getPublishedObject(\"key1\")\n\t,\tpublish:[\n\t\t\t// @class Configuration.Publish\n\t\t\t// @param {String} key @param {String} model @param {String} call the function name to call\n\t\t\t// @class Configuration\n\t\t\t/*\n\t\t\t{\n\t\t\t\tkey:'key1'\n\t\t\t,\tmodel:'model'\n\t\t\t,\tcall:'functionName'\n\t\t\t}\n\t\t,\t{\n\t\t\t\tkey:'key2'\n\t\t\t,\tmodel:'model'\n\t\t\t,\tcall:'functionName'\n\t\t\t}\n\t\t\t*/\n\t\t]\n\n\t\t// @property {Boolean} isMultiShippingEnabled must be truthy for the multiple shipping experience to be enabled (turned off by default)\n\t,\tisMultiShippingEnabled: false\n\t\t// @property {Boolean} isSCISIntegrationEnabled must be truthy for the omni channel experience to be enabled (turned on by default)\n\t,\tisSCISIntegrationEnabled: true\n\n\t,\tlocationTypeMapping: {\n\t\t\tstore: {\n\t\t\t\tinternalid: '1'\n\t\t\t,\tname: 'Store'\n\t\t\t}\n\t\t}\n\t\t// @property {Boolean} The use of CDS and CMS are mutually exclusive, if you use CMS you can't use CDS, or if you use CDS you can't use CMS\n\t\t// By default we use CMS, so if you are going to use CDS, set 'useCMS' to 'false'\n\t,\tuseCMS: true\n\n\t};\n\n\treturn SC.Configuration;\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Console.js\n\ndefine('Console', ['underscore'], function (_)\n{\n\t'use strict';\n\n\t// Create server side console\n\t// use to log on SSP application\n\tif (typeof console === 'undefined') {\n\t\tconsole = {};\n\t}\n\n\t/* Mostly to display the actual UNEXPECTED_ERROR */\n\tfunction basicClone(value)\n\t{\n\t\tvar t = typeof value;\n\t\tif (t === 'function')\n\t\t{\n\t\t\treturn 'function';\n\t\t}\n\t\telse if (!value || t !== 'object')\n\t\t{\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar o = {};\n\t\t\tObject.keys(value).forEach(function (key)\n\t\t\t{\n\t\t\t\tvar val = value[key];\n\t\t\t\tvar t2 = typeof(val);\n\t\t\t\tif (t2 === 'string' || t2 === 'number' || t2 === 'boolean')\n\t\t\t\t{\n\t\t\t\t\to[key] = val;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\to[key] = t2;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn o;\n\t\t}\n\t}\n\n\tfunction stringify(value)\n\t{\n\t\tif (value && value.toJSON)\n\t\t{\n\t\t\treturn value.toJSON();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = basicClone(value);\n\t\t\treturn JSON.stringify(value);\n\t\t}\n\t}\n\n\t// Pass these methods through to the console if they exist, otherwise just\n\t// fail gracefully. These methods are provided for convenience.\n\tvar console_methods = 'assert clear count debug dir dirxml exception group groupCollapsed groupEnd info log profile profileEnd table time timeEnd trace warn'.split(' ')\n\t,\tidx = console_methods.length\n\t,\tnoop = function(){};\n\n\twhile (--idx >= 0)\n\t{\n\t\tvar method = console_methods[idx];\n\n\t\tif (typeof console[method] === 'undefined')\n\t\t{\n\t\t\tconsole[method] = noop;\n\t\t}\n\t}\n\n\tif (typeof console.memory === 'undefined')\n\t{\n\t\tconsole.memory = {};\n\t}\n\n\t_.each({'log': 'DEBUG', 'info': 'AUDIT', 'error': 'EMERGENCY', 'warn': 'ERROR'}, function (value, key)\n\t{\n\t\tconsole[key] = function ()\n\t\t{\n\t\t\tvar title, details;\n\t\t\tif (arguments.length > 1)\n\t\t\t{\n\t\t\t\ttitle = arguments[0];\n\t\t\t\ttitle = typeof title === 'object'? stringify(title): title;\n\t\t\t\tdetails = arguments[1]; \n\t\t\t\tdetails = typeof details === 'object'? stringify(details): details; \n\t\t\t}else\n\t\t\t{\n\t\t\t\ttitle = '';\n\t\t\t\tdetails = arguments[0] || 'null';\n\t\t\t}\n\t\t\tnlapiLogExecution(value,  title, details);\n\t\t};\n\t});\n\n\t_.extend(console, {\n\n\t\ttimeEntries: []\n\n\t,\ttime: function (text)\n\t\t{\n\t\t\tif (typeof text === 'string')\n\t\t\t{\n\t\t\t\tconsole.timeEntries[text] = Date.now();\n\t\t\t}\n\t\t}\n\n\t,\ttimeEnd: function (text)\n\t\t{\n\t\t\tif (typeof text === 'string')\n\t\t\t{\n\t\t\t\tif (!arguments.length)\n\t\t\t\t{\n\t\t\t\t\tconsole.warn('TypeError:', 'Not enough arguments');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (typeof console.timeEntries[text] !== 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(text + ':', Date.now() - console.timeEntries[text] + 'ms');\n\t\t\t\t\t\tdelete console.timeEntries[text];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn console;\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js\n\n/*\n@module ssp.libraries\n\nContains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.\n\n\n@class Events\n\nA module that can be mixed in to *any object* in order to provide it with\ncustom events. You may bind with `on` or remove with `off` callback functions\nto an event; triggering an event fires all callbacks in succession.\n\n\tvar object = {};\n\t_.extend(object, Events);\n\tobject.on('expand', function(){ alert('expanded'); });\n\tobject.trigger('expand');\n\n*/\ndefine(\n\t'Events'\n,\t['underscore']\n,\tfunction(_)\n{\n\t'use strict';\n\n\tvar slice = Array.prototype.slice\n\t\t// Regular expression used to split event strings\n\t,\teventSplitter = /\\s+/;\n\n\tvar Events = {\n\n\t\t// @method on Bind one or more space separated events, `events`, to a `callback`\n\t\t// function. Passing `\"all\"` will bind the callback to all events fired.\n\t\t// @param {String|Array<String>} events @param {Function} callback @param {Object} context @return {Backone.Events}\n\t\ton: function(events, callback, context) {\n\t\t\tvar calls, event, node, tail, list;\n\n\t\t\tif (!callback)\n\t\t\t{\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tevents = events.split(eventSplitter);\n\t\t\tcalls = this._callbacks || (this._callbacks = {});\n\n\t\t\t// Create an immutable callback list, allowing traversal during\n\t\t\t// modification.  The tail is an empty object that will always be used\n\t\t\t// as the next node.\n\t\t\twhile (!!(event = events.shift())) {\n\t\t\t\tlist = calls[event];\n\t\t\t\tnode = list ? list.tail : {};\n\t\t\t\tnode.next = tail = {};\n\t\t\t\tnode.context = context;\n\t\t\t\tnode.callback = callback;\n\t\t\t\tcalls[event] = {tail: tail, next: list ? list.next : node};\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// @method off Remove one or many callbacks. If `context` is null, removes all callbacks\n\t\t// with that function. If `callback` is null, removes all callbacks for the\n\t\t// event. If `events` is null, removes all bound callbacks for all events.\n\t\t// @param {String|Array<String>} events @param {Function} callback @param {Object} context @return {Backone.Events}\n\t\toff: function(events, callback, context) {\n\t\t\tvar event, calls, node, tail, cb, ctx;\n\n\t\t\t// No events, or removing *all* events.\n\t\t\tif (!(calls = this._callbacks))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!(events || callback || context)) {\n\t\t\t\tdelete this._callbacks;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// Loop through the listed events and contexts, splicing them out of the\n\t\t\t// linked list of callbacks if appropriate.\n\t\t\tevents = events ? events.split(eventSplitter) : _.keys(calls);\n\t\t\twhile (!!(event = events.shift())) {\n\t\t\t\tnode = calls[event];\n\t\t\t\tdelete calls[event];\n\n\t\t\t\tif (!node || !(callback || context))\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a new list, omitting the indicated callbacks.\n\t\t\t\ttail = node.tail;\n\t\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\t\tcb = node.callback;\n\t\t\t\t\tctx = node.context;\n\t\t\t\t\tif ((callback && cb !== callback) || (context && ctx !== context)) {\n\t\t\t\t\t\tthis.on(event, cb, ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// @param trigger Trigger one or many events, firing all bound callbacks. Callbacks are\n\t\t// passed the same arguments as `trigger` is, apart from the event name\n\t\t// (unless you're listening on `\"all\"`, which will cause your callback to\n\t\t// receive the true name of the event as the first argument).\n \t\t// @param {String|Array<String>} events\n\t\ttrigger: function(events) {\n\t\t\tvar event, node, calls, tail, args, all, rest;\n\t\t\tif (!(calls = this._callbacks))\n\t\t\t{\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tall = calls.all;\n\t\t\tevents = events.split(eventSplitter);\n\t\t\trest = slice.call(arguments, 1);\n\n\t\t\t// For each event, walk through the linked list of callbacks twice,\n\t\t\t// first to trigger the event, then to trigger any `\"all\"` callbacks.\n\t\t\twhile (!!(event = events.shift())) {\n\t\t\t\tif (!!(node = calls[event])) {\n\t\t\t\t\ttail = node.tail;\n\t\t\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\t\t\tnode.callback.apply(node.context || this, rest);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!!(node = all)) {\n\t\t\t\t\ttail = node.tail;\n\t\t\t\t\targs = [event].concat(rest);\n\t\t\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\t\t\tnode.callback.apply(node.context || this, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\t};\n\n\t// Aliases for backwards compatibility.\n\tEvents.bind = Events.on;\n\tEvents.unbind = Events.off;\n\n\treturn Events;\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Models.Init.js\n\n// Init.js\n// -------\n// Global variables to be used accross models\n// This is the head of combined file Model.js\n/* exported container, session, settings, customer, context, order */\n\nvar container = null\n,\tsession = null\n,\tcustomer = null\n,\tcontext = null\n,\torder = null;\n\n// only initialize vars when the context actually have the functions\nswitch(nlapiGetContext().getExecutionContext())\n{\n\tcase 'suitelet':\n\t\tcontext = nlapiGetContext();\n\t\tbreak;\n\tcase 'webstore':\n\tcase 'webservices':\n\tcase 'webapplication':\n\t\t//nlapiLogExecution('DEBUG', 'Initializing global vars', nlapiGetContext().getExecutionContext());\n\t\tcontainer = nlapiGetWebContainer();\n\t\tsession = container.getShoppingSession();\n\t\tcustomer = session.getCustomer();\n\t\tcontext = nlapiGetContext();\n\t\torder = session.getOrder();\n\t\tbreak;\n\tdefault:\n\t\t//nlapiLogExecution('DEBUG', 'Omitting initialization of global vars', nlapiGetContext().getExecutionContext());\n\t\tbreak;\n}\n\n\ndefine('Models.Init', function ()\n{\n\t'use strict';\n\n\t// var container = nlapiGetWebContainer()\n\t// ,\tsession = container.getShoppingSession()\n\t// //,\tsettings = session.getSiteSettings()\n\t// ,\tcustomer = session.getCustomer()\n\t// ,\tcontext = nlapiGetContext()\n\t// ,\torder = session.getOrder();\n\n\t// TODO: (migrate) analyze strategy here\n\treturn {\n\t\tcontainer: container\n\t,\tsession: session\n\t,\tcustomer: customer\n\t,\tcontext: context\n\t,\torder: order\n\t};\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js\n\n// @module ssp.libraries\ndefine('SC.EventWrapper',\n\t[\n\t\t'Application'\n\t,\t'Backbone.Validation'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\t\tApplication\n\t\t,\tBackboneValidation\n\t\t,\t_\n\t)\n{\n\t'use strict';\n\n\t/*\n\t@class SCEventWrapper\n\tThe base model class that add supports for: \n\n\t * class inheritance\n\t * basic AOP-like method subscription. \n\n\tExample:\n\n\t\tvar MyCoolThing = SCEventEmitter.extend({\n\t\t\tname: 'MyCoolThing'\n\t\t,\tdance: function(id)\n\t\t\t{\n\t\t\t\treturn this.serialize(nlapiLoadRecord('MyCoolThingRecordType', id));\n\t\t\t}\n\t\t,\tserialize: function() {...TODO...}\n\t\t});\n\n\tand then from a third party code, we can hook in using AOP-like method interception:\n\n\t\tApplication.on('before:MyCoolThing:dance', function(param)\n\t\t{\n\t\t\t... do something before doing the cool thing dance method is called, probably adding/modifying the param object ...\n\t\t})\n\t\t\n\t*/\n\treturn {\n\t\t// @property {String} name Each SC.EventWrapper subclass must have an unique name - if not it won't work. @public\n\t\tname: 'SCEventWrapper'\n\n\t\t/*\n\t\t@method extend use SCEventEmitter.extend to define new models. \n\t\t@public\n\t\t@param {name:String} model the properties and methods of the new class. The name is mandatory\n\t\t@return {SCModel} the new instance model with the new properties added ready to be used\n\t\t*/\n\t,\textend: function (model)\n\t\t{\n\t\t\tif (!model.name && !this.name)\n\t\t\t{\n\t\t\t\tthrow {\n\t\t\t\t\tstatus: 400\n\t\t\t\t,\tcode: 'ERR_MISSING_MODEL_NAME'\n\t\t\t\t,\tmessage: 'Missing model name.'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar new_model = {};\n\n\t\t\t_.extend(new_model, this, model);\n\n\t\t\t_.each(new_model, function (value, key)\n\t\t\t{\n\t\t\t\tif (typeof value === 'function' && key !== 'extend')\n\t\t\t\t{\n\t\t\t\t\tnew_model[key] = wrapFunctionWithEvents(key, new_model, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn new_model;\n\t\t}\n\t};\n\n\t// @method wrapFunctionWithEvents Gives to the received method the ability to trigger events. \n\t// @return {Function} result The function wrapped with events.\n\tfunction wrapFunctionWithEvents (methodName, model, fn)\n\t{\n\t\treturn _.wrap(fn, function (func)\n\t\t{\n\t\t\t// Gets the arguments passed to the function from the execution code (removes func from arguments)\n\t\t\tvar args = _.toArray(arguments).slice(1);\n\n\t\t\t// Fires the 'before:ObjectName.MethodName' event most common 'before:Model.method'\n\t\t\tApplication.trigger.apply(Application, ['before:' + model.name + '.' + methodName, this].concat(args));\n\n\t\t\t// Executes the real code of the method\n\t\t\tvar result = func.apply(this, args);\n\n\t\t\t// Fires the 'before:ObjectName.MethodName' event adding result as 1st parameter\n\t\t\tApplication.trigger.apply(Application, ['after:' + model.name + '.' + methodName, this, result].concat(args));\n\n\t\t\t// Returns the result from the execution of the real code, modifications may happend in the after event\n\t\t\treturn result;\n\t\t});\n\t}\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js\n\n// @module ssp.libraries\n// Supports infrastructure for defining model classes by using @?class SCModel. \ndefine('SC.Model',\n\t[\n\t\t'SC.EventWrapper'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'Backbone.Validation'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCEventWrapper\n\t,\tModelsInit\n\t,\tApplication\n\t,\tBackboneValidation\n\t,\t_\n\t)\n{\n\t'use strict';\n\t/*\n\t@class SCModel Subclasses of SCModel are used to implement the RESTFUL methods for accessing a particular\n\tresource, in general a netsuite record like commerce order, session, or custom record. @extends SCEventWrapper\n\t*/\n\tvar SCModel = SCEventWrapper.extend({\n\n\t\tname: 'SCModel'\n\n\t\t// @property {Object} validation object declaration based on [backbone.validation project](https://github.com/thedersen/backbone.validation). See @?method validate . \n\t\t// @public\n\n\t\t// @method validate validates given data using @?property validation definition \n\t\t// @public\n\t\t// @param {Object} data the data to be validated against @?property validation\n\t\t// @throw {Application.Error} of code 400 if validation fails.\n\t,\tvalidate: function(data)\n\t\t{\n\t\t\t//if the model has specified validation logic\n\t\t\tif (this.validation)\n\t\t\t{\n\t\t\t\tvar validator = _.extend({\n\t\t\t\t\t\tvalidation: this.validation\n\t\t\t\t\t,\tattributes: data\n\t\t\t\t\t}, BackboneValidation.mixin)\n\n\t\t\t\t,\tinvalidAttributes = validator.validate();\n\n\t\t\t\tif (!validator.isValid())\n\t\t\t\t{\n\t\t\t\t\tthrow {\n\t\t\t\t\t\tstatus: 400\n\t\t\t\t\t,\tcode: 'ERR_BAD_REQUEST'\n\t\t\t\t\t,\tmessage: invalidAttributes\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn SCModel;\n\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js\n\n// @module ssp.libraries\ndefine(\n\t'ServiceController.Validations'\n,\t[\n\t\t'underscore'\n\n\t,\t'Application'\n\t,\t'Models.Init'\n\t]\n,\tfunction (\n\t\t_\n\n\t,\tApplication\n\t,\tModelsInit\n\t)\n{\n\n\t'use strict';\n\n\treturn {\n\t\t// @class ServiceController.Validations Contains auxiliary function for checking for permissions and throwing errors used by the @?class ServiceController\n\t\t// @method _evaluatePermissions Evaluates if the permissions demanded are fulfilled by the user of the service\n\t\t// @parameter {transactions: Object, lists: Object} user_permissions The permissions the user has\n\t\t// @parameter {Object} required_permissions Object literal with all the permissions required by the current service\n\t\t// @parameter {String} permissions_operator The operator that must be applied to the array of permissions required by the current service\n\t\t// @return {Boolean} True if the permissions have been validated\n\t\t// TODO: This method should be shared in both back and frontend. Maybe have a copy in Utils and reuse it in Backbone.View.Plugins?\n\t\t_evaluatePermissions: function (user_permissions, required_permissions, permissions_operator)\n\t\t{\n\n\t\t\tpermissions_operator = permissions_operator || 'and';\n\t\t\tvar\tevaluation = permissions_operator !== 'or';\n\n\t\t\tif (permissions_operator !== 'and' && permissions_operator !== 'or')\n\t\t\t{\n\t\t\t\tconsole.log('Invalid permissions operator. Allowed values are: or, and');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!_.isArray(required_permissions))\n\t\t\t{\n\t\t\t\tconsole.log('Invalid permissions format in controller', this.name);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t_.each(required_permissions, function (perm)\n\t\t\t{\n\n\t\t\t\tvar tokens = perm.split('.');\n\n\t\t\t\tvar partial_evaluation = !(tokens.length === 3 &&\n\t\t\t\t\ttokens[2] < 5 &&\n\t\t\t\t\tuser_permissions &&\n\t\t\t\t\tuser_permissions[tokens[0]] &&\n\t\t\t\t\tuser_permissions[tokens[0]][tokens[1]] < tokens[2]);\n\n\t\t\t\tif (permissions_operator === 'or')\n\t\t\t\t{\n\t\t\t\t\tevaluation = evaluation || partial_evaluation;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tevaluation = evaluation &&  partial_evaluation;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn evaluation;\n\t\t}\n\n\t\t// @method requirePermissions @public\n\t\t// @param {Object} options\n\t,\trequirePermissions: function (options)\n\t\t{\n\t\t\tvar required_permissions = (options.list || []).concat(options.extraList || []);\n\n\t\t\tif (!this._evaluatePermissions(Application.getPermissions(), required_permissions, options.operator))\n\t\t\t{\n\t\t\t\tthrow forbiddenError;\n\t\t\t}\n\t\t}\n\n\t\t// @method requireSecure If http protocol is not secure @public @throw {Application.Error} methodNotAllowedError \n\t,\trequireSecure: function ()\n\t\t{\n\t\t\tif (!~this.request.getURL().indexOf('https'))\n\t\t\t{\n\t\t\t\tthrow methodNotAllowedError;\n\t\t\t}\n\t\t}\n\n\t\t// @method requireLoggedInPPS Verifies if user is not logged in and Pwd protected site is enabled, and if registration is enabled @public\n\t\t// @throw {Application.Error} methodNotAllowedError\n\t,\trequireLoggedInPPS: function ()\n\t\t{\n\t\t\t// We've got to disable passwordProtectedSite and loginToSeePrices features if customer registration is disabled.\n\t\t\t// Note that this condition is expressed with 'registrationmandatory' property being 'T'\n\t\t\tvar isRegistrationDisabled = ModelsInit.session.getSiteSettings(['registration']).registration.registrationmandatory === 'T';\n\t\t\tif (!isRegistrationDisabled && SC.Configuration.passwordProtectedSite && !ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\n\t\t// @method requireLogin If user not logged in, throw an error @public\n\t\t// @throw {Application.Error} unauthorizedError \n\t,\trequireLogin: function ()\n\t\t{\n\t\t\tif (!ModelsInit.session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\n\t\t// @method checkLoggedInCheckout Pass only if we are not in checkout OR if we are logged in\n\t\t// @throw {Application.Error} unauthorizedError \n\t,\tcheckLoggedInCheckout: function()\n\t\t{\n\t\t\t//if SECURE AND NOT loggedIn\n\t\t\tif (~request.getURL().indexOf('https') && !session.isLoggedIn2())\n\t\t\t{\n\t\t\t\tthrow unauthorizedError;\n\t\t\t}\n\t\t}\n\t};\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js\n\n// @module ssp.libraries\n// Provides @?class ServiceController utility class for nice service definitions.\ndefine(\n\t'ServiceController'\n,\t[\n\t\t'SC.EventWrapper'\n\t,\t'Application'\n\t,\t'Models.Init'\n\t,\t'ServiceController.Validations'\n\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCEventWrapper\n\t,\tApplication\n\t,\tModelsInit\n\t,\tServiceControllerValidations\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\t/*\n\t@class ServiceController Instances of this class define controllers used by all auto-generated services.\n\tIn SC, for a ServiceController to auto-generate a service, they need to be declared in module's ns.package.json file, for example: \n\n\t\t{\n\t\t\t\"gulp\": {\n\t\t\t\t...\n\t\t\t,\t\"autogenerated-services\": {\n\t\t\t\t\t\"ReturnAuthorization.Service.ss\" : \"ReturnAuthorization.ServiceController\"\n\t\t\t\t}\n\t\t\t\t...\n\t\t\t}\n\t\t}\n\n\tSee also @?class ServiceController.Validations that contain auxiliary methods. \n\t@extends SCEventWrapper\n\t*/\n\treturn SCEventWrapper.extend({\n\n\t\tname: 'ServiceController'\n\n\t\t// @method getMethod Returns which http method is used by the request\n\t\t// @return {String}\n\t,\tgetMethod: function ()\n\t\t{\n\t\t\treturn this.request.getMethod().toLowerCase();\n\t\t}\n\n\t\t// @property {ServiceController.Options} options The needed permissions, validations, etc, that are exposed so they're easily extensible.\n\t\t// @public\n\t,\toptions: {}\n\n\t\t// @method _deepObjectExtend Makes a deep copy of the objects passed as parameters\n\t\t// @parameter {Service.ValidationOptions.common} target Object literal with required validation common to all methods\n\t\t// @parameter {Service.ValidationOptions.<Object>} source Object literal with required validation specific to the http method used\n\t\t// @return {Service.ValidationOptions.Extended} Object with all the validation required for the current service\n\t,\t_deepObjectExtend: function _deepObjectExtend (target, source)\n\t\t{\n\t\t\tfor (var prop in source)\n\t\t\t{\n\t\t\t\tif (prop in target)\n\t\t\t\t{\n\t\t\t\t\tthis._deepObjectExtend(target[prop], source[prop]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttarget[prop] = source[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\n\t\t}\n\n\t\t// @method getOptions Get the validation options related to the current service\n\t\t// @public\n\t\t// @parameter {String} method The http method used in the request\n\t\t// @return {ServiceController.options} Object with all the validation options of the current service\n\t,\tgetOptions: function (method)\n\t\t{\n\t\t\treturn this._deepObjectExtend(this.options.common || {}, this.options[method] || {});\n\t\t}\n\n\t\t// @method validateRequest\n\t\t// @public\n\t\t// @parameter {Service.ValidationOptions.Extended} validation_options Object literal with the validation options\n\t\t// @throws {Error} throw errors if validation fails \n\t,\tvalidateRequest: function (validation_options)\n\t\t{\n\t\t\t_.each(validation_options, function (validation_option, validation_name)\n\t\t\t{\n\t\t\t\tif (_.isFunction(ServiceControllerValidations[validation_name]))\n\t\t\t\t{\n\t\t\t\t\tServiceControllerValidations[validation_name](validation_option);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// @method handle Executes the function associated with the http method in the proper ServiceController\n\t\t// @public\n\t\t// @parameter {nlobjRequest} request\n\t\t// @parameter {nlobjResponse} response\n\t\t// @throws {Error}\n\t,\thandle: function (request, response)\n\t\t{\n\t\t\tthis.request = request;\n\t\t\tthis.response = response;\n\t\t\tthis.method = this.getMethod();\n\t\t\tthis.data = JSON.parse(this.request.getBody() || '{}');\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tthis.validateRequest(this.getOptions(this.method));\n\n\t\t\t\tif (_.isFunction(this[this.method]))\n\t\t\t\t{\n\t\t\t\t\tvar result = this[this.method]();\n\t\t\t\t\tif(result)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn this.sendContent(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.sendError(methodNotAllowedError);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\treturn this.sendError(e);\n\t\t\t}\n\t\t}\n\n\t\t// @method sendContent Writes the given content in the request object using the right headers, and content type\n\t\t// This method replaces @?method ssp.libraries.Application.sendContent , which is deprecated\n\t\t// @public\n\t\t// @param {String} content\n\t\t// @param {Object} options\n\t,\tsendContent: function (content, options)\n\t\t{\n\t\t\t// Default options\n\t\t\toptions = _.extend({status: 200, cache: false}, options || {});\n\n\t\t\t/*\n\t\t\t@event before:ServiceController.sendContent Event triggered just before responding any content back to the clients. Usage: \n\n\t\t\t\tApplication.on('before:ServiceController.sendContent', function(content, options){...})\n\t\t\t*/\n\t\t\tApplication.trigger('before:ServiceController.sendContent', content, options);\n\n\t\t\t// We set a custom status\n\t\t\tthis.response.setHeader('Custom-Header-Status', parseInt(options.status, 10).toString());\n\n\t\t\t// The content type will be here\n\t\t\tvar content_type = false;\n\n\t\t\t// If its a complex object we transform it into an string\n\t\t\tif (_.isArray(content) || _.isObject(content))\n\t\t\t{\n\t\t\t\tcontent_type = 'JSON';\n\t\t\t\tcontent = JSON.stringify( content );\n\t\t\t}\n\n\t\t\t// If you set a jsonp callback this will honor it\n\t\t\tif (this.request.getParameter('jsonp_callback'))\n\t\t\t{\n\t\t\t\tcontent_type = 'JAVASCRIPT';\n\t\t\t\tcontent = request.getParameter('jsonp_callback') + '(' + content + ');';\n\t\t\t}\n\n\t\t\t//Set the response cache option\n\t\t\tif (options.cache)\n\t\t\t{\n\t\t\t\tthis.response.setCDNCacheable(options.cache);\n\t\t\t}\n\n\t\t\t// Content type was set so we send it\n\t\t\tcontent_type && this.response.setContentType(content_type);\n\n\t\t\tthis.response.write(content);\n\n\t\t\t/*\n\t\t\t@event after:ServiceController.sendContent Event triggered after some content is send back to the clients. Usage: \n\n\t\t\t\tApplication.on('after:ServiceController.sendContent', function(content, options){...})\n\t\t\t*/\n\t\t\tApplication.trigger('after:ServiceController.sendContent', content, options);\n\t\t}\n\n\t\t// @method processError Builds an error object suitable to be sent back in the http response.\n\t\t// This method replaces @?method ssp.libraries.Application.processError , which is deprecated\n\t\t// @public\n\t\t// @param {nlobjError || Application.Error} e\n\t\t// @returns {errorStatusCode:Number, errorCode:String, errorMessage:String} An error object suitable to send back in the http response.\n\t,\tprocessError: function (e)\n\t\t{\n\t\t\tvar status = 500\n\t\t\t,\tcode = 'ERR_UNEXPECTED'\n\t\t\t,\tmessage = 'error';\n\n\t\t\tif (e instanceof nlobjError)\n\t\t\t{\n\t\t\t\tcode = e.getCode();\n\t\t\t\tmessage = e.getDetails();\n\t\t\t\tstatus = badRequestError.status; /* global badRequestError */\n\t\t\t}\n\t\t\telse if (_.isObject(e) && !_.isUndefined(e.status))\n\t\t\t{\n\t\t\t\tstatus = e.status;\n\t\t\t\tcode = e.code;\n\t\t\t\tmessage = e.message;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar error = nlapiCreateError(e);\n\t\t\t\tcode = error.getCode();\n\t\t\t\tmessage = (error.getDetails() !== '') ? error.getDetails() : error.getCode();\n\t\t\t}\n\n\t\t\tif (code === 'INSUFFICIENT_PERMISSION')\n\t\t\t{\n\t\t\t\tstatus = forbiddenError.status;\n\t\t\t\tcode = forbiddenError.code;\n\t\t\t\tmessage = forbiddenError.message;\n\t\t\t}\n\n\t\t\tvar content = {\n\t\t\t\terrorStatusCode: parseInt(status,10).toString()\n\t\t\t,\terrorCode: code\n\t\t\t,\terrorMessage: message\n\t\t\t};\n\n\t\t\tif (e.errorDetails)\n\t\t\t{\n\t\t\t\tcontent.errorDetails = e.errorDetails;\n\t\t\t}\n\n\t\t\treturn content;\n\t\t}\n\n\t\t// @method sendError Process the error and then writes it in the http response  @?class Application.Error\n\t\t// This method replaces its namesake in @?method ssp.libraries.Application.sendError , which is deprecated\n\t\t// @public\n\t\t// @param {nlobjError || Application.Error} e\n\t,\tsendError: function (e)\n\t\t{\n\t\t\t_.extend(e, {'serviceControllerName': this.name});\n\n\t\t\t/*\n\t\t\t@event before:ServiceController.sendError event triggered just before sending an error back to the client. \n\t\t\tThe handler is passed the @?class Application.Error instance as first param. Usage: \n\n\t\t\t\tApplication.on('before:ServiceController.sendError', function(errorObject){...})\n\t\t\t*/\n\t\t\tApplication.trigger('before:ServiceController.sendError', e);\n\n\t\t\tvar content = this.processError(e)\n\t\t\t,\tcontent_type = 'JSON';\n\n\t\t\tthis.response.setHeader('Custom-Header-Status', content.errorStatusCode);\n\n\t\t\tif (this.request.getParameter('jsonp_callback'))\n\t\t\t{\n\t\t\t\tcontent_type = 'JAVASCRIPT';\n\t\t\t\tcontent = this.request.getParameter('jsonp_callback') + '(' + JSON.stringify(content) + ');';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontent = JSON.stringify(content);\n\t\t\t}\n\n\t\t\tthis.response.setContentType(content_type);\n\n\t\t\tthis.response.write(content);\n\n\t\t\t/*\n\t\t\t@event after:ServiceController.sendError event triggered just after sending an error back to the client. \n\t\t\tThe handler is passed the @?class Application.Error instance as first param. Usage: \n\n\t\t\t\tApplication.on('after:ServiceController.sendError', function(errorObject){...})\n\t\t\t*/\n\t\t\tApplication.trigger('after:ServiceController.sendError', e);\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js\n\n// @module ssp.libraries\ndefine('Utils'\n,\t[\n\t\t'Models.Init'\n\t,\t'Application'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tModelsInit\n\t,\tApplication\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\tfunction _getColumnLabel(column)\n\t{\n\t\tvar formula = column.getFormula();\n\t\tif(formula)\n\t\t{\n\t\t\t// if the column is a formula prefer the label\n\t\t\t// because the name is autogenerated: 'formulanumeric' or similar\n\t\t\treturn column.getLabel() || column.getName();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn column.getName();\n\t\t}\n\t}\n\n\t// @class Utils Contain global/static utility methods from high level API for searching records, format currencies, record type meta information, etc\n\tvar Utils = {\n\n\t\t// @method mapSearchResult @public\n\t\t// @param {Array<nlobjSearchColumn>} columns\n\t\t// @param {nlobjSearchColumn} apiElement\n\t\t// @returns {Object}\n\t\tmapSearchResult: function mapSearchResult (columns, apiElement)\n\t\t{\n\t\t\tvar element = {};\n\t\t\tcolumns.forEach(function (column)\n\t\t\t{\n\t\t\t\tvar col = column.searchColumn;\n\t\t\t\tvar name = col.getName();\n\t\t\t\t\n\t\t\t\telement[column.fieldName] = apiElement.getValue(name, col.getJoin(), col.getSummary());\n\t\t\t\t\tvar text = apiElement.getText(name, col.getJoin(), col.getSummary());\n\t\t\t\t\tif (text)\n\t\t\t\t\t{\n\t\t\t\t\t\telement[column.fieldName + '_text'] = text;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t});\n\t\t\treturn element;\n\t\t}\n\n\t\t// @method mapSearchResults Extracts search results to a JSON-friendly format. @public\n\t\t// @param {Array<nlobjSearchColumn>} searchColumns\n\t\t// @param {Array<nlobjSearchResult>} searchResults\n\t\t// @return {Array<nlobjSearchResult>} mapped results\n\t,\tmapSearchResults: function mapSearchResults (searchColumns, searchResults)\n\t\t{\n\t\t\tif(!searchColumns || !searchResults)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tvar nameToCol = {}; // mapping columnName -> columns with that name\n\t\t\tvar columns = []; // array of { searchColumn: (nlobjSearchColumn), fieldName: (name in result) }\n\t\t\t// detect columns with the same name\n\t\t\t_.each(searchColumns, function (col)\n\t\t\t{\n\t\t\t\tvar name = _getColumnLabel(col);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tsearchColumn: col\n\t\t\t\t});\n\t\t\t\tnameToCol[name] = (nameToCol[name] || 0) + 1;\n\t\t\t});\n\t\t\t// sets fieldNames for each column\n\t\t\t_.each(columns, function(column){\n\t\t\t\tvar searchColumn = column.searchColumn;\n\t\t\t\tvar isANameClash = nameToCol[_getColumnLabel(searchColumn)] > 1;\n\t\t\t\tcolumn.fieldName =_getColumnLabel(searchColumn);\n\t\t\t\tif (isANameClash)\n\t\t\t\t{\n\t\t\t\t\tcolumn.fieldName += '_' + searchColumn.getJoin();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn searchResults.map(function(apiElement)\n\t\t\t{\n\t\t\t\treturn Utils.mapSearchResult(columns, apiElement);\n\t\t\t});\n\t\t}\n\n\t\t// @method mapLoadResult @public\n\t\t// @param {Array<nlobjSearchColumn>} columns\n\t\t// @param {nlobjRecord} record\n\t\t// @return {Object}\n\t,\tmapLoadResult: function mapLoadResult (columns, record)\n\t\t{\n\t\t\tvar record_info = {};\n\t\t\tcolumns.forEach( function (name)\n\t\t\t{\n\t\t\t\tvar value = record.getFieldValue(name);\n\t\t\t\tif(name === 'image' && !!value)\n\t\t\t\t{\n\t\t\t\t\tvar imageRecord = nlapiLoadFile(value);\n\t\t\t\t\tif(!!imageRecord)\n\t\t\t\t\t{\n\t\t\t\t\t\trecord_info[name] = imageRecord.getURL();\n\t\t\t\t\t} else {\n\t\t\t\t\t\trecord_info[name] = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecord_info[name] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn record_info;\n\t\t}\n\n\t\t// @method loadAndMapSearch @public\n\t\t// @param {String}searchName\n\t\t// @param {Array<nlobjSearchFilter>} filters\n\t\t// @return {Array<nlobjSearchResult>} mapped results\n\t,\tloadAndMapSearch: function loadAndMapSearch(searchName, filters)\n\t\t{\n\t\t\tif (!filters)\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t}\n\n\t\t\tvar savedSearch;\n\t\t\ttry {\n\t\t\t\tsavedSearch = nlapiLoadSearch(null, searchName);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.log('Unable to load search ' + searchName, err);\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tvar\tsearchResults = nlapiSearchRecord(null, searchName, filters);\n\t\t\treturn Utils.mapSearchResults(savedSearch.getColumns(), searchResults);\n\t\t}\n\n\n\t\t/**\n\t\t * @method mapOptions @public @param {String} record_options\n\t\t */\n\t,\tmapOptions: function mapOptions (record_options)\n\t\t{\n\t\t\tvar options_rows = record_options.split('\\u0004');\n\t\t\tvar options_items = options_rows.map(function (row)\n\t\t\t{\n\t\t\t\treturn row.split('\\u0003');\n\t\t\t});\n\t\t\tvar options = {};\n\t\t\toptions_items.forEach(function (item)\n\t\t\t{\n\t\t\t\toptions[item[0]] = {\n\t\t\t\t\tname: item[0]\n\t\t\t\t,\tdesc: item[2]\n\t\t\t\t,\tvalue: item[3]\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn options;\n\t\t}\n\n\t\t/**\n\t\t * @method makeid @param {Number} maxLength\n\t\t */\n\t,\tmakeid: function makeid(maxLength)\n\t\t{\n\t\t\treturn Math.random().toString(36).substring(2, (maxLength + 2) || 5);\n\t\t}\n\n\t\t/*\n\t\t@method getMolecule \n\t\t@param {nlobjRequest} request\n\t\t@returns {String} Meanings:\n\n\t\t\t'' is 'system'\n\t\t\t'f'\tmeans 'system.f'\n\t\t\t'p'\tmeans 'system.p'\n\t\t\t'na1.f'\tmeans 'system.na1.f'\n\n\t\t@public\n\t\t*/\n\t,\tgetMolecule: function getMolecule(request)\n\t\t{\n\t\t\tvar\tregex = /https:\\/\\/system(.*)\\.netsuite\\.com/;\n\t\t\tvar molecule = request.getURL().match(regex);\n\t\t\treturn molecule && molecule[1] || '';\n\t\t}\n\n\t\t// @method formatReceiptCurrency @public @param {String|Number} value\n\t,\tformatReceiptCurrency: function formatReceiptCurrency (value)\n\t\t{\n\t\t\tvar parsedValue = parseFloat (value);\n\t\t\tif (parsedValue < 0)\n\t\t\t{\n\t\t\t\tif (value.substring)\n\t\t\t\t{\n\t\t\t\t\treturn '($ ' + value.substring(1) + ')';\n\t\t\t\t}\n\n\t\t\t\treturn '($ ' + value.toFixed(2).substring(1) + ')';\n\t\t\t}\n\n\t\t\treturn '$ ' + parsedValue.toFixed(2);\n\t\t}\n\n\n\t\t// @method sanitizeString Remove any HTML code form the string @public\n\t\t// @param {String} text String with possible HTML code in it\n\t\t// @return {String} HTML-free string\n\t,\tsanitizeString: function (text)\n\t\t{\n\t\t\treturn text ? text.replace(/<br>/g, '\\n').replace(/</g, '&lt;').replace(/\\>/g, '&gt;') : '';\n\t\t}\n\n\t\t// @method formatCurrency @public @param {String} value @param {String} symbol @return {String}\n\t,\tformatCurrency: function (value, symbol)\n\t\t{\n\t\t\tvar value_float = parseFloat(value);\n\n\t\t\tif (isNaN(value_float))\n\t\t\t{\n\t\t\t\tvalue_float = parseFloat(0); //return value;\n\t\t\t}\n\n\t\t\tvar negative = value_float < 0;\n\t\t\tvalue_float = Math.abs(value_float);\n\t\t\tvalue_float = parseInt((value_float + 0.005) * 100, 10) / 100;\n\n\t\t\tvar value_string = value_float.toString()\n\n\t\t\t,\tgroupseparator = ','\n\t\t\t,\tdecimalseparator = '.'\n\t\t\t,\tnegativeprefix = '('\n\t\t\t,\tnegativesuffix = ')'\n\t\t\t,\tsettings = SC && SC.ENVIRONMENT && SC.ENVIRONMENT.siteSettings ? SC.ENVIRONMENT.siteSettings : {};\n\n\t\t\tif (window.hasOwnProperty('groupseparator'))\n\t\t\t{\n\t\t\t\tgroupseparator = window.groupseparator;\n\t\t\t}\n\t\t\telse if (settings.hasOwnProperty('groupseparator'))\n\t\t\t{\n\t\t\t\tgroupseparator = settings.groupseparator;\n\t\t\t}\n\n\t\t\tif (window.hasOwnProperty('decimalseparator'))\n\t\t\t{\n\t\t\t\tdecimalseparator = window.decimalseparator;\n\t\t\t}\n\t\t\telse if (settings.hasOwnProperty('decimalseparator'))\n\t\t\t{\n\t\t\t\tdecimalseparator = settings.decimalseparator;\n\t\t\t}\n\n\t\t\tif (window.hasOwnProperty('negativeprefix'))\n\t\t\t{\n\t\t\t\tnegativeprefix = window.negativeprefix;\n\t\t\t}\n\t\t\telse if (settings.hasOwnProperty('negativeprefix'))\n\t\t\t{\n\t\t\t\tnegativeprefix = settings.negativeprefix;\n\t\t\t}\n\n\t\t\tif (window.hasOwnProperty('negativesuffix'))\n\t\t\t{\n\t\t\t\tnegativesuffix = window.negativesuffix;\n\t\t\t}\n\t\t\telse if (settings.hasOwnProperty('negativesuffix'))\n\t\t\t{\n\t\t\t\tnegativesuffix = settings.negativesuffix;\n\t\t\t}\n\n\t\t\tvalue_string = value_string.replace('.',decimalseparator);\n\t\t\tvar decimal_position = value_string.indexOf(decimalseparator);\n\n\t\t\t// if the string doesn't contains a .\n\t\t\tif (!~decimal_position)\n\t\t\t{\n\t\t\t\tvalue_string += decimalseparator + '00';\n\t\t\t\tdecimal_position = value_string.indexOf(decimalseparator);\n\t\t\t}\n\t\t\t// if it only contains one number after the .\n\t\t\telse if (value_string.indexOf(decimalseparator) === (value_string.length - 2))\n\t\t\t{\n\t\t\t\tvalue_string += '0';\n\t\t\t}\n\n\t\t\tvar thousand_string = '';\n\t\t\tfor (var i = value_string.length - 1; i >= 0; i--)\n\t\t\t{\n\t\t\t\t//If the distance to the left of the decimal separator is a multiple of 3 you need to add the group separator\n\t\t\t\tthousand_string = (i > 0 && i < decimal_position && (((decimal_position-i) % 3) === 0) ? groupseparator : '') + value_string[i] + thousand_string;\n\t\t\t}\n\n\t\t\tif (!symbol)\n\t\t\t{\n\t\t\t\tif (typeof ModelsInit.session !== 'undefined' && ModelsInit.session.getShopperCurrency)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsymbol = ModelsInit.session.getShopperCurrency().symbol;\n\t\t\t\t\t} \n\t\t\t\t\tcatch(e)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (settings.shopperCurrency)\n\t\t\t\t{\n\t\t\t\t\tsymbol = settings.shopperCurrency.symbol;\n\t\t\t\t}\n\t\t\t\telse if (SC && SC.ENVIRONMENT && SC.ENVIRONMENT.currentCurrency)\n\t\t\t\t{\n\t\t\t\t\tsymbol = SC.ENVIRONMENT.currentCurrency.symbol;\n\t\t\t\t}\n\n\t\t\t\tif(!symbol)\n\t\t\t\t{\n\t\t\t\t\tsymbol = '$';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalue_string  = symbol + thousand_string;\n\n\t\t\treturn negative ? (negativeprefix + value_string + negativesuffix) : value_string;\n\t\t}\n\n\t\t// @method isDepartmentMandatory @returns {Boolean}\n\t,\tisDepartmentMandatory: function ()\n\t\t{\n\t\t\treturn this.isFeatureEnabled('DEPARTMENTS');\n\t\t}\n\n\t\t// @method isLocationMandatory @returns {Boolean}\n\t,\tisLocationMandatory: function ()\n\t\t{\n\t\t\treturn this.isFeatureEnabled('LOCATIONS');\n\t\t}\n\n\t\t// @method isClassMandatory @returns {Boolean}\n\t,\tisClassMandatory: function ()\n\t\t{\n\t\t\treturn this.isFeatureEnabled('CLASSES');\n\t\t}\n\n\t\t// @method isFeatureEnabled @public @param {String} feature the feature id we want to know is enabled in the current account @returns {Boolean}\n\t,\tisFeatureEnabled: function (feature)\n\t\t{\n\t\t\treturn ModelsInit.context.getFeature(feature);\n\t\t}\n\n\t\t// Not used for now because there is only Full permissions on accountingpreferences\n\t,\t_isAccountingPreferenceEnabled: function (preference)\n\t\t{\n\t\t\tvar accountingPreferences = nlapiLoadConfiguration('accountingpreferences');\n\n\t\t\treturn accountingPreferences.getFieldValue(preference) === 'T';\n\t\t}\n\n\t\t// @method toCurrency @param {String} amount @return {Number}\n\t,\ttoCurrency: function (amount)\n\t\t{\n\t\t\tvar r = parseFloat(amount);\n\n\t\t\treturn isNaN(r) ? 0 : r;\n\t\t}\n\n\t\t// @method recordTypeExists returns true if and only if the given record type name is present in the current account - useful for checking if a bundle is installed or not in this account.\n\t\t// @param {String} record_type_name @return {Boolean} @public\n\t,\trecordTypeExists: function (record_type_name)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tnlapiCreateRecord(record_type_name);\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t// @method recordTypeHasField returns true if and only if the given field_name exists on the given record_type_name.\n\t\t// @param {String} record_type_name @param {String} field_name @return {Boolean}\n\t,\trecordTypeHasField: function (record_type_name, field_name)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tnlapiLookupField(record_type_name, 1, field_name);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\n\t,\tgetTransactionType: function (internalid)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn nlapiLookupField('transaction', internalid, 'recordtype');\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t}\n\n\n\t\t//@method getItemOptionsObject Parse an item string options into an object\n\t\t//@param {String} options_string String containg all item options\n\t\t//@return {Utils.ItemOptionsObject} Returns an object with the properties: id, name, value, displayvalue and mandatory\n\t,\tgetItemOptionsObject: function (options_string)\n\t\t{\n\t\t\tvar options_object = [];\n\n\t\t\tif (options_string && options_string !== '- None -')\n\t\t\t{\n\t\t\t\tvar split_char_3 = String.fromCharCode(3)\n\t\t\t\t,\tsplit_char_4 = String.fromCharCode(4);\n\n\t\t\t\t_.each(options_string.split(split_char_4), function (option_line)\n\t\t\t\t{\n\t\t\t\t\toption_line = option_line.split(split_char_3);\n\t\t\t\t\t//@class Utils.ItemOptionsObject\n\t\t\t\t\toptions_object.push({\n\t\t\t\t\t\t//@property {String} id\n\t\t\t\t\t\tid: option_line[0]\n\t\t\t\t\t\t//@property {String} name\n\t\t\t\t\t,\tname: option_line[2]\n\t\t\t\t\t\t//@property {String} value\n\t\t\t\t\t,\tvalue: option_line[3]\n\t\t\t\t\t\t//@property {String} displayValue\n\t\t\t\t\t,\tdisplayvalue: option_line[4]\n\t\t\t\t\t\t//@property {String} mandatory\n\t\t\t\t\t,\tmandatory: option_line[1]\n\t\t\t\t\t});\n\t\t\t\t\t//@class Utils\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn options_object;\n\t\t}\n\n\t\t// @method setPaymentMethodToResult @param {nlobjRecord} record @param {Object} result\n\t,\tsetPaymentMethodToResult: function (record, result)\n\t\t{\n\t\t\tvar paymentmethod = {\n\t\t\t\ttype: record.getFieldValue('paymethtype')\n\t\t\t,\tprimary: true\n\t\t\t\t,\tname: record.getFieldText('paymentmethod')\n\t\t\t\t}\n\t\t\t,\tccnumber = record.getFieldValue('ccnumber');\n\n\t\t\tif (ccnumber)\n\t\t\t{\n\t\t\t\tpaymentmethod.type = 'creditcard';\n\t\t\t\t\n\t\t\t\tpaymentmethod.creditcard = {\n\t\t\t\t\tccnumber: ccnumber\n\t\t\t\t,\tccexpiredate: record.getFieldValue('ccexpiredate')\n\t\t\t\t,\tccname: record.getFieldValue('ccname')\n\t\t\t\t,\tinternalid: record.getFieldValue('creditcard')\n\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t\tispaypal: 'F'\n\t\t\t\t\t,\tname: record.getFieldText('paymentmethod')\n\t\t\t\t\t,\tcreditcard: 'T'\n\t\t\t\t\t,\tinternalid: record.getFieldValue('paymentmethod')\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('ccstreet'))\n\t\t\t{\n\t\t\t\tpaymentmethod.ccstreet = record.getFieldValue('ccstreet');\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('cczipcode'))\n\t\t\t{\n\t\t\t\tpaymentmethod.cczipcode = record.getFieldValue('cczipcode');\n\t\t\t}\n\n\t\t\tif (record.getFieldValue('terms'))\n\t\t\t{\n\t\t\t\tpaymentmethod.type = 'invoice';\n\n\t\t\t\tpaymentmethod.purchasenumber = record.getFieldValue('otherrefnum');\n\n\t\t\t\tpaymentmethod.paymentterms = {\n\t\t\t\t\t\tinternalid: record.getFieldValue('terms')\n\t\t\t\t\t,\tname: record.getFieldText('terms')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tresult.paymentmethods = [paymentmethod];\n\n\t\t}\n\t};\n\n\t// @class Application @property {Utils} Utils\n\tApplication.Utils = Utils;\n\n\treturn Utils;\n});\n\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js\n\n// jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.\n\n\n\n// @module ns.commerce\n\n// The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.\n\n// @class ShoppingSession\n\n\n\n\n/*\n@method doChangePassword\n\nChanges the password for the customer identified by email. Returns true if the password is changed correctly.\n\nSupported Domains: Checkout\n\nLogin Required?: no\n\n@param {Object} Params – pass parameters from original request\n@param {String} newPassword –  value for new password to be set\n@return {Boolean}\n\n\n\n\n@method getAbsoluteUrl\n\nGets absolute URL for given path and domain type.\n\nSupported Domains: Checkout, Shopping\n\nLogin Required?: No\n\n@param {String}  domaintype [required] - value should be either “shopping” or “checkout”\n@param {String} path [required] \n\n\n\n\n@method getCampaignID\n\nGets the campaign ID of the leadsource parameter from the current session.\n\nParameters\n\nNo parameters to set.\n\nReturns {String} campaignid\n\nSupported Domains: Checkout, Shopping\n\nLogin Required?: No\n*/\n\n\n/*\n@class OrderAddress\n\nThis object contains address information for a web store shopping order.\n\n@property {String} addressee Person to which order is sent. Required\n@property {String} addr1 First line of address. Required\n@property {String} addr2 Second line of address\n@property {String} addr3 Third line of address\n@property {String} attention Text for ATTN: line of address\n@property {String} city Required\n@property {String} country Required\n\n@property {String} defaultbil​l​i​n​g Indicates whether address is default billing address. Value should be “T” or “F”.\n@property {String} defaultshi​p​p​i​n​g Indicates whether address is default shipping address. Value should be “T” or “F”.\n@property {String} internalid Internal  ID\n@property {String} isresidential Indicates whether address is residential. Value should be “T” or “F”.\n\n@property {String}  phone Phone number. Required\n\n@property {String} state State for address. Required\n@property {String} zip Zip code. Required\n\n*/\n\n\n\n/*\n@class OrderShipMethod\n\nThis object contains shipping method information for the order.\n\n@property {String} name Name of the shipping method\n@property {String} rate Rate of the shipping method\n@property {String} shipcarrier Shipping carrier ID. Note: Valid values that can be set for shipcarrier are ups or noups.\n@property {String} shipmethod Shipping method ID\n*/\n\n\n/*\n\n@class OrderSummary This object contains summary information for the order.\n\n@property {Number} discountedsubtotal Item subtotal - any applicable discount\n@property {String} discountedsubtotal_ Item subtotal - any applicable discount formatted with currency symbol\n@property {String} discountrate Raw discount\n@property {Number} discounttotal Total amount of discounts applied\n@property {String} discounttotal_formatted Total amount of discounts applied formatted with currency symbol\n@property {Number} giftcertapplied Total amount of gift certificates applied\n@property {String} giftcertapplied_formatted Total amount of gift certificates applied formatted with currency symbol\n@property {Number} handlingcost Amount of handling cost\n@property {String} handlingcost_formatted Amount of handling cost formatted with currency symbol\n@property {Number} shippingcost Amount of shipping cost\n@property {String} shippingcost_formatted Amount of shipping cost formatted with currency symbol\n@property {Number} subtotal Total of quantity * rate per line item\n@property {String} Total of quantity * rate per line item formatted with currency symbol\n@property {Number} tax2total Total secondary tax on taxable elements of the order (items + shipping + handling) - effect of any discounts\n@property {String} tax2total_formatted Total secondary tax on taxable elements of the order (items + shipping + handling) - effect of any discounts formatted with currency symbol\n@property {Number} taxondiscount For VAT countries, currency amount of the tax rate * the discount amount\n@property {String} taxondiscount_formatted For VAT countries, currency amount of the tax rate * the discount amount formatted with currency symbol\n@property {Number} taxonhandling Currency amount of the tax rate * taxable handling amount\n@property {String} taxonhandling_formatted Currency amount of the tax rate * taxable handling amount formatted with currency symbol\n@property {Number} taxonshipping Currency amount of the tax rate * taxable shipping amount\n@property {String} taxonshipping_formatted Currency amount of the tax rate * taxable shipping amount formatted with currency symbol\n@property {Number} taxtotal Total tax on taxable elements of the order (items + shipping + handling) - effect of any discounts\n@property {String} taxtotal_formatted Total tax on taxable elements of the order (items + shipping + handling) - effect of any discounts formatted with currency symbol\n@property {Number} total Order subtotal + shipping, handling, and all tax, less the effect of any discounts\n@property {String} total_formatted Order subtotal + shipping, handling, and all tax, less the effect of any discounts formatted with currency symbol\n\n*/\n\n\n\n/*\n@class ShoppingSession\n@method getSiteSettings Gets settings of current web store. Supported Domains: Checkout, Shopping. Login Required? No\n@param {Array<String>}fields  [optional] Array of field names to be included in returned JSON object; if omitted, all supported fields are returned\nObject with fields listed for sitesettings JSON object.\n@returns {SiteSettings}\n\n@class ShoppingSession.SiteSettings\n\n@property {ShoppingSession.AnalyticsSettings} analytics Analytics settings\n@property {ShoppingSession.CheckoutSettings} checkout Checkout settings\n@properties {Array<Object>} currencies Array of JSON objects with fields (internalid, name, isdefault)\nOrdered list of currencies supported by the site\n\n@property {String} isdefault field is a Boolean, with a value of “T” for default currency, “F” for others\n@property {String } defaultshipcountry Default ship to country\n@property {String} defaultshi​p​p​i​n​g​m​e​t​h​o​d Default shipping method\n@property {String} displayname \n@property {Array<Object>} imagesizes Array of JSON objects with image resize definitions (resizeid, resizeh, resizew).\nEach object has the following properties:\n\n * maxwidth maximum resized image width in pixels\n * maxheight maximum resized image height in pixels\n * urlsuffix suffix that should be added to the image URL to return a resized image\n * internalid internal system ID of image resize definition.\n * name value from the Image Resize ID field (image resize definition) as entered on the Web Site Setup page.\n\n@property {Array<Object>} languages\nArray of JSON objects with fields (internalid, name, isdefault)\nOrdered list of languages for the site\n@property {String} isdefault field is a Boolean, with a value of “T” for default language, “F” for others\n\n@property {String} loginallowed Indicates whether login is allowed. \n\n@property {String} loginrequired Indicates whether login is required to access the site. Value should be “T” or “F”.\n\n@property {OrderSettings}order JSON ordersettings object .Order settings\n\n@property {Array<PaymentMethod>}paymentmethods array of paymentmethod objects .Payment methods\n\n@property {String} pricesincludevat Indicates whether prices include VAT. Value should be “T” or “F”.\n\n@property {RegistrationSettings} registration JSON registrationsettings object. Registration settings\n\n@property {String} requireloginforpricing Indicates whether login is required to display item prices. Value should be “T” or “F”.\n\n@property {String}shipallcountries Indicates whether shipping is supported to all countries. Value should be “T” or “F”.\n\n@property {String} shippingrequired Indicates whether shipping is required for the site. Value should be “T” or “F”.\n\n@property {Array<String>}shiptocountries Countries where shipping is supported\n\n@property {String} showextendedcart Indicates whether extended cart should be displayed. Value should be “T” or “F”.\n\n@property {String} showshippi​n​g​e​s​t​i​m​a​t​o​r Indicates whether shipping estimator should be displayed.  Value should be “T” or “F”.\n\n@property {String} sitetype Indicates the type of web site. Value should be ADVANCED or STANDARD.\n\nADVANCED indicates the site is a SuiteCommerce Advanced site where STANDARD indicates it is a Standard web site built with the NetSuite Site Builder.\n\n@property {Array<Object>}subsidiaries Array of JSON objects with fields (internalid, name, isdefault). \nOrdered list of subsidiaries for the site. \n\n@property {String} isdefault field is a Boolean, with a value of “T” for default subsidiary, “F” for others\n\n\n\n\n\n@class ShoppingSession.AnalyticsSettings\n@property {String} clickattributes\n@property {String} confpagetr​a​c​k​i​n​g​h​t​m​l\n@property {String} submitattributes\n\n\n\n@class ShoppingSession.CheckoutSettings\n@property {String} cancelurl Full URL path for redirect after cancel action during order submission.\nUsed for PayPal Express support\n@property {String} continueurl Full URL path for redirect after order submission\nUsed for PayPal Express support\n@property {String} createorder If value is set to “T,” backend submits current shopping order when Continue link is clicked\nDefault value is “F”. Used for PayPal Express support\n@property {String} custchoosespaymethod Value should be “T” or “F”.\n@property {String} paymentauthorization threedsecure object with fields. Settings to handle payment authorization.\nUsed for 3D Secure support\n@property {String} paymentmandatory Indicates whether payment is mandatory. Value should be “T” or “F”.\n@property {String} paypalexpress. Object with fields. Used for PayPal Express support\nIncludes the following fields:\n\n * available (boolean) (must be set to “T” to support PayPal Express)\n * imageurl (string)\n\n@property {String} requiretermsandconditions Indicates whether terms and conditions text is required.\nValue should be “T” or “F”.\n@property {String} saveccinfo Indicates whether credit card should be saved by default. \nValue should be “T” or “F”.\n@property {String} shippingaddrfirst Indicates whether shipping address should be displayed first.\nValue should be “T” or “F”.\n@property {String} showpurchaseorder Indicates whether purchase order should be displayed.\nValue should be “T” or “F”.\n@property {String} showsavecc Indicates whether the Save Credit Card field should be displayed\nValue should be “T” or “F”.\n@property {String} termsandconditions Text of Terms and Conditions field\n@property {String} type Used for integration with third party checkout providers\nValid values are: paypalexpress, google\n\n\n\n\n@class ShoppingSession.OrderSettings\n\n@property {String} itemdispla​y​o​r​d​e​r Ordering of items in an order\n@property {String} outofstock​b​e​h​a​v​i​o​r Behavior for out of stock items\n@property {String} upselldisplay One of \n\n * Related Items Only Upsell Items\n * Related Items and then Upsell Items\n * Upsell Items and then Related Items\n\n\n\n@class ShoppingSession.RegistrationSettings\n@property {String} companyfie​l​d​m​a​n​d​a​t​o​r​y Indicates whether Company field is mandatory.\nValue should be “T” or “F”.\n\n@property {String} registrationallowed Indicates whether registration is allowed.\nValue should be “T” or “F”.\n@property {String} registrati​o​n​a​n​o​n​y​m​o​u​s Indicates whether registration is anonymous. \nValue should be “T” or “F”.\n@property {String} registrati​o​n​m​a​n​d​a​t​o​r​y . Indicates whether registration is required. \nValue should be “T” or “F”.\n@property {String} registrationoptional Indicates whether registration is optional. \nValue should be “T” or “F”.\n@property {String} showcompanyfield Indicates whether to show Company field on registration form\n\n\n@class ShoppingSession.PaymentMethod\n\nThis object includes payment method information for the order.\n\n@property {String} internalid Internal ID\n@property {String} iscreditcard Indicates whether payment method is a credit card. Value should be “T” or “F”.\n@property {String} ispaypal Indicates whether payment method is PayPal. Value should be “T” or “F”. \n@property {String} name Name of the payment method \n@property {String}  paypalemai​l​a​d​d​r​e​s​s Primary paypal email address \n*/\n\n\n\n\n\n\n\n\n\n\n/*\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetCorrelatedItems(item)\n\nGets array of correlated items for given item.\n\nNote Item details will be returned only if the correlated item is available in the store from which the API was called from.  \nParameters\n\nitem [required]{object with values for fields}\ninternalid [required]\nitemtype [required]\nitemfields [optional] {array of item field names to query}\nNote For better performance limit the number of queried fields by specifying only fields you need in the itemfields array.  \nReturns\n\nArray of objects of type item\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetCountries()\n\nGets all countries\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nArray of objects with fields:\n\nname {string}\ncode {string}\nisziprequired {boolean}\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetInformationItemFieldValues(infoItems)\n\nGets attribute values for given information items.\n\nParameters\n\ninfoItems [required] {Array}\nEach object in array has values for field:\n\ninternalid [required]\nReturns\n\nArray of objects of type item.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetItemFieldValues(items)\n\nGets attribute values for given items.\n\nParameters\n\nitems [required] {Array} Each object in array has values for fields:\ninternalid [required]\nitemtype [required]\nReturns\n\nArray of objects of type item.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetPartnerID()\n\nGets the Partner ID of the leadsource parameter from the current session.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\npartnerid {String}\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetPasswordHint(customerEmail)\n\nRetrieves password hint for customer with given email address.\n\nParameters\n\ncustomerEmail [required] {String}\nReturns\n\nString\n\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetPaymentMethod(paymentMethodId, fields)\n\nGets payment method for given ID.\n\nParameters\n\npaymentMethodId [required] {String}\nfields [optional] Array of field names to be included in returned JSON object; if omitted, all supported fields are returned\nReturns\n\nObject of type paymentmethod.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetPaymentMethods(fields)\n\nGets payment methods accepted by the web store.\n\nParameters\n\nfields [optional] Array of field names to be included in returned JSON object; if omitted, all supported fields are returned\nReturns\n\nArray of objects of type paymentmethod.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetRedirectURL()\n\n Gets the URL which is the result of a redirect given the input. Returns null if there is no redirect. Wildcards are also supported (*).\n\nParameters\n\nurl [required] {String}\nReturns\n\nString\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetRelatedItems(item)\n\nGets array of related items for given item.\n\nParameters\n\nitem [required]{object with values for fields}\ninternalid [required]\nitemtype [required]\nitemfields [optional] {array of item field names to query}\nNote For better performance limit the number of queried fields by specifying only fields you need in the itemfields array.  \nReturns\n\nArray of objects of type item.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetShipToCountries()\n\nGets countries to which web store can ship.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nArray of objects with fields:\n\nname{string}\ncode{string}\nisziprequired {boolean}\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetShopperCurrency()\n\nGets currency for current shopping session.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nObject with values for fields:\n\ninternalid {String}\nname {String}\nsymbol {String}\nprecision {Number}\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetShopperLanguageLocale()\n\nGets language and locale for current shopping session.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nlocaleid {String}\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetShopperPreferences()\n\nGets language, subsidiary, and currency preferences for the current shopping session.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nObject with values for fields:\n\nlanguage {String}\nsubsidiary{String}\ncurrency{String}\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetShopperSubsidiary()\n\nGets subsidiary for current shopping session.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nsubsidiaryid {String}\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetSiteCategoryContents(siteCategory, recursive)\n\nGets contents of given site category.\n\nIf not provided, siteCategory will be defaulted to the root category, and recursive will be defaulted to false. When recursive is set to false, the API returns the category contents that include subcategories and items; when recursive is set to true, the API returns the complete tree of subcategories but not items. \n\nNote To get the complete category tree from the root, use getSiteCategoryContents(true).  \nParameters\n\nsiteCategory [optional] {Array} Each object in array has values for field:internalid [required]\nrecursive [optional]\nReturns\n\nArray of objects of type sitecategory or item.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetSiteCategoryFieldValues(siteCategories)\n\nGets attribute values of given site categories.\n\nParameters\n\nsiteCategories [required] {Array} Each object in array has values for field:\ninternalid [required]\nReturns\n\nArray of objects of type sitecategory.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetSSPApplication()\n\nGets URL root of SSP application powering the current touchpoint.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nurlroot field value for sitesettings JSON object.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\ngetStates(countries)\n\nGets states and/or provinces.\n\nParameters\n\ncountries [optional] Array of strings for country codes\nReturns\n\nReturns an array of state/province names and state/province codes in the following format:\n\n{\"states\":[{\"name\":\"Alabama\",\"code\":\"AL\"},{\"name\":\"Alaska\",\"code\":\"AK\"},...], \"countrycode\":\"US\"}\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nisChangePasswordRequest()\n\nReturns true if all page parameters from the current request are valid for the password reset.\n\nThrows the error \"ERR_WS_EXPIRED_LINK\" if all page parameters from the current request are valid but the link has expired.\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nBoolean\n\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nno\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nisLoggedIn()\n\nChecks whether customer has logged in. This method can be used with the isRecognized() method. See Using isRecognized() with isLoggedIn().\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nBoolean\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nisRecognized()\n\nDetermines whether a user is recognized. This method can be used with the isLoggedIn() method. See Using isRecognized() with isLoggedIn().\n\nParameters\n\nNo parameters to set.\n\nReturns\n\nBoolean\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nlogIn(customer)\n\nLogs in a customer.\n\nParameters\n\ncustomer [required]{object with values for fields}\nemail [required]\npassword [required]\nReturns\n\nObject with fields:\n\ncustomerid {String} - internal id of customer record for logged in customer\nredirecturl{String} - URL to which user is redirected after logging in\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nlogout()\n\nLogs out a customer.\n\nNote If logout() is attempted from a shopping context, it does not succeed and an error is returned.  \nParameters\n\nNo parameters to set.\n\nReturns\n\nObject with field:\n\nredirecturl\nThe field redirecturl has the complete home URL to redirect to after logout. If not using the redirecturl field returned from logout(), the custom redirecturl should have the logoff=T parameter.\n\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nproceedToCheckout(CheckoutSettings)\n\nUsed for integration with a third party checkout provider such as PayPal Express. This API can only be called from a secure scheme (https).\n\nParameters\n\ncheckoutSettings Object with values for fields:\ntype; either “paypalexpress” or “google”\ncontinueurl\ncancelurl\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout\n\nNote Must have at least one order.  \nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nregisterCustomer(customer)\n\nRegisters the customer and logs them in.\n\nParameters\n\ncustomer [required]{object with values for fields}\nfirstname [required] {String}\nlastname [required] {String}\ncompanyname [optional] {String}\nemail [required] {String}\npassword [required] {String}\npassword2 [required] {String}\npasswordhint [optional] {String}\nemailsubscribe [optional] {String}\nleadsource [optional] {String}\nReturns\n\nObject with values for fields:\n\ncustomerid {String} - internal id of record for registered customer\nredirecturl {String} - URL to which user is redirected after registering\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nregisterGuest(guest)\n\nRegisters a guest.\n\nNote Throws exception if register guest with password.  \nParameters\n\nguest [optional]{object with values for fields}\nfirstname [optional] {String}\nlastname [required] {String}\nReturns\n\nObject with values for fields:\n\ncustomerid {String} - internal id of record for registered customer\nredirecturl {String} - URL to which user is redirected after registering\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nsendPasswordRetrievalEmail(customeremail)\n\nSends password retrieval email to given email address.\n\nParameters\n\ncustomerEmail [required] {String}\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nsetShopperCurrency(currencyid)\n\nSets currency for current shopping session\n\nNote Multiple Currencies feature must be enabled, specified currency must be supported in sitesettings, and logged in user must have permission to change currency.\nParameters\n\ncurrencyid [required] {string}\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nsetShopperLanguageLocale(localeid)\n\nSets language and locale for current shopping session\n\nNote Multi-Language feature must be enabled, and specified language must be supported in sitesettings.  \nParameters\n\nlocaleid [required]{String}\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nsetShopperPreferences(prefs)\n\nSets language, subsidiary and currency for current shopping session.\n\nParameters\n\nprefs [required]{object with values for fields}\nlanguage [optional] {String}\nsubsidiary [optional] {String}\ncurrency [optional] {String}\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nsetShopperSubsidiary(subsidiary)\n\nSets subsidiary for current shopping session (for NetSuite OneWorld users).\n\nParameters\n\nsubsidiary [required]{String}\nReturns\n\nNo value returned.\n\nSupported Domains\n\nCheckout, Shopping\n\nLogin Required?\n\nNo\n\nBack to ShoppingSession Methods | Back to Shopping Objects\n\nUsing isRecognized() with isLoggedIn()\n\nThere are four possible cases for using the isLoggedIn() method and isRecognized() method to correctly determine the logged in status of a user:\n\nnew (anonymous) user: isRecognized() == false and isLoggedIn() == false\nregistered and logged in user: isRecognized() == true and isLoggedIn() == true\nuser who clicked logout: isRecognized() == false and isLoggedIn() == false\nuser who had logged in, then closed his browser and later returns to the shop: isRecognized() == true and isLoggedIn() == false\nNote This last scenario is the only case where the isRecognized() status differs from the isLoggedIn() status. In this case the user didn’t click on the logout link and is therefore still recognized but isLoggedIn() returns false.\nRelated Topics\n\n*/\n\n//@filename {Foo} fileName ./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js\n\n/*jshint ignore:start */\n\n// This is the suitescript jsdoc file distributed in netsuite with small modifications to be compatible with short jsdoc\n// TODO: The following were not present in suitescript.api.js original file - they are in the help: \n// nlobjSearch class\n\n/**\n* @projectDescription \tSuiteScript JavaScript library summary.\n* \n* @module ns.suitescript\n* Note that there are some restrictions on API usage. Also note that the only 2 objects that can be\n* contructed are nlobjSearchFilter and nlobjSearchColumn. All other objects can only be created via\n* top-level function or method calls.\n*\n* The governance tag refers to the usage governance for an API call\n* The restricted tag refers to any known restrictions with a particular API call\n*\n* All Object arguments are Javascript Objects used as hash tables for specifying key-value pairs\n*\n* @since \t2005.0 Support scripting of current record in Client SuiteScript\n* @version\t2007.0 Support scripting of records in user events, portlets, and scheduled scripts\n* @version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting\n\n*/\n\n\n// @alias class string String\n// @alias class int Number\n// @alias class boolean Boolean\n// @alias class array Array\n// @alias class float Number\n\n\n\n\n\n// @class globals An artificial space to put all suitescript global functions - We put all suitescript global functions as methods of this class. - customization for compatibility with psg jsdocs\n\n/**\n * @method nlapiCopyRecord Return a new record using values from an existing record.\n\nThe following example initializes a new partner record from an existing one.\n\n\tvar partner = nlapiCopyRecord('partner', 20)\n\tpartner.setFieldValue('entityid', 'New Partner')\n\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n *\n * @param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of a copied record.\n *\n * @since\t2007.0\n */\nfunction nlapiCopyRecord(type, id, initializeValues) { ; }\n\n/**\n * @method nlapiLoadRecord Load an existing record from the system.\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n *\n * @param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of an existing NetSuite record.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0\n */\nfunction nlapiLoadRecord(type, id, initializeValues) { ; }\n\n/**\n * @method nlapiCreateRecord Instantiate a new nlobjRecord object containing all the default field data for that record type.\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n *\n * @param {string} type record type ID.\n * @param {Object} initializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}   Returns an nlobjRecord object of a new record from the system.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0\n */\nfunction nlapiCreateRecord(type, initializeValues) { ; }\n\n/**\n * @method nlapiSubmitRecord Submit a record to the system for creation or update.\n * @governance 20 units for transactions, 4 for custom records, 8 for all other records\n *\n * @param {nlobjRecord} record nlobjRecord object containing the data record.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false.\n * @param {boolean} \t[ignoreMandatoryFields] Disables mandatory field validation for this submit operation.\n * @return {string} internal ID for committed record.\n *\n * @exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0\n */\nfunction nlapiSubmitRecord(record, doSourcing, ignoreMandatoryFields) { ; }\n\n/**\n * @method nlapiDeleteRecord Delete a record from the system.\n * @governance 20 units for transactions, 4 for custom records, 8 for all other records\n *\n * @param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @return {void}\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0\n */\nfunction nlapiDeleteRecord(type, id) { ; }\n\n\n\n\n\n/*\n\n@method nlapiCreateSearch\n\nCreates a new search. The search can be modified and run as an ad-hoc search, without saving it. Alternatively, calling nlobjSearch.saveSearch(title, scriptId) will save the search to the database, so it can be resused later in the UI or using nlapiLoadSearch(type, id).\n\n> Note: This function is agnostic in terms of its filters argument. It can accept input of either a search filter (nlobjSearchFilter), a search filter list (nlobjSearchFilter[]), or a search filter expression (Object[]).\n\n@param {string} type  [required] - The record internal ID of the record type you are searching (for example, customer|lead|prospect|partner|vendor|contact). For a list of internal IDs, in the NetSuite Help Center see SuiteScript Supported Records.\n@param filters {nlobjSearchFilter|Array<nlobjSearchFilter>|Array<Object>} [optional] - A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects - or - a search filter expression.\n\n> Note You can further filter the returned nlobjSearch object by passing additional filter values. You will do this using the nlobjSearch.addFilter(filter) method or nlobjSearch.addFilters(filters) method.\n\n@param {nlobjSearchColumn|Array<nlobjSearchColumn>} columns [optional] - A single nlobjSearchColumn(name, join, summary) object - or - an array of nlobjSearchColumn(name, join, summary) objects. Note that you can further filter the returned nlobjSearch object by passing additional search return column values. You will do this using the nlobjSearch.setColumns(columns) method\n\n@returns {nlobjSearch}\n*/\n\n// @class nlobjSearch TODO\n\n// @class globals\n\n/**\n * @method nlapiSearchRecord Perform a record search using an existing search or filters and columns.\n * @governance 10 units\n * @restriction returns the first 1000 rows in the search\n *\n * @param {string} \t\ttype record type ID.\n * @param {int, string} [id] The internal ID or script ID for the saved search to use for search.\n * @param {nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n * @param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0\n */\nfunction nlapiSearchRecord(type, id, filters, columns) { ; }\n\n/**\n * @method nlapiSearchGlobal Perform a global record search across the system.\n * @governance 10 units\n * @restriction returns the first 1000 rows in the search\n *\n * @param {string} keywords Global search keywords string or expression.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects containing the following four columns: name, type (as shown in the UI), info1, and info2.\n *\n * @since\t2008.1\n */\nfunction nlapiSearchGlobal(keywords) { ; }\n\n/**\n * @method nlapiSearchDuplicate Perform a duplicate record search using Duplicate Detection criteria.\n * @governance 10 units\n * @restriction returns the first 1000 rows in the search\n *\n * @param {string} \t\ttype The recordType you are checking duplicates for (for example, customer|lead|prospect|partner|vendor|contact).\n * @param {Array<String>} \t[fields] array of field names used to detect duplicate (for example, companyname|email|name|phone|address1|city|state|zipcode).\n * @param {int} \t\t[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1\n */\nfunction nlapiSearchDuplicate(type, fields, id) { ; }\n\n\n\n\n\n\n/**\n * @method nlapiTransformRecord Create a new record using values from an existing record of a different type.\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n *\n * @param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {string} \ttransformType The recordType you are transforming the existing record into.\n * @param {Object} \t[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n * @return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0\n */\nfunction nlapiTransformRecord(type, id, transformType, transformValues) { ; }\n\n/**\n * @method nlapiVoidTransaction void a transaction based on type and id .\n * @governance 10 units for transactions\n *\n * @param {string} \ttype The transaction type name.\n * @param {string} \tid The internal ID for the record.\n * @return {string}  if accounting preference is reversing journal, then it is new journal id,\n *                   otherwise, it is the input record id\n *\n * @since\t2014.1\n */\nfunction nlapiVoidTransaction (type, id) { }\n\n/**\n * @method nlapiLookupField Fetch the value of one or more fields on a record. This API uses search to look up the fields and is much\n * faster than loading the record in order to get the field.\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n *\n * @param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {string| Array<String>} fields - field or fields to look up.\n * @param {boolean} [text] If set then the display value is returned instead for select fields.\n * @return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1\n */\nfunction nlapiLookupField(type,id,fields, text) { ; }\n\n/**\n * @method nlapiSubmitField Submit the values of a field or set of fields for an existing record.\n * @governance 10 units for transactions, 2 for custom records, 4 for all other records\n * @restriction only supported for records and fields where DLE (Direct List Editing) is supported\n *\n * @param {string} \t\ttype The record type name.\n * @param {int} \t\tid The internal ID for the record.\n * @param {string| Array<String>} fields field or fields being updated.\n * @param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1\n */\nfunction nlapiSubmitField(type,id,fields,values,doSourcing) { ; }\n\n/**\n * @method nlapiAttachRecord Attach a single record to another with optional properties.\n * @governance 10 units\n *\n * @param {string} \ttype1 The record type name being attached\n * @param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2\n */\nfunction nlapiAttachRecord(type1, id1, type2, id2, properties) { ; }\n\n/**\n * @method nlapiDetachRecord Detach a single record from another with optional properties.\n * @governance 10 units\n *\n * @param {string} \ttype1 The record type name being attached\n * @param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2\n */\nfunction nlapiDetachRecord(type1, id1, type2, id2, properties) { ; }\n\n\n/**\n * @method nlapiResolveURL Resolve a URL to a resource or object in the system.\n *\n * @param {string} type type specifier for URL: suitelet|tasklink|record|mediaitem\n * @param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @return {string}\n *\n * @since\t2007.0\n */\nfunction nlapiResolveURL(type, subtype, id, pagemode) { ; }\n\n/**\n * @method nlapiSetRedirectURL Redirect the user to a page. Only valid in the UI on Suitelets and User Events. In Client scripts this will initialize the redirect URL used upon submit.\n *\n * @param {string} type type specifier for URL: suitelet|tasklink|record|mediaitem\n * @param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n *\n * @since\t2007.0\n */\nfunction nlapiSetRedirectURL(type, subtype, id, pagemode, parameters) { ; }\n\n/**\n * @method nlapiRequestURL Request a URL to an external or internal resource.\n * @restriction NetSuite maintains a white list of CAs that are allowed for https requests. Please see the online documentation for the complete list.\n * @governance 10 units\n *\n * @param {string} url \t\tA fully qualified URL to an HTTP(s) resource\n * @param {string| Object} \t[postdata] - string, document, or Object containing POST payload\n * @param {Object} \t\t\t[headers] - Object containing request headers.\n * @param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0\n */\nfunction nlapiRequestURL(url, postdata, headers, callback, method) { ; }\n\n/**\n * @method nlapiGetContext Return context information about the current user/script.\n *\n * @return {nlobjContext}\n *\n * @since\t2007.0\n */\nfunction nlapiGetContext() { ; }\n\n/**\n * @method nlapiGetUser Return the internal ID for the currently logged in user. Returns -4 when called from online forms or \"Available without Login\" Suitelets.\n *\n * @return {int}\n *\n * @since\t2005.0\n */\nfunction nlapiGetUser() { ; }\n\n/**\n * @method nlapiGetRole Return the internal ID for the current user's role. Returns 31 (Online Form User) when called from online forms or \"Available without Login\" Suitelets.\n *\n * @return {int}\n *\n * @since\t2005.0\n */\nfunction nlapiGetRole() { ; }\n\n/**\n * @method nlapiGetDepartment Return the internal ID for the current user's department.\n *\n * @return {int}\n *\n * @since\t2005.0\n */\nfunction nlapiGetDepartment() { ; }\n\n/**\n * @method nlapiGetLocation Return the internal ID for the current user's location.\n *\n * @return {int}\n *\n * @since\t2005.0\n */\nfunction nlapiGetLocation() { ; }\n\n/**\n * @method nlapiGetSubsidiary Return the internal ID for the current user's subsidiary.\n *\n * @return {int}\n *\n * @since\t2008.1\n */\nfunction nlapiGetSubsidiary() { ; }\n\n/**\n * @method nlapiGetRecordType Return the recordtype corresponding to the current page or userevent script.\n *\n * @return {string}\n *\n * @since\t2007.0\n */\nfunction nlapiGetRecordType() { ; }\n\n/**\n * @method nlapiGetRecordId Return the internal ID corresponding to the current page or userevent script.\n *\n *  @return {int}\n *\n * @since\t2007.0\n */\nfunction nlapiGetRecordId() { ; }\n\n/**\n * @method nlapiSendEmail Send out an email and associate it with records in the system.\n * Supported base types are entity for entities, transaction for transactions, activity for activities and cases, record|recordtype for custom records\n * @governance 10 units\n * @restriction all outbound emails subject to email Anti-SPAM policies\n *\n * @param {int} \t\tfrom internal ID for employee user on behalf of whom this email is sent\n * @param {string| int} to email address or internal ID of user that this email is being sent to\n * @param {string} \t\tsubject email subject\n * @param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0\n */\nfunction nlapiSendEmail(from, to, subject, body, cc, bcc, records, files, notifySenderOnBounce, internalOnly, replyTo) { ; }\n\n/**\n * @method nlapiSendCampaignEmail Sends a single on-demand campaign email to a specified recipient and returns a campaign response ID to track the email.\n * @governance 10 units\n * @restriction works in conjunction with the Lead Nurturing (campaigndrip) sublist only\n *\n * @param {int} campaigneventid internal ID of the campaign event\n * @param {int} recipientid internal ID of the recipient - the recipient must have an email\n * @return {int}\n *\n * @since\t2010.1\n */\nfunction nlapiSendCampaignEmail(campaigneventid, recipientid) { ; }\n\n/**\n * @method nlapiSendFax Send out a fax and associate it with records in the system. This requires fax preferences to be configured.\n * Supported base types are entity for entities, transaction for transactions, activity for activities and cases, record|recordtype for custom records\n * @governance 10 units\n *\n * @param {int} \t\tfrom internal ID for employee user on behalf of whom this fax is sent\n * @param {string| int} to fax address or internal ID of user that this fax is being sent to\n * @param {string} \t\tsubject fax subject\n * @param {string} \t\tbody fax body\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2\n */\nfunction nlapiSendFax(from, to, subject, body, records, files) { ; }\n\n/**\n * @method nlapiGetField Return field definition for a field.\n *\n * @param {string} fldnam the name of the field\n * @return {nlobjField}\n *\n * @since\t2009.1\n */\nfunction nlapiGetField(fldnam) { ; }\n\n/**\n * @method nlapiGetMatrixField Return field definition for a matrix field.\n *\n * @param {string} \ttype\tmatrix sublist name\n * @param {string} \tfldnam matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2\n */\nfunction nlapiGetMatrixField(type, fldnam, column) { ; }\n\n/**\n * @method nlapiGetLineItemField Return field definition for a sublist field.\n *\n * @param {string} \ttype\tsublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \t[linenum] line number for sublist field (1-based) and only valid for sublists of type staticlist and list\n * @return {nlobjField}\n *\n * @since\t2009.1\n */\nfunction nlapiGetLineItemField(type, fldnam, linenum) { ; }\n\n/**\n * @method nlapiGetLineItemMatrixField Return an nlobjField containing sublist field metadata.\n *\n * @param {string} \ttype\tmatrix sublist name\n * @param {string} \tfldnam matrix field name\n * @param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2\n */\nfunction nlapiGetLineItemMatrixField(type, fldnam, linenum, column) { ; }\n\n/**\n * @method nlapiGetFieldValue Return the value of a field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam the field name\n * @return {string}\n *\n * @since\t2005.0\n */\nfunction nlapiGetFieldValue(fldnam) { ; }\n\n/**\n * @method nlapiSetFieldValue Set the value of a field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \tfldnam the field name\n * @param {string} \tvalue value used to set field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0\n */\nfunction nlapiSetFieldValue(fldnam,value,firefieldchanged,synchronous) { ; }\n\n/**\n * @method nlapiGetFieldText Return the display value of a select field's current selection on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam the field name\n * @return {string}\n *\n * @since\t2005.0\n */\nfunction nlapiGetFieldText(fldnam) { ; }\n\n/**\n * @method nlapiSetFieldText Set the value of a field on the current record on a page using it's label.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \tfldnam the field name\n * @param {string} \ttxt display name used to lookup field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0\n */\nfunction nlapiSetFieldText(fldnam,txt,firefieldchanged,synchronous)\t{ ; }\n\n/**\n * @method nlapiGetFieldValues Return the values of a multiselect field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam the field name\n * @return {Array<String>}\n *\n * @since\t2005.0\n */\nfunction nlapiGetFieldValues(fldnam) { ; }\n\n/**\n * @method nlapiSetFieldValues Set the values of a multiselect field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \t\tfldnam field name\n * @param {Array<String>} \tvalues array of strings containing values for field\n * @param {boolean} \t[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0\n */\nfunction nlapiSetFieldValues(fldnam,values,firefieldchanged,synchronous) { ; }\n\n/**\n * @method nlapiGetFieldTexts Return the values (via display text) of a multiselect field on the current record.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam field name\n * @return {Array<String>}\n *\n * @since\t2009.1\n */\nfunction nlapiGetFieldTexts(fldnam) { ; }\n\n/**\n * @method nlapiSetFieldTexts Set the values (via display text) of a multiselect field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \t\tfldnam field name\n * @param {Array<String>}\ttexts array of strings containing display values for field\n * @param {boolean}\t\t[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1\n */\nfunction nlapiSetFieldTexts(fldnam,texts,firefieldchanged,synchronous) { ; }\n\n/**\n * @method nlapiGetMatrixValue Get the value of a matrix header field\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {string}\n *\n * @since\t2009.2\n */\nfunction nlapiGetMatrixValue(type, fldnam, column) { ; }\n\n/**\n * @method nlapiSetMatrixValue Set the value of a matrix header field\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value for matrix field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2\n */\nfunction nlapiSetMatrixValue(type, fldnam, column, value, firefieldchanged, synchronous) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemMatrixValue Get the current value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {string} value\n *\n * @since\t2009.2\n */\nfunction nlapiGetCurrentLineItemMatrixValue(type, fldnam, column) { ; }\n\n/**\n * @method nlapiSetCurrentLineItemMatrixValue Set the current value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @restriction synchronous arg is only supported in Client SuiteScript\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2\n */\nfunction nlapiSetCurrentLineItemMatrixValue(type, fldnam, column, value, firefieldchanged, synchronous) { ; }\n\n/**\n * @method nlapiGetLineItemMatrixValue Return the value of a sublist matrix field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn column index (1-based)\n * @param {string} value\n *\n * @since\t2009.2\n */\nfunction nlapiGetLineItemMatrixValue(type, fldnam, linenum, column) { ; }\n\n/**\n * @method nlapiGetLineItemValue Return the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0\n */\nfunction nlapiGetLineItemValue(type,fldnam,linenum) { ; }\n\n/**\n * @method nlapiGetLineItemDateTimeValue Return the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2013.2\n */\nfunction nlapiGetLineItemDateTimeValue(type,fldnam,linenum) { ; }\n\n/**\n * @method nlapiGetLineItemDateTimeValue Return the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} \ttimezone value\n * @return {string}\n *\n * @since 2013.2\n */\nfunction nlapiGetLineItemDateTimeValue(type,fldnam,linenum,timezone) { ; }\n\n/**\n * @method nlapiSetLineItemValue Set the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} value\n * @retun {void}\n *\n * @since 2005.0\n */\nfunction nlapiSetLineItemValue(type,fldnam,linenum,value) { ; }\n\n/**\n * @method nlapiSetLineItemDateTimeValue Set the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} datetime value\n * @retun {void}\n *\n * @since 2013.2\n */\nfunction nlapiSetLineItemDateTimeValue(type,fldnam,linenum,value) { ; }\n\n/**\n * @method nlapiSetLineItemDateTimeValue Set the value of a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} datetime value\n * @param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2\n */\nfunction nlapiSetLineItemDateTimeValue(type,fldnam,linenum,value,timezone) { ; }\n\n/**\n * @method nlapiGetLineItemText Return the label of a select field's current selection for a particular line.\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0\n */\nfunction nlapiGetLineItemText(type,fldnam,linenum) { ; }\n\n/**\n * @method nlapiFindLineItemValue Return the 1st line number that a sublist field value appears in\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} val the value being queried for in a sublist field\n * @return {int}\n *\n * @since 2009.2\n */\nfunction nlapiFindLineItemValue(type, fldnam, val) { ; }\n\n/**\n * @method nlapiFindLineItemMatrixValue Return the 1st line number that a matrix field value appears in\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam matrix field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tval the value being queried for in a matrix field\n * @return {int}\n *\n * @since 2009.2\n */\nfunction nlapiFindLineItemMatrixValue(type, fldnam, column, val) { ; }\n\n/**\n * @method nlapiGetMatrixCount Return the number of columns for a matrix field\n *\n * @param {string} type sublist name\n * @param {string} fldnam matrix field name\n * @return {int}\n *\n * @since 2009.2\n */\nfunction nlapiGetMatrixCount(type, fldnam) { ; }\n\n/**\n * @method nlapiGetLineItemCount Return the number of sublists in a sublist on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} type sublist name\n * @return {int}\n *\n * @since 2005.0\n */\nfunction nlapiGetLineItemCount(type) { ; }\n\n/**\n * @method nlapiInsertLineItem Insert and select a new line into the sublist on a page or userevent.\n *\n * @param {string} type sublist name\n * @param {int} [line] line number at which to insert a new line.\n * @return{void}\n *\n * @since 2005.0\n */\nfunction nlapiInsertLineItem(type, line) { ; }\n\n/**\n * @method nlapiRemoveLineItem Remove the currently selected line from the sublist on a page or userevent.\n *\n * @param {string} type sublist name\n * @param {int} [line]\tline number to remove.\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiRemoveLineItem(type, line) { ; }\n\n/**\n * @method nlapiSetCurrentLineItemValue Set the value of a field on the currently selected line.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiSetCurrentLineItemValue(type,fldnam,value,firefieldchanged,synchronous) { ; }\n\n/**\n * @method nlapiSetCurrentLineItemDateTimeValue Set the value of a field on the currently selected line.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} value field value\n * @return {void}\n *\n * @since 2013.2\n */\nfunction nlapiSetCurrentLineItemDateTimeValue(type,fldnam,value) { ; }\n\n/**\n * @method nlapiSetCurrentLineItemDateTimeValue Set the value of a field on the currently selected line.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {string} timezone value\n * @return {void}\n *\n * @since 2013.2\n */\nfunction nlapiSetCurrentLineItemDateTimeValue(type,fldnam,value,timezone) { ; }\n\n/**\n * @method nlapiSetCurrentLineItemText Set the value of a field on the currently selected line using it's label.\n * @restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} txt string containing display value or search text.\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiSetCurrentLineItemText(type,fldnam,txt,firefieldchanged,synchronous) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemValue Return the value of a field on the currently selected line.\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @return {string}\n *\n * @since 2005.0\n */\nfunction nlapiGetCurrentLineItemValue(type,fldnam) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemDateTimeValue Return the value of a field on the currently selected line.\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @return {string}\n *\n * @since 2013.2\n */\nfunction nlapiGetCurrentLineItemDateTimeValue(type,fldnam) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemDateTimeValue Return the value of a field on the currently selected line.\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} timezone value\n * @return {string}\n *\n * @since 2013.2\n */\nfunction nlapiGetCurrentLineItemDateTimeValue(type,fldnam, timezone) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemText Return the label of a select field's current selection on the currently selected line.\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @return {string}\n *\n * @since 2005.0\n */\nfunction nlapiGetCurrentLineItemText(type,fldnam) { ; }\n\n/**\n * @method nlapiGetCurrentLineItemIndex Return the line number for the currently selected line.\n *\n * @param {string} type sublist name\n * @return {int}\n *\n * @since 2005.0\n */\nfunction nlapiGetCurrentLineItemIndex(type) { ; }\n\n/**\n * @method nlapiSetLineItemDisabled Disable a sublist field.\n * @restriction Only supported on sublists of type inlineeditor, editor and list (current field only)\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {boolean} disable if true then field is disabled\n * @param {int} linenum line number for sublist field (1-based) and only valid for sublists of type list\n * @return {void}\n *\n * @since 2009.1\n */\nfunction nlapiSetLineItemDisabled(type,fldnam,disable, linenum) { ; }\n\n/**\n * @method nlapiGetFieldMandatory Return field mandatoriness.\n *\n * @param {string} fldnam field name\n * @return {boolean}\n *\n * @since 2009.1\n */\nfunction nlapiGetFieldMandatory(fldnam) { ; }\n\n/**\n * @method nlapiGetLineItemMandatory Return sublist field mandatoriness.\n * @restriction Only supported on sublists of type inlineeditor or editor (current field only)\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @return {boolean}\n *\n * @since 2009.1\n */\nfunction nlapiGetLineItemMandatory(type,fldnam) { ; }\n\n/**\n * @method nlapiSetFieldMandatory Make a field mandatory.\n *\n * @param {string} \tfldnam field name\n * @param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.1\n */\nfunction nlapiSetFieldMandatory(fldnam,mandatory) { ; }\n\n/**\n * @method nlapiSetLineItemMandatory Make a sublist field mandatory.\n * @restriction Only supported on sublists of type inlineeditor or editor (current field only)\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.2\n */\nfunction nlapiSetLineItemMandatory(type,fldnam,mandatory) { ; }\n\n/**\n * @method nlapiSelectLineItem Select an existing line in a sublist.\n *\n * @param {string} type sublist name\n * @param {int} linenum line number to select\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiSelectLineItem(type, linenum) { ; }\n\n/**\n * @method nlapiCommitLineItem Save changes made on the currently selected line to the sublist.\n *\n * @param {string} type sublist name\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiCommitLineItem(type) { ; }\n\n/**\n * @method nlapiCancelLineItem Cancel any changes made on the currently selected line.\n * @restriction Only supported for sublists of type inlineeditor and editor\n *\n * @param {string} type sublist name\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiCancelLineItem(type) { ; }\n\n/**\n * @method nlapiSelectNewLineItem Select a new line in a sublist.\n * @restriction Only supported for sublists of type inlineeditor and editor\n *\n * @param {string} type sublist name\n * @return {void}\n *\n * @since 2005.0\n */\nfunction nlapiSelectNewLineItem(type) { ; }\n\n/**\n * @method nlapiRefreshLineItems Refresh the sublist table.\n * @restriction Only supported for sublists of type inlineeditor, editor, and staticlist\n * @restriction Client SuiteScript only.\n *\n * @param {string} type sublist name\n * @return{void}\n *\n * @since 2005.0\n */\nfunction nlapiRefreshLineItems(type) { ; }\n\n/**\n * @method nlapiInsertSelectOption Adds a select option to a scripted select or multiselect field.\n * @restriction Client SuiteScript only\n *\n * @param {string} fldnam field name\n * @param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2\n */\nfunction nlapiInsertSelectOption(fldnam, value, text, selected) { ; }\n\n/**\n * @method nlapiRemoveSelectOption Removes a select option (or all if value is null) from a scripted select or multiselect field.\n * @restriction Client SuiteScript only\n *\n * @param {string} fldnam field name\n * @param {string} value internal ID of select option to remove\n * @return {void}\n *\n * @since 2008.2\n */\nfunction nlapiRemoveSelectOption(fldnam, value) { ; }\n\n/**\n * @method nlapiInsertLineItemOption Adds a select option to a scripted select or multiselect sublist field.\n * @restriction Client SuiteScript only\n *\n * @param {string} type\tsublist name\n * @param {string} fldnam sublist field name\n * @param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2\n */\nfunction nlapiInsertLineItemOption(type, fldnam, value, text, selected) { ; }\n\n/**\n * @method nlapiRemoveLineItemOption Removes a select option (or all if value is null) from a scripted select or multiselect sublist field.\n * @restriction Client SuiteScript only\n *\n * @param {string} type\tsublist name\n * @param {string} fldnam sublist field name\n * @param {string} value internal ID for select option to remove\n * @return {void}\n *\n * @since 2008.2\n */\nfunction nlapiRemoveLineItemOption(type, fldnam, value) { ; }\n\n/**\n * @method nlapiIsLineItemChanged Returns true if any changes have been made to a sublist.\n * @restriction Client SuiteScript only\n *\n * @param {string} type sublist name\n * @return {boolean}\n *\n * @since 2005.0\n */\nfunction nlapiIsLineItemChanged(type) { ; }\n\n/**\n * @method nlapiGetNewRecord Return an record object containing the data being submitted to the system for the currenr record.\n * @restriction User Event scripts only\n *\n * @return {nlobjRecord}\n *\n * @since 2008.1\n */\nfunction nlapiGetNewRecord() { ; }\n\n/**\n * @method nlapiGetOldRecord Return an record object containing the current record's data prior to the write operation.\n * @restriction beforeSubmit|afterSubmit User Event scripts only\n *\n * @return {nlobjRecord}\n *\n * @since 2008.1\n */\nfunction nlapiGetOldRecord() { ; }\n\n/**\n * @method nlapiCreateError Create an nlobjError object that can be used to abort script execution and configure error notification\n *\n * @param {string} \tcode error code\n * @param {string} \tdetails error description\n * @param {boolean} [suppressEmail] if true then suppress the error notification emails from being sent out (false by default).\n * @return {nlobjError}\n *\n * @since 2008.2\n */\nfunction nlapiCreateError(code,details,suppressEmail) { ; }\n\n/**\n * @method nlapiCreateForm Return a new entry form page.\n * @restriction Suitelets only\n *\n * @param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjForm}\n *\n * @since 2008.2\n */\nfunction nlapiCreateForm(title, hideHeader) { ; }\n\n/**\n * @method nlapiCreateList Return a new list page.\n * @restriction Suitelets only\n *\n * @param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjList}\n *\n * @since 2008.2\n */\nfunction nlapiCreateList(title, hideHeader) { ; }\n\n/**\n * @method nlapiCreateAssistant Return a new assistant page.\n * @restriction Suitelets only\n *\n * @param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjAssistant}\n *\n * @since 2009.2\n */\nfunction nlapiCreateAssistant(title, hideHeader) { ; }\n\n/**\n * @method nlapiLoadFile Load a file from the file cabinet (via its internal ID or path).\n * @governance 10 units\n * @restriction Server SuiteScript only\n *\n * @param {string| int} id internal ID or relative path to file in the file cabinet (i.e. /SuiteScript/foo.js)\n * @return {nlobjFile}\n *\n * @since 2008.2\n */\nfunction nlapiLoadFile(id) { ; }\n\n/**\n * @method nlapiSubmitFile Add/update a file in the file cabinet.\n * @governance 20 units\n * @restriction Server SuiteScript only\n *\n * @param {nlobjFile} file a file object to submit\n * @return {int} return internal ID of file\n *\n * @since 2009.1\n */\nfunction nlapiSubmitFile(file) { ; }\n\n/**\n * @method nlapiDeleteFile Delete a file from the file cabinet.\n * @governance 20 units\n * @restriction Server SuiteScript only\n *\n * @param {int} id internal ID of file to be deleted\n * @return {id}\n *\n * @since 2009.1\n */\nfunction nlapiDeleteFile(id) { ; }\n\n/**\n * @method nlapiCreateFile Instantiate a file object (specifying the name, type, and contents which are base-64 encoded for binary types.)\n * @restriction Server SuiteScript only\n *\n * @param {string} name file name\n * @param {string} type file type i.e. plainText, htmlDoc, pdf, word (see documentation for the list of supported file types)\n * @param {string} contents string containing file contents (must be base-64 encoded for binary types)\n * @return {nlobjFile}\n *\n * @since 2009.1\n */\nfunction nlapiCreateFile(name, type, contents) { ; }\n\n/**\n * @method nlapiMergeRecord Perform a mail merge operation using any template and up to 2 records and returns an nlobjFile with the results.\n * @restriction only supported for record types that are available in mail merge: transactions, entities, custom records, and cases\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {int} \tid internal ID of template\n * @param {string} \tbaseType primary record type\n * @param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2\n */\nfunction nlapiMergeRecord(id, baseType, baseId, altType, altId, fields) { ; }\n\n/**\n * @method nlapiPrintRecord Print a record (transaction) gievn its type, id, and output format.\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {string} \ttype print output type: transaction|statement|packingslip|pickingticket\n * @param {int} \tid internal ID of record to print\n * @param {string} \t[format] output format: html|pdf|default\n * @param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2\n */\nfunction nlapiPrintRecord(type, id, format, properties) { ; }\n\n/**\n * @method nlapiXMLToPDF Generate a PDF from XML using the BFO report writer (see http://big.faceless.org/products/report/).\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {string} input string containing BFO compliant XHTML\n * @return {nlobjFile}\n *\n * @since 2009.1\n */\nfunction nlapiXMLToPDF(input) { ; }\n\n/**\n * @method nlapiCreateTemplateRenderer Create a template renderer used to generate various outputs based on a template.\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {string} type\tmedia type: pdf|html\n * @param {string} [engineType] [optional]: default is freemarker/html\n * @return {nlobjTemplateRenderer}\n *\n */\nfunction nlapiCreateTemplateRenderer() { ; }\n\n/**\n * @method nlapiCreateEmailMerger Create an email merger used to assemble subject and body text of an email from a given\n * FreeMarker template and a set of associated records.\n * @restriction Server SuiteScript only\n *\n * @param {int} templateId\tinternal ID of the template\n * @return {nlobjEmailMerger}\n *\n * @since 2015.1\n */\nfunction nlapiCreateEmailMerger(id) { ; }\n\n/**\n * @method nlapiLogExecution Create an entry in the script execution log (note that execution log entries are automatically purged after 30 days).\n *\n * @param {string} type\tlog type: debug|audit|error|emergency\n * @param {string} title log title (up to 90 characters supported)\n * @param {string} [details] log details (up to 3000 characters supported)\n * @return {void}\n *\n * @since 2008.1\n */\nfunction nlapiLogExecution(type, title, details) { ; }\n\n/**\n * @method nlapiScheduleScript Queue a scheduled script for immediate execution and return the status QUEUED if successfull.\n * @restriction Server SuiteScript only\n * @governance 20 units\n *\n * @param {string| int}\tscript script ID or internal ID of scheduled script\n * @param {string| int} [deployment] script ID or internal ID of scheduled script deployment. If empty, the first \"free\" deployment (i.e. status = Not Scheduled or Completed) will be used\n * @param {Object} \t\tparameters Object of parameter name->values used in this scheduled script instance\n * @return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1\n */\nfunction nlapiScheduleScript(script, deployment, parameters) { ; }\n\n/**\n * @method nlapiOutboundSSO Return a URL with a generated OAuth token.\n * @restriction Suitelets and Portlets only\n * @governance 20 units\n *\n * @param {string} ssoAppKey\n * @return {string}\n *\n * @since 2009.2\n */\nfunction nlapiOutboundSSO(ssoAppKey) { ; }\n\n/**\n * @method nlapiLoadConfiguration Loads a configuration record\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {string} type\n * @return {nlobjConfiguration}\n *\n * @since 2009.2\n */\nfunction nlapiLoadConfiguration(type) { ; }\n\n/**\n * @method nlapiSubmitConfiguration Commits all changes to a configuration record.\n * @restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {nlobjConfiguration} setup record\n * @return (void)\n *\n * @since 2009.2\n */\nfunction nlapiSubmitConfiguration(setup) { ; }\n\n/**\n * @method nlapiStringToDate Convert a String into a Date object.\n *\n * @param {string} str date string in the user's date format, timeofday format, or datetime format\n * @param {string} format format type to use: date|datetime|timeofday with date being the default\n * @return {date}\n *\n * @since 2005.0\n */\nfunction nlapiStringToDate(str, format) { ; }\n\n/**\n * @method nlapiDateToString Convert a Date object into a String\n *\n * @param {date} \td date object being converted to a string\n * @param {string} [formattype] format type to use: date|datetime|timeofday with date being the default\n * @return {string}\n *\n * @since 2005.0\n */\nfunction nlapiDateToString(d, formattype) { ; }\n\n/**\n * @method nlapiAddDays Add days to a Date object and returns a new Date\n *\n * @param {date} d date object used to calculate the new date\n * @param {int}\tdays the number of days to add to this date object.\n * @return {date}\n *\n * @since 2008.1\n */\nfunction nlapiAddDays(d, days) { ; }\n\n/**\n * @method nlapiAddMonths Add months to a Date object and returns a new Date.\n *\n * @param {date} d date object used to calculate the new date\n * @param {int} months the number of months to add to this date object.\n * @return {date}\n *\n * @since 2008.1\n */\nfunction nlapiAddMonths(d, months) { ; }\n\n/**\n * @method nlapiFormatCurrency Format a number for data entry into a currency field.\n *\n * @param {string} str numeric string used to format for display as currency using user's locale\n * @return {string}\n *\n * @since 2008.1\n */\nfunction nlapiFormatCurrency(str) { ; }\n\n/**\n * @method nlapiEncrypt Encrypt a String using a SHA-1 hash function\n *\n * @param {string} s string to encrypt\n * @return {string}\n *\n * @since 2009.2\n */\nfunction nlapiEncrypt(s) { ; }\n\n/**\n * @method nlapiEscapeXML Escape a String for use in an XML document.\n *\n * @param {string} text string to escape\n * @return {string}\n *\n * @since 2008.1\n */\nfunction nlapiEscapeXML(text) { ; }\n\n/**\n * @method nlapiStringToXML Convert a String into an XML document. Note that in Server SuiteScript XML is supported natively by the JS runtime using the e4x standard (http://en.wikipedia.org/wiki/E4X)\n * This makes scripting XML simpler and more efficient\n *\n * @param {string} str string being parsed into an XML document\n * @return {document}\n *\n * @since 2008.1\n */\nfunction nlapiStringToXML(str) { ; }\n\n/**\n * @method nlapiXMLToString Convert an XML document into a String.  Note that in Server SuiteScript XML is supported natively by the JS runtime using the e4x standard (http://en.wikipedia.org/wiki/E4X)\n * This makes scripting XML data simpler and more efficient\n *\n * @param {document} xml document being serialized into a string\n * @return {string}\n *\n * @since 2008.1\n */\nfunction nlapiXMLToString(xml) { ; }\n\n/**\n * @method nlapiValidateXML Validate that a given XML document conforms to a given XML schema. XML Schema Definition (XSD) is the expected schema format.\n *\n * @param {document} xmlDocument xml to validate\n * @param {document} schemaDocument schema to enforce\n * @param {string} schemaFolderId if your schema utilizes <import> or <include> tags which refer to sub-schemas by file name (as opposed to URL),\n *                 provide the Internal Id of File Cabinet folder containing these sub-schemas as the schemaFolderId argument\n * @throws {nlobjError} error containsing validation failure message(s) - limited to first 10\n *\n * @since 2014.1\n */\nfunction nlapiValidateXML(xmlDocument, schemaDocument, schemaFolderId) { ; }\n\n/**\n * @method nlapiSelectValue select a value from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n * @param {node} node node being queried\n * @param {string} xpath string containing XPath expression.\n * @return {string}\n *\n * @since 2008.2\n */\nfunction nlapiSelectValue(node, xpath) { ; }\n\n/**\n * @method nlapiSelectValues Select an array of values from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n * @param {node} \tnode node being queried\n * @param {string} \txpath string containing XPath expression.\n * @return {Array<String>}\n *\n * @since 2008.1\n */\nfunction nlapiSelectValues(node, xpath) { ; }\n\n/**\n * @method nlapiSelectNode Select a node from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n * @param {node} \tnode node being queried\n * @param {string} \txpath string containing XPath expression.\n * @return {node}\n *\n * @since 2008.1\n */\nfunction nlapiSelectNode(node, xpath) { ; }\n\n/**\n * @method nlapiSelectNodes Select an array of nodes from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n * @param {node} \tnode node being queried\n * @param {string} \txpath string containing XPath expression.\n * @return {node[]}\n *\n * @since 2008.1\n */\nfunction nlapiSelectNodes(node, xpath) { ; }\n\n/**\n * @method nlapiExchangeRate Calculate exchange rate between two currencies as of today or an optional effective date.\n * @governance 10 units\n *\n * @param {string| int} fromCurrency internal ID or currency code of currency we are converting from\n * @param {string| int} toCurrency internal ID or currency code of currency we are converting to\n * @param {string} [date] string containing date of effective exchange rate. defaults to today\n * @return {float}\n *\n * @since 2009.1\n */\nfunction nlapiExchangeRate(fromCurrency, toCurrency, date) { ; }\n\n/**\n * @method nlapiInitiateWorkflow Initiates a workflow on-demand and returns the workflow instance ID for the workflow-record combination.\n * @governance 20 units\n *\n * @param {string} recordtype record type ID of the workflow base record\n * @param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {int}\n *\n * @since 2010.1\n */\nfunction nlapiInitiateWorkflow(recordtype, id, workflowid) { ; }\n\n/**\n * @method nlapiInitiateWorkflowAsync Initiates a workflow on-demand and returns the workflow instance ID for the workflow-record combination.\n * @governance 20 units\n *\n * @param {string} recordtype record type ID of the workflow base record\n * @param {string| int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {string}\n *\n * @since 2014.2\n */\nfunction nlapiInitiateWorkflowAsync(recordType, id, workflowId, parameters){;}\n\n/**\n * @method nlapiTriggerWorkflow Triggers a workflow on a record.\n * @governance 20 units\n *\n * @param {string} recordtype record type ID of the workflow base record\n * @param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @param {string| int} actionid internal ID or script ID of the action script\n * @return {int}\n *\n * @since 2010.1\n */\nfunction nlapiTriggerWorkflow(recordtype, id, workflowid, actionid) { ; }\n\n/**\n * @method nlapiCreateCurrentLineSubrecord Create a subrecord on a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction nlapiCreateCurrentLineSubrecord(type,fldnam) { ; }\n\n/**\n * @method nlapiEditCurrentLineItemSubrecord edit a subrecord on a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction nlapiEditCurrentLineItemSubrecord(type,fldnam) { ; }\n/**\n * remove a subrecord on a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {void}\n *\n * @since 2011.2\n */\nfunction nlapiRemoveCurrentLineItemSubrecord(type,fldnam) { ; }\n\n\n/**\n * view a subrecord on a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction nlapiViewCurrentLineItemSubrecord(type,fldnam) { ; }\n\n\n/**\n * view a subrecord on a sublist field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction nlapiViewLineItemSubrecord(type,fldnam,linenum) { ; }\n\n\n/**\n* get a cache object.\n* @param {string} name of the cache\n* @return {nlobjCache}\n*\n* @since 2013.2\n */\nfunction nlapiGetCache(name){;}\n\n/**\n * create a subrecord on body field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \tfldnam body field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction createSubrecord(fldnam) { ; }\n\n/**\n * edit a subrecord on body field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \tfldnam body field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction editSubrecord(fldnam) { ; }\n\n/**\n * remove a subrecord on body field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \tfldnam body field name\n * @retun {void}\n *\n * @since 2011.2\n */\nfunction removeSubrecord(fldnam) { ; }\n\n/**\n * view a subrecord on body field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} \tfldnam body field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2\n */\nfunction viewSubrecord(fldnam) { ; }\n\n\n/**\n * Commit the subrecord after you finish modifying it.\n *\n * @return {void}\n *\n * @method\n * @memberOf nlobjSubrecord\n *\n * @since 2008.1\n */\nnlobjSubrecord.prototype.commit = function() { ; }\n\n/**\n * Cancel the any modification on subrecord.\n *\n * @return {void}\n *\n * @method\n * @memberOf nlobjSubrecord\n *\n * @since 2008.1\n */\nnlobjSubrecord.prototype.cancel = function() { ; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n@module ns.suitescript.standard\n\nThe objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n*/\n\n\n\n\n\n\n\n/**\n * @class nlobjRecord Class definition for business records in the system. Used for accessing and manipulating record objects.\n * \n * @constructor\n * @return {nlobjRecord}\n\n * @since 2008.2\n */\nfunction nlobjRecord() { ; }\n\n/**\n * @method getId Return the internalId of the record or NULL for new records.\n *\n * @return {int} Return the integer value of the record ID.\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getId = function() { ; }\n\n/**\n * @method getRecordType Return the recordType corresponding to this record.\n *\n * @return {string} The string value of the record name internal ID\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getRecordType = function( ) { ; }\n\n/**\n * @method getField Return field metadata for field.\n *\n * @param {string} fldnam field name\n * @return\t{nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.1\n */\nnlobjRecord.prototype.getField = function(fldnam) { ; }\n\n/**\n * @method getSubList Return sublist metadata for sublist.\n *\n * @param {string} type sublist name\n * @return {nlobjSubList}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getSubList = function(type) { ; }\n\n/**\n * @method getMatrixField Return field metadata for field.\n *\n * @param {string} type matrix sublist name\n * @param {string} fldnam matrix field name\n * @param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getMatrixField = function(type, fldnam, column) { ; }\n\n/**\n * @method getLineItemField Return metadata for sublist field.\n *\n * @param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {int} [linenum] line number (1-based). If empty, the current sublist field is returned. only settable for sublists of type list\n * @return {nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getLineItemField = function(type, fldnam, linenum) { ; }\n\n/**\n * @method getLineItemMatrixField Return metadata for sublist field.\n *\n * @param {string} type matrix sublist name\n * @param {string} fldnam matrix field name\n * @param {int} linenum line number\n * @param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getLineItemMatrixField = function(type, fldnam, linenum, column) { ; }\n\n/**\n * \n * @method setFieldValue Set the value of a field.\n *\n * @param {string} name field name\n * @param {string} value field value\n * @return {void}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.setFieldValue = function( name, value ) { ; }\n\n/**\n * @method setFieldValues Set the values of a multi-select field.\n *\n * @param {string} name field name\n * @param {Array<String>} values string array containing field values\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.setFieldValues = function( name, values ) { ; }\n\n/**\n * @method getFieldValue Return the value of a field.\n *\n * @param {string} name field name\n * @return {string}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getFieldValue = function( name ) { ; }\n\n/**\n * @method getFieldValues Return the selected values of a multi-select field as an Array.\n *\n * @param {string} name field name\n * @return {Array<String>}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getFieldValues = function( name ) { ; }\n\n/**\n * @method setFieldText Set the value (via display value) of a select field.\n * @restriction only supported for select fields\n *\n * @param {string} name field name\n * @param {string} text field display value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.setFieldText = function( name, text ) { ; }\n\n/**\n * @method setFieldTexts Set the values (via display values) of a multi-select field.\n * @restriction only supported for multi-select fields\n *\n * @param {string} name field name\n * @param {Array<String>} texts array of field display values\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.setFieldTexts = function( name, texts ) { ; }\n\n/**\n * @method getFieldText Return the display value for a select field.\n * @restriction only supported for select fields\n *\n * @param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.getFieldText = function( name ) { ; }\n\n/**\n * @method getFieldTexts Return the selected display values of a multi-select field as an Array.\n * @restriction only supported for multi-select fields\n *\n * @param {string} name field name\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.getFieldTexts = function( name ) { ; }\n\n/**\n * @method getMatrixValue Get the value of a matrix header field.\n *\n * @param {string} type matrix sublist name\n * @param {string} name\tmatrix field name\n * @param {int} column matrix column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getMatrixValue = function( type, name, column ) { ; }\n\n/**\n * @method setMatrixValue Set the value of a matrix header field.\n *\n * @param {string} \ttype matrix sublist name\n * @param {string} \tname\tmatrix field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.setMatrixValue = function( type, name, column, value ) { ; }\n\n/**\n * @method getAllFields Return an Array of all field names on the record.\n *\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getAllFields = function( ) { ; }\n\n/**\n * @method getAllLineItemFields Return an Array of all field names on a record for a particular sublist.\n *\n * @param {string} group sublist name\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.getAllLineItemFields = function( group ) { ; }\n\n/**\n * @method setLineItemValue Set the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \tvalue sublist field value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.setLineItemValue = function( group, name, line, value ) { ; }\n\n/**\n * @method setLineItemDateTimeValue Set the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \tdatetime value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.setLineItemDateTimeValue = function( group, name, line, value ) { ; }\n\n/**\n * @method setLineItemDateTimeValue Set the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \tdatetime value\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.setLineItemDateTimeValue = function( group, name, line, value, timezone ) { ; }\n\n/**\n * @method getLineItemValue Return the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1\n */\nnlobjRecord.prototype.getLineItemValue = function( group, name, line ) { ; }\n\n/**\n * @method getLineItemDateTimeValue Return the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.getLineItemDateTimeValue = function( group, name, line ) { ; }\n\n/**\n * @method getLineItemDateTimeValue Return the value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.getLineItemDateTimeValue = function( group, name, line, timezone ) { ; }\n\n/**\n * @method getLineItemText Return the text value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2\n */\nnlobjRecord.prototype.getLineItemText = function( group, name, line ) { ; }\n\n/**\n * @method setCurrentLineItemValue Set the current value of a sublist field.\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {string} \tvalue sublist field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.setCurrentLineItemValue = function( group, name, value ) { ; }\n\n/**\n * @method setCurrentLineItemDateTimeValue Set the current value of a sublist field.\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {string} \tvalue sublist field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.setCurrentLineItemDateTimeValue = function( group, name, value ) { ; }\n\n/**\n * @method setCurrentLineItemDateTimeValue Set the current value of a sublist field.\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {string} \tvalue sublist field value\n * @param {string} \ttimezone value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.setCurrentLineItemDateTimeValue = function( group, name, value,timezone ) { ; }\n\n/**\n * @method getCurrentLineItemValue Return the current value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getCurrentLineItemValue = function( group, name ) { ; }\n\n/**\n * @method getCurrentLineItemDateTimeValue Return the current value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.getCurrentLineItemDateTimeValue = function( group, name ) { ; }\n\n/**\n * @method getCurrentLineItemDateTimeValue Return the current value of a sublist field.\n *\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {string} \ttimezone value\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2\n */\nnlobjRecord.prototype.getCurrentLineItemDateTimeValue = function( group, name, timezone ) { ; }\n\n/**\n * Return the current display value of a sublist field.\n *\n * @method getCurrentLineItemText @param {string} group sublist name\n * @param {string} \tname sublist field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getCurrentLineItemText = function( group, name ) { ; }\n\n/**\n * @method setCurrentLineItemMatrixValue Set the current value of a sublist matrix field.\n *\n * @param {string} \tgroup matrix sublist name\n * @param {string} \tname matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @param {string} \tvalue matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.setCurrentLineItemMatrixValue = function( group, name, column, value ) { ; }\n\n/**\n * @method getCurrentLineItemMatrixValue Return the current value of a sublist matrix field.\n *\n * @param {string} \tgroup matrix sublist name\n * @param {string} \tname matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getCurrentLineItemMatrixValue = function( group, name, column ) { ; }\n\n/**\n * @method getMatrixCount Return the number of columns for a matrix field.\n *\n * @param {string} \tgroup matrix sublist name\n * @param {string} \tname matrix field name\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getMatrixCount = function( group, name ) { ; }\n\n/**\n * @method getLineItemCount Return the number of lines in a sublist.\n *\n * @param {string} group sublist name\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.getLineItemCount = function( group ) { ; }\n\n/**\n * @method findLineItemValue Return line number for 1st occurence of field value in a sublist column.\n *\n * @param {string} group\tsublist name\n * @param {string} fldnam\tsublist field name\n * @param {string} value\tsublist field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.findLineItemValue = function( group, fldnam, value ) { ; }\n\n/**\n * @method findLineItemMatrixValue Return line number for 1st occurence of field value in a sublist column.\n *\n * @param {string} \tgroup\tsublist name\n * @param {string} \tfldnam\tsublist field name\n * @param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue \tmatrix field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.findLineItemMatrixValue = function( group, fldnam, column, value ) { ; }\n\n/**\n * @method insertLineItem Insert a new line into a sublist.\n *\n * @param {string} \tgroup sublist name\n * @param {int} \t[line] line index at which to insert line\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.insertLineItem = function( group, line ) { ; }\n\n/**\n * @method removeLineItem Remove an existing line from a sublist.\n *\n * @param {string} \tgroup sublist name\n * @param {int} \t[line] line number to remove\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.removeLineItem = function( group, line ) { ; }\n\n/**\n * @method selectNewLineItem Insert and select a new line in a sublist.\n *\n * @param {string} group sublist name\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.selectNewLineItem = function( group ) { ; }\n\n/**\n * @method selectLineItem Select an existing line in a sublist.\n *\n * @param {string} \tgroup sublist name\n * @param {int} \tline  line number to select\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.selectLineItem = function( group, line ) { ; }\n\n/**\n * @method commitLineItem Commit the current line in a sublist.\n *\n * @param {string} \tgroup sublist name\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2\n */\nnlobjRecord.prototype.commitLineItem = function( group ) { ; }\n\n/**\n * @method setDateTimeValue set the value of a field.\n *\n * @param {string} name field name\n * @param {string} value field value\n * @param {string} timezone Olson value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 20013.2\n */\nnlobjRecord.prototype.setDateTimeValue = function (name, value, timezone) { ; }\n\n/**\n * @method setDateTimeValue set the value of a field.\n *\n * @param {string} name field name\n * @param {string} value field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 20013.2\n */\nnlobjRecord.prototype.setDateTimeValue = function (name, value) { ; }\n\n/**\n * @method getDateTimeValue Return the value of a field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam the field name\n * @return {string}\n *\n * @since\t2013.2\n */\nnlobjRecord.prototype.getDateTimeValue = function (fldnam) { ; }\n\n/**\n * @method getDateTimeValue Return the value of a field on the current record on a page.\n * @restriction supported in client and user event scripts only.\n * @param {string} fldnam the field name\n * @param {string} timezone Olson value\n * @return {string}\n *\n * @since\t2013.2\n */\nnlobjRecord.prototype.getDateTimeValue = function (fldnam, timezone) { ; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n *\n * @class nlobjConfiguration Class definition for interacting with setup/configuration pages\n * \n * @constructor Return a new instance of nlobjConfiguration..\n *\n * @since 2009.2\n */\nfunction nlobjConfiguration( ) { ; }\n\n/**\n * @method getType return the type corresponding to this setup record.\n *\n * @return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getType = function( ) { ; }\n\n/**\n * @method getField return field metadata for field.\n *\n * @param {string} fldnam field name\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getField = function(fldnam) { ; }\n\n/**\n * @method setFieldValue set the value of a field.\n *\n * @param {string} name field name\n * @param {string} value field value\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.setFieldValue = function( name, value ) { ; }\n\n/**\n * @method setFieldValues Set the values of a multi-select field.\n * @restriction only supported for multi-select fields\n *\n * @param {string} name field name\n * @param {Array<string>} value field values\n * @return {void}\n *\n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.setFieldValues = function( name, value ) { ; }\n\n/**\n * @method getFieldValue return the value of a field.\n *\n * @param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getFieldValue = function( name ) { ; }\n\n/**\n * @method getFieldValues return the selected values of a multi-select field as an Array.\n * @restriction only supported for multi-select fields\n *\n * @param {string} name field name\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getFieldValues = function( name ) { ; }\n\n/**\n * @method setFieldText set the value (via display value) of a field.\n * @restriction only supported for select fields\n *\n * @param {string} name field name\n * @param {string} text field display text\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.setFieldText = function( name, text ) { ; }\n\n/**\n * @method setFieldTexts set the values (via display values) of a multi-select field.\n * @restriction only supported for multi-select fields\n *\n * @param {string} \t name field name\n * @param {Array<string>} texts array of field display text values\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.setFieldTexts = function( name, texts ) { ; }\n\n/**\n * @method getFieldText return the text value of a field.\n * @restriction only supported for select fields\n *\n * @param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getFieldText = function( name ) { ; }\n\n/**\n * @method getFieldTexts return the selected text values of a multi-select field as an Array.\n * @param {string} name field name\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getFieldTexts = function( name ) { ; }\n\n/**\n * @method getAllFields return an Array of all field names on the record.\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2\n */\nnlobjConfiguration.prototype.getAllFields = function( ) { ; }\n\n\n\n\n\n\n\n\n\n\n/**\n * \n *\n * @class nlobjFile Encapsulation of files (media items) in the file cabinet.\n * \n * @constructor Return a new instance of nlobjFile used for accessing and manipulating files in the file cabinet.\n * @return {nlobjFile}\n * @since 2009.1\n */\nfunction nlobjFile( ) { ; }\n\n/**\n * @method getName Return the name of the file.\n * @return {string}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getName = function( ) { ; }\n\n/**\n * @method setName Sets the name of a file.\n * @param {string} name the name of the file\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.setName = function( name ) { ; }\n\n/**\n * @method getFolder return the internal ID of the folder that this file is in.\n * @return {int}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getFolder = function( ) { ; }\n\n/**\n * @method setFolder sets the internal ID of the folder that this file is in.\n * @param {int} folder\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.setFolder = function( folder ) { ; }\n\n/**\n * @method setEncoding sets the character encoding for the file.\n * @param {String} encoding\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2010.2\n */\nnlobjFile.prototype.setEncoding = function( encoding ) { ; }\n\n/**\n * @method isOnline return true if the file is \"Available without Login\".\n * @return {boolean}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.isOnline = function( ) { ; }\n\n/**\n * @method setIsOnline sets the file's \"Available without Login\" status.\n * @param {boolean} online\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.setIsOnline = function( online ) { ; }\n\n/**\n * @method isInactive return true if the file is inactive.\n * @return {boolean}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.isInactive = function( ) { ; }\n\n/**\n * @method setIsInactive sets the file's inactive status.\n * @param {boolean} inactive\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.setIsInactive = function( inactive ) { ; }\n\n/**\n * @method getDescription return the file description.\n * @return {string}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getDescription = function( ) { ; }\n\n/**\n * @method setDescription sets the file's description.\n * @param {string} descr the file description\n * @return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.setDescription = function( descr ) { ; }\n\n/**\n * @method getId Return the id of the file (if stored in the FC).\n * @return {int}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getId = function( ) { ; }\n\n/**\n * @method getSize Return the size of the file in bytes.\n * @return {int}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getSize = function( ) { ; }\n\n/**\n * @method getURL Return the URL of the file (if stored in the FC).\n * @return {string}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getURL = function( ) { ; }\n\n/**\n * @method getType Return the type of the file.\n * @return {string}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getType = function( ) { ; }\n\n/**\n * @method getValue Return the value (base64 encoded for binary types) of the file.\n * @return {string}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1\n */\nnlobjFile.prototype.getValue = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjSearchFilter search filter\n * @constructor Return a new instance of nlobjSearchFilter filter objects used to define search criteria.\n * @param {string} name filter name.\n * @param {string} join internal ID for joined search where this filter is defined\n * @param {string} operator operator name (i.e. anyOf, contains, lessThan, etc..)\n * @param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0\n */\nfunction nlobjSearchFilter( name, join, operator, value, value2 ) { ; }\n\n/**\n * @method getName Return the name of this search filter.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchFilter\n *\n * @since 2007.0\n */\nnlobjSearchFilter.prototype.getName = function( ) { ; }\n\n/**\n * @method getJoin Return the join id for this search filter.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchFilter\n *\n * @since 2008.1\n */\nnlobjSearchFilter.prototype.getJoin = function( ) { ; }\n\n/**\n * @method getOperator Return the filter operator used.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchFilter\n *\n * @since 2008.2\n */\nnlobjSearchFilter.prototype.getOperator = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjSearchColumn search column.\n * @constructor Return a new instance of nlobjSearchColumn used for column objects used to define search return columns.\n * @return {nlobjSearchColumn}\n * @param {string} name column name.\n * @param {string} join internal ID for joined search where this column is defined\n * @param {string} summary\n *\n * @since 2007.0\n */\nfunction nlobjSearchColumn( name, join, summary ) { ; }\n\n/**\n * @method getName return the name of this search column.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchColumn\n * @since 2008.1\n */\nnlobjSearchColumn.prototype.getName = function( ) { ; }\n\n/**\n * @method getJoin return the join id for this search column.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchColumn\n * @since 2008.1\n */\nnlobjSearchColumn.prototype.getJoin = function( ) { ; }\n\n/**\n * @method getLabel return the label of this search column.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchColumn\n *\n * @since 2009.1\n */\nnlobjSearchColumn.prototype.getLabel = function( ) { ; }\n\n/**\n * @method getSummary return the summary type (avg,group,sum,count) of this search column.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchColumn\n * @since 2008.1\n */\nnlobjSearchColumn.prototype.getSummary = function( ) { ; }\n\n/**\n * @method getFormula return formula for this search column.\n * @return {string}\n *\n * \n * @memberOf nlobjSearchColumn\n *\n * @since 2009.2\n */\nnlobjSearchColumn.prototype.getFormula = function( ) { ; }\n\n/**\n * @method setSort return nlobjSearchColumn sorted in either ascending or descending order.\n * @return {nlobjSearchColumn}\n * @param {boolean} sort if not set, defaults to false, which returns column data in ascending order.\n *\n * \n * @memberOf nlobjSearchColumn\n *\n * @since 2010.1\n */\nnlobjSearchColumn.prototype.setSort = function( order ) { ; }\n\n/**\n * Return a new instance of nlobjSearchResult used for search result row object.\n *\n * @class nlobjSearchResult Class definition for interacting with the results of a search operation\n * @constructor @return {nlobjSearchResult}\n * \n */\nfunction nlobjSearchResult( ) { ; }\n\n/**\n * @method getId return the internalId for the record returned in this row.\n * \n * @memberOf nlobjSearchResult\n * @return {int}\n */\nnlobjSearchResult.prototype.getId = function( ) { ; }\n\n/**\n * @method getRecordType return the recordtype for the record returned in this row.\n * \n * @memberOf nlobjSearchResult\n * @return {string}\n */\nnlobjSearchResult.prototype.getRecordType = function( ) { ; }\n\n/**\n * @method getValue return the value for this nlobjSearchColumn.\n * @param {nlobjSearchColumn} column search result column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2009.1\n */\nnlobjSearchResult.prototype.getValue = function( column ) { ; }\n\n/**\n * @method getValue return the value for a return column specified by name, join ID, and summary type.\n * @param {string} name the name of the search column\n * @param {string} join the join ID for the search column\n * @param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1\n */\nnlobjSearchResult.prototype.getValue = function( name, join, summary ) { ; }\n\n/**\n * @ method getText return the text value for this nlobjSearchColumn if it's a select field.\n * @ param {nlobjSearchColumn} column search result column\n * @ return {string}\n *\n * \n * @ memberOf nlobjSearchResult\n *\n * @ since 2009.1\n */\nnlobjSearchResult.prototype.getText = function( column ) { ; }\n\n/**\n * @method getText return the text value of this return column if it's a select field.\n * @param {string} name the name of the search column\n * @param {string} join the join ID for the search column\n * @param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1\n */\nnlobjSearchResult.prototype.getText = function( name, join, summary ) { ; }\n\n/**\n * @method getAllColumns return an array of all nlobjSearchColumn objects returned in this search.\n * @return {Array<nlobjSearchColumn>}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2009.2\n */\nnlobjSearchResult.prototype.getAllColumns = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjContext Utility class providing information about the current user and the script runtime. Return a new instance of nlobjContext used for user and script context information.\n * @return {nlobjContext}\n */\nfunction nlobjContext( ) { ; }\n/**\n * @method getName return the name of the current user.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getName = function( ) { ; }\n\n/**\n * @method getUser return the internalId of the current user.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getUser = function( ) { ; }\n\n/**\n * @method getRole return the internalId of the current user's role.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getRole = function( ) { ; }\n\n/**\n * @method getRoleId return the script ID of the current user's role.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2008.2\n */\nnlobjContext.prototype.getRoleId = function( ) { ; }\n\n/**\n * @method getRoleCenter return the internalId of the current user's center type.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2008.2\n */\nnlobjContext.prototype.getRoleCenter = function( ) { ; }\n\n/**\n * @method getEmail return the email address of the current user.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getEmail = function( ) { ; }\n\n/**\n * @method getContact return the internal ID of the contact logged in on behalf of a customer, vendor, or partner. It returns -1 for non-contact logins\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.1\n */\nnlobjContext.prototype.getContact = function( ) { ; }\n\n/**\n * @method getCompany return the account ID of the current user.\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getCompany = function( ) { ; }\n\n/**\n * @method getDepartment return the internalId of the current user's department.\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getDepartment = function( ) { ; }\n\n/**\n * @method getLocation return the internalId of the current user's location.\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getLocation = function( ) { ; }\n\n/**\n * @method getSubsidiary return the internalId of the current user's subsidiary.\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getSubsidiary = function( ) { ; }\n\n/**\n * @method getExecutionContext return the execution context for this script: webServices|csvImport|client|userInterface|scheduledScript|portlet|suitelet|debugger|custommassupdate\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getExecutionContext = function( ) { ; }\n\n/**\n * @method getRemainingUsage return the amount of usage units remaining for this script.\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2007.0\n */\nnlobjContext.prototype.getRemainingUsage = function( ) { ; }\n\n/**\n * @method getFeature return true if feature is enabled, false otherwise\n * @param {string} name\n * @return {boolean}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getFeature = function( name ) { ; }\n\n/**\n * @method getPermission return current user's permission level (0-4) for this permission\n * @param {string} name\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getPermission = function( name ) { ; }\n\n/**\n * @method getPreference return system or script preference selection for current user\n * @param {string} name\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getPreference = function( name ) { ; }\n\n/**\n * @method getSessionObject return value of session object set by script\n * @param {string} name\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getSessionObject = function( name ) { ; }\n\n/**\n * @method setSessionObject get the value of a session object using a key.\n * @param {string} name\n * @param {string} value\n * @return {void}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.setSessionObject = function( name, value ) { ; }\n\n/**\n * @method getAllSessionObjects return an array containing the names of all keys used to set session objects\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getAllSessionObjects = function() { ; }\n\n/**\n * @method getVersion return the NetSuite version for the current account\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getVersion = function(  ) { ; }\n\n/**\n * @method getEnvironment return the environment that the script is executing in: SANDBOX, PRODUCTION, BETA, INTERNAL\n * @since 2008.2\n */\nnlobjContext.prototype.getEnvironment = function(  ) { ; }\n\n/**\n * @method getLogLevel return the logging level for the current script execution. Not supported in CLIENT scripts\n * @since 2008.2\n */\nnlobjContext.prototype.getLogLevel = function(  ) { ; }\n\n/**\n * @method getScriptId return the script ID for the current script\n * @return {string}\n *\n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getScriptId = function(  ) { ; }\n\n/**\n * @method getDeploymentId return the deployment ID for the current script\n * @return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getDeploymentId = function(  ) { ; }\n\n/**\n * @method getPercentComplete return the % complete specified for the current scheduled script execution\n * @return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.getPercentComplete = function(  ) { ; }\n\n/**\n * @method setPercentComplete set the % complete for the current scheduled script execution\n * @param {float} ct the percentage of records completed\n * @return {void}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2\n */\nnlobjContext.prototype.setPercentComplete = function( pct ) { ; }\n\n/**\n * @method getSetting return a system/script setting. Types are SCRIPT, SESSION, FEATURE, PERMISSION\n *\n * @param {string} type\n * @param {string} name\n * @since 2007.0\n * @deprecated\n */\nnlobjContext.prototype.getSetting = function( type, name ) { ; }\n\n/**\n * @method setSetting set a system/script setting. Only supported type is SESSION\n *\n * @param {string} type\n * @param {string} name\n * @param {string} value\n * @since 2007.0\n * @deprecated\n */\nnlobjContext.prototype.setSetting = function( type, name, value ) { ; }\n\n/**\n * @method getColorPreferences return an Object containing name/value pairs of color groups to their corresponding RGB hex color based on the currenly logged in user's color them preferences.\n * @return {Object}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2010.1\n */\nnlobjContext.prototype.getColorPreferences = function() { ; }\n\n/**\n * @method getRuntimeVersion return the runtime version of SuiteScript, could be 1.0 or 2.0\n * @return {Object}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2014.1\n */\nnlobjContext.prototype.getRuntimeVersion = function() { ; }\n\n\n/**\n * \n *\n * @class nlobjError Encapsulation of errors thrown during script execution.\n * @constructor Return a new instance of nlobjError used system or user-defined error object.\n * @return {nlobjError}\n */\nfunction nlobjError( ) { ; }\n\n/**\n * @method getId return the error db ID for this error (if it was an unhandled unexpected error).\n * @return {string}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getId = function( ) { ; }\n\n/**\n * @method getCode return the error code for this system or user-defined error.\n * @return {string}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getCode = function( ) { ; }\n\n/**\n * @method getDetails return the error description for this error.\n * @return {string}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getDetails = function( ) { ; }\n\n/**\n * @method getStackTrace return a stacktrace containing the location of the error.\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getStackTrace = function( ) { ; }\n\n/**\n * @method getUserEvent return the userevent script name where this error was thrown.\n * @return {string}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getUserEvent = function( ) { ; }\n\n/**\n * @method getInternalId return the internalid of the record if this error was thrown in an aftersubmit script.\n * @return {int}\n *\n * \n * @memberOf nlobjError\n *\n * @since 2008.2\n */\nnlobjError.prototype.getInternalId = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjServerResponse Contains the results of a server response to an outbound Http(s) call.\n * @constructor Return a new instance of nlobjServerResponse..\n * @return {nlobjServerResponse}\n *\n * @since 2008.1\n */\nfunction nlobjServerResponse( ) { ; }\n\n/**\n * @method getContentType return the Content-Type header in response\n * @return {string}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getContentType = function( ) { ; }\n\n/**\n * @method getHeader return the value of a header returned.\n * @param {string} name the name of the header to return\n * @return {string}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getHeader = function(name) { ; }\n\n/**\n * @method getHeaders return all the values of a header returned.\n * @param {string} name the name of the header to return\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getHeaders = function(name) { ; }\n\n/**\n * \n * @method getAllHeaders return an Array of all headers returned.\n * @return {array<string>}\n *\n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getAllHeaders = function( ) { ; }\n\n/**\n * return the response code returned.\n * @method getCode @return {int}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getCode = function( ) { ; }\n\n/**\n * @method getBody return the response body returned.\n * @return {string}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getBody = function( ) { ; }\n\n/**\n * @method getError return the nlobjError thrown via a client call to nlapiRequestURL.\n * @return {nlobjError}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1\n */\nnlobjServerResponse.prototype.getError = function( ) { ; }\n\n\n/**\n * @method addRecord add a record for to a template engine\n * @param  {string} [recordName] name of record used as a reference in template.\n * @param  {nlobjRecord} record to add to template engine\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *\n */\nnlobjTemplateRenderer.prototype.addRecord = function( record ) { ; }\n\n/**\n * @method addSearchResults add search results to a template engine\n * @param {string} [searchName] name of search results used as a reference in template.\n * @param {Array<nlobjSearchResults>} [results] An array of nlobjSearchResult objects.\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *\n */\nnlobjTemplateRenderer.prototype.addSearchResults = function( searchName, results ) { ; }\n\n/**\n * @method setTemplateset the template xml in the template engine\n * @param  {string} xml BFO template\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *\n */\nnlobjTemplateRenderer.prototype.setTemplate = function( xml ) { ; }\n\n/**\n * @method renderToResponse render the output of the template engine into the response\n * @param {nlobjResponse}\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n */\nnlobjTemplateRenderer.prototype.renderToResponse = function(nlobjResponse) { ; }\n\n /**\n * @method setEntity associate an entity to the merger\n * @param  {string} entityType type of the entity (customer/contact/partner/vendor/employee)\n * @param  {int} entityId ID of the entity to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger\n */\nnlobjEmailMerger.prototype.setEntity = function( entityType, entityId ) { ; }\n\n/**\n * @method setRecipient associate a second entity (recipient) to the merger\n * @param  {string} recipientType type of the entity (customer/contact/partner/vendor/employee)\n * @param  {int} recipientId ID of the entity to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger\n */\nnlobjEmailMerger.prototype.setRecipient = function( recipientType, recipientId ) { ; }\n\n/**\n * @method setSupportCase associate a support case to the merger\n * @param  {int} caseId ID of the support case to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger\n */\nnlobjEmailMerger.prototype.setSupportCase = function( caseId ) { ; }\n\n/**\n * @method setTransaction associate a transaction to the merger\n * @param  {int} transactionId ID of the transaction to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger\n */\nnlobjEmailMerger.prototype.setTransaction = function( transactionId ) { ; }\n\n/**\n * @method setCustomRecord associate a custom record to the merger\n * @param  {string} recordType type of the custom record\n * @param  {int} recordId ID of the record to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger \n */\nnlobjEmailMerger.prototype.setCustomRecord = function( recordType, recordId ) { ; }\n\n/**\n * @method merge perform the merge and return an object containing email subject and body\n * @governance 20 units\n * @return {object} pure javascript object with two properties: subject and body\n *\n * \n * @memberOf nlobjEmailMerger\n */\nnlobjEmailMerger.prototype.merge = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjResponse Accessor to Http response made available to Suitelets.\n * @constructor Return a new instance of nlobjResponse used for scripting web responses in Suitelets\n * @return {nlobjResponse}\n */\nfunction nlobjResponse( ) { ; }\n\n/**\n * @method addHeader add a value for a response header.\n * @param  {string} name of header\n * @param  {string} value for header\n * @return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.addHeader = function( name, value ) { ; }\n\n/**\n * @method setHeader set the value of a response header.\n * @param  {string} name of header\n * @param  {string} value for header\n * @return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.setHeader = function( name, value ) { ; }\n\n/**\n * @method getHeader return the value of a response header.\n * @param  {string} name of header\n * @return  {string}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.getHeader = function( ) { ; }\n\n/**\n * @method getHeaders return an Array of all response header values for a header\n * @param  {string} name of header\n * @return  {Array<string>}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.getHeaders = function( name ) { ; }\n\n/**\n * @method getAllHeaders return an Array of all response headers\n * @return  {Object<String,String>}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.getAllHeaders = function( ) { ; }\n\n/**\n * @method sendNoCache suppress caching for this response.\n * @return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2009.1\n */\nnlobjResponse.prototype.sendNoCache = function( ) { ; }\n\n/**\n * @method setContentType sets the content type for the response (and an optional filename for binary output).\n *\n * @param {string} type the file type i.e. plainText, word, pdf, htmldoc (see list of media item types)\n * @param {string} filename the file name\n * @param {string} disposition Content Disposition used for streaming attachments: inline|attachment\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.setContentType = function( type, filename, disposition ) { ; }\n\n/**\n * @method sendRedirect sets the redirect URL for the response. all URLs must be internal unless the Suitelet is being executed in an \"Available without Login\" context\n *  at which point it can use type \"external\" to specify an external url via the subtype arg\n *\n * @param {string} type type specifier for URL: suitelet|tasklink|record|mediaitem|external\n * @param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid|url\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.sendRedirect = function( type, subtype, id, pagemode, parameters ) { ; }\n\n/**\n * @method write write information (text/xml/html) to the response.\n *\n * @param {string} output\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.write = function( output ) { ; }\n\n/**\n * @method writeLine write line information (text/xml/html) to the response.\n *\n * @param {string} output\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.writeLine = function( output ) { ; }\n\n/**\n * @method writePage write a UI object page.\n *\n * @param {Object} pageobject page UI object: nlobjList|nlobjAssistant|nlobjForm|nlobjDashboard\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2\n */\nnlobjResponse.prototype.writePage = function( pageobject ) { ; }\n\n/**\n * @method setEncoding sets the character encoding for the response.\n * @param {String} encoding\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2012.2\n */\nnlobjResponse.prototype.setEncoding = function( encoding ) { ; }\n\n\n/**\n * \n *\n * @class nlobjRequest Accessor to Http request data made available to Suitelets\n * \n * @constructor Return a new instance of nlobjRequest used for scripting web requests in Suitelets\n @return {nlobjRequest}\n */\nfunction nlobjRequest( ) { ; }\n\n/**\n * @method getParameter return the value of a request parameter.\n *\n * @param {string} name parameter name\n * @return {string}\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getParameter = function( name ) { ; }\n\n/**\n *  @method getParameterValues return the values of a request parameter as an Array.\n *\n * @param {string} name parameter name\n * @return {Array<string>}\n *\n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getParameterValues = function( name ) { ; }\n\n/**\n * @method getAllParameters return an Object containing all the request parameters and their values.\n * @return {Object<String,String>}\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getAllParameters = function( ) { ; }\n\n/**\n * @method getLineItemValue return the value of a sublist value.\n * @param {string} \tgroup sublist name\n * @param {string} \tname  sublist field name\n * @param {int} \tline  sublist line number\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getLineItemValue = function( group, name, line ) { ; }\n\n/**\n * @method getLineItemCount return the number of lines in a sublist.\n * @param {string} group sublist name\n * @return {int}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getLineItemCount = function( group ) { ; }\n\n/**\n * @method getHeader return the value of a request header.\n * @param {string} name\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getHeader = function( name ) { ; }\n\n/**\n * @method getAllHeaders return an Object containing all the request headers and their values.\n * @return {Object}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2\n */\nnlobjRequest.prototype.getAllHeaders = function( ) { ; }\n\n/**\n * @method getFile return the value of an uploaded file.\n * @param {string} name file field name\n * @return {nlobjFile}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2009.1\n */\nnlobjRequest.prototype.getFile = function( name ) { ; }\n\n/**\n * @method getAllFiles return an Object containing field names to file objects for all uploaded files.\n * @return {Object<String,String>}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2009.1\n */\nnlobjRequest.prototype.getAllFiles = function( ) { ; }\n\n/**\n * @method getBody return the body of the POST request\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n * @since 2008.1\n */\nnlobjRequest.prototype.getBody = function( ) { ; }\n\n/**\n * @method getURL return the URL of the request\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n * @since 2008.1\n */\nnlobjRequest.prototype.getURL = function( ) { ; }\n\n/**\n * @method getMethod return the METHOD of the request\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n * @since 2008.1\n */\nnlobjRequest.prototype.getMethod = function( ) { ; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n@module ns.suitescript.ui\nUI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.\n\n*/\n\n\n\n\n/**\n * \n *\n * @class nlobjPortlet UI Object used for building portlets that are displayed on dashboard pages\n *\n * @constructor Return a new instance of nlobjPortlet used for scriptable dashboard portlet.  @return {nlobjPortlet}\n */\nfunction nlobjPortlet( ) { ; }\n\n/**\n * @method setTitle set the portlet title.\n *\n * @param {string} title\n * @since 2008.2\n */\nnlobjPortlet.prototype.setTitle = function( title ) { ; }\n\n/**\n * @method setHtml set the entire contents of the HTML portlet (will be placed inside a <TD>...</TD>).\n *\n * @param {string} html\n * @since 2008.2\n */\nnlobjPortlet.prototype.setHtml = function( html ) { ; }\n\n/**\n * @method addColumn add a column (nlobjColumn) to this LIST portlet and return it.\n *\n * @param {string} name\tcolumn name\n * @param {string} type column type\n * @param {string} label column label\n * @param {string} [align] column alignment\n * @since 2008.2\n */\nnlobjPortlet.prototype.addColumn = function( name, type, label, align ) { ; }\n\n/**\n * @method addEditColumn add an Edit column (nlobjColumn) to the left of the column specified (supported on LIST portlets only).\n *\n * @param {nlobjColumn} column\n * @param {boolean} showView should Edit|View instead of Edit link\n * @param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2\n */\nnlobjPortlet.prototype.addEditColumn = function( column, showView, showHref ) { ; }\n\n/**\n * @method addRow add a row (nlobjSearchResult or Array of name-value pairs) to this LIST portlet.\n *\n * @param {Array<String>|nlobjSearchResult} row\n * @since 2008.2\n */\nnlobjPortlet.prototype.addRow = function( row ) { ; }\n\n/**\n * @method addRows add multiple rows (Array of nlobjSearchResults or name-value pair Arrays) to this LIST portlet.\n *\n * @param {Array<Array<string>>|Array<nlobjSearchResult>} rows\n * @since 2008.2\n */\nnlobjPortlet.prototype.addRows = function( rows ) { ; }\n\n/**\n * @method addField add a field (nlobjField) to this FORM portlet and return it.\n *\n * @param {string} name field name\n * @param {string} type field type\n * @param {string} [label] field label\n * @param {string|int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjPortlet.prototype.addField = function( name,type,label,source ) { ; }\n\n/**\n * @method setSubmitButton add a FORM submit button to this FORM portlet.\n *\n * @param {string} url\tURL that this form portlet will POST to\n * @param {string} [label] label for submit button (defaults to Save)\n * @since 2008.2\n */\nnlobjPortlet.prototype.setSubmitButton = function( url, label ) { ; }\n\n/**\n * @method addLine add a line (containing text or simple HTML) with optional indenting and URL to this LINKS portlet.\n *\n * @param {string} \ttext data to output to line\n * @param {string} \t[url] URL if this line should be clickable (if NULL then line will not be clickable)\n * @param {int} \tindent # of indents to insert before text\n * @since 2008.2\n */\nnlobjPortlet.prototype.addLine = function( text, url, indent ) { ; }\n\n/**\n * \n *\n * @class nlobjList UI Object page type used for building lists\n * @constructor Return a new instance of nlobjList used for scriptable list page.\n * @return {nlobjList}\n */\nfunction nlobjList( ) { ; }\n\n/**\n * @method setTitle set the page title.\n *\n * @param {string} title\n * @since 2008.2\n */\nnlobjList.prototype.setTitle = function( title ) { ; }\n\n/**\n * @method setStyle set the global style for this list: grid|report|plain|normal.\n *\n * @param {string} style overall style used to render list\n * @since 2008.2\n */\nnlobjList.prototype.setStyle = function( style ) { ; }\n\n/**\n * @method  setScript set the Client SuiteScript used for this page.\n *\n * @param {string| int} script script ID or internal ID for global client script used to enable Client SuiteScript on page\n * @since 2008.2\n */\nnlobjList.prototype.setScript = function( script ) { ; }\n\n/**\n * @method addColumn add a column (nlobjColumn) to this list and return it.\n *\n * @param {string} name column name\n * @param {string} type column type\n * @param {string} label column label\n * @param {string} [align] column alignment\n * @return {nlobjColumn}\n *\n * @since 2008.2\n */\nnlobjList.prototype.addColumn = function( name, type, label, align ) { ; }\n\n/**\n * @method addEditColumn add an Edit column (nlobjColumn) to the left of the column specified.\n *\n * @param {nlobjColumn} column\n * @param {boolean} showView should Edit|View instead of Edit link\n * @param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2\n */\nnlobjList.prototype.addEditColumn = function( column, showView, showHref ) { ; }\n\n/**\n * @method addRow add a row (Array of name-value pairs or nlobjSearchResult) to this portlet.\n *\n * @param {Array<String>|nlobjSearchResult} row data used to add a single row\n * @since 2008.2\n */\nnlobjList.prototype.addRow = function( row ) { ; }\n\n/**\n * @method addRows add multiple rows (Array of nlobjSearchResults or name-value pair Arrays) to this portlet.\n *\n * @param {Array<String>|Array<nlobjSearchResult>} rows data used to add multiple rows\n * @since 2008.2\n */\nnlobjList.prototype.addRows = function( rows ) { ; }\n\n/**\n * @method addButton add a button (nlobjButton) to the footer of this page.\n *\n * @param {string} name button name\n * @param {string} label button label\n * @param {string} script button script (function name)\n * @since 2008.2\n */\nnlobjList.prototype.addButton = function( name, label, script ) { ; }\n\n/**\n * @method addPageLink add a navigation cross-link to the page.\n *\n * @param {string} type\tpage link type: crosslink|breadcrumb\n * @param {string} title page link title\n * @param {string} url URL for page link\n * @since 2008.2\n */\nnlobjList.prototype.addPageLink = function( type, title, url ) { ; }\n\n/**\n * @class nlobjForm UI Object page type used for building basic data entry forms.\n * @constructor Return a new instance of nlobjForm used for scriptable form page.\n * @return {nlobjForm}\n */\nfunction nlobjForm( ) { ; }\n\n/**\n * @method setTitle set the page title.\n *\n * @param {string} title\n * @since 2008.2\n */\nnlobjForm.prototype.setTitle = function( title ) { ; }\n\n/**\n * @method addTitleHtml set additional title Html. INTERNAL ONLY\n *\n * @param {string} title\n * @since 2008.2\n */\nnlobjForm.prototype.addTitleHtml = function( html ) { ; }\n\n/**\n * @method setScript set the Client Script definition used for this page.\n *\n * @param {string| int} script script ID or internal ID for global client script used to enable Client SuiteScript on page\n * @since 2008.2\n */\nnlobjForm.prototype.setScript = function( script ) { ; }\n\n/**\n * @method setFieldValues set the values for all the fields on this form.\n *\n * @param {Object} values Object containing field name/value pairs\n * @since 2008.2\n */\nnlobjForm.prototype.setFieldValues = function( values ) { ; }\n\n/**\n * @method addPageLink add a navigation cross-link to the page.\n *\n * @param {string} type\tpage link type: crosslink|breadcrumb\n * @param {string} title page link title\n * @param {string} url URL for page link\n * @since 2008.2\n */\nnlobjForm.prototype.addPageLink = function( type, title, url ) { ; }\n\n/**\n * @method addButton add a button to this form.\n *\n * @param {string} name button name\n * @param {string} label button label\n * @param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addButton = function( name, label, script ) { ; }\n\n/**\n * @method getButton get a button from this form by name.\n * @param {string} name\n * @return {nlobjButton}\n *\n * @method\n * @memberOf nlobjForm\n *\n * @since 2009.2                                                                           add\n */\nnlobjForm.prototype.getButton = function( name ) { ; }\n\n/**\n * @method addResetButton add a reset button to this form.\n *\n * @param {string} [label] label for this button. defaults to \"Reset\"\n * @return {nlobjButton}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addResetButton = function( label ) { ; }\n\n/**\n * @method addSubmitButton add a submit button to this form.\n *\n * @param {string} [label] label for this submit button. defaults to \"Save\"\n * @return {nlobjButton}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addSubmitButton = function( label ) { ; }\n\n/**\n * @method addTab add a tab (nlobjTab) to this form and return it.\n *\n * @param {string} name tab name\n * @param {string} label tab label\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addTab = function( name, label ) { ; }\n\n/**\n * @method addField add a field (nlobjField) to this form and return it.\n *\n * @param {string} name field name\n * @param {string} type field type\n * @param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addField = function( name,type,label,sourceOrRadio,tab ) { ; }\n\n/* @method addCredentialField @param {String} name @param {String} label @param {String} scriptId @param {String} value @param {String} entityMatch @param {String} tab*/\nnlobjForm.prototype.addCredentialField = function( name,label,domain,scriptId,value,entityMatch,tab ) { ; }\nnlobjForm.prototype.addCredentialField = function( name,label,domain,scriptId,value,entityMatch ) { ; }\nnlobjForm.prototype.addCredentialField = function( name,label,domain,scriptId,value ) { ; }\n\n/**\n * @method addSubTab add a subtab (nlobjTab) to this form and return it.\n *\n * @param {string} name subtab name\n * @param {string} label subtab label\n * @param {string} [tab] parent tab that this subtab lives on. If empty, it is added to the main tab.\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addSubTab = function( name,label,tab ) { ; }\n\n/**\n * @method addSubList add a sublist (nlobjSubList) to this form and return it.\n *\n * @param {string} name sublist name\n * @param {string} type sublist type: inlineeditor|editor|list|staticlist\n * @param {string} label sublist label\n * @param {string} [tab] parent tab that this sublist lives on. If empty, it is added to the main tab\n * @return {nlobjSubList}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.addSubList = function( name,type,label,tab ) { ; }\n\n/**\n * @method insertTab insert a tab (nlobjTab) before another tab (name).\n *\n * @param {nlobjTab} \t\ttab the tab object to insert\n * @param {string} \t\tnexttab the name of the tab before which to insert this tab\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.insertTab = function( tab, nexttab ) { ; }\n\n/**\n * @method insertField insert a field (nlobjField) before another field (name).\n *\n * @param {nlobjField} \tfield the field object to insert\n * @param {string} \t\tnextfld the name of the field before which to insert this field\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.insertField = function( field, nextfld ) { ; }\n\n/**\n * @method insertSubTab insert a subtab (nlobjTab) before another subtab or sublist (name).\n *\n * @param {nlobjTab}\tsubtab the subtab object to insert\n * @param {string} \tnextsubtab the name of the subtab before which to insert this subtab\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.insertSubTab = function( subtab, nextsubtab ) { ; }\n\n/**\n * @method insertSubList insert a sublist (nlobjSubList) before another subtab or sublist (name).\n *\n * @param {nlobjSubList}\tsublist the sublist object to insert\n * @param {string} \t\tnextsublist the name of the sublist before which to insert this sublist\n * @return {nlobjSubList}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.insertSubList = function( sublist, nextsublist ) { ; }\n\n/**\n * @method getTab return a tab (nlobjTab) on this form.\n *\n * @param {string} name tab name\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.getTab = function( name ) { ; }\n\n/**\n * @method getField return a field (nlobjField) on this form.\n *\n * @param {string} name field name\n * @param {string} [radio] if this is a radio field, specify which radio field to return based on radio value\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.getField = function( name, radio ) { ; }\n\n/**\n * @method getSubTab return a subtab (nlobjTab) on this form.\n *\n * @param {string} name subtab name\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.getSubTab = function( name ) { ; }\n\n/**\n * @method getSubList return a sublist (nlobjSubList) on this form.\n *\n * @param {string} name sublist name\n * @return {nlobjSubList}\n *\n * @since 2008.2\n */\nnlobjForm.prototype.getSubList = function( name ) { ; }\n\n/**\n * @method addFieldGroup add a field group to the form.\n * @param {string} name field group name\n * @param {string} label field group label\n * @param tab\n * @return {nlobjFieldGroup}\n *\n * @method\n * @memberOf nlobjForm\n *\n * @since 2011.1\n */\nnlobjForm.prototype.addFieldGroup = function( name, label, tab ) { ; }\n\n/**\n * @method getTabs get a list of all tabs.\n * @return an array with names of all tabs\n *\n * @method\n * @memberOf nlobjForm\n *\n * @since 2012.2\n */\nnlobjForm.prototype.getTabs = function( ) { ; }\n\n/**\n *\n * @class nlobjAssistant UI Object page type used to build multi-step \"assistant\" pages to simplify complex workflows. All data and state for an assistant is tracked automatically\n * throughout the user's session up until completion of the assistant.\n *\n * @constructor Return a new instance of nlobjAssistant.\n * @return {nlobjAssistant}\n *\n * @since 2009.2\n */\nfunction nlobjAssistant( ) { ; }\n/**\n * @method setTitle set the page title.\n * @param {string} title\n * @return {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setTitle = function( title ) { ; }\n\n/**\n * @method setScript set the script ID for Client Script used for this form.\n * @param {string| int} script script ID or internal ID for global client script used to enable Client SuiteScript on page\n * @return {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setScript = function( script ) { ; }\n\n/**\n * @method setSplash set the splash screen used for this page.\n * @param {string} title splash portlet title\n * @param {string} text1 splash portlet content (left side)\n * @param {string} [text2] splash portlet content (right side)\n * @return {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setSplash = function( title, text1, text2 ) { ; }\n\n/**\n * @method setShortcut show/hide shortcut link. Always hidden on external pages\n * @param {boolean} show enable/disable \"Add To Shortcut\" link on this page\n * @return {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setShortcut = function(show) { ; }\n\n/**\n * @method setFieldValues set the values for all the fields on this page.\n * @param {Object} values Object of field name/value pairs used to set all fields on page\n * @return {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setFieldValues = function( values ) { ; }\n\n/**\n * @method setOrdered if ordered, steps are show on left and must be completed sequentially, otherwise steps are shown on top and can be done in any order\n * @param {boolean} ordered\tIf true (default assistant behavior) then a navigation order thru the steps/pages will be imposed on the user. Otherwise the user\n * \t\t\t\t\t\t\twill be allowed to navigate across steps/pages in any order they choose.\n * @return  {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setOrdered = function(ordered) { ; }\n\n/**\n * @method setNumbered if numbered, step numbers are displayed next to the step's label in the navigation area\n * @param {boolean} numbered\tIf true (default assistant behavior) step numbers will be displayed next to the step label\n * @return  {void}\n *\n * @method\n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setNumbered = function(numbered) { ; }\n\n/**\n * @method isFinished return true if all the steps have been completed.\n * @return {boolean}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.isFinished = function( ) { ; }\n\n/**\n * @method setFinished mark assistant page as completed and optionally set the rich text to display on completed page.\n * @param {string} html completion message (rich text) to display on the \"Finish\" page\n * @return  {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setFinished = function( html ) { ; }\n\n/**\n * @method hasError return true if the assistant has an error message to display for the current step.\n * @return {boolean}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.hasError = function( ) { ; }\n\n/**\n * @method setError set the error message for the currrent step.\n * @param {string} html error message (rich text) to display on the page to the user\n * @return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setError = function( html ) { ; }\n\n/**\n * @method setCurrentStep mark a step as current. It will be highlighted accordingly when the page is displayed\n * @param {nlobjAssistantStep} step assistant step object representing the current step that the user is on.\n * @return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.setCurrentStep = function( step ) { ; }\n\n/**\n * @method addStep add a step to the assistant.\n * @param {string} name the name of the step\n * @param {string} label label used for this step\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.addStep = function( name, label ) { ; }\n\n/**\n * @method addField add a field to this page and return it.\n * @param {string} name field name\n * @param {string} type field type\n * @param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [group] group name that this field will live on. If empty then the field is added to the main section of the page\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.addField = function( name,type,label,source, group ) { ; }\n\n/**\n * @method addSubList add a sublist to this page and return it. For now only sublists of type inlineeditor are supported\n * @param {string} name sublist name\n * @param {string} type sublist type (inlineeditor only for now)\n * @param {string} label sublist label\n * @return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.addSubList = function( name,type,label ) { ; }\n\n/**\n * @method addFieldGroup add a field group to the page.\n * @param {string} name field group name\n * @param {string} label field group label\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.addFieldGroup = function( name, label ) { ; }\n\n/**\n * @method getStep return an assistant step on this page.\n * @param {string} name step name\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getStep = function( name ) { ; }\n\n/**\n * @method getField return a field on this page.\n * @param {string} name field name\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getField = function( name ) { ; }\n\n/**\n * @method getSubList return a sublist on this page.\n * @param {string} name sublist name\n * @return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getSubList = function( name ) { ; }\n\n/**\n * @method getFieldGroup return a field group on this page.\n * @param {string} name field group name\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getFieldGroup = function( name ) { ; }\n\n/**\n * @method getAllSteps return an array of all the assistant steps for this assistant.\n * @return {Array<nlobjAssistantStep>}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getAllSteps = function( ) { ; }\n\n/**\n * @method getAllFields return an array of the names of all fields on this page.\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getAllFields = function( ) { ; }\n\n/**\n * @method getAllSubLists return an array of the names of all sublists on this page .\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getAllSubLists = function( ) { ; }\n\n/**\n * @method getAllFieldGroups return an array of the names of all field groups on this page.\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getAllFieldGroups = function( ) { ; }\n\n/**\n * @method getLastAction return the last submitted action by the user: next|back|cancel|finish|jump\n * @return {string}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getLastAction = function() { ; }\n\n/**\n * @method getLastStep return step from which the last submitted action came from\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getLastStep = function() { ; }\n\n/**\n * @method getNextStep return the next logical step corresponding to the user's last submitted action. You should only call this after\n * you have successfully captured all the information from the last step and are ready to move on to the next step. You\n * would use the return value to set the current step prior to continuing.\n *\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getNextStep = function() { ; }\n\n/**\n * @method getCurrentStep return current step set via nlobjAssistant.setCurrentStep(step)\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getCurrentStep = function() { ; }\n\n/**\n * @method getStepCount return the total number of steps in the assistant\n * @return {int}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.getStepCount = function() { ; }\n\n/**\n * @method sendRedirect redirect the user following a user submit operation. Use this to automatically redirect the user to the next logical step.\n * @param {nlobjResponse} response the response object used to communicate back to the user's client\n * @return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2\n */\nnlobjAssistant.prototype.sendRedirect = function(response) { ; }\n\n/**\n * \n * @class nlobjField Core descriptor for fields used to define records and also used to build pages and portlets.\n * Return a new instance of nlobjField used for scriptable form/sublist field.\n * This object is READ-ONLY except for scripted fields created via the UI Object API using Suitelets or beforeLoad user events\n *\n */\nfunction nlobjField( ) { ; }\n\n/**\n *  @method getName return field name.\n *  @return {string}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.getName = function( ) { ; }\n\n/**\n *  @method getLabel return field label.\n * @return {string}\n *\n *\n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.getLabel = function( ) { ; }\n\n/**\n * @method getType return field type.\n *  @return {string}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.getType = function( ) { ; }\n\n/**\n * @method isHidden return true if field is hidden.\n * @return {boolean}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.isHidden = function( ) { ; }\n\n/**\n * @method isMandatory return true if field is mandatory.\n * @return {boolean}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.isMandatory = function( ) { ; }\n\n/**\n * @method isDisabled return true if field is disabled.\n * @return {boolean}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.isDisabled = function( ) { ; }\n\n/**\n * @method setLabel set the label for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} label\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setAlias set the alias used to set the value for this field. Defaults to field name.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} alias column used to populate the field (mostly relevant when populating sublist fields)\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setAlias = function( alias ) { ; }\n\n/**\n * @method setDefaultValue set the default value for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} value\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setDefaultValue = function( value ) { ; }\n\n/**\n * @method setDisabled Disable field via field metadata.\n * This method is only supported on scripted fields via the UI Object API\n * @param {boolean} disabled if true then field should be disabled.\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.setDisabled = function( disabled ) { ; }\n\n/**\n * @method setMandatory make this field mandatory.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {boolean} mandatory if true then field becomes mandatory\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setMandatory = function( mandatory ) { ; }\n\n/**\n * @method setMaxLength set the maxlength for this field (only valid for certain field types).\n *  This method is only supported on scripted fields via the UI Object API\n *\n * @param {int} maxlength maximum length for this field\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setMaxLength = function( maxlength ) { ; }\n\n/**\n * @method setDisplayType set the display type for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} type display type: inline|normal|hidden|disabled|readonly|entry\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setDisplayType = function( type ) { ; }\n\n/**\n * @method setBreakType set the break type (startcol|startrow|none) for this field. startrow is only used for fields with a layout type of outside\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} breaktype break type used to add a break in flow layout for this field: startcol|startrow|none\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.setBreakType = function( breaktype ) { ; }\n\n\n/**\n * @method setLayoutType set the layout type and optionally the break type.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} type layout type: outside|startrow|midrow|endrow|normal\n * @param {string} [breaktype] break type: startcol|startrow|none\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setLayoutType = function( type, breaktype ) { ; }\n\n/**\n * @method setLinkText set the text that gets displayed in lieu of the field value for URL fields.\n *\n * @param {string} text user-friendly display value in lieu of URL\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setLinkText = function( text ) { ; }\n\n/**\n * @method setDisplaySize set the width and height for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {int} width\n * @param {int} height\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setDisplaySize = function( width, height ) { ; }\n\n/**\n * @method setPadding set the amount of emppty vertical space (rows) between this field and the previous field.\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {int} padding # of empty rows to display above field\n * @return {nlobjField}\n *\n * @since 2008.2\n */\nnlobjField.prototype.setPadding = function( padding ) { ; }\n\n/**\n * @method setHelpText set help text for this field. If inline is set on assistant pages, help is displayed inline below field\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} help\tfield level help content (rich text) for field\n * @param {string} [inline] if true then in addition to the popup field help, the help will also be displayed inline below field (supported on assistant pages only)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2\n */\nnlobjField.prototype.setHelpText = function( help, inline ) { ; }\n\n/**\n * @method addSelectOption add a select option to this field (valid for select/multiselect fields).\n * This method is only supported on scripted fields via the UI Object API\n *\n * @param {string} value internal ID for this select option\n * @param {string} text display value for this select option\n * @param {boolean} [selected] if true then this select option will be selected by default\n * @since 2008.2\n */\nnlobjField.prototype.addSelectOption = function( value, text, selected ) { ; }\n\n/**\n * @class nlobjSubList high level container for defining sublist (many to one) relationships on a record or multi-line data entry UIs on pages.\n * Return a new instance of nlobjSubList used for scriptable sublist (sublist).\n * This object is READ-ONLY except for instances created via the UI Object API using Suitelets or beforeLoad user events.\n */\nfunction nlobjSubList( ) { ; }\n\n/**\n * @method setLabel set the label for this sublist.\n * This method is only supported on sublists via the UI Object API\n *\n * @param {string} label\n * @since 2008.2\n */\nnlobjSubList.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setHelpText set helper text for this sublist.\n * This method is only supported on sublists via the UI Object API\n *\n * @param {string} help\n * @since 2008.2\n */\nnlobjSubList.prototype.setHelpText = function( help ) { ; }\n\n/**\n * @method setDisplayType set the displaytype for this sublist: hidden|normal.\n * This method is only supported on scripted or staticlist sublists via the UI Object API\n *\n * @param {string} type\n * @since 2008.2\n */\nnlobjSubList.prototype.setDisplayType = function( type ) { ; }\n\n/**\n * @method setLineItemValue set the value of a cell in this sublist.\n *\n * @param {string} \tfield sublist field name\n * @param {int} \tline  line number (1-based)\n * @param {string} \tvalue sublist value\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2\n */\nnlobjSubList.prototype.setLineItemValue = function( field, line, value ) { ; }\n\n/**\n * @method setLineItemMatrixValue set the value of a matrix cell in this sublist.\n * @param {string} \tfield\tmatrix field name\n * @param {int} \tline \tline number (1-based)\n * @param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue   matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2\n */\nnlobjSubList.prototype.setLineItemMatrixValue = function( field, line, column, value ) { ; }\n\n/**\n * @method setLineItemValues set values for multiple lines (Array of nlobjSearchResults or name-value pair Arrays) in this sublist.\n * Note that this method is only supported on scripted sublists via the UI Object API\n *\n * @param {Array<String>[], nlobjSearchResult[]} values\n * @since 2008.2\n */\nnlobjSubList.prototype.setLineItemValues = function( values ) { ; }\n\n/**\n * @method getLineItemCount Return the number of lines in a sublist.\n *\n * @param {string} group sublist name\n *\n * \n * @memberOf nlobjSubList\n * @since 2010.1\n */\nnlobjSubList.prototype.getLineItemCount = function( group ) { ; }\n\n/**\n * @method addField add a field (column) to this sublist.\n *\n * @param {string} name field name\n * @param {string} type field type\n * @param {string} label field label\n * @param {string| int} [source] script ID or internal ID for source list used for this select field\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2\n */\nnlobjSubList.prototype.addField = function( name,type,label,source ) { ; }\n\n/**\n * @method setUniqueField designate a field on sublist that must be unique across all lines (only supported on sublists of type inlineeditor, editor).\n * @param {string} fldnam the name of a field on this sublist whose value must be unique across all lines\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2\n */\nnlobjSubList.prototype.setUniqueField = function( fldnam ) { ; }\n\n/**\n * @method addButton add a button to this sublist.\n *\n * @param {string} name button name\n * @param {string} label button label\n * @param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2\n */\nnlobjSubList.prototype.addButton = function( name, label, script ) { ; }\n\n/**\n * @method addRefreshButton add \"Refresh\" button to sublists of type \"staticlist\" to support manual refreshing of the sublist (without entire page reloads) if it's contents are very volatile\n * @return {nlobjButton}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2\n */\nnlobjSubList.prototype.addRefreshButton = function( ) { ; }\n\n/**\n * @method addMarkAllButtons add \"Mark All\" and \"Unmark All\" buttons to this sublist of type \"list\".\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2\n */\nnlobjSubList.prototype.addMarkAllButtons = function( ) { ; }\n\n/**\n * \n *\n * @class nlobjColumn Class definition for columns used on lists and list portlets. Return a new instance of nlobjColumn used for scriptable list column.\n */\nfunction nlobjColumn( ) { ; }\n\n/**\n * @method setLabel set the header name for this column.\n *\n * @param {string} label the label for this column\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2\n */\nnlobjColumn.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setURL set the base URL (optionally defined per row) for this column.\n *\n * @param {string} value the base URL or a column in the datasource that returns the base URL for each row\n * @param {boolean} perRow if true then the 1st arg is expected to be a column in the datasource\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2\n */\nnlobjColumn.prototype.setURL = function( value, perRow ) { ; }\n\n/**\n * @method addParamToURL add a URL parameter (optionally defined per row) to this column's URL.\n *\n * @param {string} param the name of a parameter to add to URL\n * @param {string} value the value of the parameter to add to URL -or- a column in the datasource that returns the parameter value for each row\n * @param {boolean} [perRow] if true then the 2nd arg is expected to be a column in the datasource\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2\n */\nnlobjColumn.prototype.addParamToURL = function( param, value, perRow ) { ; }\n\n/**\n * \n *\n * @class nlobjTab high level grouping for fields on a data entry form (nlobjForm). Return a new instance of nlobjTab used for scriptable tab or subtab.\n */\nfunction nlobjTab( ) { ; }\n\n/**\n * @method setLabel set the label for this tab or subtab.\n *\n * @param {string} label string used as label for this tab or subtab\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjTab.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setHelpText set helper text for this tab or subtab.\n *\n * @param {string} help inline help text used for this tab or subtab\n * @return {nlobjTab}\n *\n * @since 2008.2\n */\nnlobjTab.prototype.setHelpText = function( help ) { ; }\n\n/**\n * \n *\n * @class nlobjAssistantStep assistant step definition. Used to define individual steps/pages in multi-step workflows. Return a new instance of nlobjAssistantStep.\n * \n * @since 2009.2\n */\nfunction nlobjAssistantStep( ) { ; }\n\n/**\n * @method setLabel set the label for this assistant step.\n * @param {string} label display label used for this assistant step\n * @return {void}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setHelpText set helper text for this assistant step.\n * @param {string} help inline help text to display on assistant page for this step\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.setHelpText = function( help ) { ; }\n\n/**\n * @method getStepNumber return the index of this step in the assistant page (1-based)\n * @return  {int} the index of this step in the assistant (1-based) based on the order in which the steps were added.\n *\n *\n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getStepNumber = function( ) { ; }\n\n/**\n * @method getFieldValue return the value of a field entered by the user during this step.\n * @param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getFieldValue = function( name ) { ; }\n\n/**\n * @method getFieldValues return the selected values of a multi-select field as an Array entered by the user during this step.\n * @param {string} name multi-select field name\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getFieldValues = function( name ) { ; }\n\n/**\n * @method getLineItemCount return the number of lines previously entered by the user in this step (or -1 if the sublist does not exist).\n * @param {string} group sublist name\n * @return {int}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getLineItemCount = function( group ) { ; }\n\n/**\n * @method getLineItemValue return the value of a sublist field entered by the user during this step.\n * @param {string} \tgroup sublist name\n * @param {string} \tname sublist field name\n * @param {int} \tline sublist (1-based)\n * @return  {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getLineItemValue = function(group, name, line) { ; }\n\n/**\n * @method getAllFields return an array of the names of all fields entered by the user during this step.\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getAllFields = function( ) { ; }\n\n/**\n * @method getAllLineItems return an array of the names of all sublists entered by the user during this step.\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getAllLineItems = function( ) { ; }\n\n/**\n * @method getAllLineItemFields return an array of the names of all sublist fields entered by the user during this step\n * @param {string} group sublist name\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2\n */\nnlobjAssistantStep.prototype.getAllLineItemFields = function( group ) { ; }\n\n/**\n * \n *\n * @class nlobjFieldGroup object used for grouping fields on pages (currently only supported on assistant pages).Return a new instance of nlobjFieldGroup (currently only supported on nlobjAssistant pages)\n *\n * @since 2009.2\n */\nfunction nlobjFieldGroup( ) { ; }\n\n/**\n * @method setLabel set the label for this field group.\n * @param {string} label display label for field group\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2009.2\n */\nnlobjFieldGroup.prototype.setLabel = function( label ) { ; }\n\n/**\n * @method setCollapsible set collapsibility property for this field group.\n *\n * @param {boolean} collapsible if true then this field group is collapsible\n * @param {boolean} [defaultcollapsed] if true and the field group is collapsible, collapse this field group by default\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2009.2\n */\nnlobjFieldGroup.prototype.setCollapsible = function( collapsible, defaultcollapsed ) { ; }\n\n/**\n * @method setSingleColumn set singleColumn property for this field group.\n *\n * @param {boolean} singleColumn if true then this field group is displayed in single column\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2011.1\n */\nnlobjFieldGroup.prototype.setSingleColumn = function( singleColumn ) { ; }\n\n/**\n * @method setShowBorder set showBorder property for this field group.\n *\n * @param {boolean} showBorder if true then this field group shows border including label of group\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2011.1\n */\nnlobjFieldGroup.prototype.setShowBorder = function( showBorder ) { ; }\n\n/**\n * \n *\n * @class nlobjButton buttons used for triggering custom behaviors on pages.Return a new instance of nlobjButton.\n *\n * @since 2009.2\n */\nfunction nlobjButton( ) { ; }\n\n/**\n * @method setLabel set the label for this button.\n * @param {string} label display label for button\n * @return {nlobjButton}\n *\n * \n * @memberOf nlobjButton\n *\n * @since 2008.2\n */\nnlobjButton.prototype.setLabel = function( label ) { ; }\n\n/**\n * \n * @method setDisabled disable or enable button.\n * @param {boolean} disabled if true then this button should be disabled on the page\n * @return {nlobjButton}\n *\n * @memberOf nlobjButton\n *\n * @since 2008.2\n */\nnlobjButton.prototype.setDisabled = function( disabled ) { ; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @module ns.suitescript.standard\n\n\n\n\n\n/**\n * \n *\n * @class nlobjSelectOption Primary object used to encapsulate available select options for a select field. This object is returned after a call to nlobjField.getSelectOptions(filter, filteroperator). The object contains a key, value pair that represents a select option, for example: 87, Abe Simpson. select|radio option used for building select fields via the UI Object API and for describing select|radio fields.\n * Return a new instance of nlobjSelectOption.\n *\n * @since 2009.2\n */\nfunction nlobjSelectOption( ) { ; }\n\n/**\n * @method getId return internal ID for select option\n * @return {string}\n *\n * \n * @memberOf nlobjSelectOption\n *\n * @since 2009.2\n */\nnlobjSelectOption.prototype.getId = function( ) { ; }\n\n/**\n * @method getText return display value for select option.\n * @return {string}\n *\n * \n * @memberOf nlobjSelectOption\n *\n * @since 2009.2\n */\nnlobjSelectOption.prototype.getText = function( ) { ; }\n\n\n\n\n\n\n\n\n\n/**\n\n@class globals @method nlapiGetLogin \nReturns the NetSuite login credentials of currently logged-in user.\n\nThis API is supported in user event, portlet, Suitelet, RESTlet, and SSP scripts. For information about the unit cost associated with this API, see API Governance.\n\nThis example shows how to get the credentials of the currently logged-in user.\n\n\t//Get credentials of currently logged-in user\n\tvar login = nlapiGetLogin();\n\n@returns {nlapiLogin}\n\n@class nlapiLogin Primary object used to encapsulate NetSuite user login credentials. Note that nlapiGetLogin() returns a reference to this object.\n * @class nlapiGetLogin\n *\n * @since 2012.2\n */\nfunction nlapiGetLogin( )   { ; }\n\n/**\n@method changeEmail\n * @param {string} newEmail new Email\n * @param {boolean} justThisAccount indicates whether to apply email change only to roles within this account or apply email change to its all NetSuite accounts and roles\n * @return {void}\n *\n * @since 2012.2\n */\n\nnlobjLogin.prototype.changeEmail = function (currentPassword, newEmail, justThisAccount)  { ; }\n\n/**\n * @method changePassword @param {string} newPassword new Password.\n * @return {void}\n *\n * @since 2012.2\n */\nnlobjLogin.prototype.changePassword = function (currentPassword, newPassword) { ; }\n\n\n/**\n * @method nlapiGetJobManager @param {string} Job Type\n * @return {nlobjJobManager}\n *\n * @since 2013.1\n */\nfunction nlapiGetJobManager( jobType )   { ; }\n\n/**\n * @method createJobRequest @return {nlobjJobRequest}\n *\n * @since 2013.1\n */\nnlobjJobManager.prototype.createJobRequest = function ()  { ; }\n\n/**\n * @method submit @param {nlobjJobRequest} Job request\n * @return {String} Job Id\n *\n * @since 2013.1\n */\nnlobjJobManager.prototype.submit = function (request)  { ; }\n\n/**\n * @method getFuture @param {String} Job Id\n * @return {nlobjFuture}\n *\n * @since 2013.1\n */\nnlobjJobManager.prototype.getFuture = function (id)  { ; }\n\n/**\n * @class nlobjDuplicateJobRequest \n\nPrimary object used to encapsulate all the properties of a merge duplicate record job request. Note that nlobjJobManager.createJobRequest() returns a reference to this object.\n\nUse the methods in nlobjDuplicateJobRequest to define the criteria of your merge duplicate request.\n\nNote When submitting a merge duplicate job, the maximum number of records you and submit is 200.\n\n * @property {String} ENTITY_CUSTOMER Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n * @property {String} ENTITY_CONTACT Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n * @property {String} ENTITY_LEAD Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n * @property {String} ENTITY_PROSPECT Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n * @property {String} ENTITY_PARTNER Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n * @property {String} ENTITY_VENDOR Constant for Merge Duplicate recrods Entity Types\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.ENTITY_CUSTOMER = 'CUSTOMER';\nnlobjDuplicateJobRequest.prototype.ENTITY_CONTACT = 'CONTACT';\nnlobjDuplicateJobRequest.prototype.ENTITY_LEAD = 'LEAD';\nnlobjDuplicateJobRequest.prototype.ENTITY_PROSPECT = 'PROSPECT';\nnlobjDuplicateJobRequest.prototype.ENTITY_PARTNER = 'PARTNER';\nnlobjDuplicateJobRequest.prototype.ENTITY_VENDOR = 'VENDOR';\n\n/**\n * @property {String} MASTERSELECTIONMODE_CREATED_EARLIEST Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n * @since 2013.1\n * @property {String} MASTERSELECTIONMODE_MOST_RECENT_ACTIVITY Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n * @since 2013.1\n * @property {String} MASTERSELECTIONMODE_MOST_POPULATED_FIELDS Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n * @since 2013.1\n * @property {String} MASTERSELECTIONMODE_SELECT_BY_ID Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.MASTERSELECTIONMODE_CREATED_EARLIEST = 'CREATED_EARLIEST';\nnlobjDuplicateJobRequest.prototype.MASTERSELECTIONMODE_MOST_RECENT_ACTIVITY = 'MOST_RECENT_ACTIVITY';\nnlobjDuplicateJobRequest.prototype.MASTERSELECTIONMODE_MOST_POPULATED_FIELDS = 'MOST_POPULATED_FIELDS';\nnlobjDuplicateJobRequest.prototype.MASTERSELECTIONMODE_SELECT_BY_ID = 'SELECT_BY_ID';\n\n/**\n * @property {String} OPERATION_MERGE Constant for Merge Duplicate recrods Merge operation\n * @since 2013.1\n * @property {String} OPERATION_DELETE Constant for Merge Duplicate recrods Merge operation\n * @since 2013.1\n * @property {String} OPERATION_MAKE_MASTER_PARENT Constant for Merge Duplicate recrods Merge operation\n * @since 2013.1\n * @property {String} OPERATION_MARK_AS_NOT_DUPES Constant for Merge Duplicate recrods Merge operation\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.OPERATION_MERGE = 'MERGE';\nnlobjDuplicateJobRequest.prototype.OPERATION_DELETE = 'DELETE';\nnlobjDuplicateJobRequest.prototype.OPERATION_MAKE_MASTER_PARENT = 'MAKE_MASTER_PARENT';\nnlobjDuplicateJobRequest.prototype.OPERATION_MARK_AS_NOT_DUPES = 'MARK_AS_NOT_DUPES';\n/**\n * @method setEntityType @param {String} Entity Type\n * @return {void}\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.setEntityType = function( entityType ) { ; }\n\n/**\n * @method setMasterId @param {String} Master record ID\n * @return {void}\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.setMasterId = function( masterID ) { ; }\n\n/**\n * @method setMasterSelectionMode @param {String} Criteria\n * @return {void}\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.setMasterSelectionMode = function( masterSelectionMode ) { ; }\n\n/**\n * @method setRecords  @param {String} Array of duplicate records IDs\n * @return {void}\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.setRecords = function( dupeRecords ) { ; }\n\n/**\n * @method setOperation @param {String} Operation\n * @return {void}\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.setOperation = function( operation ) { ; }\n\n/**\n * @method getEntityType @return Entity Type\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.getEntityType = function( ) { ; }\n\n/**\n * @method getMasterId @return Master record ID\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.getMasterId = function( ) { ; }\n\n/**\n * @method getMasterSelectionMode @return Master Selection Mode\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.getMasterSelectionMode = function( ) { ; }\n\n/**\n * @method getRecords @return Array of duplicate records IDs\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.getRecords = function( ) { ; }\n\n/**\n * @method getOperation @return Operation\n *\n * @since 2013.1\n */\nnlobjDuplicateJobRequest.prototype.getOperation = function( ) { ; }\n\n/**\n@class nlobjFuture Encapsulates the properties of a merge duplicate record job status. Note that nlobjJobManager.getFuture() returns a reference to this object\n * @method isDone @return {boolean} status\n *\n * @since 2013.1\n */\nnlobjFuture.prototype.isDone = function( ) { ; }\n\n/**\n * @method getId @return {String} Job ID\n *\n * @since 2013.1\n */\nnlobjFuture.prototype.getId = function( ) { ; }\n\n/**\n * @method cancel @return {boolean} cancelled or not\n *\n * @since 2013.1\n */\nnlobjFuture.prototype.cancel = function( ) { ; }\n\n/**\n * @method isCancelled @return {boolean} is cancelled or not\n *\n * @since 2013.1\n */\nnlobjFuture.prototype.isCancelled = function( ) { ; }\n\n/**\n@class nlobjCache support simple application cache \n@constructor @param {name} cacheName the name to identify this cache\n@method put insert a named value into the cache\n * @param {string} key\n * @param {string} value\n * @param {int} ttl, time to live in seconds.\n * @return {Object} status.\n *\n * @since 2013.2\n */\nnlobjCache.prototype.put = function (key, value, ttl) {;}\n\n\n/**\n * @method get @param {string} key\n * @return {String}  value associate with that key.\n *\n * @since 2013.2\n */\nnlobjCache.prototype.get = function (key) {;}\n\n\n/**\n * @method remove @param {string} key\n * @return {Object} status.\n *\n * @since 2013.2\n */\nnlobjCache.prototype.remove = function (key) {;}\n\n\n/* jshint ignore:end */\n\n//@filename {Foo} fileName ./Modules/suitecommerce/StoreItem@ML/SuiteScript/StoreItem.Model.js\n\n/* global invalidItemsFieldsAdvancedName */\n// StoreItem.js\n// ----------\n// Handles the fetching of items information for a collection of order items\n// If you want to fetch multiple items please use preloadItems before/instead calling get() multiple times.\n\n/* jshint -W053 */\n// We HAVE to use \"new String\"\n// So we (disable the warning)[https:// groups.google.com/forum/#!msg/jshint/O-vDyhVJgq4/hgttl3ozZscJ]\ndefine(\n\t'StoreItem.Model'\n,\t[\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\n\t,\t_\n\t)\n{\n\t'use strict';\n\treturn SCModel.extend({\n\t\tname: 'StoreItem'\n\n\t\t// Returns a collection of items with the items iformation\n\t\t// the 'items' parameter is an array of objects {id,type}\n\t\t// fieldset_name allows to specify an alternative fieldset distinct\n\t\t// from the one specified in the configuration.\n\t,\tpreloadItems: function (items, fieldset_name)\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\titems_by_id = {}\n\t\t\t,\tparents_by_id = {};\n\n\t\t\titems = items || [];\n\n\t\t\tthis.preloadedItems = this.preloadedItems || {};\n\n\t\t\titems.forEach(function (item)\n\t\t\t{\n\t\t\t\tif (!item.id || !item.type || item.type === 'Discount' || item.type === 'OthCharge' || item.type === 'Markup')\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!self.getPreloadedItem(item.id, fieldset_name))\n\t\t\t\t{\n\t\t\t\t\titems_by_id[item.id] = {\n\t\t\t\t\t\tinternalid: new String(item.id).toString()\n\t\t\t\t\t,\titemtype: item.type\n\t\t\t\t\t,\titemfields: SC.Configuration.items_fields_standard_keys\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!_.size(items_by_id))\n\t\t\t{\n\t\t\t\treturn this.preloadedItems;\n\t\t\t}\n\n\t\t\tvar items_details = this.getItemFieldValues(items_by_id, fieldset_name);\n\n\t\t\t// Generates a map by id for easy access. Notice that for disabled items the array element can be null\n\t\t\t_.each(items_details, function (item)\n\t\t\t{\n\t\t\t\tif (item && typeof item.itemid !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\tif (item.itemoptions_detail && item.itemoptions_detail.matrixtype === 'child')\n\t\t\t\t\t{\n\t\t\t\t\t\tparents_by_id[item.itemoptions_detail.parentid] = {\n\t\t\t\t\t\t\tinternalid: new String(item.itemoptions_detail.parentid).toString()\n\t\t\t\t\t\t,\titemtype: item.itemtype\n\t\t\t\t\t\t,\titemfields: SC.Configuration.items_fields_standard_keys\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tself.setPreloadedItem(item.internalid, item, fieldset_name);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (_.size(parents_by_id))\n\t\t\t{\n\t\t\t\tvar parents_details = this.getItemFieldValues(parents_by_id, fieldset_name);\n\n\t\t\t\t_.each(parents_details, function (item)\n\t\t\t\t{\n\t\t\t\t\tif (item && typeof item.itemid !== 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tself.setPreloadedItem(item.internalid, item, fieldset_name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Adds the parent information to the child\n\t\t\t_.each(this.preloadedItems, function (item)\n\t\t\t{\n\t\t\t\tif (item.itemoptions_detail && item.itemoptions_detail.matrixtype === 'child')\n\t\t\t\t{\n\t\t\t\t\titem.matrix_parent = self.getPreloadedItem(item.itemoptions_detail.parentid, fieldset_name);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn this.preloadedItems;\n\t\t}\n\n\t,\tgetItemFieldValues: function (items_by_id, fieldset_name)\n\t\t{\n\t\t\tvar\titem_ids = _.values(items_by_id)\n\t\t\t,\tis_advanced = ModelsInit.session.getSiteSettings(['sitetype']).sitetype === 'ADVANCED';\n\n\t\t\t// Check if we have access to fieldset\n\t\t\tif (is_advanced)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfieldset_name = _.isUndefined(fieldset_name) ? SC.Configuration.items_fields_advanced_name : fieldset_name;\n\n\t\t\t\t\t// SuiteCommerce Advanced website have fieldsets\n\t\t\t\t\treturn ModelsInit.session.getItemFieldValues(fieldset_name, _.pluck(item_ids, 'internalid')).items;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\tthrow invalidItemsFieldsAdvancedName;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Sitebuilder website version doesn't have fieldsets\n\t\t\t\treturn ModelsInit.session.getItemFieldValues(item_ids);\n\t\t\t}\n\t\t}\n\n\t\t// Return the information for the given item\n\t,\tget: function (id, type, fieldset_name)\n\t\t{\n\t\t\tthis.preloadedItems = this.preloadedItems || {};\n\n\t\t\tif (!this.getPreloadedItem(id, fieldset_name))\n\t\t\t{\n\t\t\t\tthis.preloadItems([{\n\t\t\t\t\tid: id\n\t\t\t\t,\ttype: type\n\t\t\t\t}]\n\t\t\t\t,\tfieldset_name);\n\t\t\t}\n\n\t\t\treturn this.getPreloadedItem(id, fieldset_name);\n\t\t}\n\n\t,\tgetPreloadedItem: function (id, fieldset_name)\n\t\t{\n\t\t\treturn this.preloadedItems[this.getItemKey(id, fieldset_name)];\n\t\t}\n\n\t,\tsetPreloadedItem: function (id, item, fieldset_name)\n\t\t{\n\t\t\tthis.preloadedItems[this.getItemKey(id, fieldset_name)] = item;\n\t\t}\n\n\t,\tgetItemKey: function (id, fieldset_name)\n\t\t{\n\t\t\tfieldset_name = _.isUndefined(fieldset_name) ? SC.Configuration.items_fields_advanced_name : fieldset_name;\n\n\t\t\treturn id + '#' + fieldset_name;\n\t\t}\n\n\t,\tset: function (item, fieldset_name)\n\t\t{\n\t\t\tthis.preloadedItems = this.preloadedItems || {};\n\n\t\t\tif (item.internalid)\n\t\t\t{\n\t\t\t\tthis.setPreloadedItem(item.internalid, item, fieldset_name);\n\t\t\t}\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js\n\n//@module Transaction\ndefine(\n\t'Transaction.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Models.Init'\n\t,\t'Application'\n\t,\t'Utils'\n\t,\t'underscore'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tModelsInit\n\t,\tApplication\n\t,\tUtils\n\t,\t_\n\t)\n{\n\t'use strict';\n\n\tvar StoreItem\n\t,\tAddressModel;\n\n\ttry\n\t{\n\t\tStoreItem = require('StoreItem.Model');\n\t}\n\tcatch(e)\n\t{\n\t}\n\n\ttry\n\t{\n\t\tAddressModel = require('Address.Model');\n\t}\n\tcatch(e)\n\t{\n\t}\n\n\t// @class Transaction.Model Defines the base model used by all transactions providing a base implementation with common features\n\t// @extends SCModel\n\treturn SCModel.extend({\n\t\t//@property {String} name\n\t\tname: 'Transaction'\n\n\t\t//@property {StoreItem.Model} storeItem\n\t,\tstoreItem: StoreItem\n\n\t\t//@property {Boolean} isMultiCurrency\n\t,\tisMultiCurrency: ModelsInit.context.getFeature('MULTICURRENCY')\n\n\t\t//@property {Boolean} isMultiSite\n\t,\tisMultiSite: ModelsInit.context.getFeature('MULTISITE')\n\n\t\t//@property {Number} now Now in milliseconds\n\t,\tnow: new Date().getTime()\n\n\t\t//@method list Allow search among transactions\n\t\t//@param {Transaction.Model.List.Parameters} data\n\t\t//@return {Transaction.Model.List.Result}\n\t,\tlist: function (data)\n\t\t{\n\t\t\tthis.preList();\n\n\t\t\tvar self = this;\n\n\t\t\tthis.data = data;\n\n\t\t\tthis.amountField = this.isMultiCurrency ? 'fxamount' : 'amount';\n\n\t\t\tthis.filters = {\n\t\t\t\t\t'entity': ['entity', 'is', nlapiGetUser()]\n\t\t\t\t,\t'mainline_operator': 'and'\n\t\t\t\t,\t'mainline': ['mainline','is', 'T']\n\t\t\t};\n\n\t\t\tthis.columns = {\n\t\t\t\t\t'trandate': new nlobjSearchColumn('trandate')\n\t\t\t\t,\t'internalid': new nlobjSearchColumn('internalid')\n\t\t\t\t,\t'tranid': new nlobjSearchColumn('tranid')\n\t\t\t\t,\t'status': new nlobjSearchColumn('status')\n\t\t\t\t,\t'amount': new nlobjSearchColumn(this.amountField)\n\t\t\t\t};\n\n\t\t\tif (this.isMultiCurrency)\n\t\t\t{\n\t\t\t\tthis.columns.currency = new nlobjSearchColumn('currency');\n\t\t\t}\n\n\t\t\tif (this.data.from && this.data.to)\n\t\t\t{\n\t\t\t\tvar offset = new Date().getTimezoneOffset() * 60 * 1000;\n\n\t\t\t\tthis.filters.date_operator = 'and';\n\t\t\t\tthis.filters.date = ['trandate', 'within', new Date(parseInt(this.data.from, 10) + offset), new Date(parseInt(this.data.to, 10) + offset)];\n\t\t\t}\n\n\t\t\tif (this.data.internalid)\n\t\t\t{\n\t\t\t\tthis.data.internalid  = _.isArray(this.data.internalid) ? this.data.internalid : this.data.internalid.split(',');\n\t\t\t\tthis.filters.internalid_operator = 'and';\n\t\t\t\tthis.filters.internalid  =  ['internalid', 'anyof', this.data.internalid];\n\t\t\t}\n\n\t\t\tif (this.data.createdfrom)\n\t\t\t{\n\t\t\t\tthis.filters.createdfrom_operator = 'and';\n\t\t\t\tthis.filters.createdfrom = ['createdfrom', 'is', this.data.createdfrom];\n\t\t\t}\n\n\t \t\tif (this.data.types)\n\t \t\t{\n\t \t\t\tthis.filters.types_operator = 'and';\n\t \t\t\tthis.filters.types = ['type', 'anyof', this.data.types.split(',')];\n\t \t\t}\n\n\t \t\tif (this.isMultiSite)\n\t\t\t{\n\t\t\t\tvar site_id = ModelsInit.session.getSiteSettings(['siteid']).siteid\n\t\t\t\t,\tfilter_site = SC.Configuration.filter_site\n\t\t\t\t,\tsearch_filter_array = null;\n\n\t\t\t\tif (_.isString(filter_site) && filter_site === 'current')\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = [site_id, '@NONE@'];\n\t\t\t\t}\n\t\t\t\telse if (_.isString(filter_site) && filter_site === 'all')\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = [];\n\t\t\t\t}\n\t\t\t\telse if (_.isArray(filter_site))\n\t\t\t\t{\n\t\t\t\t\tsearch_filter_array = filter_site;\n\t\t\t\t\tsearch_filter_array.push('@NONE@');\n\t\t\t\t}\n\n\n\t\t\t\tif (search_filter_array && search_filter_array.length)\n\t\t\t\t{\n\t\t\t\t\tthis.filters.site_operator = 'and';\n\t\t\t\t\tthis.filters.site = ['website', 'anyof', _.uniq(search_filter_array)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setExtraListFilters();\n\n\t\t\tthis.setExtraListColumns();\n\n\t\t\tif (this.data.sort)\n\t\t\t{\n\t\t\t\t_.each(this.data.sort.split(','), function (column_name)\n\t\t\t\t{\n\t\t\t\t\tif (self.columns[column_name])\n\t\t\t\t\t{\n\t\t\t\t\t\tself.columns[column_name].setSort(self.data.order >= 0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.data.page === 'all')\n\t\t\t{\n\t\t\t\tthis.search_results = Application.getAllSearchResults('transaction', _.values(this.filters), _.values(this.columns));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.search_results = Application.getPaginatedSearchResults({\n\t\t\t\t\trecord_type: 'transaction'\n\t\t\t\t,\tfilters: _.values(this.filters)\n\t\t\t\t,\tcolumns: _.values(this.columns)\n\t\t\t\t,\tpage: this.data.page || 1\n\t\t\t\t,\tresults_per_page : this.data.results_per_page\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar records = _.map((this.data.page === 'all' ? this.search_results : this.search_results.records) || [], function (record)\n\t\t\t{\n\t\t\t\t//@class Transaction.Model.List.Result.Record\n\t\t\t\tvar result = {\n\t\t\t\t\t//@property {String} recordtype\n\t\t\t\t\trecordtype: record.getRecordType()\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t,\tinternalid: record.getValue('internalid')\n\t\t\t\t\t//@property {String} tranid\n\t\t\t\t,\ttranid: record.getValue('tranid')\n\t\t\t\t\t//@property {String} trandate\n\t\t\t\t,\ttrandate: record.getValue('trandate')\n\t\t\t\t\t//@property {Object} status\n\t\t\t\t,\tstatus: {\n\t\t\t\t\t\tinternalid: record.getValue('status')\n\t\t\t\t\t,\tname: record.getText('status')\n\t\t\t\t\t}\n\t\t\t\t\t//@property {Number} amount\n\t\t\t\t,\tamount: Utils.toCurrency(record.getValue(self.amountField))\n\t\t\t\t\t//@property {Strung} amount_formatted\n\t\t\t\t,\tamount_formatted: Utils.formatCurrency(record.getValue(self.amountField))\n\t\t\t\t\t//@property {Currency} currency\n\t\t\t\t,\tcurrency: self.isMultiCurrency ?\n\t\t\t\t\t//@class Currency\n\t\t\t\t\t{\n\t\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\t\tinternalid: record.getValue('currency')\n\t\t\t\t\t\t//@property {String} name\n\t\t\t\t\t,\tname: record.getText('currency')\n\t\t\t\t\t} : null\n\t\t\t\t};\n\n\t\t\t\treturn self.mapListResult(result, record);\n\n\t\t\t});\n\n\t\t\tif (this.data.page === 'all')\n\t\t\t{\n\t\t\t\tthis.results = records;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.results = this.search_results;\n\t\t\t\tthis.results.records = records;\n\t\t\t}\n\n\t\t\tthis.postList();\n\n\t\t\treturn this.results;\n\t\t\t// @class Transaction.Model\n\t\t}\n\t\t//@method setExtraListColumns Abstract method used to be overridden by child classes.\n\t\t// The aim of this method is set extra column called by the list method. The list of all column is in the 'columns' property of 'this'\n\t\t// @return {Void}\n\t,\tsetExtraListColumns: function ()\n\t\t{ }\n\n\t\t//@method setExtraListFilters Abstract method used to be overridden by child classes.\n\t\t// The aim of this method is set extra filters called by the list method. The list of all column is in the 'filters' property of 'this'\n\t\t// @return {Void}\n\t,\tsetExtraListFilters: function ()\n\t\t{ }\n\n\t\t//@method mapListResult Abstract method used to be overridden by child classes.\n\t\t// The aim of this method is apply any custom extension over each record to be returned by the list method\n\t\t// @param {Transaction.Model.List.Result.Record} result Base result to be extended\n\t\t// @param {nlobjSearchResult} record Instance of the record returned by NetSuite search\n\t\t// @return {Transaction.Model.List.Result.Record}\n\t,\tmapListResult: function (result)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\t//@method getTransactionRecord Load a NetSuite record (transaction)\n\t\t//@param {String} record_type\n\t\t//@param {String} id\n\t\t//@return {nlobjRecord}\n\t,\tgetTransactionRecord: function (record_type, id)\n\t\t{\n\t\t\tif (this.record)\n\t\t\t{\n\t\t\t\treturn this.record;\n\t\t\t}\n\t\t\treturn nlapiLoadRecord(record_type, id);\n\t\t}\n\n\t\t//@method get Return one single transaction\n\t\t//@param {String} record_type\n\t\t//@param {String} id\n\t\t//@return {Transaction.Model.Get.Result}\n\t,\tget: function (record_type, id)\n\t\t{\n\n\t\t\t//console.log('Transaction.Model get record_type', record_type);\n\t\t\t//console.log('Transaction.Model get id', id);\n\n\t\t\tthis.preGet();\n\n\t\t\tthis.recordId = id;\n\t\t\tthis.recordType = record_type;\n\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\tthis.result = {};\n\n\t\t\tif (record_type && id)\n\t\t\t{\n\t\t\t\tthis.record = this.getTransactionRecord(record_type, id);\n\n\t\t\t\tthis.getRecordFields();\n\n\t\t\t\tthis.getRecordSummary();\n\n\t\t\t\tthis.getRecordPromocode();\n\n\t\t\t\tthis.getRecordPaymentMethod();\n\n\t\t\t\tthis.getRecordAddresses();\n\n\t\t\t\tthis.getRecordShippingMethods();\n\n\t\t\t\tthis.getLines();\n\n\t\t\t\tthis.getExtraRecordFields();\n\t\t\t}\n\n\t\t\tthis.postGet();\n\n\t\t\t// convert the objects to arrays\n\t\t\tthis.result.addresses = _.values(this.result.addresses || {});\n\t\t\tthis.result.shipmethods = _.values(this.result.shipmethods || {});\n\t\t\tthis.result.lines = _.values(this.result.lines || {});\n\n\t\t\treturn this.result;\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method getSalesRep Gets the sales representative information into the current transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetSalesRep: function ()\n\t\t{\n\t\t\tvar salesrep_id = this.record.getFieldValue('salesrep')\n\t\t\t,\tsalesrep_name = this.record.getFieldText('salesrep');\n\n\t\t\tif (salesrep_id)\n\t\t\t{\n\t\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t\t//@property {Transaction.Model.Get.SalesRepresentative}\n\t\t\t\tthis.result.salesrep =\n\t\t\t\t//@class Transaction.Model.Get.SalesRepresentative\n\t\t\t\t{\n\t\t\t\t\t//@property {String} name\n\t\t\t\t\tname: salesrep_name\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t,\tinternalid: salesrep_id\n\t\t\t\t};\n\n\t\t\t\tvar search_result = nlapiLookupField(\n\t\t\t\t\tthis.result.recordtype,\n\t\t\t\t\tthis.result.internalid,\n\t\t\t\t\t['salesrep.phone', 'salesrep.email', 'salesrep.entityid', 'salesrep.mobilephone', 'salesrep.fax']\n\t\t\t\t);\n\n\t\t\t\tif (search_result)\n\t\t\t\t{\n\t\t\t\t\t//@property {String?} phone\n\t\t\t\t\tthis.result.salesrep.phone = search_result['salesrep.phone'];\n\t\t\t\t\t//@property {String} email\n\t\t\t\t\tthis.result.salesrep.email = search_result['salesrep.email'];\n\t\t\t\t\t//@property {String} fullname\n\t\t\t\t\tthis.result.salesrep.fullname = search_result['salesrep.entityid'];\n\t\t\t\t\t//@property {String?} mobilephone\n\t\t\t\t\tthis.result.salesrep.mobilephone = search_result['salesrep.mobilephone'];\n\t\t\t\t\t//@property {String} fax\n\t\t\t\t\tthis.result.salesrep.fax = search_result['salesrep.fax'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method getRecordFields Get the main (and simple) field of the transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordFields: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {String} internalid\n\t\t\tthis.result.internalid = this.recordId;\n\t\t\t//@property {String} recordtype\n\t\t\tthis.result.recordtype = this.recordType;\n\n\t\t\t//@property {String} tranid\n\t\t\tthis.result.tranid = this.record.getFieldValue('tranid');\n\t\t\t//@property {String} memo\n\t\t\tthis.result.memo = this.record.getFieldValue('memo');\n\t\t\t//@property {String} trandate\n\t\t\tthis.result.trandate = this.record.getFieldValue('trandate');\n\n\t\t\tif (this.isMultiCurrency)\n\t\t\t{\n\t\t\t\t//@property {Currency?} currency\n\t\t\t\tthis.result.currency = {\n\t\t\t\t\tinternalid: this.record.getFieldValue('currency')\n\t\t\t\t,\tname: this.record.getFieldValue('currencyname')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.getCreatedFrom();\n\t\t\tthis.getStatus();\n\t\t}\n\n\t\t//@method getCreatedFrom Get the created from field for a single retrieved record\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetCreatedFrom: function ()\n\t\t{\n\t\t\t//IMPORTANT\n\t\t\t//The createdfrom is being loaded using a Lookup field operation instead of loading it from the current record (this.record)\n\t\t\t//thanks to the following issue:\n\t\t\t//https://system.netsuite.com/app/crm/support/issuedb/issue.nl?id=37374714\n\n\t\t\tvar created_from_internalid = this.record.getFieldValue('createdfrom')\n\t\t\t,\trecord_type = '';\n\n\t\t\tif (created_from_internalid)\n\t\t\t{\n\t\t\t\trecord_type = Utils.getTransactionType(created_from_internalid);\n\t\t\t}\n\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {CreatedFrom} createdfrom\n\t\t\tthis.result.createdfrom =\n\t\t\t//@class CreatedFrom\n\t\t\t{\n\t\t\t\t//@property {String} internalid\n\t\t\t\tinternalid: created_from_internalid\n\t\t\t\t//@property {String} name\n\t\t\t,\tname: this.record.getFieldText('createdfrom')\n\t\t\t\t//@property {String} recordtype\n\t\t\t,\trecordtype: record_type || ''\n\t\t\t};\n\t\t\t//@class Transaction.Model\n\t\t}\n\n\t\t//@method getStatus Get the status field for a single retrieved record\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetStatus: function ()\n\t\t{\n\t\t\t//IMPORTANT\n\t\t\t//The status is being loaded using a Lookup field operation instead of loading it from the current record (this.record)\n\t\t\t//thanks to the following issue:\n\t\t\t//https://system.netsuite.com/app/crm/support/issuedb/issue.nl?id=37373062\n\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Transaction.Model.Get.Status} Status\n\t\t\tthis.result.status =\n\t\t\t//@class Transaction.Model.Get.Status\n\t\t\t{\n\t\t\t\t//@property {String} internalid\n\t\t\t\tinternalid: this.record.getFieldValue('status')\n\t\t\t\t//@property {String} name\n\t\t\t,\tname: this.record.getFieldText('status')\n\t\t\t};\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method getExtraRecordFields Overridable method used to add extra field in the final result of the get method\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetExtraRecordFields: function () { }\n\n\t\t//@method getRecordPromocode Get the promocode information into the get result\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordPromocode: function ()\n\t\t{\n\t\t\tvar promocode = this.record.getFieldValue('promocode');\n\n\t\t\tif (promocode)\n\t\t\t{\n\t\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t\t//@property {Transaction.Model.Get.Promocode} promocode\n\t\t\t\tthis.result.promocode =\n\t\t\t\t//@class Transaction.Model.Get.Promocode\n\t\t\t\t{\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\tinternalid: promocode\n\t\t\t\t\t//@property {String} name\n\t\t\t\t,\tname: promocode\n\t\t\t\t\t//@property {String} code\n\t\t\t\t,\tcode: this.record.getFieldText('couponcode')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\t\t//@method getTerms Get the terms in the current Transaction\n\t\t//@property {Transaction.Model.Get.PaymentMethod.Terms} paymentterms This value is present only of the type is invoice\n\t,\tgetTerms: function ()\n\t\t{\n\t\t\tif (this.record.getFieldValue('terms'))\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\tinternalid: this.record.getFieldValue('terms')\n\t\t\t\t\t//@property {String} name\n\t\t\t\t,\tname: this.record.getFieldText('terms')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t//@method getRecordPaymentMethod Get the payment methods used in the current Transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordPaymentMethod: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.PaymentMethod\n\t\t\tvar paymentmethod = {\n\t\t\t\t\t//@property {String} type Possible values: 'creditcard', 'invoice', 'paypal'\n\t\t\t\t\ttype: this.record.getFieldValue('paymethtype')\n\t\t\t\t\t//@property {Boolean} primary\n\t\t\t\t,\tprimary: true\n\t\t\t\t\t//@property {String} name\n\t\t\t\t,\tname: this.record.getFieldText('paymentmethod')\n\n\t\t\t\t}\n\n\t\t\t,\tterms = this.getTerms()\n\n\t\t\t,\tccnumber = this.record.getFieldValue('ccnumber');\n\n\t\t\tif (ccnumber)\n\t\t\t{\n\t\t\t\tpaymentmethod.type = 'creditcard';\n\t\t\t\t//@property {Transaction.Model.Get.PaymentMethod.CreditCard?} creditcard This value is present only if the type is creditcard\n\t\t\t\tpaymentmethod.creditcard =\n\t\t\t\t//@class Transaction.Model.Get.PaymentMethod.CreditCard\n\t\t\t\t{\n\t\t\t\t\t//@property {String} ccnumber\n\t\t\t\t\tccnumber: ccnumber\n\t\t\t\t\t//@property {String} ccexpiredate\n\t\t\t\t,\tccexpiredate: this.record.getFieldValue('ccexpiredate')\n\t\t\t\t\t//@property {String} ccname\n\t\t\t\t,\tccname: this.record.getFieldValue('ccname')\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t,\tinternalid:  this.record.getFieldValue('creditcard')\n\t\t\t\t\t//@property {Transaction.Model.Get.PaymentMethod.CreditCard.Details} paymentmethod\n\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t//@class Transaction.Model.Get.PaymentMethod.CreditCard.Details\n\t\t\t\t\t\t//@property {String} ispaypal\n\t\t\t\t\t\tispaypal: 'F'\n\t\t\t\t\t\t//@property {String} name\n\t\t\t\t\t,\tname: this.record.getFieldText('paymentmethod')\n\t\t\t\t\t\t//@property {String} creditcard Value: 'T'\n\t\t\t\t\t,\tcreditcard: 'T'\n\t\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\t,\tinternalid: this.record.getFieldValue('paymentmethod')\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (terms)\n\t\t\t{\n\t\t\t\tpaymentmethod.type = 'invoice';\n\n\t\t\t\t//@property {String?} purchasenumber This value is present only of the type is invoice\n\t\t\t\tpaymentmethod.purchasenumber = this.record.getFieldValue('otherrefnum');\n\n\t\t\t\t//@property {Transaction.Model.Get.PaymentMethod.Terms} paymentterms This value is present only of the type is invoice\n\t\t\t\tpaymentmethod.paymentterms = terms;\n\t\t\t}\n\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Transaction.Model.Get.PaymentMethod>} paymentmethods\n\t\t\tif (paymentmethod.type)\n\t\t\t{\n\t\t\t\tthis.result.paymentmethods = [paymentmethod];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.result.paymentmethods = [];\n\t\t\t}\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method getRecordSummary Get the summary of the current transaction model\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordSummary: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Transaction.Model.Get.Summary} summary\n\t\t\tthis.result.summary =\n\t\t\t//@class Transaction.Model.Get.Summary\n\t\t\t{\n\t\t\t\t//@property {Number} subtotal\n\t\t\t\tsubtotal: Utils.toCurrency(this.record.getFieldValue('subtotal'))\n\t\t\t\t//@property {String} subtotal_formatted\n\t\t\t,\tsubtotal_formatted: Utils.formatCurrency(this.record.getFieldValue('subtotal'))\n\n\t\t\t\t//@property {Number} taxtotal\n\t\t\t,\ttaxtotal: Utils.toCurrency(this.record.getFieldValue('taxtotal'))\n\t\t\t\t//@property {String} taxtotal_formatted\n\t\t\t,\ttaxtotal_formatted: Utils.formatCurrency(this.record.getFieldValue('taxtotal'))\n\n\t\t\t\t//@property {Number} tax2total\n\t\t\t,\ttax2total: Utils.toCurrency(0)\n\t\t\t\t//@property {String} tax2total_formatted\n\t\t\t,\ttax2total_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} shippingcost\n\t\t\t,\tshippingcost: Utils.toCurrency(this.record.getFieldValue('shippingcost'))\n\t\t\t\t//@property {String} shippingcost_formatted\n\t\t\t,\tshippingcost_formatted: Utils.formatCurrency(this.record.getFieldValue('shippingcost'))\n\n\t\t\t\t//@property {Number} handlingcost\n\t\t\t,\thandlingcost: Utils.toCurrency(this.record.getFieldValue('althandlingcost'))\n\t\t\t\t//@property {String} handlingcost_formatted\n\t\t\t,\thandlingcost_formatted: Utils.formatCurrency(this.record.getFieldValue('althandlingcost'))\n\n\t\t\t\t//@property {Number} estimatedshipping\n\t\t\t,\testimatedshipping: 0\n\t\t\t\t//@property {String} estimatedshipping_formatted\n\t\t\t,\testimatedshipping_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} taxonshipping\n\t\t\t,\ttaxonshipping: Utils.toCurrency(0)\n\t\t\t\t//@property {String} taxonshipping_formatted\n\t\t\t,\ttaxonshipping_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} discounttotal\n\t\t\t,\tdiscounttotal: Utils.toCurrency(this.record.getFieldValue('discounttotal'))\n\t\t\t\t//@property {String} discounttotal_formatted\n\t\t\t,\tdiscounttotal_formatted: Utils.formatCurrency(this.record.getFieldValue('discounttotal'))\n\n\t\t\t\t//@property {Number} taxondiscount\n\t\t\t,\ttaxondiscount: Utils.toCurrency(0)\n\t\t\t\t//@property {String} taxondiscount_formatted\n\t\t\t,\ttaxondiscount_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} discountrate\n\t\t\t,\tdiscountrate: Utils.toCurrency(this.record.getFieldValue('discountrate'))\n\t\t\t\t//@property {String} discountrate_formatted\n\t\t\t,\tdiscountrate_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} discountedsubtotal\n\t\t\t,\tdiscountedsubtotal: Utils.toCurrency(0)\n\t\t\t\t//@property {String} discountedsubtotal_formatted\n\t\t\t,\tdiscountedsubtotal_formatted: Utils.formatCurrency(0)\n\n\t\t\t\t//@property {Number} giftcertapplied\n\t\t\t,\tgiftcertapplied: Utils.toCurrency(this.record.getFieldValue('giftcertapplied'))\n\t\t\t\t//@property {String} giftcertapplied_formatted\n\t\t\t,\tgiftcertapplied_formatted: Utils.formatCurrency(this.record.getFieldValue('giftcertapplied'))\n\n\t\t\t\t//@property {Number} total\n\t\t\t,\ttotal: Utils.toCurrency(this.record.getFieldValue('total'))\n\t\t\t\t//@property {String} total_formatted\n\t\t\t,\ttotal_formatted: Utils.formatCurrency(this.record.getFieldValue('total'))\n\t\t\t};\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method getLines Get the lines (and its item) to the current transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetLines: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Transaction.Model.Get.Line>} lines\n\t\t\tthis.result.lines = {};\n\n\t\t\tvar items_to_preload = []\n\t\t\t,\tamount\n\t\t\t,\tself = this\n\t\t\t,\tline_id;\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('item'); i++)\n\t\t\t{\n\t\t\t\tif (this.record.getLineItemValue('item', 'itemtype', i) === 'Discount' && this.record.getLineItemValue('item', 'discline', i))\n\t\t\t\t{\n\t\t\t\t\tvar discline = this.record.getLineItemValue('item', 'discline', i);\n\n\t\t\t\t\tline_id = self.result.internalid + '_' + discline;\n\t\t\t\t\tamount = Math.abs(parseFloat(this.record.getLineItemValue('item', 'amount', i)));\n\n\t\t\t\t\tthis.result.lines[line_id].discount = (this.result.lines[line_id].discount) ? this.result.lines[line_id].discount + amount : amount;\n\t\t\t\t\tthis.result.lines[line_id].total = this.result.lines[line_id].amount + this.result.lines[line_id].tax_amount - this.result.lines[line_id].discount;\n\t\t\t\t\tthis.result.lines[line_id].discount_name = this.record.getLineItemValue('item', 'item_display', i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar rate = Utils.toCurrency(this.record.getLineItemValue('item', 'rate', i))\n\t\t\t\t\t,\titem_id = this.record.getLineItemValue('item', 'item', i)\n\t\t\t\t\t,\titem_type = this.record.getLineItemValue('item', 'itemtype', i);\n\n\t\t\t\t\tamount = Utils.toCurrency(this.record.getLineItemValue('item', 'amount', i));\n\n\t\t\t\t\tvar\ttax_amount = Utils.toCurrency(this.record.getLineItemValue('item', 'tax1amt', i)) || 0\n\t\t\t\t\t,\ttotal = amount + tax_amount;\n\n\t\t\t\t\tline_id = this.record.getLineItemValue('item', 'id', i);\n\n\t\t\t\t\t//@class Transaction.Model.Get.Line\n\t\t\t\t\tthis.result.lines[line_id] = {\n\t\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\t\tinternalid: line_id\n\t\t\t\t\t\t//@property {Number} quantity\n\t\t\t\t\t,\tquantity: parseInt(this.record.getLineItemValue('item', 'quantity', i), 10)\n\t\t\t\t\t\t//@property {Number} rate\n\t\t\t\t\t,\trate: rate\n\t\t\t\t\t\t//@property {Number} amount\n\t\t\t\t\t,\tamount: amount\n\t\t\t\t\t\t//@property {Number} tax_amount\n\t\t\t\t\t,\ttax_amount: tax_amount\n\t\t\t\t\t\t//@property {Number} tax_rate\n\t\t\t\t\t,\ttax_rate: this.record.getLineItemValue('item', 'taxrate1', i)\n\t\t\t\t\t\t//@property {String} tax_code\n\t\t\t\t\t,\ttax_code: this.record.getLineItemValue('item', 'taxcode_display', i)\n\t\t\t\t\t\t//@property {Boolean} isfulfillable\n\t\t\t\t\t,\tisfulfillable: this.record.getLineItemValue('item', 'fulfillable', i) === 'T'\n\t\t\t\t\t\t//@property {Number} discount\n\t\t\t\t\t,\tdiscount: 0\n\t\t\t\t\t\t//@property {Number} total\n\t\t\t\t\t,\ttotal: total\n\t\t\t\t\t\t//@property {Item} item\n\t\t\t\t\t,\titem: item_id\n\t\t\t\t\t\t//@property {String} type\n\t\t\t\t\t,\ttype: item_type\n\t\t\t\t\t\t//@property {Object} options\n\t\t\t\t\t,\toptions: Utils.getItemOptionsObject(this.record.getLineItemValue('item', 'options', i))\n\t\t\t\t\t\t//@property {String} shipaddress\n\t\t\t\t\t,\tshipaddress: this.record.getLineItemValue('item', 'shipaddress', i) ? this.result.listAddresseByIdTmp[this.record.getLineItemValue('item', 'shipaddress', i)] : null\n\t\t\t\t\t\t//@property {String} shipmethod\n\t\t\t\t\t,\tshipmethod:  this.record.getLineItemValue('item', 'shipmethod', i) || null\n\t\t\t\t\t};\n\n\t\t\t\t\t//@class Transaction.Model.PreLoadItemData\n\t\t\t\t\titems_to_preload[item_id] = {\n\t\t\t\t\t\t//@property {String} id\n\t\t\t\t\t\tid: item_id\n\t\t\t\t\t\t//@property {String} type\n\t\t\t\t\t,\ttype: item_type\n\t\t\t\t\t};\n\t\t\t\t\t//@class Transaction.Model\n\n\t\t\t\t\tself.getExtraLineFields(this.result.lines[line_id], this.record, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar preloaded_items = this.preLoadItems(_.values(items_to_preload));\n\n\t\t\t_.each(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\tline.rate_formatted = Utils.formatCurrency(line.rate);\n\t\t\t\tline.amount_formatted = Utils.formatCurrency(line.amount);\n\t\t\t\tline.tax_amount_formatted = Utils.formatCurrency(line.tax_amount);\n\t\t\t\tline.discount_formatted = Utils.formatCurrency(line.discount);\n\t\t\t\tline.total_formatted = Utils.formatCurrency(line.total);\n\n\t\t\t\tline.item = preloaded_items[line.item] ? preloaded_items[line.item] : { itemid: line.item };\n\t\t\t});\n\n\t\t\t// remove the temporary address list by id\n\t\t\tdelete this.result.listAddresseByIdTmp;\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method preLoadItems Preload Items\n\t\t//@param {Array<Transaction.Model.PreLoadItemData>} items_to_preload\n\t\t//@return {PreloadedItems}\n\t,\tpreLoadItems: function (items_to_preload)\n\t\t{\n\t\t\t//@class PreloadedItems\n\t\t\t//In this class each property is the id of an item and each property's value if the item itself\n\n\t\t\t//@class Transaction.Model\n\n\t\t\treturn this.storeItem ?\n\t\t\t\tthis.loadItemsWithStoreItem(items_to_preload) :\n\t\t\t\tthis.loadItemsWithSuiteScript(items_to_preload);\n\t\t}\n\n\t\t//@method loadItemsWithStoreItem Preload a group of items the StoreItem (Commerce API)\n\t\t//@param {Array<Transaction.Model.PreLoadItemData>} items_to_preload\n\t\t//@return {PreloadedItems}\n\t,\tloadItemsWithStoreItem: function (items_to_preload)\n\t\t{\n\t\t\tvar result = {}\n\t\t\t,\tself = this\n\t\t\t,\titems_to_query = []\n\t\t\t,\tinactive_item = {};\n\n\t\t\t// Preloads info about the item\n\t\t\tthis.storeItem.preloadItems(items_to_preload);\n\n\t\t\t// The API wont bring disabled items so we need to query them directly\n\t\t\t_.each(this.result.lines, function (line)\n\t\t\t{\n\t\t\t\tif (line.item)\n\t\t\t\t{\n\t\t\t\t\tvar item = self.storeItem.get(line.item, line.type);\n\n\t\t\t\t\tif (!item || _.isUndefined(item.itemid))\n\t\t\t\t\t{\n\t\t\t\t\t\titems_to_query.push({id: line.item});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[line.item] = item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinactive_item = this.loadItemsWithSuiteScript(items_to_query);\n\t\t\t_.each(inactive_item, function (key, value)\n\t\t\t{\n\t\t\t\tresult[key] = value;\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\n\t\t//@method loadItemsWithSuiteScript Preload a group of items using SuiteScript\n\t\t//@param {Array<Transaction.Model.PreLoadItemData>} items_to_query\n\t\t//@return {PreloadedItems}\n\t,\tloadItemsWithSuiteScript: function (items_to_query)\n\t\t{\n\t\t\tvar result = {};\n\n\t\t\tif (items_to_query.length > 0)\n\t\t\t{\n\t\t\t\titems_to_query = _.pluck(items_to_query, 'id');\n\n\t\t\t\tvar filters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('entity', null, 'is', nlapiGetUser())\n\t\t\t\t\t,\tnew nlobjSearchFilter('internalid', null, 'is', this.result.internalid)\n\t\t\t\t\t,\tnew nlobjSearchFilter('internalid', 'item', 'anyof', items_to_query)\n\t\t\t\t\t]\n\n\t\t\t\t,\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('internalid', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('type', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('parent', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('displayname', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('storedisplayname', 'item')\n\t\t\t\t\t,\tnew nlobjSearchColumn('itemid', 'item')\n\t\t\t\t\t]\n\n\t\t\t\t,\tinactive_items_search = Application.getAllSearchResults('transaction', filters, columns)\n\t\t\t\t,\tloaded_item;\n\n\t\t\t\t_.each(inactive_items_search, function (item)\n\t\t\t\t{\n\t\t\t\t\tloaded_item = {\n\t\t\t\t\t\tinternalid: item.getValue('internalid', 'item')\n\t\t\t\t\t,\ttype: item.getValue('type', 'item')\n\t\t\t\t\t,\tdisplayname: item.getValue('displayname', 'item')\n\t\t\t\t\t,\tstoredisplayname: item.getValue('storedisplayname', 'item')\n\t\t\t\t\t,\titemid: item.getValue('itemid', 'item')\n\t\t\t\t\t};\n\n\t\t\t\t\tresult[item.getValue('internalid', 'item')] = loaded_item;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t//@method getExtraLineFields Set extra projected field on items when retrieving a single record's lines\n\t\t//@param {Transaction.Model.Get.Line} result Result being generated\n\t\t//@param {nlobjRecord} record Record to extract fields from\n\t\t//@param {Number} i Index of the item in the current record being retrieved\n\t\t//@return {Void} This method does not return anything as it works with the parameters passed in\n\t,\tgetExtraLineFields: function ()\n\t\t{\n\t\t}\n\n\t\t//@method getRecordShippingMethods Get the shipping methods of the current transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordShippingMethods: function ()\n\t\t{\n\t\t\tvar self = this;\n\n\t\t\tif (this.record.getLineItemCount('shipgroup') <= 0)\n\t\t\t{\n\t\t\t\t//@class Transaction.Model.Get.ShipMethod\n\t\t\t\tself.addShippingMethod({\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\tinternalid: this.record.getFieldValue('shipmethod')\n\t\t\t\t\t//@property {String} name\n\t\t\t\t,\tname: this.record.getFieldText('shipmethod')\n\t\t\t\t\t//@property {Number} rate\n\t\t\t\t,\trate: Utils.toCurrency(this.record.getFieldValue('shipping_rate'))\n\t\t\t\t\t//@property {String} rate_formatted\n\t\t\t\t,\trate_formatted: Utils.formatCurrency(this.record.getFieldValue('shipping_rate'))\n\t\t\t\t\t//@property {String} shipcarrier\n\t\t\t\t,\tshipcarrier: this.record.getFieldValue('carrier')\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('shipgroup') ; i++)\n\t\t\t{\n\t\t\t\tself.addShippingMethod({\n\t\t\t\t\tinternalid: this.record.getLineItemValue('shipgroup', 'shippingmethodref', i)\n\t\t \t\t,   name: this.record.getLineItemValue('shipgroup', 'shippingmethod', i)\n\t\t\t\t,   rate: Utils.toCurrency(this.record.getLineItemValue('shipgroup', 'shippingrate', i))\n\t\t\t\t,   rate_formatted: Utils.formatCurrency(this.record.getLineItemValue('shipgroup', 'shippingrate', i))\n\t\t\t\t,   shipcarrier: this.record.getLineItemValue('shipgroup', 'shippingcarrier', i)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {String} shipmethod Id of the selected shipping method\n\t\t\tthis.result.shipmethod = this.record.getFieldValue('shipmethod');\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\n\t,\tgetAdjustments: function (options)\n\t\t{\n\t\t\toptions = options || {};\n\n\t\t\tvar applied_to_transaction = options.appliedToTransaction || [this.result.internalid]\n\t\t\t,\ttypes = options.types || ['CustCred', 'DepAppl', 'CustPymt']\n\t\t\t,\tids = []\n\t\t\t,\tadjustments = {}\n\t\t\t,\tamount_field = this.isMultiCurrency ? 'appliedtoforeignamount' : 'appliedtolinkamount'\n\t\t\t,\tfilters = [\n\t\t\t\t\tnew nlobjSearchFilter('appliedtotransaction', null, 'anyof', applied_to_transaction )\n\t\t\t\t,\tnew nlobjSearchFilter(amount_field, null, 'isnotempty')\n\t\t\t\t,\tnew nlobjSearchFilter('type', null, 'anyof', types)\n\t\t\t\t]\n\t\t\t,\tcolumns = [\n\t\t\t\t\tnew nlobjSearchColumn('total')\n\t\t\t\t,\tnew nlobjSearchColumn('tranid')\n\t\t\t\t,\tnew nlobjSearchColumn('trandate').setSort(true)\n\t\t\t\t,\tnew nlobjSearchColumn('type')\n\t\t\t\t,\tnew nlobjSearchColumn(amount_field)\n\t\t\t\t]\n\t\t\t,\tsearch_results = Application.getAllSearchResults('transaction', filters, columns);\n\n\n\t\t\t_.each(search_results || [], function (payout)\n\t\t\t{\n\t\t\t\tvar internal_id = payout.getId()\n\t\t\t\t,\tduplicated_adjustment = adjustments[internal_id];\n\n\t\t\t\tif (options.paymentMethodInformation)\n\t\t\t\t{\n\t\t\t\t\tids.push(internal_id);\n\t\t\t\t}\n\n\t\t\t\tif (!duplicated_adjustment)\n\t\t\t\t{\n\t\t\t\t\tadjustments[internal_id] = {\n\t\t\t\t\t\t\tinternalid: internal_id\n\t\t\t\t\t\t,\ttranid: payout.getValue('tranid')\n\t\t\t\t\t\t,\trecordtype: payout.getRecordType()\n\t\t\t\t\t\t,\tamount : Utils.toCurrency(payout.getValue(amount_field))\n\t\t\t\t\t\t,\tamount_formatted : Utils.formatCurrency(payout.getValue(amount_field))\n\t\t\t\t\t\t,\ttrandate: payout.getValue('trandate')\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tduplicated_adjustment.amount += Utils.toCurrency(payout.getValue(amount_field));\n\t\t\t\t\tduplicated_adjustment.amount_formatted = Utils.formatCurrency(duplicated_adjustment.amount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (options.paymentMethodInformation && ids.length)\n\t\t\t{\n\t\t\t\tfilters = [\n\t\t\t\t\t\tnew nlobjSearchFilter('mainline', null, 'is', 'T')\n\t\t\t\t\t,\tnew nlobjSearchFilter('internalid', null, 'anyof', ids)\n\t\t\t\t\t,\tnew nlobjSearchFilter('type', null, 'anyof', types)\n\t\t\t\t];\n\t\t\t\tcolumns = [\n\t\t\t\t\t\tnew nlobjSearchColumn('internalid')\n\t\t\t\t\t,\tnew nlobjSearchColumn('type')\n\t\t\t\t\t,\tnew nlobjSearchColumn('ccexpdate')\n\t\t\t\t\t,\tnew nlobjSearchColumn('ccholdername')\n\t\t\t\t\t,\tnew nlobjSearchColumn('ccnumber')\n\t\t\t\t\t,\tnew nlobjSearchColumn('paymentmethod')\n\t\t\t\t\t,\tnew nlobjSearchColumn('tranid')\n\t\t\t\t];\n\n\t\t\t\tsearch_results = Application.getAllSearchResults('transaction', filters, columns);\n\n\t\t\t\t_.each(search_results || [], function (payout)\n\t\t\t\t{\n\t\t\t\t\tvar internal_id = payout.getId()\n\t\t\t\t\t,\tadjustment = adjustments[internal_id]\n\t\t\t\t\t,\tpaymentmethod = {\n\t\t\t\t\t\t\tname: payout.getText('paymentmethod')\n\t\t\t\t\t\t,\tinternalid: payout.getValue('tranid')\n\t\t\t\t\t\t}\n\t\t\t\t\t,\tccnumber = payout.getValue('ccnumber');\n\n\t\t\t\t\tif (ccnumber)\n\t\t\t\t\t{\n\t\t\t\t\t\tpaymentmethod.type = 'creditcard';\n\t\t\t\t\t\t//@property {Transaction.Model.Get.PaymentMethod.CreditCard?} creditcard This value is present only if the type is creditcard\n\t\t\t\t\t\tpaymentmethod.creditcard =\n\t\t\t\t\t\t//@class Transaction.Model.Get.PaymentMethod.CreditCard\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//@property {String} ccnumber\n\t\t\t\t\t\t\tccnumber: ccnumber\n\t\t\t\t\t\t\t//@property {String} ccexpiredate\n\t\t\t\t\t\t,\tccexpiredate: payout.getValue('ccexpdate')\n\t\t\t\t\t\t\t//@property {String} ccname\n\t\t\t\t\t\t,\tccname: payout.getValue('ccholdername')\n\t\t\t\t\t\t\t//@property {Transaction.Model.Get.PaymentMethod.CreditCard.Details} paymentmethod\n\t\t\t\t\t\t,\tpaymentmethod: {\n\t\t\t\t\t\t\t//@class Transaction.Model.Get.PaymentMethod.CreditCard.Details\n\t\t\t\t\t\t\t\t//@property {String} ispaypal\n\t\t\t\t\t\t\t\tispaypal: 'F'\n\t\t\t\t\t\t\t\t//@property {String} name\n\t\t\t\t\t\t\t,\tname: paymentmethod.name\n\t\t\t\t\t\t\t\t//@property {String} creditcard Value: 'T'\n\t\t\t\t\t\t\t,\tcreditcard: 'T'\n\t\t\t\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\t\t\t,\tinternalid: payout.getValue('tranid')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (adjustment)\n\t\t\t\t\t{\n\t\t\t\t\t\tadjustment.paymentmethod = paymentmethod;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.result.adjustments =  _.values(adjustments);\n\t\t}\n\n\t\t//@method getTransactionType\n\t\t//@param {Array} ids\n\t\t// @return {Transaction.Model.List.Result.Record}\n\t,\tgetTransactionType: function (ids)\n\t\t{\n\t\t\tids = _.isArray(ids) ? ids : [ids];\n\n\t\t\tvar results = {}\n\t\t\t,\tfilters = [new nlobjSearchFilter('internalid', null,  'anyof', ids)]\n\t\t\t,\tcolumns = [new nlobjSearchColumn('recordtype')];\n\n\t\t\tif (ids && ids.length)\n\t\t\t{\n\t\t\t\t_.each(Application.getAllSearchResults('transaction', filters, columns) || [], function (record)\n\t\t\t\t{\n\t\t\t\t\tresults[record.getId()] = record.getValue('recordtype');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\t//@method getRecordAddresses Get the list of address of the current transaction\n\t\t//@return {Void} This method does not return anything as it works with the value of this.result and this.record\n\t,\tgetRecordAddresses: function ()\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Address.Model.Attributes>} addresses\n\t\t\tthis.result.addresses = {};\n\t\t\tthis.result.listAddresseByIdTmp ={};\n\n\t\t\tfor (var i = 1; i <= this.record.getLineItemCount('iladdrbook') ; i++)\n\t\t\t{\n\t\t\t\t// Adds all the addresses in the address book\n\t\t\t\tthis.result.listAddresseByIdTmp[this.record.getLineItemValue('iladdrbook', 'iladdrinternalid', i)] = this.addAddress({\n\t\t\t\t\tinternalid: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr', i)\n\t\t\t\t,\tcountry: this.record.getLineItemValue('iladdrbook', 'iladdrshipcountry', i)\n\t\t\t\t,\tstate: this.record.getLineItemValue('iladdrbook', 'iladdrshipstate', i)\n\t\t\t\t,\tcity: this.record.getLineItemValue('iladdrbook', 'iladdrshipcity', i)\n\t\t\t\t,\tzip: this.record.getLineItemValue('iladdrbook', 'iladdrshipzip', i)\n\t\t\t\t,\taddr1: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr1', i)\n\t\t\t\t,\taddr2: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddr2', i)\n\t\t\t\t,\tattention: this.record.getLineItemValue('iladdrbook', 'iladdrshipattention', i)\n\t\t\t\t,\taddressee: this.record.getLineItemValue('iladdrbook', 'iladdrshipaddressee', i)\n\t\t\t\t,\tphone: this.record.getLineItemValue('iladdrbook', 'iladdrshipphone', i)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Adds Shipping Address\n\t\t\t// @property {String} shipaddress Id of the shipping address\n\t\t\tthis.result.shipaddress = this.record.getFieldValue('shipaddress') ? this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('shipaddress')\n\t\t\t,\tcountry: this.record.getFieldValue('shipcountry')\n\t\t\t,\tstate: this.record.getFieldValue('shipstate')\n\t\t\t,\tcity: this.record.getFieldValue('shipcity')\n\t\t\t,\tzip: this.record.getFieldValue('shipzip')\n\t\t\t,\taddr1: this.record.getFieldValue('shipaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('shipaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('shipattention')\n\t\t\t,\taddressee: this.record.getFieldValue('shipaddressee')\n\t\t\t,\tphone:  this.record.getFieldValue('shipphone')\n\t\t\t}) : null;\n\n\t\t\t// Adds Bill Address\n\t\t\t// @property {String} billaddress Id of the billing address\n\t\t\tthis.result.billaddress = this.record.getFieldValue('billaddress') ? this.addAddress({\n\t\t\t\tinternalid: this.record.getFieldValue('billaddress')\n\t\t\t,\tcountry: this.record.getFieldValue('billcountry')\n\t\t\t,\tstate: this.record.getFieldValue('billstate')\n\t\t\t,\tcity: this.record.getFieldValue('billcity')\n\t\t\t,\tzip: this.record.getFieldValue('billzip')\n\t\t\t,\taddr1: this.record.getFieldValue('billaddr1')\n\t\t\t,\taddr2: this.record.getFieldValue('billaddr2')\n\t\t\t,\tattention: this.record.getFieldValue('billattention')\n\t\t\t,\taddressee: this.record.getFieldValue('billaddressee')\n\t\t\t,\tphone: this.record.getFieldValue('billphone')\n\t\t\t}) : null;\n\n\t\t\t//@class Transaction.Model\n\t\t}\n\n\t\t//@method addShippingMethod Concatenated the parameter shipping method into the list of the current result's property shipmethods\n\t\t//@param {Transaction.Model.Get.ShipMethod} shipping_method\n\t\t//@return {Number} The internal id of the added internal id\n\t,\taddShippingMethod: function (shipping_method)\n\t\t{\n\t\t\t//@class Transaction.Model.Get.Result\n\t\t\t//@property {Array<Transaction.Model.Get.ShipMethod>} shipmethods\n\t\t\tthis.result.shipmethods = this.result.shipmethods || {};\n\n\t\t\tif (!this.result.shipmethods[shipping_method.internalid])\n\t\t\t{\n\t\t\t\tthis.result.shipmethods[shipping_method.internalid] = shipping_method;\n\t\t\t}\n\t\t\treturn shipping_method.internalid;\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method addAddress Auxiliary method to generate address ids from its properties\n\t\t//@param {Address.Model.Attributes} address\n\t\t//@return {String} address id\n\t,\taddAddress: function (address)\n\t\t{\n\t\t\tthis.result.addresses = this.result.addresses || {};\n\n\t\t\taddress.fullname = (address.attention) ? address.attention : address.addressee;\n\t\t\taddress.company = (address.attention) ? address.addressee : null;\n\n\t\t\tdelete address.attention;\n\t\t\tdelete address.addressee;\n\n\t\t\taddress.internalid = this.getAddressInternalId(address);\n\n\t\t\t// TODO: Santi: Remove AddressModel.isValid condition after merge with kronos-quotes.\n\t\t\tif (AddressModel && AddressModel.isValid)\n\t\t\t{\n\t\t\t\taddress.isvalid = AddressModel.isValid(address) ? 'T' : 'F';\n\t\t\t}\n\n\t\t\tif (!this.result.addresses[address.internalid])\n\t\t\t{\n\t\t\t\tthis.result.addresses[address.internalid] = address;\n\t\t\t}\n\n\t\t\treturn address.internalid;\n\t\t}\n\n\t\t//@method getAddressInternalId Internal method used to generate the internal id of an address\n\t\t//@param {Address.Model.Attributes} address\n\t\t//@return {String}\n\t,\tgetAddressInternalId: function (address)\n\t\t{\n\t\t\tvar address_internalid =\t(address.country || '')  + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.state || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.city || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.zip || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.addr1 || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.addr2 || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.fullname || '') + '-' +\n\t\t\t\t\t\t\t\t\t\t(address.company || '');\n\n\t\t\treturn address_internalid.replace(/\\s/g, '-');\n\t\t}\n\n\t\t//@method update Updates a transaction\n\t\t//@param {String} record_type\n\t\t//@param {Number} id\n\t\t//@param {Transaction.Model.UpdateAttributes} data_model\n\t\t//@return {Void}\n\t,\tupdate: function (record_type, id, data_model)\n\t\t{\n\t\t\tif (record_type && id)\n\t\t\t{\n\t\t\t\tthis.recordId = id;\n\t\t\t\tthis.data = data_model;\n\n\t\t\t\tthis.record = this.getTransactionRecord(record_type, id);\n\t\t\t\t//@property {Transaction.Model.Get.Result} currentRecord This property is used so when performing any update\n\t\t\t\t//operation you can know what is the current state\n\t\t\t\t//This property is only present when performing an update operation\n\t\t\t\tthis.currentRecord = this.get(record_type, id);\n\n\t\t\t\tthis.setPaymentMethod();\n\t\t\t\tthis.setLines();\n\t\t\t\tthis.setAddress('ship', this.data.shipaddress, 'billaddress');\n\t\t\t\tthis.setAddress('bill', this.data.billaddress, 'shipaddress');\n\t\t\t\tthis.setMemo();\n\t\t\t}\n\t\t}\n\n\t\t//@method setMemo Sets the memo attribute into the current transaction\n\t\t//This method does not use any parameters as it use this.data and this.record\n\t\t//@return {Void}\n\t,\tsetMemo: function ()\n\t\t{\n\t\t\tthis.record.setFieldValue('memo', null);\n\n\t\t\tif (this.data.memo)\n\t\t\t{\n\t\t\t\tthis.record.setFieldValue('memo', this.data.memo);\n\t\t\t}\n\t\t}\n\n\t\t//@method setPaymentMethod Update in the current record the set payment method\n\t\t//This method does not use any parameters as it use this.data and this.record\n\t\t//@return {Void}\n\t,\tsetPaymentMethod: function ()\n\t\t{\n\t\t\tvar self = this\n\t\t\t,\tmethod_name = '';\n\n\t\t\tthis.removePaymentMethod();\n\n\t\t\tif (this.data.paymentmethods)\n\t\t\t{\n\t\t\t\t//@class Transaction.Model.UpdateAttributes\n\t\t\t\t//@property {Array<Transaction.Model.Get.PaymentMethod>} paymentmethods\n\t\t\t\t_.each(this.data.paymentmethods, function (payment_method)\n\t\t\t\t{\n\t\t\t\t\tmethod_name = 'setPaymentMethod' + payment_method.type.toUpperCase();\n\t\t\t\t\tif (_.isFunction(self[method_name]))\n\t\t\t\t\t{\n\t\t\t\t\t\tself[method_name](payment_method);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method setAddress Set the shipping address for the current transaction when performing an update\n\t\t//This method does not accept any parameter as it used this.data and this.record\n\t\t//@param {String} prefix Possible values are 'bill' or 'ship' depending on the address, if it is removing billing address or shipping address\n\t\t//@param {String} address_id\n\t\t//@param {String} other_address_name Name of the other address to compare in case of address creation and\n\t\t//@return {Void}\n\t,\tsetAddress: function (prefix, address_id, other_address_name)\n\t\t{\n\t\t\tthis.removeAddress(prefix);\n\n\t\t\t//console.log('SETTING ADDRESS ' +  prefix);\n\t\t\t//console.log('Address id: ' + address_id);\n\n\t\t\tif (address_id)\n\t\t\t{\n\t\t\t\tif (!this.hasCurrentCustomerAddress(address_id))\n\t\t\t\t{\n\t\t\t\t\tvar old_address_model = _.find(this.data.addresses, {internalid: address_id})\n\t\t\t\t\t,\told_address_id = address_id;\n\n\t\t\t\t\taddress_id = this.createAddress(old_address_model);\n\n\t\t\t\t\tthis.data.addresses = _.reject(this.data.addresses, function (address)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn address.internalid === old_address_id;\n\t\t\t\t\t\t});\n\n\t\t\t\t\told_address_model.internalid = address_id;\n\t\t\t\t\tthis.data.addresses.push(old_address_model);\n\n\t\t\t\t\tif (other_address_name && this.data[other_address_name] === old_address_id)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.data[other_address_name] = address_id;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.record.setFieldValue(prefix + 'addresslist', address_id);\n\t\t\t}\n\t\t}\n\n\t\t//@method hasCurrentCustomerAddress Indicate if certain address id exist in the current user or not\n\t\t//@param {String} address_id\n\t\t//@return {Boolean}\n\t,\thasCurrentCustomerAddress: function (address_id)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn AddressModel ? !!AddressModel.get(address_id) : true;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t//@method createAddress Creates an address for the current user\n\t\t//@param {Address.Data.Model} address_model\n\t\t//@return {String} internal id of the new created address\n\t,\tcreateAddress: function (address_model)\n\t\t{\n\t\t\treturn AddressModel && AddressModel.create(_.clone(address_model));\n\t\t}\n\n\t\t//@method removeAddress Auxiliary method used when updated a transaction to remove selected address\n\t\t//This method does not accept any parameter as it used this.data and this.record\n\t\t//@param {String} prefix Possible values are 'bill' or 'ship' depending on the address, if it is removing billing address or shipping address\n\t\t//@return {Void}\n\t,\tremoveAddress: function (prefix)\n\t\t{\n\t\t\t// this.record.setFieldValue(address_field, null);\n\t\t\tvar empty_value = \"\";\n\n\t\t\tthis.record.setFieldValue(prefix + 'country', empty_value);\n\n\t\t\tthis.record.setFieldValue(prefix + 'addresslist', empty_value);\n\n\t\t\tthis.record.setFieldValue(prefix + 'address', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'state', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'city', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'zip', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'addr1', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'addr2', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'attention', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'addressee', empty_value);\n\t\t\tthis.record.setFieldValue(prefix + 'phone', empty_value);\n\t\t}\n\n\t\t//@method setLines Set the line of a transaction when performing an update\n\t\t//This method does not accept any parameter as it used this.data and this.record\n\t\t//@return {Void}\n\t,\tsetLines: function ()\n\t\t{\n\t\t\tthis.removeAllItemLines();\n\n\t\t\tif (this.data.lines)\n\t\t\t{\n\t\t\t\tvar self = this;\n\n\t\t\t\t//@class Transaction.Model.UpdateAttributes\n\t\t\t\t//@property {Array<Transaction.Model.set.Line>} lines\n\t\t\t\t_.each(this.data.lines, function (line)\n\t\t\t\t{\n\t\t\t\t\tself.record.selectNewLineItem('item');\n\t\t\t\t\tself.record.setCurrentLineItemValue('item', 'item', line.item.internalid);\n\t\t\t\t\tself.record.setCurrentLineItemValue('item', 'quantity', line.quantity);\n\t\t\t\t\tself.record.setCurrentLineItemValue('item', 'itemtype', line.item.type);\n\n\t\t\t\t\tself.record.setCurrentLineItemValue('item', 'id', line.internalid);\n\n\t\t\t\t\t//Set Line Options\n\t\t\t\t\t_.each(line.options, function (option_value, option_id)\n\t\t\t\t\t{\n\t\t\t\t\t\tself.record.setCurrentLineItemValue('item', option_id, option_value);\n\t\t\t\t\t});\n\n\t\t\t\t\tself.setLinesAddUpdateLine(line, self.record);\n\n\t\t\t\t\tself.record.commitLineItem('item');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//@class Transaction.Model\n\t\t}\n\n\t\t//@method setLinesRemoveLines Extension method used to apply extra logic when removing lines from the current transaction\n\t\t//@param {nlobjRecord} current_transaction\n\t\t//@return {Void}\n\t,\tsetLinesRemoveLines: function ()\n\t\t{\n\t\t}\n\n\t\t//@method setLinesUpdateLines Extension method used to set extra values into line when they are being added/updated into the current transaction\n\t\t//@param {Transaction.Model.set.Line} line\n\t\t//@param {nlobjRecord} current_transaction\n\t\t//@return {Void}\n\t,\tsetLinesAddUpdateLine: function ()\n\t\t{\n\t\t}\n\n\t\t//@method removeAllItemLines Auxiliary method used to remove all lines of the current transaction\n\t\t//This method does not accept any parameter as it used this.data and this.record\n\t\t//@return {Void}\n\t,\tremoveAllItemLines: function ()\n\t\t{\n\t\t\tvar items_count = this.record.getLineItemCount('item');\n\n\t\t\tthis.setLinesRemoveLines(this.record);\n\n\t\t\tfor (var i = 1; i <= items_count; i++)\n\t\t\t{\n\t\t\t\tthis.record.removeLineItem('item', i);\n\t\t\t}\n\t\t}\n\n\t\t//@method setPaymentMethodINVOICE Internal method to set an invoice payment method into the current record.\n\t\t//Used to update the current record\n\t\t//@param {Transaction.Model.Get.PaymentMethod} payment_method\n\t\t//@return {Void}\n\t,\tsetPaymentMethodINVOICE: function (payment_method)\n\t\t{\n\t\t\tthis.record.setFieldValue('terms', payment_method.terms.internalid);\n\t\t\tthis.record.setFieldValue('otherrefnum', payment_method.purchasenumber);\n\t\t}\n\n\t\t//@method setPaymentMethodCREDITCARD Internal method to set a credit card payment method into the current record.\n\t\t//Used to update the current record\n\t\t//@param {Transaction.Model.Get.PaymentMethod} payment_method\n\t\t//@return {Void}\n\t\t//WARNING! We throw an error in case our CreditCard hasn't name. This is a workaround because this should come from backend.\n\t\t//Please remove the conditional when issue #368300 is fixed.\n\t,\tsetPaymentMethodCREDITCARD: function (payment_method)\n\t\t{\n\t\t\tif (!payment_method.creditcard.ccname)\n\t\t\t{\n\t\t\t\tthrow {\n\t\t\t\t\t// @property {Number} status\n\t\t\t\t\tstatus: 500\n\t\t\t\t\t// @property {String} code\n\t\t\t\t,\tcode: 'ERR_WS_INVALID_PAYMENT'\n\t\t\t\t\t// @property {String} message\n\t\t\t\t,\tmessage: 'Please enter your name as it appears on your card.'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.record.setFieldValue('creditcard', payment_method.creditcard.internalid);\n\t\t\tthis.record.setFieldValue('ccsecuritycode', payment_method.creditcard.ccsecuritycode);\n\t\t}\n\n\t\t//@method removePaymentMethod Removes the specified payment method from the current record\n\t\t//@return {Void}\n\t,\tremovePaymentMethod: function ()\n\t\t{\n\t\t\tthis.record.setFieldValue('paymentterms', null);\n\t\t \tthis.record.setFieldValue('paymentmethod', null);\n\t\t\tthis.record.setFieldValue('thankyouurl', null);\n\t\t\tthis.record.setFieldValue('errorurl', null);\n\n\t\t\tthis.record.setFieldValue('terms', null);\n\t\t\tthis.record.setFieldValue('otherrefnum', null);\n\t\t\tthis.record.setFieldValue('creditcard', null);\n\t\t}\n\n\t\t//@method preSubmitRecord Overridable method used to execute any logic before submit a transaction record\n\t\t//@return {Void} This method does not return anything as it works with the value of this.record\n\t,\tpreSubmitRecord: function () { }\n\n\t\t//@method postSubmitRecord Overridable method used to execute any logic before submit a transaction record\n\t\t//@param {Transaction.Model.Confirmation} confirmation_result\n\t\t//@return {Transaction.Model.Confirmation}\n\t,\tpostSubmitRecord: function (confirmation_result)\n\t\t{\n\t\t\treturn confirmation_result;\n\t\t}\n\n\t\t//@method submit Saves the current record\n\t\t//@return {Transaction.Model.Confirmation}\n\t,\tsubmit: function ()\n\t\t{\n\t\t\tif (!this.record)\n\t\t\t{\n\t\t\t\tthrow new Error ('Please load a record before calling Transaction.Model.Submit method.');\n\t\t\t}\n\n\t\t\tthis.preSubmitRecord();\n\n\t\t\tvar new_record_id = nlapiSubmitRecord(this.record)\n\t\t\t//@class Transaction.Model.Confirmation\n\t\t\t,\tresult = {\n\t\t\t\t\t//@property {String} internalid\n\t\t\t\t\tinternalid: new_record_id\n\t\t\t\t};\n\n\t\t\treturn this.postSubmitRecord(result);\n\t\t\t// @class Transaction.Model\n\t\t}\n\n\t\t//@method preList Overridable method used to execute any logic before list() executes\n\t\t//@return {Void}\n\t,\tpreList: function () {}\n\n\t\t//@method postList Overridable method used to execute any logic after list() executes\n\t\t//@return {Void}\n\t,\tpostList: function () {}\n\n\t\t//@method preGet Overridable method used to execute any logic before get() executes\n\t\t//@return {Void}\n\t,\tpreGet: function () {}\n\n\t\t//@method postGet Overridable method used to execute any logic after get() executes\n\t\t//@return {Void}\n\t,\tpostGet: function () {}\n\n\t});\n});\n\n//@class Transaction.Model.List.Result\n//@property {Number} totalRecordsFound\n//@property {Number} page\n//@property {Arra<Transaction.Model.List.Result.Record>} records\n\n//@class Transaction.Model.List.Parameters\n//@property {Number?} from Date in number of milliseconds\n//@property {Number?} to Date in number of milliseconds\n//@property {String?} createdfrom Value used to filter the list record created from\n//@property {String?} internalid Value used to filter the list record, this string contains a list of transaction internal id joined by ','\n//@property {String?} types In case of being specified, this string contains a list of transaction types joined by ','\n//@property {String?} sort In case of being specified, this string contains a list of column names joined by ',' used to sort the final result\n//@property {String?} filter Generic filter value\n\n//@class Transaction.Model.set.Line\n//@property {Number} quantity\n//@property {String} internalid\n//@property {Object} options This object is used like a dictionary where each property indicate the option name and the value of the property is the property value\n//@property {Item} item When updated or creating a transaction only the type and id are mandatory the rest of the field of this class are optional\n\n//@filename {Foo} fileName ./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js\n\n// Transaction.ServiceController.js\n// ----------------\n// Service to list transactions\ndefine(\n\t'Transaction.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'Transaction.Model'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tTransactionModel\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class Transaction.ServiceController List transactions\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t// @property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'Transaction.ServiceController'\n\n\t\t\t// @property {Service.ValidationOptions} options. All the required validation, permissions, etc.\n\t\t\t// The values in this object are the validation needed for the current service.\n\t\t\t// Can have values for all the request methods ('common' values) and specific for each one.\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method get The call to Transaction.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {Transaction.Model.Get.Result || Transaction.Model.List.Result}\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tvar id = this.request.getParameter('internalid')\n\t\t\t,\trecord_type = this.request.getParameter('recordtype');\n\n\t\t\t\tif (id && record_type)\n\t\t\t\t{\n\t\t\t\t\treturn TransactionModel.get(record_type, id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn TransactionModel.list(\n\t\t\t\t\t{\n\t\t\t\t\t\tfilter: this.request.getParameter('filter')\n\t\t\t\t\t,\torder: this.request.getParameter('order')\n\t\t\t\t\t,\tsort: this.request.getParameter('sort')\n\t\t\t\t\t,\tfrom: this.request.getParameter('from')\n\t\t\t\t\t,\tto: this.request.getParameter('to')\n\t\t\t\t\t,\tpage: this.request.getParameter('page') || 1\n\t\t\t\t\t,\ttypes: this.request.getParameter('types')\n\t\t\t\t\t,\tcreatedfrom: this.request.getParameter('createdfrom')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.Model.js\n\n// TransactionHistory.Model.js\n// ----------------\n//\ndefine(\n\t'TransactionHistory.Model'\n,\t[\n\t\t'SC.Model'\n\t,\t'Application'\n\t,\t'Utils'\n\t,\t'Transaction.Model'\n\t]\n,\tfunction (\n\t\tSCModel\n\t,\tApplication\n\t,\tUtils\n\t,\tTransaction\n\t)\n{\n\t'use strict';\n\n\treturn Transaction.extend({\n\t\tsetExtraListFilters: function ()\n\t\t{\t\n\n\t\t\tthis.filters.types_operator = 'and';\n\t\t\tthis.filters.types = ['type', 'anyof',  this.data.filter.split(',')];\n\n\t\t}\n\t});\n});\n\n//@filename {Foo} fileName ./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js\n\n// TransactionHistory.ServiceController.js\n// ----------------\n// Service to list transactions\ndefine(\n\t'TransactionHistory.ServiceController'\n,\t[\n\t\t'ServiceController'\n\t,\t'TransactionHistory.Model'\n\t,\t'Application'\n\t]\n,\tfunction(\n\t\tServiceController\n\t,\tTransactionHistoryModel\n\t,\tApplication\n\t)\n\t{\n\t\t'use strict';\n\n\t\t// @class TransactionHistory.ServiceController List transactions\n\t\t// @extend ServiceController\n\t\treturn ServiceController.extend({\n\n\t\t\t//@property {String} name Mandatory for all ssp-libraries model\n\t\t\tname: 'TransactionHistory.ServiceController'\n\n\t\t,\toptions: {\n\t\t\t\tcommon: {\n\t\t\t\t\trequireLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// @method _validatePermission Validate permissions of this specific Service Controller. We use this function as an exception here,\n\t\t\t// because the validation conditions are particular and not repeated in other services.\n\t\t\t// @return {Void} If the validation fails, we throw an error\n\t\t,\t_validatePermission: function ()\n\t\t\t{\n\t\t\t\tvar permissions = Application.getPermissions().transactions;\n\n\t\t\t\tif (!(permissions.tranFind \t\t\t> 0 &&\n\t\t\t\t\t(permissions.tranCustInvc \t\t> 0 ||\n\t\t\t\t\tpermissions.tranCustCred\t \t> 0 ||\n\t\t\t\t\tpermissions.tranCustPymt \t\t> 0 ||\n\t\t\t\t\tpermissions.tranCustDep \t\t> 0 ||\n\t\t\t\t\tpermissions.tranDepAppl \t\t> 0)))\n\t\t\t\t{\n\t\t\t\t\tthrow forbiddenError;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @method get The call to TransactionHistory.Service.ss with http method 'get' is managed by this function\n\t\t\t// @return {TransactionHistoryModel.list} A list featuring the transaction history\n\t\t,\tget: function()\n\t\t\t{\n\t\t\t\tthis._validatePermission();\n\n\t\t\t\treturn TransactionHistoryModel.list(\n\t\t\t\t\t{\n\t\t\t\t\t\tfilter: this.request.getParameter('filter')\n\t\t\t\t\t,\torder: \tthis.request.getParameter('order')\n\t\t\t\t\t,\tsort: \tthis.request.getParameter('sort')\n\t\t\t\t\t,\tfrom: \tthis.request.getParameter('from')\n\t\t\t\t\t,\tto: \tthis.request.getParameter('to')\n\t\t\t\t\t,\tpage: \tthis.request.getParameter('page') || 1\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n);\n\n//@filename {Foo} fileName ./Modules/third_parties/almond@0.3.0/almond.js\n\n/**\n * @license almond 0.3.0 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\n\n//@filename {Foo} fileName ./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.js\n\n// Backbone.Validation v0.9.1\n//\n// Copyright (c) 2011-2014 Thomas Pedersen\n// Distributed under MIT License\n//\n// Documentation and full license available at:\n// http://thedersen.com/projects/backbone-validation\nBackbone.Validation = (function(_){\n  'use strict';\n\n  // Default options\n  // ---------------\n\n  var defaultOptions = {\n    forceUpdate: false,\n    selector: 'name',\n    labelFormatter: 'sentenceCase',\n    valid: Function.prototype,\n    invalid: Function.prototype\n  };\n\n\n  // Helper functions\n  // ----------------\n\n  // Formatting functions used for formatting error messages\n  var formatFunctions = {\n    // Uses the configured label formatter to format the attribute name\n    // to make it more readable for the user\n    formatLabel: function(attrName, model) {\n      return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n    },\n\n    // Replaces nummeric placeholders like {0} in a string with arguments\n    // passed to the function\n    format: function() {\n      var args = Array.prototype.slice.call(arguments),\n          text = args.shift();\n      return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n        return typeof args[number] !== 'undefined' ? args[number] : match;\n      });\n    }\n  };\n\n  // Flattens an object\n  // eg:\n  //\n  //     var o = {\n  //       address: {\n  //         street: 'Street',\n  //         zip: 1234\n  //       }\n  //     };\n  //\n  // becomes:\n  //\n  //     var o = {\n  //       'address.street': 'Street',\n  //       'address.zip': 1234\n  //     };\n  var flatten = function (obj, into, prefix) {\n    into = into || {};\n    prefix = prefix || '';\n\n    _.each(obj, function(val, key) {\n      if(obj.hasOwnProperty(key)) {\n        if (val && typeof val === 'object' && !(\n          val instanceof Array ||\n          val instanceof Date ||\n          val instanceof RegExp ||\n          val instanceof Backbone.Model ||\n          val instanceof Backbone.Collection)\n        ) {\n          flatten(val, into, prefix + key + '.');\n        }\n        else {\n          into[prefix + key] = val;\n        }\n      }\n    });\n\n    return into;\n  };\n\n  // Validation\n  // ----------\n\n  var Validation = (function(){\n\n    // Returns an object with undefined properties for all\n    // attributes on the model that has defined one or more\n    // validation rules.\n    var getValidatedAttrs = function(model) {\n      return _.reduce(_.keys(_.result(model, 'validation') || {}), function(memo, key) {\n        memo[key] = void 0;\n        return memo;\n      }, {});\n    };\n\n    // Looks on the model for validations for a specified\n    // attribute. Returns an array of any validators defined,\n    // or an empty array if none is defined.\n    var getValidators = function(model, attr) {\n      var attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\n\n      // If the validator is a function or a string, wrap it in a function validator\n      if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n        attrValidationSet = {\n          fn: attrValidationSet\n        };\n      }\n\n      // Stick the validator object into an array\n      if(!_.isArray(attrValidationSet)) {\n        attrValidationSet = [attrValidationSet];\n      }\n\n      // Reduces the array of validators into a new array with objects\n      // with a validation method to call, the value to validate against\n      // and the specified error message, if any\n      return _.reduce(attrValidationSet, function(memo, attrValidation) {\n        _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n          memo.push({\n            fn: defaultValidators[validator],\n            val: attrValidation[validator],\n            msg: attrValidation.msg\n          });\n        });\n        return memo;\n      }, []);\n    };\n\n    // Validates an attribute against all validators defined\n    // for that attribute. If one or more errors are found,\n    // the first error message is returned.\n    // If the attribute is valid, an empty string is returned.\n    var validateAttr = function(model, attr, value, computed) {\n      // Reduces the array of validators to an error message by\n      // applying all the validators and returning the first error\n      // message, if any.\n      return _.reduce(getValidators(model, attr), function(memo, validator){\n        // Pass the format functions plus the default\n        // validators as the context to the validator\n        var ctx = _.extend({}, formatFunctions, defaultValidators),\n            result = validator.fn.call(ctx, value, attr, validator.val, model, computed);\n\n        if(result === false || memo === false) {\n          return false;\n        }\n        if (result && !memo) {\n          return _.result(validator, 'msg') || result;\n        }\n        return memo;\n      }, '');\n    };\n\n    // Loops through the model's attributes and validates them all.\n    // Returns and object containing names of invalid attributes\n    // as well as error messages.\n    var validateModel = function(model, attrs) {\n      var error,\n          invalidAttrs = {},\n          isValid = true,\n          computed = _.clone(attrs),\n          flattened = flatten(attrs);\n\n      _.each(flattened, function(val, attr) {\n        error = validateAttr(model, attr, val, computed);\n        if (error) {\n          invalidAttrs[attr] = error;\n          isValid = false;\n        }\n      });\n\n      return {\n        invalidAttrs: invalidAttrs,\n        isValid: isValid\n      };\n    };\n\n    // Contains the methods that are mixed in on the model when binding\n    var mixin = function(view, options) {\n      return {\n\n        // Check whether or not a value, or a hash of values\n        // passes validation without updating the model\n        preValidate: function(attr, value) {\n          var self = this,\n              result = {},\n              error;\n\n          if(_.isObject(attr)){\n            _.each(attr, function(value, key) {\n              error = self.preValidate(key, value);\n              if(error){\n                result[key] = error;\n              }\n            });\n\n            return _.isEmpty(result) ? undefined : result;\n          }\n          else {\n            return validateAttr(this, attr, value, _.extend({}, this.attributes));\n          }\n        },\n\n        // Check to see if an attribute, an array of attributes or the\n        // entire model is valid. Passing true will force a validation\n        // of the model.\n        isValid: function(option) {\n          var flattened = flatten(this.attributes);\n\n          if(_.isString(option)){\n            return !validateAttr(this, option, flattened[option], _.extend({}, this.attributes));\n          }\n          if(_.isArray(option)){\n            return _.reduce(option, function(memo, attr) {\n              return memo && !validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n            }, true, this);\n          }\n          if(option === true) {\n            this.validate();\n          }\n          return this.validation ? this._isValid : true;\n        },\n\n        // This is called by Backbone when it needs to perform validation.\n        // You can call it manually without any parameters to validate the\n        // entire model.\n        validate: function(attrs, setOptions){\n          var model = this,\n              validateAll = !attrs,\n              opt = _.extend({}, options, setOptions),\n              validatedAttrs = getValidatedAttrs(model),\n              allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs),\n              changedAttrs = flatten(attrs || allAttrs),\n\n              result = validateModel(model, allAttrs);\n\n          model._isValid = result.isValid;\n\n          // After validation is performed, loop through all validated attributes\n          // and call the valid callbacks so the view is updated.\n          _.each(validatedAttrs, function(val, attr){\n            var invalid = result.invalidAttrs.hasOwnProperty(attr);\n            if(!invalid){\n              opt.valid(view, attr, opt.selector);\n            }\n          });\n\n          // After validation is performed, loop through all validated and changed attributes\n          // and call the invalid callback so the view is updated.\n          _.each(validatedAttrs, function(val, attr){\n            var invalid = result.invalidAttrs.hasOwnProperty(attr),\n                changed = changedAttrs.hasOwnProperty(attr);\n\n            if(invalid && (changed || validateAll)){\n              opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n            }\n          });\n\n          // Trigger validated events.\n          // Need to defer this so the model is actually updated before\n          // the event is triggered.\n          _.defer(function() {\n            model.trigger('validated', model._isValid, model, result.invalidAttrs);\n            model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n          });\n\n          // Return any error messages to Backbone, unless the forceUpdate flag is set.\n          // Then we do not return anything and fools Backbone to believe the validation was\n          // a success. That way Backbone will update the model regardless.\n          if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\n            return result.invalidAttrs;\n          }\n        }\n      };\n    };\n\n    // Helper to mix in validation on a model\n    var bindModel = function(view, model, options) {\n      _.extend(model, mixin(view, options));\n    };\n\n    // Removes the methods added to a model\n    var unbindModel = function(model) {\n      delete model.validate;\n      delete model.preValidate;\n      delete model.isValid;\n    };\n\n    // Mix in validation on a model whenever a model is\n    // added to a collection\n    var collectionAdd = function(model) {\n      bindModel(this.view, model, this.options);\n    };\n\n    // Remove validation from a model whenever a model is\n    // removed from a collection\n    var collectionRemove = function(model) {\n      unbindModel(model);\n    };\n\n    // Returns the public methods on Backbone.Validation\n    return {\n\n      // Current version of the library\n      version: '0.9.1',\n\n      // Called to configure the default options\n      configure: function(options) {\n        _.extend(defaultOptions, options);\n      },\n\n      // Hooks up validation on a view with a model\n      // or collection\n      bind: function(view, options) {\n        options = _.extend({}, defaultOptions, defaultCallbacks, options);\n\n        var model = options.model || view.model,\n            collection = options.collection || view.collection;\n\n        if(typeof model === 'undefined' && typeof collection === 'undefined'){\n          throw 'Before you execute the binding your view must have a model or a collection.\\n' +\n                'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';\n        }\n\n        if(model) {\n          bindModel(view, model, options);\n        }\n        else if(collection) {\n          collection.each(function(model){\n            bindModel(view, model, options);\n          });\n          collection.bind('add', collectionAdd, {view: view, options: options});\n          collection.bind('remove', collectionRemove);\n        }\n      },\n\n      // Removes validation from a view with a model\n      // or collection\n      unbind: function(view, options) {\n        options = _.extend({}, options);\n        var model = options.model || view.model,\n            collection = options.collection || view.collection;\n\n        if(model) {\n          unbindModel(model);\n        }\n        else if(collection) {\n          collection.each(function(model){\n            unbindModel(model);\n          });\n          collection.unbind('add', collectionAdd);\n          collection.unbind('remove', collectionRemove);\n        }\n      },\n\n      // Used to extend the Backbone.Model.prototype\n      // with validation\n      mixin: mixin(null, defaultOptions)\n    };\n  }());\n\n\n  // Callbacks\n  // ---------\n\n  var defaultCallbacks = Validation.callbacks = {\n\n    // Gets called when a previously invalid field in the\n    // view becomes valid. Removes any error message.\n    // Should be overridden with custom functionality.\n    valid: function(view, attr, selector) {\n      view.$('[' + selector + '~=\"' + attr + '\"]')\n          .removeClass('invalid')\n          .removeAttr('data-error');\n    },\n\n    // Gets called when a field in the view becomes invalid.\n    // Adds a error message.\n    // Should be overridden with custom functionality.\n    invalid: function(view, attr, error, selector) {\n      view.$('[' + selector + '~=\"' + attr + '\"]')\n          .addClass('invalid')\n          .attr('data-error', error);\n    }\n  };\n\n\n  // Patterns\n  // --------\n\n  var defaultPatterns = Validation.patterns = {\n    // Matches any digit(s) (i.e. 0-9)\n    digits: /^\\d+$/,\n\n    // Matches any number (e.g. 100.000)\n    number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n\n    // Matches a valid email address (e.g. mail@example.com)\n    email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n\n    // Same as email but is more restrictive and matches the same emails as the Netsuite backend UI\n    // Source: https://system.netsuite.com/javascript/NLUtil.jsp__NS_VER=2014.1.0&minver=154&locale=en_US.nlqs\n    //        (Search for NLValidationUtil_SIMPLE_EMAIL_PATTERN)\n    netsuiteEmail: /^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@(?:[a-z0-9]+(?:-+[a-z0-9]+)*\\.)+(?:zw|zone|zm|za|yt|yokohama|ye|yandex|yachts|xyz|xxx|xn--zfr164b|xn--ygbi2ammx|xn--yfro4i67o|xn--xkc2dl3a5ee0h|xn--xkc2al3hye2a|xn--wgbl6a|xn--wgbh1c|xn--unup4y|xn--ses554g|xn--s9brj9c|xn--rhqv96g|xn--q9jyb4c|xn--pgbs0dh|xn--p1ai|xn--ogbpf8fl|xn--o3cw4h|xn--nqv7fs00ema|xn--nqv7f|xn--ngbc5azd|xn--mgbx4cd0ab|xn--mgberp4a5d4ar|xn--mgbc0a9azcg|xn--mgbbh1a71e|xn--mgbayh7gpa|xn--mgbab2bd|xn--mgbaam7a8h|xn--mgba3a4f16a|xn--mgb9awbf|xn--lgbbat1ad8j|xn--l1acc|xn--kput3i|xn--kpry57d|xn--kprw13d|xn--j6w193g|xn--j1amh|xn--io0a7i|xn--i1b6b1a6a2e|xn--h2brj9c|xn--gecrj9c|xn--fzc2c9e2c|xn--fpcrj9c3d|xn--fiqz9s|xn--fiqs8s|xn--fiq64b|xn--fiq228c5hs|xn--d1acj3b|xn--czru2d|xn--czr694b|xn--clchc0ea0b2g2a9gcd|xn--cg4bki|xn--c1avg|xn--90a3ac|xn--80aswg|xn--80asehdb|xn--80ao21a|xn--80adxhks|xn--6qq986b3xl|xn--6frz82g|xn--55qx5d|xn--55qw42g|xn--4gbrim|xn--45brj9c|xn--3e0b707e|xn--3ds443g|xn--3bst00m|wtf|wtc|ws|works|williamhill|wiki|wien|whoswho|wf|wed|website|webcam|watch|wang|vu|voyage|voto|voting|vote|vodka|vn|vlaanderen|vision|villas|viajes|vi|vg|vet|versicherung|ventures|vegas|ve|vc|vacations|va|uz|uy|us|uno|university|uk|ug|ua|tz|tw|tv|tt|travel|training|trade|tr|tp|toys|town|top|tools|tokyo|today|to|tn|tm|tl|tk|tj|tirol|tips|tienda|th|tg|tf|tel|technology|td|tc|tax|tattoo|sz|systems|sy|sx|sv|suzuki|surgery|surf|support|supply|supplies|su|st|sr|spiegel|space|soy|solutions|solar|sohu|software|social|so|sn|sm|sl|sk|sj|singles|si|shoes|shiksha|sh|sg|sexy|services|se|sd|scot|schule|schmidt|scb|sc|sb|saarland|sa|ryukyu|rw|ruhr|ru|rs|rodeo|rocks|ro|rio|rich|reviews|rest|republican|report|repair|rentals|ren|reisen|reise|rehab|red|recipes|realtor|re|quebec|qpon|qa|py|pw|pub|pt|ps|properties|productions|pro|press|praxi|pr|post|pn|pm|plumbing|place|pl|pk|pink|pictures|pics|physio|photos|photography|photo|ph|pg|pf|pe|parts|partners|paris|pa|ovh|organic|org|onl|ong|om|okinawa|nz|nyc|nu|nrw|nra|nr|np|no|nl|ninja|ni|nhk|ngo|ng|nf|neustar|net|ne|nc|navy|name|nagoya|na|mz|my|mx|mw|mv|museum|mu|mt|ms|mr|mq|mp|motorcycles|moscow|mortgage|monash|moe|moda|mobi|mo|mn|mm|ml|mk|mini|mil|miami|mh|mg|menu|melbourne|meet|media|me|md|mc|marketing|market|mango|management|maison|ma|ly|lv|luxury|luxe|lu|lt|ls|lr|lotto|london|loans|lk|link|limo|limited|lighting|life|li|lgbt|lease|lc|lb|lawyer|land|lacaixa|la|kz|ky|kw|kred|krd|kr|kp|koeln|kn|km|kiwi|kitchen|kim|ki|kh|kg|ke|kaufen|juegos|jp|joburg|jobs|jo|jm|jetzt|je|it|is|ir|iq|io|investments|international|int|insure|institute|ink|info|industries|in|immobilien|im|il|ie|id|hu|ht|hr|house|host|horse|homes|holiday|holdings|hn|hm|hk|hiv|hiphop|healthcare|haus|hamburg|gy|gw|guru|guitars|guide|gu|gt|gs|gripe|green|gratis|graphics|gr|gq|gp|gov|gop|gn|gmo|gm|globo|global|glass|gl|gives|gift|gi|gh|gg|gf|gent|ge|gd|gb|gallery|gal|ga|futbol|furniture|fund|frogans|fr|foundation|foo|fo|fm|florist|flights|fk|fj|fitness|fishing|fish|financial|finance|fi|feedback|farm|fail|exposed|expert|exchange|events|eus|eu|et|estate|es|er|equipment|enterprises|engineering|engineer|email|eg|ee|education|edu|ec|dz|durban|domains|do|dnp|dm|dk|dj|discount|directory|direct|digital|diamonds|desi|dentist|dental|democrat|degree|deals|de|dating|dance|cz|cy|cx|cw|cv|cuisinella|cu|cruises|creditcard|credit|cr|country|corp|coop|cool|cooking|contractors|consulting|construction|condos|computer|company|community|com|cologne|college|coffee|codes|co|cn|cm|club|clothing|clinic|cleaning|claims|cl|ck|city|citic|ci|church|christmas|cheap|ch|cg|cf|ceo|center|cd|cc|catering|cat|cash|careers|career|care|cards|capital|capetown|cancerresearch|camp|camera|cab|ca|bzh|bz|by|bw|bv|buzz|builders|build|bt|bs|brussels|br|boutique|bo|bn|bmw|bm|blue|blackfriday|black|bj|biz|bio|bike|bid|bi|bh|bg|bf|best|berlin|beer|be|bd|bb|bayern|bargains|bar|ba|az|axa|ax|aw|autos|audio|auction|au|attorney|at|associates|asia|as|arpa|army|archi|ar|aq|ao|an|am|al|airforce|ai|agency|ag|af|aero|ae|ad|actor|active|accountants|academy|ac)$/i,\n\n    // Mathes any valid url (e.g. http://www.xample.com)\n    url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n  };\n\n\n  // Error messages\n  // --------------\n\n  // Error message for the build in validators.\n  // {x} gets swapped out with arguments form the validator.\n  var defaultMessages = Validation.messages = {\n    required: '{0} is required',\n    acceptance: '{0} must be accepted',\n    min: '{0} must be greater than or equal to {1}',\n    max: '{0} must be less than or equal to {1}',\n    range: '{0} must be between {1} and {2}',\n    length: '{0} must be {1} characters',\n    minLength: '{0} must be at least {1} characters',\n    maxLength: '{0} must be at most {1} characters',\n    rangeLength: '{0} must be between {1} and {2} characters',\n    oneOf: '{0} must be one of: {1}',\n    equalTo: '{0} must be the same as {1}',\n    digits: '{0} must only contain digits',\n    number: '{0} must be a number',\n    email: '{0} must be a valid email',\n    url: '{0} must be a valid url',\n    inlinePattern: '{0} is invalid'\n  };\n\n  // Label formatters\n  // ----------------\n\n  // Label formatters are used to convert the attribute name\n  // to a more human friendly label when using the built in\n  // error messages.\n  // Configure which one to use with a call to\n  //\n  //     Backbone.Validation.configure({\n  //       labelFormatter: 'label'\n  //     });\n  var defaultLabelFormatters = Validation.labelFormatters = {\n\n    // Returns the attribute name with applying any formatting\n    none: function(attrName) {\n      return attrName;\n    },\n\n    // Converts attributeName or attribute_name to Attribute name\n    sentenceCase: function(attrName) {\n      return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n        return index === 0 ? match.toUpperCase() : ' ' + match.toLowerCase();\n      }).replace(/_/g, ' ');\n    },\n\n    // Looks for a label configured on the model and returns it\n    //\n    //      var Model = Backbone.Model.extend({\n    //        validation: {\n    //          someAttribute: {\n    //            required: true\n    //          }\n    //        },\n    //\n    //        labels: {\n    //          someAttribute: 'Custom label'\n    //        }\n    //      });\n    label: function(attrName, model) {\n      return (model.labels && model.labels[attrName]) || defaultLabelFormatters.sentenceCase(attrName, model);\n    }\n  };\n\n\n  // Built in validators\n  // -------------------\n\n  var defaultValidators = Validation.validators = (function(){\n    // Use native trim when defined\n    var trim = String.prototype.trim ?\n      function(text) {\n        return text === null ? '' : String.prototype.trim.call(text);\n      } :\n      function(text) {\n        var trimLeft = /^\\s+/,\n            trimRight = /\\s+$/;\n\n        return text === null ? '' : text.toString().replace(trimLeft, '').replace(trimRight, '');\n      };\n\n    // Determines whether or not a value is a number\n    var isNumber = function(value){\n      return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n    };\n\n    // Determines whether or not a value is empty\n    var hasValue = function(value) {\n      return !(_.isNull(value) || _.isUndefined(value) || (_.isString(value) && trim(value) === '') || (_.isArray(value) && _.isEmpty(value)));\n    };\n\n    return {\n      // Function validator\n      // Lets you implement a custom function used for validation\n      fn: function(value, attr, fn, model, computed) {\n        if(_.isString(fn)){\n          fn = model[fn];\n        }\n        return fn.call(model, value, attr, computed);\n      },\n\n      // Required validator\n      // Validates if the attribute is required or not\n      // This can be specified as either a boolean value or a function that returns a boolean value\n      required: function(value, attr, required, model, computed) {\n        var isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n        if(!isRequired && !hasValue(value)) {\n          return false; // overrides all other validators\n        }\n        if (isRequired && !hasValue(value)) {\n          return this.format(defaultMessages.required, this.formatLabel(attr, model));\n        }\n      },\n\n      // Acceptance validator\n      // Validates that something has to be accepted, e.g. terms of use\n      // `true` or 'true' are valid\n      acceptance: function(value, attr, accept, model) {\n        if(value !== 'true' && (!_.isBoolean(value) || value === false)) {\n          return this.format(defaultMessages.acceptance, this.formatLabel(attr, model));\n        }\n      },\n\n      // Min validator\n      // Validates that the value has to be a number and equal to or greater than\n      // the min value specified\n      min: function(value, attr, minValue, model) {\n        if (!isNumber(value) || value < minValue) {\n          return this.format(defaultMessages.min, this.formatLabel(attr, model), minValue);\n        }\n      },\n\n      // Max validator\n      // Validates that the value has to be a number and equal to or less than\n      // the max value specified\n      max: function(value, attr, maxValue, model) {\n        if (!isNumber(value) || value > maxValue) {\n          return this.format(defaultMessages.max, this.formatLabel(attr, model), maxValue);\n        }\n      },\n\n      // Range validator\n      // Validates that the value has to be a number and equal to or between\n      // the two numbers specified\n      range: function(value, attr, range, model) {\n        if(!isNumber(value) || value < range[0] || value > range[1]) {\n          return this.format(defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n        }\n      },\n\n      // Length validator\n      // Validates that the value has to be a string with length equal to\n      // the length value specified\n      length: function(value, attr, length, model) {\n        if (!_.isString(value) || value.length !== length) {\n          return this.format(defaultMessages.length, this.formatLabel(attr, model), length);\n        }\n      },\n\n      // Min length validator\n      // Validates that the value has to be a string with length equal to or greater than\n      // the min length value specified\n      minLength: function(value, attr, minLength, model) {\n        if (!_.isString(value) || value.length < minLength) {\n          return this.format(defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n        }\n      },\n\n      // Max length validator\n      // Validates that the value has to be a string with length equal to or less than\n      // the max length value specified\n      maxLength: function(value, attr, maxLength, model) {\n        if (!_.isString(value) || value.length > maxLength) {\n          return this.format(defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n        }\n      },\n\n      // Range length validator\n      // Validates that the value has to be a string and equal to or between\n      // the two numbers specified\n      rangeLength: function(value, attr, range, model) {\n        if (!_.isString(value) || value.length < range[0] || value.length > range[1]) {\n          return this.format(defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n        }\n      },\n\n      // One of validator\n      // Validates that the value has to be equal to one of the elements in\n      // the specified array. Case sensitive matching\n      oneOf: function(value, attr, values, model) {\n        if(!_.include(values, value)){\n          return this.format(defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n        }\n      },\n\n      // Equal to validator\n      // Validates that the value has to be equal to the value of the attribute\n      // with the name specified\n      equalTo: function(value, attr, equalTo, model, computed) {\n        if(value !== computed[equalTo]) {\n          return this.format(defaultMessages.equalTo, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n        }\n      },\n\n      // Pattern validator\n      // Validates that the value has to match the pattern specified.\n      // Can be a regular expression or the name of one of the built in patterns\n      pattern: function(value, attr, pattern, model) {\n        if (!hasValue(value) || !value.toString().match(defaultPatterns[pattern] || pattern)) {\n          return this.format(defaultMessages[pattern] || defaultMessages.inlinePattern, this.formatLabel(attr, model), pattern);\n        }\n      }\n    };\n  }());\n\n  // Set the correct context for all validators\n  // when used from within a method validator\n  _.each(defaultValidators, function(validator, key){\n    defaultValidators[key] = _.bind(defaultValidators[key], _.extend({}, formatFunctions, defaultValidators));\n  });\n\n  return Validation;\n}(_));\n\n//@filename {Foo} fileName ./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.server.custom.js\n\n// Customized Backbone Validation Library\nvar Backbone = {};\n// Copyright (c) 2011-2012 Thomas Pedersen\n// Distributed under MIT License\n//\n// Documentation and full license available at:\n// http://thedersen.com/projects/backbone-validation\nBackbone.Validation = (function(_){\n  'use strict';\n\n  // Default options\n  // ---------------\n\n  var defaultOptions = {\n    forceUpdate: false,\n    selector: 'name',\n    labelFormatter: 'sentenceCase',\n    valid: Function.prototype,\n    invalid: Function.prototype\n  };\n\n\n  // Helper functions\n  // ----------------\n\n  // Formatting functions used for formatting error messages\n  var formatFunctions = {\n    // Uses the configured label formatter to format the attribute name\n    // to make it more readable for the user\n    formatLabel: function(attrName, model) {\n      return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\n    },\n\n    // Replaces nummeric placeholders like {0} in a string with arguments\n    // passed to the function\n    format: function() {\n      var args = Array.prototype.slice.call(arguments),\n          text = args.shift();\n      return text.replace(/\\{(\\d+)\\}/g, function(match, number) {\n        return typeof args[number] !== 'undefined' ? args[number] : match;\n      });\n    }\n  };\n\n  // Flattens an object\n  // eg:\n  //\n  //     var o = {\n  //       address: {\n  //         street: 'Street',\n  //         zip: 1234\n  //       }\n  //     };\n  //\n  // becomes:\n  //\n  //     var o = {\n  //       'address.street': 'Street',\n  //       'address.zip': 1234\n  //     };\n  var flatten = function (obj, into, prefix) {\n    into = into || {};\n    prefix = prefix || '';\n\n    _.each(obj, function(val, key) {\n      if(obj.hasOwnProperty(key)) {\n        if (val && typeof val === 'object' && !(\n          val instanceof Date ||\n          val instanceof RegExp /*||\n          val instanceof Backbone.Model ||\n          val instanceof Backbone.Collection*/)\n        ) {\n          flatten(val, into, prefix + key + '.');\n        }\n        else {\n          into[prefix + key] = val;\n        }\n      }\n    });\n\n    return into;\n  };\n\n  // Validation\n  // ----------\n\n  var Validation = (function(){\n\n    // Returns an object with undefined properties for all\n    // attributes on the model that has defined one or more\n    // validation rules.\n    var getValidatedAttrs = function(model) {\n      return _.reduce(_.keys(model.validation || {}), function(memo, key) {\n        memo[key] = void 0;\n        return memo;\n      }, {});\n    };\n\n    // Looks on the model for validations for a specified\n    // attribute. Returns an array of any validators defined,\n    // or an empty array if none is defined.\n    var getValidators = function(model, attr) {\n      var attrValidationSet = model.validation ? model.validation[attr] || {} : {};\n\n      // If the validator is a function or a string, wrap it in a function validator\n      if (_.isFunction(attrValidationSet) || _.isString(attrValidationSet)) {\n        attrValidationSet = {\n          fn: attrValidationSet\n        };\n      }\n\n      // Stick the validator object into an array\n      if(!_.isArray(attrValidationSet)) {\n        attrValidationSet = [attrValidationSet];\n      }\n\n      // Reduces the array of validators into a new array with objects\n      // with a validation method to call, the value to validate against\n      // and the specified error message, if any\n      return _.reduce(attrValidationSet, function(memo, attrValidation) {\n        _.each(_.without(_.keys(attrValidation), 'msg'), function(validator) {\n          memo.push({\n            fn: defaultValidators[validator],\n            val: attrValidation[validator],\n            msg: attrValidation.msg\n          });\n        });\n        return memo;\n      }, []);\n    };\n\n    // Validates an attribute against all validators defined\n    // for that attribute. If one or more errors are found,\n    // the first error message is returned.\n    // If the attribute is valid, an empty string is returned.\n    var validateAttr = function(model, attr, value, computed) {\n      // Reduces the array of validators to an error message by\n      // applying all the validators and returning the first error\n      // message, if any.\n      return _.reduce(getValidators(model, attr), function(memo, validator){\n        // Pass the format functions plus the default\n        // validators as the context to the validator\n        var ctx = _.extend({}, formatFunctions, defaultValidators),\n            result = validator.fn.call(ctx, value, attr, validator.val, model, computed);\n\n        if(result === false || memo === false) {\n          return false;\n        }\n        if (result && !memo) {\n          return validator.msg || result;\n        }\n        return memo;\n      }, '');\n    };\n\n    // Loops through the model's attributes and validates them all.\n    // Returns and object containing names of invalid attributes\n    // as well as error messages.\n    var validateModel = function(model, attrs) {\n      var error,\n          invalidAttrs = {},\n          isValid = true,\n          computed = _.clone(attrs),\n          flattened = flatten(attrs);\n\n      _.each(flattened, function(val, attr) {\n        error = validateAttr(model, attr, val, computed);\n        if (error) {\n          invalidAttrs[attr] = error;\n          isValid = false;\n        }\n      });\n\n      return {\n        invalidAttrs: invalidAttrs,\n        isValid: isValid\n      };\n    };\n\n    // Contains the methods that are mixed in on the model when binding\n    var mixin = function(view, options) {\n      return {\n\n        // Check whether or not a value passes validation\n        // without updating the model\n        preValidate: function(attr, value) {\n          return validateAttr(this, attr, value, _.extend({}, this.attributes));\n        },\n\n        // Check to see if an attribute, an array of attributes or the\n        // entire model is valid. Passing true will force a validation\n        // of the model.\n        isValid: function(option) {\n          var flattened = flatten(this.attributes);\n\n          if(_.isString(option)){\n            return !validateAttr(this, option, flattened[option], _.extend({}, this.attributes));\n          }\n          if(_.isArray(option)){\n            return _.reduce(option, function(memo, attr) {\n              return memo && !validateAttr(this, attr, flattened[attr], _.extend({}, this.attributes));\n            }, true, this);\n          }\n          if(option === true) {\n            this.validate();\n          }\n          return this.validation ? this._isValid : true;\n        },\n\n        // This is called by Backbone when it needs to perform validation.\n        // You can call it manually without any parameters to validate the\n        // entire model.\n        validate: function(attrs, setOptions){\n          var model = this,\n              validateAll = !attrs,\n              opt = _.extend({}, options, setOptions),\n              validatedAttrs = getValidatedAttrs(model),\n              allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs),\n              changedAttrs = flatten(attrs || allAttrs),\n\n              result = validateModel(model, allAttrs);\n\n          model._isValid = result.isValid;\n\n          // After validation is performed, loop through all changed attributes\n          // and call the valid callbacks so the view is updated.\n          _.each(validatedAttrs, function(val, attr){\n            var invalid = result.invalidAttrs.hasOwnProperty(attr);\n            if(!invalid){\n              opt.valid(view, attr, opt.selector);\n            }\n          });\n\n          // After validation is performed, loop through all changed attributes\n          // and call the invalid callback so the view is updated.\n          _.each(validatedAttrs, function(val, attr){\n            var invalid = result.invalidAttrs.hasOwnProperty(attr),\n                changed = changedAttrs.hasOwnProperty(attr);\n\n            if(invalid && (changed || validateAll)){\n              opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector);\n            }\n          });\n\n          /**** CUSTOM: we need to REMOVE the defer as it is useless server side ****/\n          // Trigger validated events.\n          // Need to defer this so the model is actually updated before\n          // the event is triggered.\n          // _.defer(function() {\n          //   model.trigger('validated', model._isValid, model, result.invalidAttrs);\n          //   model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\n          // });\n          /**** END CUSTOM ****/\n\n          // Return any error messages to Backbone, unless the forceUpdate flag is set.\n          // Then we do not return anything and fools Backbone to believe the validation was\n          // a success. That way Backbone will update the model regardless.\n          if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\n            return result.invalidAttrs;\n          }\n        }\n      };\n    };\n\n    // Helper to mix in validation on a model\n    var bindModel = function(view, model, options) {\n      _.extend(model, mixin(view, options));\n    };\n\n    // Removes the methods added to a model\n    var unbindModel = function(model) {\n      delete model.validate;\n      delete model.preValidate;\n      delete model.isValid;\n    };\n\n    // Mix in validation on a model whenever a model is\n    // added to a collection\n    var collectionAdd = function(model) {\n      bindModel(this.view, model, this.options);\n    };\n\n    // Remove validation from a model whenever a model is\n    // removed from a collection\n    var collectionRemove = function(model) {\n      unbindModel(model);\n    };\n\n    // Returns the public methods on Backbone.Validation\n    return {\n\n      // Current version of the library\n      version: '0.8.0',\n\n      // Called to configure the default options\n      configure: function(options) {\n        _.extend(defaultOptions, options);\n      },\n\n      // Hooks up validation on a view with a model\n      // or collection\n      bind: function(view, options) {\n        var model = view.model,\n            collection = view.collection;\n\n        options = _.extend({}, defaultOptions, defaultCallbacks, options);\n\n        if(typeof model === 'undefined' && typeof collection === 'undefined'){\n          throw 'Before you execute the binding your view must have a model or a collection.\\n' +\n                'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';\n        }\n\n        if(model) {\n          bindModel(view, model, options);\n        }\n        else if(collection) {\n          collection.each(function(model){\n            bindModel(view, model, options);\n          });\n          collection.bind('add', collectionAdd, {view: view, options: options});\n          collection.bind('remove', collectionRemove);\n        }\n      },\n\n      // Removes validation from a view with a model\n      // or collection\n      unbind: function(view) {\n        var model = view.model,\n            collection = view.collection;\n\n        if(model) {\n          unbindModel(view.model);\n        }\n        if(collection) {\n          collection.each(function(model){\n            unbindModel(model);\n          });\n          collection.unbind('add', collectionAdd);\n          collection.unbind('remove', collectionRemove);\n        }\n      },\n\n      // Used to extend the Backbone.Model.prototype\n      // with validation\n      mixin: mixin(null, defaultOptions)\n    };\n  }());\n\n\n  // Callbacks\n  // ---------\n\n  var defaultCallbacks = Validation.callbacks = {\n\n    // Gets called when a previously invalid field in the\n    // view becomes valid. Removes any error message.\n    // Should be overridden with custom functionality.\n    valid: function(view, attr, selector) {\n      view.$('[' + selector + '~=\"' + attr + '\"]')\n          .removeClass('invalid')\n          .removeAttr('data-error');\n    },\n\n    // Gets called when a field in the view becomes invalid.\n    // Adds a error message.\n    // Should be overridden with custom functionality.\n    invalid: function(view, attr, error, selector) {\n      view.$('[' + selector + '~=\"' + attr + '\"]')\n          .addClass('invalid')\n          .attr('data-error', error);\n    }\n  };\n\n\n  // Patterns\n  // --------\n\n  var defaultPatterns = Validation.patterns = {\n    // Matches any digit(s) (i.e. 0-9)\n    digits: /^\\d+$/,\n\n    // Matched any number (e.g. 100.000)\n    number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n\n    // Matches a valid email address (e.g. mail@example.com)\n    email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n\n    // Mathes any valid url (e.g. http://www.xample.com)\n    url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\n  };\n\n\n  // Error messages\n  // --------------\n\n  // Error message for the build in validators.\n  // {x} gets swapped out with arguments form the validator.\n  var defaultMessages = Validation.messages = {\n    required: '{0} is required',\n    acceptance: '{0} must be accepted',\n    min: '{0} must be greater than or equal to {1}',\n    max: '{0} must be less than or equal to {1}',\n    range: '{0} must be between {1} and {2}',\n    length: '{0} must be {1} characters',\n    minLength: '{0} must be at least {1} characters',\n    maxLength: '{0} must be at most {1} characters',\n    rangeLength: '{0} must be between {1} and {2} characters',\n    oneOf: '{0} must be one of: {1}',\n    equalTo: '{0} must be the same as {1}',\n    pattern: '{0} must be a valid {1}'\n  };\n\n  // Label formatters\n  // ----------------\n\n  // Label formatters are used to convert the attribute name\n  // to a more human friendly label when using the built in\n  // error messages.\n  // Configure which one to use with a call to\n  //\n  //     Backbone.Validation.configure({\n  //       labelFormatter: 'label'\n  //     });\n  var defaultLabelFormatters = Validation.labelFormatters = {\n\n    // Returns the attribute name with applying any formatting\n    none: function(attrName) {\n      return attrName;\n    },\n\n    // Converts attributeName or attribute_name to Attribute name\n    sentenceCase: function(attrName) {\n      return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\n        return index === 0 ? match.toUpperCase() : ' ' + match.toLowerCase();\n      }).replace('_', ' ');\n    },\n\n    // Looks for a label configured on the model and returns it\n    //\n    //      var Model = Backbone.Model.extend({\n    //        validation: {\n    //          someAttribute: {\n    //            required: true\n    //          }\n    //        },\n    //\n    //        labels: {\n    //          someAttribute: 'Custom label'\n    //        }\n    //      });\n    label: function(attrName, model) {\n      return (model.labels && model.labels[attrName]) || defaultLabelFormatters.sentenceCase(attrName, model);\n    }\n  };\n\n\n  // Built in validators\n  // -------------------\n\n  var defaultValidators = Validation.validators = (function(){\n    // Use native trim when defined\n    var trim = String.prototype.trim ?\n      function(text) {\n        return text === null ? '' : String.prototype.trim.call(text);\n      } :\n      function(text) {\n        var trimLeft = /^\\s+/,\n            trimRight = /\\s+$/;\n\n        return text === null ? '' : text.toString().replace(trimLeft, '').replace(trimRight, '');\n      };\n\n    // Determines whether or not a value is a number\n    var isNumber = function(value){\n      return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\n    };\n\n    // Determines whether or not not a value is empty\n    var hasValue = function(value) {\n      return !(_.isNull(value) || _.isUndefined(value) || (_.isString(value) && trim(value) === ''));\n    };\n\n    return {\n      // Function validator\n      // Lets you implement a custom function used for validation\n      fn: function(value, attr, fn, model, computed) {\n        if(_.isString(fn)){\n          fn = model[fn];\n        }\n        return fn.call(model, value, attr, computed);\n      },\n\n      // Required validator\n      // Validates if the attribute is required or not\n      required: function(value, attr, required, model, computed) {\n        var isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\n        if(!isRequired && !hasValue(value)) {\n          return false; // overrides all other validators\n        }\n        if (isRequired && !hasValue(value)) {\n          return this.format(defaultMessages.required, this.formatLabel(attr, model));\n        }\n      },\n\n      // Acceptance validator\n      // Validates that something has to be accepted, e.g. terms of use\n      // `true` or 'true' are valid\n      acceptance: function(value, attr, accept, model) {\n        if(value !== 'true' && (!_.isBoolean(value) || value === false)) {\n          return this.format(defaultMessages.acceptance, this.formatLabel(attr, model));\n        }\n      },\n\n      // Min validator\n      // Validates that the value has to be a number and equal to or greater than\n      // the min value specified\n      min: function(value, attr, minValue, model) {\n        if (!isNumber(value) || value < minValue) {\n          return this.format(defaultMessages.min, this.formatLabel(attr, model), minValue);\n        }\n      },\n\n      // Max validator\n      // Validates that the value has to be a number and equal to or less than\n      // the max value specified\n      max: function(value, attr, maxValue, model) {\n        if (!isNumber(value) || value > maxValue) {\n          return this.format(defaultMessages.max, this.formatLabel(attr, model), maxValue);\n        }\n      },\n\n      // Range validator\n      // Validates that the value has to be a number and equal to or between\n      // the two numbers specified\n      range: function(value, attr, range, model) {\n        if(!isNumber(value) || value < range[0] || value > range[1]) {\n          return this.format(defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\n        }\n      },\n\n      // Length validator\n      // Validates that the value has to be a string with length equal to\n      // the length value specified\n      length: function(value, attr, length, model) {\n        if (!hasValue(value) || trim(value).length !== length) {\n          return this.format(defaultMessages.length, this.formatLabel(attr, model), length);\n        }\n      },\n\n      // Min length validator\n      // Validates that the value has to be a string with length equal to or greater than\n      // the min length value specified\n      minLength: function(value, attr, minLength, model) {\n        if (!hasValue(value) || trim(value).length < minLength) {\n          return this.format(defaultMessages.minLength, this.formatLabel(attr, model), minLength);\n        }\n      },\n\n      // Max length validator\n      // Validates that the value has to be a string with length equal to or less than\n      // the max length value specified\n      maxLength: function(value, attr, maxLength, model) {\n        if (!hasValue(value) || trim(value).length > maxLength) {\n          return this.format(defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\n        }\n      },\n\n      // Range length validator\n      // Validates that the value has to be a string and equal to or between\n      // the two numbers specified\n      rangeLength: function(value, attr, range, model) {\n        if(!hasValue(value) || trim(value).length < range[0] || trim(value).length > range[1]) {\n          return this.format(defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\n        }\n      },\n\n      // One of validator\n      // Validates that the value has to be equal to one of the elements in\n      // the specified array. Case sensitive matching\n      oneOf: function(value, attr, values, model) {\n        if(!_.include(values, value)){\n          return this.format(defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\n        }\n      },\n\n      // Equal to validator\n      // Validates that the value has to be equal to the value of the attribute\n      // with the name specified\n      equalTo: function(value, attr, equalTo, model, computed) {\n        if(value !== computed[equalTo]) {\n          return this.format(defaultMessages.equalTo, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\n        }\n      },\n\n      // Pattern validator\n      // Validates that the value has to match the pattern specified.\n      // Can be a regular expression or the name of one of the built in patterns\n      pattern: function(value, attr, pattern, model) {\n        if (!hasValue(value) || !value.toString().match(defaultPatterns[pattern] || pattern)) {\n          return this.format(defaultMessages.pattern, this.formatLabel(attr, model), pattern);\n        }\n      }\n    };\n  }());\n\n  return Validation;\n}(_));\n\n\n//@filename {Foo} fileName ./Modules/third_parties/bignumber@1.5.0/bignumber.js\n\n/*! bignumber.js v1.5.0 https://github.com/MikeMcl/bignumber.js/LICENCE */\n\n;(function ( global ) {\n    'use strict';\n\n    /*\n      bignumber.js v1.5.0\n      A JavaScript library for arbitrary-precision arithmetic.\n      https://github.com/MikeMcl/bignumber.js\n      Copyright (c) 2012 Michael Mclaughlin <M8ch88l@gmail.com>\n      MIT Expat Licence\n    */\n\n    /*********************************** DEFAULTS ************************************/\n\n    /*\n     * The default values below must be integers within the stated ranges (inclusive).\n     * Most of these values can be changed during run-time using BigNumber.config().\n     */\n\n    /*\n     * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP,\n     * MAX_EXP, and the argument to toFixed, toPrecision and toExponential, beyond\n     * which an exception is thrown (if ERRORS is true).\n     */\n    var MAX = 1E9,                                   // 0 to 1e+9\n\n        // Limit of magnitude of exponent argument to toPower.\n        MAX_POWER = 1E6,                             // 1 to 1e+6\n\n        // The maximum number of decimal places for operations involving division.\n        DECIMAL_PLACES = 20,                         // 0 to MAX\n\n        /*\n         * The rounding mode used when rounding to the above decimal places, and when\n         * using toFixed, toPrecision and toExponential, and round (default value).\n         * UP         0 Away from zero.\n         * DOWN       1 Towards zero.\n         * CEIL       2 Towards +Infinity.\n         * FLOOR      3 Towards -Infinity.\n         * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n         * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n         * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n         * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n         * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n         */\n        ROUNDING_MODE = 4,                           // 0 to 8\n\n        // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\n\n        // The exponent value at and beneath which toString returns exponential notation.\n        // Number type: -7\n        TO_EXP_NEG = -7,                             // 0 to -MAX\n\n        // The exponent value at and above which toString returns exponential notation.\n        // Number type: 21\n        TO_EXP_POS = 21,                             // 0 to MAX\n\n        // RANGE : [MIN_EXP, MAX_EXP]\n\n        // The minimum exponent value, beneath which underflow to zero occurs.\n        // Number type: -324  (5e-324)\n        MIN_EXP = -MAX,                              // -1 to -MAX\n\n        // The maximum exponent value, above which overflow to Infinity occurs.\n        // Number type:  308  (1.7976931348623157e+308)\n        MAX_EXP = MAX,                               // 1 to MAX\n\n        // Whether BigNumber Errors are ever thrown.\n        // CHANGE parseInt to parseFloat if changing ERRORS to false.\n        ERRORS = true,                               // true or false\n        parse = parseInt,                            // parseInt or parseFloat\n\n    /***********************************************************************************/\n\n        P = BigNumber.prototype,\n        DIGITS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\n        outOfRange,\n        id = 0,\n        isValid = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n        trim = String.prototype.trim || function () {return this.replace(/^\\s+|\\s+$/g, '')},\n        ONE = BigNumber(1);\n\n\n    // CONSTRUCTOR\n\n\n    /*\n     * The exported function.\n     * Create and return a new instance of a BigNumber object.\n     *\n     * n {number|string|BigNumber} A numeric value.\n     * [b] {number} The base of n. Integer, 2 to 64 inclusive.\n     */\n    function BigNumber( n, b ) {\n        var e, i, isNum, digits, valid, orig,\n            x = this;\n\n        // Enable constructor usage without new.\n        if ( !(x instanceof BigNumber) ) {\n            return new BigNumber( n, b )\n        }\n\n        // Duplicate.\n        if ( n instanceof BigNumber ) {\n            id = 0;\n\n            // e is undefined.\n            if ( b !== e ) {\n                n += ''\n            } else {\n                x['s'] = n['s'];\n                x['e'] = n['e'];\n                x['c'] = ( n = n['c'] ) ? n.slice() : n;\n                return;\n            }\n        }\n\n        // If number, check if minus zero.\n        if ( typeof n != 'string' ) {\n            n = ( isNum = typeof n == 'number' ||\n                Object.prototype.toString.call(n) == '[object Number]' ) &&\n                    n === 0 && 1 / n < 0 ? '-0' : n + '';\n        }\n\n        orig = n;\n\n        if ( b === e && isValid.test(n) ) {\n\n            // Determine sign.\n            x['s'] = n.charAt(0) == '-' ? ( n = n.slice(1), -1 ) : 1;\n\n        // Either n is not a valid BigNumber or a base has been specified.\n        } else {\n\n            // Enable exponential notation to be used with base 10 argument.\n            // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\n            if ( b == 10 ) {\n\n                return setMode( n, DECIMAL_PLACES, ROUNDING_MODE );\n            }\n\n            n = trim.call(n).replace( /^\\+(?!-)/, '' );\n\n            x['s'] = n.charAt(0) == '-' ? ( n = n.replace( /^-(?!-)/, '' ), -1 ) : 1;\n\n            if ( b != null ) {\n\n                if ( ( b == (b | 0) || !ERRORS ) &&\n                  !( outOfRange = !( b >= 2 && b < 65 ) ) ) {\n\n                    digits = '[' + DIGITS.slice( 0, b = b | 0 ) + ']+';\n\n                    // Before non-decimal number validity test and base conversion\n                    // remove the `.` from e.g. '1.', and replace e.g. '.1' with '0.1'.\n                    n = n.replace( /\\.$/, '' ).replace( /^\\./, '0.' );\n\n                    // Any number in exponential form will fail due to the e+/-.\n                    if ( valid = new RegExp(\n                      '^' + digits + '(?:\\\\.' + digits + ')?$', b < 37 ? 'i' : '' ).test(n) ) {\n\n                        if ( isNum ) {\n\n                            if ( n.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\n\n                                // 'new BigNumber() number type has more than 15 significant digits: {n}'\n                                ifExceptionsThrow( orig, 0 );\n                            }\n\n                            // Prevent later check for length on converted number.\n                            isNum = !isNum;\n                        }\n                        n = convert( n, 10, b, x['s'] );\n\n                    } else if ( n != 'Infinity' && n != 'NaN' ) {\n\n                        // 'new BigNumber() not a base {b} number: {n}'\n                        ifExceptionsThrow( orig, 1, b );\n                        n = 'NaN';\n                    }\n                } else {\n\n                    // 'new BigNumber() base not an integer: {b}'\n                    // 'new BigNumber() base out of range: {b}'\n                    ifExceptionsThrow( b, 2 );\n\n                    // Ignore base.\n                    valid = isValid.test(n);\n                }\n            } else {\n                valid = isValid.test(n);\n            }\n\n            if ( !valid ) {\n\n                // Infinity/NaN\n                x['c'] = x['e'] = null;\n\n                // NaN\n                if ( n != 'Infinity' ) {\n\n                    // No exception on NaN.\n                    if ( n != 'NaN' ) {\n\n                        // 'new BigNumber() not a number: {n}'\n                        ifExceptionsThrow( orig, 3 );\n                    }\n                    x['s'] = null;\n                }\n                id = 0;\n\n                return;\n            }\n        }\n\n        // Decimal point?\n        if ( ( e = n.indexOf('.') ) > -1 ) {\n            n = n.replace( '.', '' );\n        }\n\n        // Exponential form?\n        if ( ( i = n.search( /e/i ) ) > 0 ) {\n\n            // Determine exponent.\n            if ( e < 0 ) {\n                e = i;\n            }\n            e += +n.slice( i + 1 );\n            n = n.substring( 0, i );\n\n        } else if ( e < 0 ) {\n\n            // Integer.\n            e = n.length;\n        }\n\n        // Determine leading zeros.\n        for ( i = 0; n.charAt(i) == '0'; i++ ) {\n        }\n\n        b = n.length;\n\n        // Disallow numbers with over 15 significant digits if number type.\n        if ( isNum && b > 15 && n.slice(i).length > 15 ) {\n\n            // 'new BigNumber() number type has more than 15 significant digits: {n}'\n            ifExceptionsThrow( orig, 0 );\n        }\n        id = 0;\n\n        // Overflow?\n        if ( ( e -= i + 1 ) > MAX_EXP ) {\n\n            // Infinity.\n            x['c'] = x['e'] = null;\n\n        // Zero or underflow?\n        } else if ( i == b || e < MIN_EXP ) {\n\n            // Zero.\n            x['c'] = [ x['e'] = 0 ];\n        } else {\n\n            // Determine trailing zeros.\n            for ( ; n.charAt(--b) == '0'; ) {\n            }\n\n            x['e'] = e;\n            x['c'] = [];\n\n            // Convert string to array of digits (without leading and trailing zeros).\n            for ( e = 0; i <= b; x['c'][e++] = +n.charAt(i++) ) {\n            }\n        }\n    }\n\n\n    // CONSTRUCTOR PROPERTIES/METHODS\n\n\n    BigNumber['ROUND_UP'] = 0;\n    BigNumber['ROUND_DOWN'] = 1;\n    BigNumber['ROUND_CEIL'] = 2;\n    BigNumber['ROUND_FLOOR'] = 3;\n    BigNumber['ROUND_HALF_UP'] = 4;\n    BigNumber['ROUND_HALF_DOWN'] = 5;\n    BigNumber['ROUND_HALF_EVEN'] = 6;\n    BigNumber['ROUND_HALF_CEIL'] = 7;\n    BigNumber['ROUND_HALF_FLOOR'] = 8;\n\n\n    /*\n     * Configure infrequently-changing library-wide settings.\n     *\n     * Accept an object or an argument list, with one or many of the following\n     * properties or parameters respectively:\n     * [ DECIMAL_PLACES [, ROUNDING_MODE [, EXPONENTIAL_AT [, RANGE [, ERRORS ]]]]]\n     *\n     * E.g.\n     * BigNumber.config(20, 4) is equivalent to\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\n     * Ignore properties/parameters set to null or undefined.\n     *\n     * Return an object with the properties current values.\n     */\n    BigNumber['config'] = function () {\n        var v, p,\n            i = 0,\n            r = {},\n            a = arguments,\n            o = a[0],\n            c = 'config',\n            inRange = function ( n, lo, hi ) {\n              return !( ( outOfRange = n < lo || n > hi ) ||\n                parse(n) != n && n !== 0 );\n            },\n            has = o && typeof o == 'object'\n              ? function () {if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null}\n              : function () {if ( a.length > i ) return ( v = a[i++] ) != null};\n\n        // [DECIMAL_PLACES] {number} Integer, 0 to MAX inclusive.\n        if ( has( p = 'DECIMAL_PLACES' ) ) {\n\n            if ( inRange( v, 0, MAX ) ) {\n                DECIMAL_PLACES = v | 0;\n            } else {\n\n                // 'config() DECIMAL_PLACES not an integer: {v}'\n                // 'config() DECIMAL_PLACES out of range: {v}'\n                ifExceptionsThrow( v, p, c );\n            }\n        }\n        r[p] = DECIMAL_PLACES;\n\n        // [ROUNDING_MODE] {number} Integer, 0 to 8 inclusive.\n        if ( has( p = 'ROUNDING_MODE' ) ) {\n\n            if ( inRange( v, 0, 8 ) ) {\n                ROUNDING_MODE = v | 0;\n            } else {\n\n                // 'config() ROUNDING_MODE not an integer: {v}'\n                // 'config() ROUNDING_MODE out of range: {v}'\n                ifExceptionsThrow( v, p, c );\n            }\n        }\n        r[p] = ROUNDING_MODE;\n\n        /*\n         * [EXPONENTIAL_AT] {number|number[]} Integer, -MAX to MAX inclusive or\n         * [ integer -MAX to 0 inclusive, 0 to MAX inclusive ].\n         */\n        if ( has( p = 'EXPONENTIAL_AT' ) ) {\n\n            if ( inRange( v, -MAX, MAX ) ) {\n                TO_EXP_NEG = -( TO_EXP_POS = ~~( v < 0 ? -v : +v ) );\n            } else if ( !outOfRange && v && inRange( v[0], -MAX, 0 ) &&\n              inRange( v[1], 0, MAX ) ) {\n                TO_EXP_NEG = ~~v[0];\n                TO_EXP_POS = ~~v[1];\n            } else {\n\n                // 'config() EXPONENTIAL_AT not an integer or not [integer, integer]: {v}'\n                // 'config() EXPONENTIAL_AT out of range or not [negative, positive: {v}'\n                ifExceptionsThrow( v, p, c, 1 );\n            }\n        }\n        r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\n\n        /*\n         * [RANGE][ {number|number[]} Non-zero integer, -MAX to MAX inclusive or\n         * [ integer -MAX to -1 inclusive, integer 1 to MAX inclusive ].\n         */\n        if ( has( p = 'RANGE' ) ) {\n\n            if ( inRange( v, -MAX, MAX ) && ~~v ) {\n                MIN_EXP = -( MAX_EXP = ~~( v < 0 ? -v : +v ) );\n            } else if ( !outOfRange && v && inRange( v[0], -MAX, -1 ) &&\n              inRange( v[1], 1, MAX ) ) {\n                MIN_EXP = ~~v[0], MAX_EXP = ~~v[1];\n            } else {\n\n                // 'config() RANGE not a non-zero integer or not [integer, integer]: {v}'\n                // 'config() RANGE out of range or not [negative, positive: {v}'\n                ifExceptionsThrow( v, p, c, 1, 1 );\n            }\n        }\n        r[p] = [ MIN_EXP, MAX_EXP ];\n\n        // [ERRORS] {boolean|number} true, false, 1 or 0.\n        if ( has( p = 'ERRORS' ) ) {\n\n            if ( v === !!v || v === 1 || v === 0 ) {\n                parse = ( outOfRange = id = 0, ERRORS = !!v )\n                  ? parseInt\n                  : parseFloat;\n            } else {\n\n                // 'config() ERRORS not a boolean or binary digit: {v}'\n                ifExceptionsThrow( v, p, c, 0, 0, 1 );\n            }\n        }\n        r[p] = ERRORS;\n\n        return r;\n    };\n\n\n    // PRIVATE FUNCTIONS\n\n\n    // Assemble error messages. Throw BigNumber Errors.\n    function ifExceptionsThrow( arg, i, j, isArray, isRange, isErrors) {\n\n        if ( ERRORS ) {\n            var error,\n                method = ['new BigNumber', 'cmp', 'div', 'eq', 'gt', 'gte', 'lt',\n                     'lte', 'minus', 'mod', 'plus', 'times', 'toFr'\n                    ][ id ? id < 0 ? -id : id : 1 / id < 0 ? 1 : 0 ] + '()',\n                message = outOfRange ? ' out of range' : ' not a' +\n                  ( isRange ? ' non-zero' : 'n' ) + ' integer';\n\n            message = ( [\n                method + ' number type has more than 15 significant digits',\n                method + ' not a base ' + j + ' number',\n                method + ' base' + message,\n                method + ' not a number' ][i] ||\n                  j + '() ' + i + ( isErrors\n                    ? ' not a boolean or binary digit'\n                    : message + ( isArray\n                      ? ' or not [' + ( outOfRange\n                        ? ' negative, positive'\n                        : ' integer, integer' ) + ' ]'\n                      : '' ) ) ) + ': ' + arg;\n\n            outOfRange = id = 0;\n            error = new Error(message);\n            error['name'] = 'BigNumber Error';\n\n            throw error;\n        }\n    }\n\n\n    /*\n     * Convert a numeric string of baseIn to a numeric string of baseOut.\n     */\n    function convert( nStr, baseOut, baseIn, sign ) {\n        var e, dvs, dvd, nArr, fracArr, fracBN;\n\n        // Convert string of base bIn to an array of numbers of baseOut.\n        // Eg. strToArr('255', 10) where baseOut is 16, returns [15, 15].\n        // Eg. strToArr('ff', 16)  where baseOut is 10, returns [2, 5, 5].\n        function strToArr( str, bIn ) {\n            var j,\n                i = 0,\n                strL = str.length,\n                arrL,\n                arr = [0];\n\n            for ( bIn = bIn || baseIn; i < strL; i++ ) {\n\n                for ( arrL = arr.length, j = 0; j < arrL; arr[j] *= bIn, j++ ) {\n                }\n\n                for ( arr[0] += DIGITS.indexOf( str.charAt(i) ), j = 0;\n                      j < arr.length;\n                      j++ ) {\n\n                    if ( arr[j] > baseOut - 1 ) {\n\n                        if ( arr[j + 1] == null ) {\n                            arr[j + 1] = 0;\n                        }\n                        arr[j + 1] += arr[j] / baseOut ^ 0;\n                        arr[j] %= baseOut;\n                    }\n                }\n            }\n\n            return arr.reverse();\n        }\n\n        // Convert array to string.\n        // E.g. arrToStr( [9, 10, 11] ) becomes '9ab' (in bases above 11).\n        function arrToStr( arr ) {\n            var i = 0,\n                arrL = arr.length,\n                str = '';\n\n            for ( ; i < arrL; str += DIGITS.charAt( arr[i++] ) ) {\n            }\n\n            return str;\n        }\n\n        if ( baseIn < 37 ) {\n            nStr = nStr.toLowerCase();\n        }\n\n        /*\n         * If non-integer convert integer part and fraction part separately.\n         * Convert the fraction part as if it is an integer than use division to\n         * reduce it down again to a value less than one.\n         */\n        if ( ( e = nStr.indexOf( '.' ) ) > -1 ) {\n\n            /*\n             * Calculate the power to which to raise the base to get the number\n             * to divide the fraction part by after it has been converted as an\n             * integer to the required base.\n             */\n            e = nStr.length - e - 1;\n\n            // Use toFixed to avoid possible exponential notation.\n            dvs = strToArr( new BigNumber(baseIn)['pow'](e)['toF'](), 10 );\n\n            nArr = nStr.split('.');\n\n            // Convert the base of the fraction part (as integer).\n            dvd = strToArr( nArr[1] );\n\n            // Convert the base of the integer part.\n            nArr = strToArr( nArr[0] );\n\n            // Result will be a BigNumber with a value less than 1.\n            fracBN = divide( dvd, dvs, dvd.length - dvs.length, sign, baseOut,\n              // Is least significant digit of integer part an odd number?\n              nArr[nArr.length - 1] & 1 );\n\n            fracArr = fracBN['c'];\n\n            // e can be <= 0  ( if e == 0, fracArr is [0] or [1] ).\n            if ( e = fracBN['e'] ) {\n\n                // Append zeros according to the exponent of the result.\n                for ( ; ++e; fracArr.unshift(0) ) {\n                }\n\n                // Append the fraction part to the converted integer part.\n                nStr = arrToStr(nArr) + '.' + arrToStr(fracArr);\n\n            // fracArr is [1].\n            // Fraction digits rounded up, so increment last digit of integer part.\n            } else if ( fracArr[0] ) {\n\n                if ( nArr[ e = nArr.length - 1 ] < baseOut - 1 ) {\n                    ++nArr[e];\n                    nStr = arrToStr(nArr);\n                } else {\n                    nStr = new BigNumber( arrToStr(nArr),\n                      baseOut )['plus'](ONE)['toS'](baseOut);\n                }\n\n            // fracArr is [0]. No fraction digits.\n            } else {\n                nStr = arrToStr(nArr);\n            }\n        } else {\n\n            // Simple integer. Convert base.\n            nStr = arrToStr( strToArr(nStr) );\n        }\n\n        return nStr;\n    }\n\n\n    // Perform division in the specified base. Called by div and convert.\n    function divide( dvd, dvs, exp, s, base, isOdd ) {\n        var dvsL, dvsT, next, cmp, remI,\n            dvsZ = dvs.slice(),\n            dvdI = dvsL = dvs.length,\n            dvdL = dvd.length,\n            rem = dvd.slice( 0, dvsL ),\n            remL = rem.length,\n            quo = new BigNumber(ONE),\n            qc = quo['c'] = [],\n            qi = 0,\n            dig = DECIMAL_PLACES + ( quo['e'] = exp ) + 1;\n\n        quo['s'] = s;\n        s = dig < 0 ? 0 : dig;\n\n        // Add zeros to make remainder as long as divisor.\n        for ( ; remL++ < dvsL; rem.push(0) ) {\n        }\n\n        // Create version of divisor with leading zero.\n        dvsZ.unshift(0);\n\n        do {\n\n            // 'next' is how many times the divisor goes into the current remainder.\n            for ( next = 0; next < base; next++ ) {\n\n                // Compare divisor and remainder.\n                if ( dvsL != ( remL = rem.length ) ) {\n                    cmp = dvsL > remL ? 1 : -1;\n                } else {\n                    for ( remI = -1, cmp = 0; ++remI < dvsL; ) {\n\n                        if ( dvs[remI] != rem[remI] ) {\n                            cmp = dvs[remI] > rem[remI] ? 1 : -1;\n                            break;\n                        }\n                    }\n                }\n\n                // Subtract divisor from remainder (if divisor < remainder).\n                if ( cmp < 0 ) {\n\n                    // Remainder cannot be more than one digit longer than divisor.\n                    // Equalise lengths using divisor with extra leading zero?\n                    for ( dvsT = remL == dvsL ? dvs : dvsZ; remL; ) {\n\n                        if ( rem[--remL] < dvsT[remL] ) {\n\n                            for ( remI = remL;\n                              remI && !rem[--remI];\n                                rem[remI] = base - 1 ) {\n                            }\n                            --rem[remI];\n                            rem[remL] += base;\n                        }\n                        rem[remL] -= dvsT[remL];\n                    }\n                    for ( ; !rem[0]; rem.shift() ) {\n                    }\n                } else {\n                    break;\n                }\n            }\n\n            // Add the 'next' digit to the result array.\n            qc[qi++] = cmp ? next : ++next;\n\n            // Update the remainder.\n            rem[0] && cmp\n              ? ( rem[remL] = dvd[dvdI] || 0 )\n              : ( rem = [ dvd[dvdI] ] );\n\n        } while ( ( dvdI++ < dvdL || rem[0] != null ) && s-- );\n\n        // Leading zero? Do not remove if result is simply zero (qi == 1).\n        if ( !qc[0] && qi != 1 ) {\n\n            // There can't be more than one zero.\n            --quo['e'];\n            qc.shift();\n        }\n\n        // Round?\n        if ( qi > dig ) {\n            rnd( quo, DECIMAL_PLACES, base, isOdd, rem[0] != null );\n        }\n\n        // Overflow?\n        if ( quo['e'] > MAX_EXP ) {\n\n            // Infinity.\n            quo['c'] = quo['e'] = null;\n\n        // Underflow?\n        } else if ( quo['e'] < MIN_EXP ) {\n\n            // Zero.\n            quo['c'] = [quo['e'] = 0];\n        }\n\n        return quo;\n    }\n\n\n    /*\n     * Return a string representing the value of BigNumber n in normal or\n     * exponential notation rounded to the specified decimal places or\n     * significant digits.\n     * Called by toString, toExponential (exp 1), toFixed, and toPrecision (exp 2).\n     * d is the index (with the value in normal notation) of the digit that may be\n     * rounded up.\n     */\n    function format( n, d, exp ) {\n\n        // Initially, i is the number of decimal places required.\n        var i = d - (n = new BigNumber(n))['e'],\n            c = n['c'];\n\n        // +-Infinity or NaN?\n        if ( !c ) {\n            return n['toS']();\n        }\n\n        // Round?\n        if ( c.length > ++d ) {\n            rnd( n, i, 10 );\n        }\n\n        // Recalculate d if toFixed as n['e'] may have changed if value rounded up.\n        i = c[0] == 0 ? i + 1 : exp ? d : n['e'] + i + 1;\n\n        // Append zeros?\n        for ( ; c.length < i; c.push(0) ) {\n        }\n        i = n['e'];\n\n        /*\n         * toPrecision returns exponential notation if the number of significant\n         * digits specified is less than the number of digits necessary to\n         * represent the integer part of the value in normal notation.\n         */\n        return exp == 1 || exp == 2 && ( --d < i || i <= TO_EXP_NEG )\n\n          // Exponential notation.\n          ? ( n['s'] < 0 && c[0] ? '-' : '' ) + ( c.length > 1\n            ? ( c.splice( 1, 0, '.' ), c.join('') )\n            : c[0] ) + ( i < 0 ? 'e' : 'e+' ) + i\n\n          // Normal notation.\n          : n['toS']();\n    }\n\n\n    // Round if necessary.\n    // Called by divide, format, setMode and sqrt.\n    function rnd( x, dp, base, isOdd, r ) {\n        var xc = x['c'],\n            isNeg = x['s'] < 0,\n            half = base / 2,\n            i = x['e'] + dp + 1,\n\n            // 'next' is the digit after the digit that may be rounded up.\n            next = xc[i],\n\n            /*\n             * 'more' is whether there are digits after 'next'.\n             * E.g.\n             * 0.005 (e = -3) to be rounded to 0 decimal places (dp = 0) gives i = -2\n             * The 'next' digit is zero, and there ARE 'more' digits after it.\n             * 0.5 (e = -1) dp = 0 gives i = 0\n             * The 'next' digit is 5 and there are no 'more' digits after it.\n             */\n            more = r || i < 0 || xc[i + 1] != null;\n\n        r = ROUNDING_MODE < 4\n          ? ( next != null || more ) &&\n            ( ROUNDING_MODE == 0 ||\n               ROUNDING_MODE == 2 && !isNeg ||\n                 ROUNDING_MODE == 3 && isNeg )\n          : next > half || next == half &&\n            ( ROUNDING_MODE == 4 || more ||\n\n              /*\n               * isOdd is used in base conversion and refers to the least significant\n               * digit of the integer part of the value to be converted. The fraction\n               * part is rounded by this method separately from the integer part.\n               */\n              ROUNDING_MODE == 6 && ( xc[i - 1] & 1 || !dp && isOdd ) ||\n                ROUNDING_MODE == 7 && !isNeg ||\n                  ROUNDING_MODE == 8 && isNeg );\n\n        if ( i < 1 || !xc[0] ) {\n            xc.length = 0;\n            xc.push(0);\n\n            if ( r ) {\n\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                xc[0] = 1;\n                x['e'] = -dp;\n            } else {\n\n                // Zero.\n                x['e'] = 0;\n            }\n\n            return x;\n        }\n\n        // Remove any digits after the required decimal places.\n        xc.length = i--;\n\n        // Round up?\n        if ( r ) {\n\n            // Rounding up may mean the previous digit has to be rounded up and so on.\n            for ( --base; ++xc[i] > base; ) {\n                xc[i] = 0;\n\n                if ( !i-- ) {\n                    ++x['e'];\n                    xc.unshift(1);\n                }\n            }\n        }\n\n        // Remove trailing zeros.\n        for ( i = xc.length; !xc[--i]; xc.pop() ) {\n        }\n\n        return x;\n    }\n\n\n    // Round after setting the appropriate rounding mode.\n    // Handles ceil, floor and round.\n    function setMode( x, dp, rm ) {\n        var r = ROUNDING_MODE;\n\n        ROUNDING_MODE = rm;\n        x = new BigNumber(x);\n        x['c'] && rnd( x, dp, 10 );\n        ROUNDING_MODE = r;\n\n        return x;\n    }\n\n\n    // PROTOTYPE/INSTANCE METHODS\n\n\n    /*\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\n     */\n    P['abs'] = P['absoluteValue'] = function () {\n        var x = new BigNumber(this);\n\n        if ( x['s'] < 0 ) {\n            x['s'] = 1;\n        }\n\n        return x;\n    };\n\n\n    /*\n     * Return a new BigNumber whose value is the value of this BigNumber\n     * rounded to a whole number in the direction of Infinity.\n     */\n    P['ceil'] = function () {\n        return setMode( this, 0, 2 );\n    };\n\n\n    /*\n     * Return\n     * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\n     * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\n     * 0 if they have the same value,\n     * or null if the value of either is NaN.\n     */\n    P['comparedTo'] = P['cmp'] = function ( y, b ) {\n        var a,\n            x = this,\n            xc = x['c'],\n            yc = ( id = -id, y = new BigNumber( y, b ) )['c'],\n            i = x['s'],\n            j = y['s'],\n            k = x['e'],\n            l = y['e'];\n\n        // Either NaN?\n        if ( !i || !j ) {\n            return null;\n        }\n\n        a = xc && !xc[0], b = yc && !yc[0];\n\n        // Either zero?\n        if ( a || b ) {\n            return a ? b ? 0 : -j : i;\n        }\n\n        // Signs differ?\n        if ( i != j ) {\n            return i;\n        }\n\n        // Either Infinity?\n        if ( a = i < 0, b = k == l, !xc || !yc ) {\n            return b ? 0 : !xc ^ a ? 1 : -1;\n        }\n\n        // Compare exponents.\n        if ( !b ) {\n            return k > l ^ a ? 1 : -1;\n        }\n\n        // Compare digit by digit.\n        for ( i = -1,\n              j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\n              ++i < j; ) {\n\n            if ( xc[i] != yc[i] ) {\n                return xc[i] > yc[i] ^ a ? 1 : -1;\n            }\n        }\n        // Compare lengths.\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\n    };\n\n\n    /*\n     * Return the number of decimal places of the value of this BigNumber,\n     * or null if the value of this BigNumber is +-Infinity or NaN.\n     */\n    P['decimalPlaces'] = P['dp'] = function () {\n        var dp;\n\n        if ( this['c'] ) {\n            dp = this['c'].length - this['e'] - 1;\n            return dp < 0 ? 0 : dp;\n        }\n        return null;\n    };\n\n\n    /*\n     *  n / 0 = I\n     *  n / N = N\n     *  n / I = 0\n     *  0 / n = 0\n     *  0 / 0 = N\n     *  0 / N = N\n     *  0 / I = 0\n     *  N / n = N\n     *  N / 0 = N\n     *  N / N = N\n     *  N / I = N\n     *  I / n = I\n     *  I / 0 = I\n     *  I / N = N\n     *  I / I = N\n     *\n     * Return a new BigNumber whose value is the value of this BigNumber\n     * divided by the value of BigNumber(y, b), rounded according to\n     * DECIMAL_PLACES and ROUNDING_MODE.\n     */\n    P['dividedBy'] = P['div'] = function ( y, b ) {\n        var xc = this['c'],\n            xe = this['e'],\n            xs = this['s'],\n            yc = ( id = 2, y = new BigNumber( y, b ) )['c'],\n            ye = y['e'],\n            ys = y['s'],\n            s = xs == ys ? 1 : -1;\n\n        // Either NaN/Infinity/0?\n        return !xe && ( !xc || !xc[0] ) || !ye && ( !yc || !yc[0] )\n\n          // Either NaN?\n          ? new BigNumber( !xs || !ys ||\n\n            // Both 0 or both Infinity?\n            ( xc ? yc && xc[0] == yc[0] : !yc )\n\n              // Return NaN.\n              ? NaN\n\n              // x is 0 or y is Infinity?\n              : xc && xc[0] == 0 || !yc\n\n                // Return +-0.\n                ? s * 0\n\n                // y is 0. Return +-Infinity.\n                : s / 0 )\n\n          : divide( xc, yc, xe - ye, s, 10 );\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is equal to the value of\n     * BigNumber(n, b), otherwise returns false.\n     */\n    P['equals'] = P['eq'] = function ( n, b ) {\n        id = 3;\n        return this['cmp']( n, b ) === 0;\n    };\n\n\n    /*\n     * Return a new BigNumber whose value is the value of this BigNumber\n     * rounded to a whole number in the direction of -Infinity.\n     */\n    P['floor'] = function () {\n        return setMode( this, 0, 3 );\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is greater than the value of\n     * BigNumber(n, b), otherwise returns false.\n     */\n    P['greaterThan'] = P['gt'] = function ( n, b ) {\n        id = 4;\n        return this['cmp']( n, b ) > 0;\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is greater than or equal to\n     * the value of BigNumber(n, b), otherwise returns false.\n     */\n    P['greaterThanOrEqualTo'] = P['gte'] = function ( n, b ) {\n        id = 5;\n        return ( b = this['cmp']( n, b ) ) == 1 || b === 0;\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is a finite number, otherwise\n     * returns false.\n     */\n    P['isFinite'] = P['isF'] = function () {\n        return !!this['c'];\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is NaN, otherwise returns\n     * false.\n     */\n    P['isNaN'] = function () {\n        return !this['s'];\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is negative, otherwise\n     * returns false.\n     */\n    P['isNegative'] = P['isNeg'] = function () {\n        return this['s'] < 0;\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is 0 or -0, otherwise returns\n     * false.\n     */\n    P['isZero'] = P['isZ'] = function () {\n        return !!this['c'] && this['c'][0] == 0;\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is less than the value of\n     * BigNumber(n, b), otherwise returns false.\n     */\n    P['lessThan'] = P['lt'] = function ( n, b ) {\n        id = 6;\n        return this['cmp']( n, b ) < 0;\n    };\n\n\n    /*\n     * Return true if the value of this BigNumber is less than or equal to the\n     * value of BigNumber(n, b), otherwise returns false.\n     */\n    P['lessThanOrEqualTo'] = P['lte'] = function ( n, b ) {\n        id = 7;\n        return ( b = this['cmp']( n, b ) ) == -1 || b === 0;\n    };\n\n\n    /*\n     *  n - 0 = n\n     *  n - N = N\n     *  n - I = -I\n     *  0 - n = -n\n     *  0 - 0 = 0\n     *  0 - N = N\n     *  0 - I = -I\n     *  N - n = N\n     *  N - 0 = N\n     *  N - N = N\n     *  N - I = N\n     *  I - n = I\n     *  I - 0 = I\n     *  I - N = N\n     *  I - I = N\n     *\n     * Return a new BigNumber whose value is the value of this BigNumber minus\n     * the value of BigNumber(y, b).\n     */\n    P['minus'] = function ( y, b ) {\n        var d, i, j, xLTy,\n            x = this,\n            a = x['s'];\n\n        b = ( id = 8, y = new BigNumber( y, b ) )['s'];\n\n        // Either NaN?\n        if ( !a || !b ) {\n            return new BigNumber(NaN);\n        }\n\n        // Signs differ?\n        if ( a != b ) {\n            return y['s'] = -b, x['plus'](y);\n        }\n\n        var xc = x['c'],\n            xe = x['e'],\n            yc = y['c'],\n            ye = y['e'];\n\n        if ( !xe || !ye ) {\n\n            // Either Infinity?\n            if ( !xc || !yc ) {\n                return xc ? ( y['s'] = -b, y ) : new BigNumber( yc ? x : NaN );\n            }\n\n            // Either zero?\n            if ( !xc[0] || !yc[0] ) {\n\n                // y is non-zero?\n                return yc[0]\n                  ? ( y['s'] = -b, y )\n\n                  // x is non-zero?\n                  : new BigNumber( xc[0]\n                    ? x\n\n                    // Both are zero.\n                    // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\n                    : ROUNDING_MODE == 3 ? -0 : 0 );\n            }\n        }\n\n        // Determine which is the bigger number.\n        // Prepend zeros to equalise exponents.\n        if ( xc = xc.slice(), a = xe - ye ) {\n            d = ( xLTy = a < 0 ) ? ( a = -a, xc ) : ( ye = xe, yc );\n\n            for ( d.reverse(), b = a; b--; d.push(0) ) {\n            }\n            d.reverse();\n        } else {\n\n            // Exponents equal. Check digit by digit.\n            j = ( ( xLTy = xc.length < yc.length ) ? xc : yc ).length;\n\n            for ( a = b = 0; b < j; b++ ) {\n\n                if ( xc[b] != yc[b] ) {\n                    xLTy = xc[b] < yc[b];\n                    break;\n                }\n            }\n        }\n\n        // x < y? Point xc to the array of the bigger number.\n        if ( xLTy ) {\n            d = xc, xc = yc, yc = d;\n            y['s'] = -y['s'];\n        }\n\n        /*\n         * Append zeros to xc if shorter. No need to add zeros to yc if shorter\n         * as subtraction only needs to start at yc.length.\n         */\n        if ( ( b = -( ( j = xc.length ) - yc.length ) ) > 0 ) {\n\n            for ( ; b--; xc[j++] = 0 ) {\n            }\n        }\n\n        // Subtract yc from xc.\n        for ( b = yc.length; b > a; ){\n\n            if ( xc[--b] < yc[b] ) {\n\n                for ( i = b; i && !xc[--i]; xc[i] = 9 ) {\n                }\n                --xc[i];\n                xc[b] += 10;\n            }\n            xc[b] -= yc[b];\n        }\n\n        // Remove trailing zeros.\n        for ( ; xc[--j] == 0; xc.pop() ) {\n        }\n\n        // Remove leading zeros and adjust exponent accordingly.\n        for ( ; xc[0] == 0; xc.shift(), --ye ) {\n        }\n\n        /*\n         * No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\n         * when neither x or y are Infinity.\n         */\n\n        // Underflow?\n        if ( ye < MIN_EXP || !xc[0] ) {\n\n            /*\n             * Following IEEE 754 (2008) 6.3,\n             * n - n = +0  but  n - n = -0 when rounding towards -Infinity.\n             */\n            if ( !xc[0] ) {\n                y['s'] = ROUNDING_MODE == 3 ? -1 : 1;\n            }\n\n            // Result is zero.\n            xc = [ye = 0];\n        }\n\n        return y['c'] = xc, y['e'] = ye, y;\n    };\n\n\n    /*\n     *   n % 0 =  N\n     *   n % N =  N\n     *   0 % n =  0\n     *  -0 % n = -0\n     *   0 % 0 =  N\n     *   0 % N =  N\n     *   N % n =  N\n     *   N % 0 =  N\n     *   N % N =  N\n     *\n     * Return a new BigNumber whose value is the value of this BigNumber modulo\n     * the value of BigNumber(y, b).\n     */\n    P['modulo'] = P['mod'] = function ( y, b ) {\n        var x = this,\n            xc = x['c'],\n            yc = ( id = 9, y = new BigNumber( y, b ) )['c'],\n            i = x['s'],\n            j = y['s'];\n\n        // Is x or y NaN, or y zero?\n        b = !i || !j || yc && !yc[0];\n\n        if ( b || xc && !xc[0] ) {\n            return new BigNumber( b ? NaN : x );\n        }\n\n        x['s'] = y['s'] = 1;\n        b = y['cmp'](x) == 1;\n        x['s'] = i, y['s'] = j;\n\n        return b\n          ? new BigNumber(x)\n          : ( i = DECIMAL_PLACES, j = ROUNDING_MODE,\n            DECIMAL_PLACES = 0, ROUNDING_MODE = 1,\n              x = x['div'](y),\n                DECIMAL_PLACES = i, ROUNDING_MODE = j,\n                  this['minus']( x['times'](y) ) );\n    };\n\n\n    /*\n     * Return a new BigNumber whose value is the value of this BigNumber\n     * negated, i.e. multiplied by -1.\n     */\n    P['negated'] = P['neg'] = function () {\n        var x = new BigNumber(this);\n\n        return x['s'] = -x['s'] || null, x;\n    };\n\n\n    /*\n     *  n + 0 = n\n     *  n + N = N\n     *  n + I = I\n     *  0 + n = n\n     *  0 + 0 = 0\n     *  0 + N = N\n     *  0 + I = I\n     *  N + n = N\n     *  N + 0 = N\n     *  N + N = N\n     *  N + I = N\n     *  I + n = I\n     *  I + 0 = I\n     *  I + N = N\n     *  I + I = I\n     *\n     * Return a new BigNumber whose value is the value of this BigNumber plus\n     * the value of BigNumber(y, b).\n     */\n    P['plus'] = function ( y, b ) {\n        var d,\n            x = this,\n            a = x['s'];\n\n        b = ( id = 10, y = new BigNumber( y, b ) )['s'];\n\n        // Either NaN?\n        if ( !a || !b ) {\n            return new BigNumber(NaN);\n        }\n\n        // Signs differ?\n        if ( a != b ) {\n            return y['s'] = -b, x['minus'](y);\n        }\n\n        var xe = x['e'],\n            xc = x['c'],\n            ye = y['e'],\n            yc = y['c'];\n\n        if ( !xe || !ye ) {\n\n            // Either Infinity?\n            if ( !xc || !yc ) {\n\n                // Return +-Infinity.\n                return new BigNumber( a / 0 );\n            }\n\n            // Either zero?\n            if ( !xc[0] || !yc[0] ) {\n\n                // y is non-zero?\n                return yc[0]\n                  ? y\n\n                  // x is non-zero?\n                  : new BigNumber( xc[0]\n                    ? x\n\n                    // Both are zero. Return zero.\n                    : a * 0 );\n            }\n        }\n\n        // Prepend zeros to equalise exponents.\n        // Note: Faster to use reverse then do unshifts.\n        if ( xc = xc.slice(), a = xe - ye ) {\n            d = a > 0 ? ( ye = xe, yc ) : ( a = -a, xc );\n\n            for ( d.reverse(); a--; d.push(0) ) {\n            }\n            d.reverse();\n        }\n\n        // Point xc to the longer array.\n        if ( xc.length - yc.length < 0 ) {\n            d = yc, yc = xc, xc = d;\n        }\n\n        /*\n         * Only start adding at yc.length - 1 as the\n         * further digits of xc can be left as they are.\n         */\n        for ( a = yc.length, b = 0; a;\n             b = ( xc[--a] = xc[a] + yc[a] + b ) / 10 ^ 0, xc[a] %= 10 ) {\n        }\n\n        // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n\n        if ( b ) {\n            xc.unshift(b);\n\n            // Overflow? (MAX_EXP + 1 possible)\n            if ( ++ye > MAX_EXP ) {\n\n                // Infinity.\n                xc = ye = null;\n            }\n        }\n\n         // Remove trailing zeros.\n        for ( a = xc.length; xc[--a] == 0; xc.pop() ) {\n        }\n\n        return y['c'] = xc, y['e'] = ye, y;\n    };\n\n\n    /*\n     * Return a BigNumber whose value is the value of this BigNumber raised to\n     * the power e. If e is negative round according to DECIMAL_PLACES and\n     * ROUNDING_MODE.\n     *\n     * e {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n     */\n    P['toPower'] = P['pow'] = function ( e ) {\n\n        // e to integer, avoiding NaN or Infinity becoming 0.\n        var i = e * 0 == 0 ? e | 0 : e,\n            x = new BigNumber(this),\n            y = new BigNumber(ONE);\n\n        // Use Math.pow?\n        // Pass +-Infinity for out of range exponents.\n        if ( ( ( ( outOfRange = e < -MAX_POWER || e > MAX_POWER ) &&\n          (i = e * 1 / 0) ) ||\n\n             /*\n              * Any exponent that fails the parse becomes NaN.\n              *\n              * Include 'e !== 0' because on Opera -0 == parseFloat(-0) is false,\n              * despite -0 === parseFloat(-0) && -0 == parseFloat('-0') is true.\n              */\n             parse(e) != e && e !== 0 && !(i = NaN) ) &&\n\n              // 'pow() exponent not an integer: {e}'\n              // 'pow() exponent out of range: {e}'\n              !ifExceptionsThrow( e, 'exponent', 'pow' ) ||\n\n                // Pass zero to Math.pow, as any value to the power zero is 1.\n                !i ) {\n\n            // i is +-Infinity, NaN or 0.\n            return new BigNumber( Math.pow( x['toS'](), i ) );\n        }\n\n        for ( i = i < 0 ? -i : i; ; ) {\n\n            if ( i & 1 ) {\n                y = y['times'](x);\n            }\n            i >>= 1;\n\n            if ( !i ) {\n                break;\n            }\n            x = x['times'](x);\n        }\n\n        return e < 0 ? ONE['div'](y) : y;\n    };\n\n\n    /*\n     * Return a new BigNumber whose value is the value of this BigNumber\n     * rounded to a maximum of dp decimal places using rounding mode rm, or to\n     * 0 and ROUNDING_MODE respectively if omitted.\n     *\n     * [dp] {number} Integer, 0 to MAX inclusive.\n     * [rm] {number} Integer, 0 to 8 inclusive.\n     */\n    P['round'] = function ( dp, rm ) {\n\n        dp = dp == null || ( ( ( outOfRange = dp < 0 || dp > MAX ) ||\n          parse(dp) != dp ) &&\n\n            // 'round() decimal places out of range: {dp}'\n            // 'round() decimal places not an integer: {dp}'\n            !ifExceptionsThrow( dp, 'decimal places', 'round' ) )\n              ? 0\n              : dp | 0;\n\n        rm = rm == null || ( ( ( outOfRange = rm < 0 || rm > 8 ) ||\n\n          // Include '&& rm !== 0' because with Opera -0 == parseFloat(-0) is false.\n          parse(rm) != rm && rm !== 0 ) &&\n\n            // 'round() mode not an integer: {rm}'\n            // 'round() mode out of range: {rm}'\n            !ifExceptionsThrow( rm, 'mode', 'round' ) )\n              ? ROUNDING_MODE\n              : rm | 0;\n\n        return setMode( this, dp, rm );\n    };\n\n\n    /*\n     *  sqrt(-n) =  N\n     *  sqrt( N) =  N\n     *  sqrt(-I) =  N\n     *  sqrt( I) =  I\n     *  sqrt( 0) =  0\n     *  sqrt(-0) = -0\n     *\n     * Return a new BigNumber whose value is the square root of the value of\n     * this BigNumber, rounded according to DECIMAL_PLACES and ROUNDING_MODE.\n     */\n    P['squareRoot'] = P['sqrt'] = function () {\n        var n, r, re, t,\n            x = this,\n            c = x['c'],\n            s = x['s'],\n            e = x['e'],\n            dp = DECIMAL_PLACES,\n            rm = ROUNDING_MODE,\n            half = new BigNumber('0.5');\n\n        // Negative/NaN/Infinity/zero?\n        if ( s !== 1 || !c || !c[0] ) {\n\n            return new BigNumber( !s || s < 0 && ( !c || c[0] )\n              ? NaN\n              : c ? x : 1 / 0 );\n        }\n\n        // Initial estimate.\n        s = Math.sqrt( x['toS']() );\n        ROUNDING_MODE = 1;\n\n        /*\n          Math.sqrt underflow/overflow?\n          Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n         */\n        if ( s == 0 || s == 1 / 0 ) {\n            n = c.join('');\n\n            if ( !( n.length + e & 1 ) ) {\n                n += '0';\n            }\n            r = new BigNumber( Math.sqrt(n) + '' );\n\n            // r may still not be finite.\n            if ( !r['c'] ) {\n                r['c'] = [1];\n            }\n            r['e'] = ( ( ( e + 1 ) / 2 ) | 0 ) - ( e < 0 || e & 1 );\n        } else {\n            r = new BigNumber( n = s.toString() );\n        }\n        re = r['e'];\n        s = re + ( DECIMAL_PLACES += 4 );\n\n        if ( s < 3 ) {\n            s = 0;\n        }\n        e = s;\n\n        // Newton-Raphson iteration.\n        for ( ; ; ) {\n            t = r;\n            r = half['times']( t['plus']( x['div'](t) ) );\n\n            if ( t['c'].slice( 0, s ).join('') === r['c'].slice( 0, s ).join('') ) {\n                c = r['c'];\n\n                /*\n                  The exponent of r may here be one less than the final result\n                  exponent (re), e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust\n                  s so the rounding digits are indexed correctly.\n                 */\n                s = s - ( n && r['e'] < re );\n\n                /*\n                  The 4th rounding digit may be in error by -1 so if the 4 rounding\n                  digits are 9999 or 4999 (i.e. approaching a rounding boundary)\n                  continue the iteration.\n                 */\n                if ( c[s] == 9 && c[s - 1] == 9 && c[s - 2] == 9 &&\n                        ( c[s - 3] == 9 || n && c[s - 3] == 4 ) ) {\n\n                    /*\n                      If 9999 on first run through, check to see if rounding up\n                      gives the exact result as the nines may infinitely repeat.\n                     */\n                    if ( n && c[s - 3] == 9 ) {\n                        t = r['round']( dp, 0 );\n\n                        if ( t['times'](t)['eq'](x) ) {\n                            ROUNDING_MODE = rm;\n                            DECIMAL_PLACES = dp;\n\n                            return t;\n                        }\n                    }\n                    DECIMAL_PLACES += 4;\n                    s += 4;\n                    n = '';\n                } else {\n\n                    /*\n                      If the rounding digits are null, 0000 or 5000, check for an\n                      exact result. If not, then there are further digits so\n                      increment the 1st rounding digit to ensure correct rounding.\n                     */\n                    if ( !c[e] && !c[e - 1] && !c[e - 2] &&\n                            ( !c[e - 3] || c[e - 3] == 5 ) ) {\n\n                        // Truncate to the first rounding digit.\n                        if ( c.length > e - 2 ) {\n                            c.length = e - 2;\n                        }\n\n                        if ( !r['times'](r)['eq'](x) ) {\n\n                            while ( c.length < e - 3 ) {\n                                c.push(0);\n                            }\n                            c[e - 3]++;\n                        }\n                    }\n                    ROUNDING_MODE = rm;\n                    rnd( r, DECIMAL_PLACES = dp, 10 );\n\n                    return r;\n                }\n            }\n        }\n    };\n\n\n    /*\n     *  n * 0 = 0\n     *  n * N = N\n     *  n * I = I\n     *  0 * n = 0\n     *  0 * 0 = 0\n     *  0 * N = N\n     *  0 * I = N\n     *  N * n = N\n     *  N * 0 = N\n     *  N * N = N\n     *  N * I = N\n     *  I * n = I\n     *  I * 0 = N\n     *  I * N = N\n     *  I * I = I\n     *\n     * Return a new BigNumber whose value is the value of this BigNumber times\n     * the value of BigNumber(y, b).\n     */\n    P['times'] = function ( y, b ) {\n        var c,\n            x = this,\n            xc = x['c'],\n            yc = ( id = 11, y = new BigNumber( y, b ) )['c'],\n            i = x['e'],\n            j = y['e'],\n            a = x['s'];\n\n        y['s'] = a == ( b = y['s'] ) ? 1 : -1;\n\n        // Either NaN/Infinity/0?\n        if ( !i && ( !xc || !xc[0] ) || !j && ( !yc || !yc[0] ) ) {\n\n            // Either NaN?\n            return new BigNumber( !a || !b ||\n\n              // x is 0 and y is Infinity  or  y is 0 and x is Infinity?\n              xc && !xc[0] && !yc || yc && !yc[0] && !xc\n\n                // Return NaN.\n                ? NaN\n\n                // Either Infinity?\n                : !xc || !yc\n\n                  // Return +-Infinity.\n                  ? y['s'] / 0\n\n                  // x or y is 0. Return +-0.\n                  : y['s'] * 0 );\n        }\n        y['e'] = i + j;\n\n        if ( ( a = xc.length ) < ( b = yc.length ) ) {\n            c = xc, xc = yc, yc = c, j = a, a = b, b = j;\n        }\n\n        for ( j = a + b, c = []; j--; c.push(0) ) {\n        }\n\n        // Multiply!\n        for ( i = b - 1; i > -1; i-- ) {\n\n            for ( b = 0, j = a + i;\n                  j > i;\n                  b = c[j] + yc[i] * xc[j - i - 1] + b,\n                  c[j--] = b % 10 | 0,\n                  b = b / 10 | 0 ) {\n            }\n\n            if ( b ) {\n                c[j] = ( c[j] + b ) % 10;\n            }\n        }\n\n        b && ++y['e'];\n\n        // Remove any leading zero.\n        !c[0] && c.shift();\n\n        // Remove trailing zeros.\n        for ( j = c.length; !c[--j]; c.pop() ) {\n        }\n\n        // No zero check needed as only x * 0 == 0 etc.\n\n        // Overflow?\n        y['c'] = y['e'] > MAX_EXP\n\n          // Infinity.\n          ? ( y['e'] = null )\n\n          // Underflow?\n          : y['e'] < MIN_EXP\n\n            // Zero.\n            ? [ y['e'] = 0 ]\n\n            // Neither.\n            : c;\n\n        return y;\n    };\n\n\n    /*\n     * Return a string representing the value of this BigNumber in exponential\n     * notation to dp fixed decimal places and rounded using ROUNDING_MODE if\n     * necessary.\n     *\n     * [dp] {number} Integer, 0 to MAX inclusive.\n     */\n    P['toExponential'] = P['toE'] = function ( dp ) {\n\n        return format( this,\n          ( dp == null || ( ( outOfRange = dp < 0 || dp > MAX ) ||\n\n            /*\n             * Include '&& dp !== 0' because with Opera -0 == parseFloat(-0) is\n             * false, despite -0 == parseFloat('-0') && 0 == -0 being true.\n             */\n            parse(dp) != dp && dp !== 0 ) &&\n\n              // 'toE() decimal places not an integer: {dp}'\n              // 'toE() decimal places out of range: {dp}'\n              !ifExceptionsThrow( dp, 'decimal places', 'toE' ) ) && this['c']\n                ? this['c'].length - 1\n                : dp | 0, 1 );\n    };\n\n\n    /*\n     * Return a string representing the value of this BigNumber in normal\n     * notation to dp fixed decimal places and rounded using ROUNDING_MODE if\n     * necessary.\n     *\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\n     *\n     * [dp] {number} Integer, 0 to MAX inclusive.\n     */\n    P['toFixed'] = P['toF'] = function ( dp ) {\n        var n, str, d,\n            x = this;\n\n        if ( !( dp == null || ( ( outOfRange = dp < 0 || dp > MAX ) ||\n            parse(dp) != dp && dp !== 0 ) &&\n\n            // 'toF() decimal places not an integer: {dp}'\n            // 'toF() decimal places out of range: {dp}'\n            !ifExceptionsThrow( dp, 'decimal places', 'toF' ) ) ) {\n              d = x['e'] + ( dp | 0 );\n        }\n\n        n = TO_EXP_NEG, dp = TO_EXP_POS;\n        TO_EXP_NEG = -( TO_EXP_POS = 1 / 0 );\n\n        // Note: str is initially undefined.\n        if ( d == str ) {\n            str = x['toS']();\n        } else {\n            str = format( x, d );\n\n            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.\n            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n            if ( x['s'] < 0 && x['c'] ) {\n\n                // As e.g. -0 toFixed(3), will wrongly be returned as -0.000 from toString.\n                if ( !x['c'][0] ) {\n                    str = str.replace(/^-/, '');\n\n                // As e.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.\n                } else if ( str.indexOf('-') < 0 ) {\n                    str = '-' + str;\n                }\n            }\n        }\n        TO_EXP_NEG = n, TO_EXP_POS = dp;\n\n        return str;\n    };\n\n\n    /*\n     * Return a string array representing the value of this BigNumber as a\n     * simple fraction with an integer numerator and an integer denominator.\n     * The denominator will be a positive non-zero value less than or equal to\n     * the specified maximum denominator. If a maximum denominator is not\n     * specified, the denominator will be the lowest value necessary to\n     * represent the number exactly.\n     *\n     * [maxD] {number|string|BigNumber} Integer >= 1 and < Infinity.\n     */\n    P['toFraction'] = P['toFr'] = function ( maxD ) {\n        var q, frac, n0, d0, d2, n, e,\n            n1 = d0 = new BigNumber(ONE),\n            d1 = n0 = new BigNumber('0'),\n            x = this,\n            xc = x['c'],\n            exp = MAX_EXP,\n            dp = DECIMAL_PLACES,\n            rm = ROUNDING_MODE,\n            d = new BigNumber(ONE);\n\n        // NaN, Infinity.\n        if ( !xc ) {\n            return x['toS']();\n        }\n\n        e = d['e'] = xc.length - x['e'] - 1;\n\n        // If max denominator is undefined or null...\n        if ( maxD == null ||\n\n             // or NaN...\n             ( !( id = 12, n = new BigNumber(maxD) )['s'] ||\n\n               // or less than 1, or Infinity...\n               ( outOfRange = n['cmp'](n1) < 0 || !n['c'] ) ||\n\n                 // or not an integer...\n                 ( ERRORS && n['e'] < n['c'].length - 1 ) ) &&\n\n                   // 'toFr() max denominator not an integer: {maxD}'\n                   // 'toFr() max denominator out of range: {maxD}'\n                   !ifExceptionsThrow( maxD, 'max denominator', 'toFr' ) ||\n\n                     // or greater than the maxD needed to specify the value exactly...\n                     ( maxD = n )['cmp'](d) > 0 ) {\n\n            // d is e.g. 10, 100, 1000, 10000... , n1 is 1.\n            maxD = e > 0 ? d : n1;\n        }\n\n        MAX_EXP = 1 / 0;\n        n = new BigNumber( xc.join('') );\n\n        for ( DECIMAL_PLACES = 0, ROUNDING_MODE = 1; ; )  {\n            q = n['div'](d);\n            d2 = d0['plus']( q['times'](d1) );\n\n            if ( d2['cmp'](maxD) == 1 ) {\n                break;\n            }\n\n            d0 = d1, d1 = d2;\n\n            n1 = n0['plus']( q['times']( d2 = n1 ) );\n            n0 = d2;\n\n            d = n['minus']( q['times']( d2 = d ) );\n            n = d2;\n        }\n\n        d2 = maxD['minus'](d0)['div'](d1);\n        n0 = n0['plus']( d2['times'](n1) );\n        d0 = d0['plus']( d2['times'](d1) );\n\n        n0['s'] = n1['s'] = x['s'];\n\n        DECIMAL_PLACES = e * 2;\n        ROUNDING_MODE = rm;\n\n        // Determine which fraction is closer to x, n0 / d0 or n1 / d1?\n        frac = n1['div'](d1)['minus'](x)['abs']()['cmp'](\n          n0['div'](d0)['minus'](x)['abs']() ) < 1\n          ? [ n1['toS'](), d1['toS']() ]\n          : [ n0['toS'](), d0['toS']() ];\n\n        return MAX_EXP = exp, DECIMAL_PLACES = dp, frac;\n    };\n\n\n    /*\n     * Return a string representing the value of this BigNumber to sd significant\n     * digits and rounded using ROUNDING_MODE if necessary.\n     * If sd is less than the number of digits necessary to represent the integer\n     * part of the value in normal notation, then use exponential notation.\n     *\n     * sd {number} Integer, 1 to MAX inclusive.\n     */\n    P['toPrecision'] = P['toP'] = function ( sd ) {\n\n        /*\n         * ERRORS true: Throw if sd not undefined, null or an integer in range.\n         * ERRORS false: Ignore sd if not a number or not in range.\n         * Truncate non-integers.\n         */\n        return sd == null || ( ( ( outOfRange = sd < 1 || sd > MAX ) ||\n          parse(sd) != sd ) &&\n\n            // 'toP() precision not an integer: {sd}'\n            // 'toP() precision out of range: {sd}'\n            !ifExceptionsThrow( sd, 'precision', 'toP' ) )\n              ? this['toS']()\n              : format( this, --sd | 0, 2 );\n    };\n\n\n    /*\n     * Return a string representing the value of this BigNumber in base b, or\n     * base 10 if b is omitted. If a base is specified, including base 10,\n     * round according to DECIMAL_PLACES and ROUNDING_MODE.\n     * If a base is not specified, and this BigNumber has a positive exponent\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal\n     * to or less than TO_EXP_NEG, return exponential notation.\n     *\n     * [b] {number} Integer, 2 to 64 inclusive.\n     */\n    P['toString'] = P['toS'] = function ( b ) {\n        var u, str, strL,\n            x = this,\n            xe = x['e'];\n\n        // Infinity or NaN?\n        if ( xe === null ) {\n            str = x['s'] ? 'Infinity' : 'NaN';\n\n        // Exponential format?\n        } else if ( b === u && ( xe <= TO_EXP_NEG || xe >= TO_EXP_POS ) ) {\n            return format( x, x['c'].length - 1, 1 );\n        } else {\n            str = x['c'].join('');\n\n            // Negative exponent?\n            if ( xe < 0 ) {\n\n                // Prepend zeros.\n                for ( ; ++xe; str = '0' + str ) {\n                }\n                str = '0.' + str;\n\n            // Positive exponent?\n            } else if ( strL = str.length, xe > 0 ) {\n\n                if ( ++xe > strL ) {\n\n                    // Append zeros.\n                    for ( xe -= strL; xe-- ; str += '0' ) {\n                    }\n                } else if ( xe < strL ) {\n                    str = str.slice( 0, xe ) + '.' + str.slice(xe);\n                }\n\n            // Exponent zero.\n            } else {\n                if ( u = str.charAt(0), strL > 1 ) {\n                    str = u + '.' + str.slice(1);\n\n                // Avoid '-0'\n                } else if ( u == '0' ) {\n                    return u;\n                }\n            }\n\n            if ( b != null ) {\n\n                if ( !( outOfRange = !( b >= 2 && b < 65 ) ) &&\n                  ( b == (b | 0) || !ERRORS ) ) {\n                    str = convert( str, b | 0, 10, x['s'] );\n\n                    // Avoid '-0'\n                    if ( str == '0' ) {\n                        return str;\n                    }\n                } else {\n\n                    // 'toS() base not an integer: {b}'\n                    // 'toS() base out of range: {b}'\n                    ifExceptionsThrow( b, 'base', 'toS' );\n                }\n            }\n\n        }\n\n        return x['s'] < 0 ? '-' + str : str;\n    };\n\n\n    /*\n     * Return the value of this BigNumber converted to a number primitive.\n     *\n     */\n    P['toNumber'] = P['toN'] = function () {\n        var x = this;\n\n        // Ensure zero has correct sign.\n        return +x || ( x['s'] ? 0 * x['s'] : NaN );\n    };\n\n\n    /*\n     * Return as toString, but do not accept a base argument.\n     */\n    P['valueOf'] = P['toJSON'] = function () {\n        return this['toS']();\n    };\n\n\n    // Add aliases for BigDecimal methods.\n    //P['add'] = P['plus'];\n    //P['subtract'] = P['minus'];\n    //P['multiply'] = P['times'];\n    //P['divide'] = P['div'];\n    //P['remainder'] = P['mod'];\n    //P['compareTo'] = P['cmp'];\n    //P['negate'] = P['neg'];\n\n\n    // EXPORT\n\n\n    // Node and other CommonJS-like environments that support module.exports.\n    if ( typeof module !== 'undefined' && module.exports ) {\n        module.exports = BigNumber;\n\n    //AMD.\n    } else if ( typeof define == 'function' && define.amd ) {\n        define( function () {\n            return BigNumber;\n        });\n\n    //Browser.\n    } else {\n        global['BigNumber'] = BigNumber;\n    }\n\n})( this );\n\n\n//@filename {Foo} fileName ./Modules/third_parties/underscore.js@1.7.0/underscore.js\n\n//     Underscore.js 1.7.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.7.0';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var createCallback = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  _.iteratee = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return createCallback(value, context, argCount);\n    if (_.isObject(value)) return _.matches(value);\n    return _.property(value);\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    if (obj == null) return obj;\n    iteratee = createCallback(iteratee, context);\n    var i, length = obj.length;\n    if (length === +length) {\n      for (i = 0; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    if (obj == null) return [];\n    iteratee = _.iteratee(iteratee, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length),\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index = 0, currentKey;\n    if (arguments.length < 3) {\n      if (!length) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[index++] : index++];\n    }\n    for (; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== + obj.length && _.keys(obj),\n        index = (keys || obj).length,\n        currentKey;\n    if (arguments.length < 3) {\n      if (!index) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[--index] : --index];\n    }\n    while (index--) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    predicate = _.iteratee(predicate, context);\n    _.some(obj, function(value, index, list) {\n      if (predicate(value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    predicate = _.iteratee(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(_.iteratee(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    if (obj == null) return true;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    if (obj == null) return false;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (obj.length !== +obj.length) obj = _.values(obj);\n    return _.indexOf(obj, target) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = obj && obj.length === +obj.length ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = low + high >>> 1;\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = _.iteratee(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    for (var i = 0, length = input.length; i < length; i++) {\n      var value = input[i];\n      if (!_.isArray(value) && !_.isArguments(value)) {\n        if (!strict) output.push(value);\n      } else if (shallow) {\n        push.apply(output, value);\n      } else {\n        flatten(value, shallow, strict, output);\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = _.iteratee(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i];\n      if (isSorted) {\n        if (!i || seen !== value) result.push(value);\n        seen = value;\n      } else if (iteratee) {\n        var computed = iteratee(value, i, array);\n        if (_.indexOf(seen, computed) < 0) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (_.indexOf(result, value) < 0) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true, []));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(slice.call(arguments, 1), true, true, []);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function(array) {\n    if (array == null) return [];\n    var length = _.max(arguments, 'length').length;\n    var results = Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var idx = array.length;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var Ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    args = slice.call(arguments, 2);\n    bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      Ctor.prototype = func.prototype;\n      var self = new Ctor;\n      Ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (_.isObject(result)) return result;\n      return self;\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = hasher ? hasher.apply(this, arguments) : key;\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last > 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed before being called N times.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      } else {\n        func = null;\n      }\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n            obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj, iteratee, context) {\n    var result = {}, key;\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      iteratee = createCallback(iteratee, context);\n      for (key in obj) {\n        var value = obj[key];\n        if (iteratee(value, key, obj)) result[key] = value;\n      }\n    } else {\n      var keys = concat.apply([], slice.call(arguments, 1));\n      obj = new Object(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        key = keys[i];\n        if (key in obj) result[key] = obj[key];\n      }\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      var source = arguments[i];\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      // Handle Object.create(x) cases\n      'constructor' in a && 'constructor' in b &&\n      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n        _.isFunction(bCtor) && bCtor instanceof bCtor)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size, result;\n    // Recursively compare objects and arrays.\n    if (className === '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size === b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      size = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      result = _.keys(b).length === size;\n      if (result) {\n        while (size--) {\n          // Deep compare each member\n          key = keys[size];\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    var pairs = _.pairs(attrs), length = pairs.length;\n    return function(obj) {\n      if (obj == null) return !length;\n      obj = new Object(obj);\n      for (var i = 0; i < length; i++) {\n        var pair = pairs[i], key = pair[0];\n        if (pair[1] !== obj[key] || !(key in obj)) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = createCallback(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? object[property]() : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js\n\n/*\n@module javascript\n@class Boolean\n\n#Summary\nThe Boolean object is an object wrapper for a boolean value.\n\n#Constructor\n\tnew Boolean(value)\n\n#Description\nThe value passed as the first parameter is converted to a boolean value, if necessary. If value is omitted or is 0, -0, null, false, NaN, undefined, or the empty string (\"\"), the object has an initial value of false. All other values, including any object or the string \"false\", create an object with an initial value of true.\n\nDo not confuse the primitive Boolean values true and false with the true and false values of the Boolean object.\n\nAny object whose value is not undefined or null, including a Boolean object whose value is false, evaluates to true when passed to a conditional statement. For example, the condition in the following if statement evaluates to true:\n\n\tx = new Boolean(false);\n\tif (x) {\n\t  // . . . this code is executed\n\t}\n\tThis behavior does not apply to Boolean primitives. For example, the condition in the following if statement evaluates to false:\n\n\tx = false;\n\tif (x) {\n\t  // . . . this code is not executed\n\t}\nDo not use a Boolean object to convert a non-boolean value to a boolean value. Instead, use Boolean as a function to perform this task:\n\n\tx = Boolean(expression);     // preferred\n\tx = new Boolean(expression); // don't use\n\tIf you specify any object, including a Boolean object whose value is false, as the initial value of a Boolean object, the new Boolean object has a value of true.\n\n\tmyFalse = new Boolean(false);   // initial value of false\n\tg = new Boolean(myFalse);       // initial value of true\n\tmyString = new String(\"Hello\"); // string object\n\ts = new Boolean(myString);      // initial value of true\n\tDo not use a Boolean object in place of a Boolean primitive.\n\n#Properties\nFor properties available on Boolean instances, see Properties of Boolean instances.\n\nBoolean.length\nLength property whose value is 1.\nBoolean.prototype\nRepresents the prototype for the Boolean constructor.\n#Properties inherited from Function:\narity, caller, constructor, length, name\n##Methods\nFor methods available on Boolean instances, see Methods of Boolean instances.\n\nThe global Boolean object contains no methods of its own, however, it does inherit some methods through the prototype chain:\n\n#Methods inherited from Function:\napply, call, toSource, toString\n\n#Boolean instances\nAll Boolean instances inherit from Boolean.prototype. As with all constructors, the prototype object dictates instances' inherited properties and methods.\n\n#Properties\n\nBoolean.prototype.constructor\nReturns the function that created an instance's prototype. This is the Boolean function by default.\nProperties inherited from Object:\n__parent__, __proto__\n#Methods\n\nBoolean.prototype.toSource() \nReturns a string containing the source of the Boolean object; you can use this string to create an equivalent object. Overrides the Object.prototype.toSource() method.\nBoolean.prototype.toString()\nReturns a string of either \"true\" or \"false\" depending upon the value of the object. Overrides the Object.prototype.toString() method.\nBoolean.prototype.valueOf()\nReturns the primitive value of the Boolean object. Overrides the Object.prototype.valueOf() method.\n\n\n#Examples\nCreating Boolean objects with an initial value of false\n\n\tvar bNoParam = new Boolean();\n\tvar bZero = new Boolean(0);\n\tvar bNull = new Boolean(null);\n\tvar bEmptyString = new Boolean(\"\");\n\tvar bfalse = new Boolean(false);\n\tCreating Boolean objects with an initial value of true\n\n\tvar btrue = new Boolean(true);\n\tvar btrueString = new Boolean(\"true\");\n\tvar bfalseString = new Boolean(\"false\");\n\tvar bSuLin = new Boolean(\"Su Lin\");\n\n\n*/\n\n\n/*\n@method valueOf\n#Summary\nThe valueOf() method returns the primitive value of a Boolean object.\n\n#Syntax\n\tbool.valueOf()\n\n#Description\nThe valueOf method of Boolean returns the primitive value of a Boolean object or literal Boolean as a Boolean data type.\n\nThis method is usually called internally by JavaScript and not explicitly in code.\n\n#Examples\n##Example: Using valueOf\n\n\tx = new Boolean();\n\tmyVar = x.valueOf()      // assigns false to myVar\n*/\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js\n\n/*\n@module javascript\n@class Error\n\n#Summary\nThe Error constructor creates an error object. Instances of Error objects are thrown when runtime errors occur. The Error object can also be used as a base objects for user-defined exceptions. See below for standard built-in error types.\n\n#Syntax\n\tnew Error([message[, fileName[,lineNumber]]])\n#Description\nRuntime errors result in new Error objects being created and thrown.\n\nThis page documents the use of the Error object itself and its use as a constructor function. For a list of properties and methods inherited by Error instances, see Error.prototype.\n\n#Error types\n\nBesides the generic Error constructor, there are six other core error constructors in JavaScript. For client-side exceptions, see Exception Handling Statements.\n\n\tEvalError\n\tCreates an instance representing an error that occurs regarding the global function eval().\n\tInternalError \n\tCreates an instance representing an error that occurs when an internal error in the JavaScript engine is thrown. E.g. \"too much recursion\".\n\tRangeError\n\tCreates an instance representing an error that occurs when a numeric variable or parameter is outside of its valid range.\n\tReferenceError\n\tCreates an instance representing an error that occurs when de-referencing an invalid reference.\n\tSyntaxError\n\tCreates an instance representing a syntax error that occurs while parsing code in eval().\n\tTypeError\n\tCreates an instance representing an error that occurs when a variable or parameter is not of a valid type.\n\tURIError\n\tCreates an instance representing an error that occurs when encodeURI() or decodeURl() are passed invalid parameters.\n\n#Properties\nError.prototype\nAllows the addition of properties to Error instances.\n#Methods\nThe global Error object contains no methods of its own, however, it does inherit some methods through the prototype chain.\n\n#Error instances\nAll Error instances and instances of non-generic errors inherit from Error.prototype. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.\n\n#Properties\n\n##Standard properties\n\nError.prototype.constructor\nSpecifies the function that created an instance's prototype.\n\tError.prototype.message\n\tError message.\n\tError.prototype.name\n\tError name.\n\n\n#Vendor-specific extensions\n\n##Non-standard\nThis feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n##Microsoft\n\n\tError.prototype.description\n\tError description. Similar to message.\n\tError.prototype.number\n\tError number.\n##Mozilla\n\n\tError.prototype.fileName\n\tPath to file that raised this error.\n\tError.prototype.lineNumber\n\tLine number in file that raised this error.\n\tError.prototype.columnNumber\n\tColumn number in line that raised this error.\n\tError.prototype.stack\n\tStack trace.\n\n#Examples\n##Example: Throwing a generic error\n\nUsually you create an Error object with the intention of raising it using the throw keyword. You can handle the error using the try...catch construct:\n\n\ttry {\n\t  throw new Error(\"Whoops!\");\n\t} catch (e) {\n\t  alert(e.name + \": \" + e.message);\n\t}\n\tExample: Handling a specific error\n\n\tYou can choose to handle only specific error types by testing the error type with the error's constructor property or, if you're writing for modern JavaScript engines, instanceof keyword:\n\n\ttry {\n\t  foo.bar();\n\t} catch (e) {\n\t  if (e instanceof EvalError) {\n\t    alert(e.name + \": \" + e.message);\n\t  } else if (e instanceof RangeError) {\n\t    alert(e.name + \": \" + e.message);\n\t  }\n\t  // ... etc\n\t}\n##Custom Error Types\n\nYou might want to define your own error types deriving from Error to be able to throw new MyError() and use instanceof MyError to check the kind of error in the exception handler. The common way to do this is demonstrated below.\n\nNote that the thrown MyError will report incorrect lineNumber and fileName at least in Firefox.\nSee also the \"What's a good way to extend Error in JavaScript?\" discussion on Stackoverflow.\n\n\t// Create a new object, that prototypally inherits from the Error constructor.\n\tfunction MyError(message) {\n\t  this.name = \"MyError\";\n\t  this.message = message || \"Default Message\";\n\t}\n\tMyError.prototype = new Error();\n\tMyError.prototype.constructor = MyError;\n\n\ttry {\n\t  throw new MyError();\n\t} catch (e) {\n\t  console.log(e.name);     // \"MyError\"\n\t  console.log(e.message);  // \"Default Message\"\n\t}\n\n\ttry {\n\t  throw new MyError(\"custom message\");\n\t} catch (e) {\n\t  console.log(e.name);     // \"MyError\"\n\t  console.log(e.message);  // \"custom message\"\n\t}\n\n*/\n\n/*\n\n@constructor Boolean\n@param {String} message Human-readable description of the error\n@param {String} fileName The value for the fileName property on the created Error object. Defaults to the name of the file containing the code that called the Error() constructor.\n@param {Number} lineNumber The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation.\n*/\n\n\n\n/*\n@property {String} message\n\n#Summary\nThe message property is a human-readable description of the error.\n\n#Description\nThis property contains a brief description of the error if one is available or has been set. SpiderMonkey makes extensive use of the message property for exceptions. The message property combined with the name property is used by the Error.prototype.toString() method to create a string representation of the Error.\n\nBy default, the message property is an empty string, but this behavior can be overridden for an instance by specifying a message as the first argument to the Error constructor.\n\n#Examples\n##Example: Throwing a custom error\n\n\tvar e = new Error(\"Could not parse input\"); // e.message is \"Could not parse input\"\n\tthrow e;\n*/\n\n\n\n\n\n/*\n@property {String} name\n#Summary\nThe name property represents a name for the type of error. The initial value is \"Error\".\n\n#Description\nBy default, Error instances are given the name \"Error\". The name property, in addition to the message property, is used by the Error.prototype.toString() method to create a string representation of the error.\n\n#Examples\n##Example: Throwing a custom error\n\n\tvar e = new Error(\"Malformed input\"); // e.name is \"Error\"\n\n\te.name = \"ParseError\"; \n\tthrow e;\n\t// e.toString() would return \"ParseError: Malformed input\"\n\n*/\n\n\n\n\n/*\n@class EvalError @extends Error\nThe EvalError object indicates an error regarding the global eval() function.\n*/\n\n/*\n@class RangeError @extends Error\n\nThe RangeError object indicates an error when a value is not in the set or range of allowed values.\n\nA RangeError is thrown when trying to pass a number as an argument to a function that does not allow a range that includes that number. This can be encountered when to create an array of an illegal length with the Array constructor, or when passing bad values to the numeric methods Number.toExponential(), Number.toFixed() or Number.toPrecision().\n*/\n\n\n/*\n@class ReferenceError @extends Error\n#Summary\nThe ReferenceError object represents an error when a non-existent variable is referenced.\n\n#Description\nA ReferenceError is thrown when trying to dereference a variable that has not been declared.\n*/\n\n\n\n/*\n@class SyntaxError @extends Error\n\n#Summary\nThe SyntaxError object represents an error when trying to interpret syntactically invalid code.\n\n#Description\nA SyntaxError is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.\n*/\n\n\n/*\n@class TypeError @extends Error\nThe TypeError object represents an error when a value is not of the expected type.\n*/\n\n/*\n@class URIError @extends Error\n\nThe URIError object represents an error when a global URI handling function was used in a wrong way.\n*/\n\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js\n\n/*\n@module javascript\n\n@class Function\n\n#Summary\nThe Function.prototype property represents the Function prototype object.\n\n#Description\nFunction objects inherit from Function.prototype.  Function.prototype cannot be modified.\n*/\n\n\n/*\n@property {Number} length\n\n#Summary\nThe length property specifies the number of arguments expected by the function.\n\n#Description\nlength is a property of a function object, and indicates how many arguments the function expects, i.e. the number of formal parameters. This number does not include the rest parameter. By contrast, arguments.length is local to a function and provides the number of arguments actually passed to the function.\n\nData property of the Function constructor\n\nThe Function constructor is itself a Function object. It's length data property has a value of 1. The property attributes are: Writable: false, Enumerable: false, Configurable: true.\n\nProperty of the Function prototype object\n\nThe length property of the Function prototype object has a value of 0.\n\n#Examples\n\tconsole.log ( Function.length ); //1\n\n\tconsole.log( (function ()        {}).length ); //0\n\tconsole.log( (function (a)       {}).length ); //1\n\tconsole.log( (function (a, b)    {}).length ); //2 etc. \n\tconsole.log( (function (...args) {}).length ); //0, rest parameter is no\n\n*/\n\n\n/*\n@property {FunctionPrototype} prototype\n#Summary\nThe Function.prototype property represents the Function prototype object.\n\n#Description\nFunction objects inherit from Function.prototype.  Function.prototype cannot be modified.\n*/\n\n\n\n/*\n@method apply\n\nThe apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).\n\nNote: While the syntax of this function is almost identical to that of call(), the fundamental difference is that call() accepts an argument list, while apply() accepts a single array of arguments.\n#Syntax\n\tfun.apply(thisArg, [argsArray])\n#Description\nYou can assign a different this object when calling an existing function. this refers to the current object, the calling object. With apply, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.\n\napply is very similar to call(), except for the type of arguments it supports. You can use an arguments array instead of a named set of parameters. With apply, you can use an array literal, for example, fun.apply(this, ['eat', 'bananas']), or an Array object, for example, fun.apply(this, new Array('eat', 'bananas')).\n\nYou can also use arguments for the argsArray parameter. arguments is a local variable of a function. It can be used for all unspecified arguments of the called object. Thus, you do not have to know the arguments of the called object when you use the apply method. You can use arguments to pass all the arguments to the called object. The called object is then responsible for handling the arguments.\n\nSince ECMAScript 5th Edition you can also use any kind of object which is array-like, so in practice this means it's going to have a property length and integer properties in the range [0...length). As an example you can now use a NodeList or a own custom object like {'length': 2, '0': 'eat', '1': 'bananas'}.\n\nNote: Most browsers, including Chrome 14 and Internet Explorer 9, still do not accept array-like objects and will throw an exception.\n#Examples\nUsing apply to chain constructors\n\nYou can use apply to chain constructors for an object, similar to Java. In the following example we will create a global Function method called construct, which will make you able to use an array-like object with a constructor instead of an arguments list.\n\n\tFunction.prototype.construct = function (aArgs) {\n\t    var fConstructor = this, fNewConstr = function () { fConstructor.apply(this, aArgs); };\n\t    fNewConstr.prototype = fConstructor.prototype;\n\t    return new fNewConstr();\n\t};\n\nExample usage:\n\n\tfunction MyConstructor () {\n\t    for (var nProp = 0; nProp < arguments.length; nProp++) {\n\t        this[\"property\" + nProp] = arguments[nProp];\n\t    }\n\t}\n\n\tvar myArray = [4, \"Hello world!\", false];\n\tvar myInstance = MyConstructor.construct(myArray);\n\n\talert(myInstance.property1); // alerts \"Hello world!\"\n\talert(myInstance instanceof MyConstructor); // alerts \"true\"\n\talert(myInstance.constructor); // alerts \"MyConstructor\"\n\nNote: This non-native Function.construct method will not work with some native constructors (like Date, for example). In these cases you have to use the Function.bind method (for example, imagine to have an array like the following, to be used with Date constructor: [2012, 11, 4]; in this case you have to write something like: new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))() – anyhow this is not the best way to do things and probably should not be used in any production environment).\nUsing apply and built-in functions\n\nClever usage of apply allows you to use built-ins functions for some tasks that otherwise probably would have been written by looping over the array values. As an example here we are going to use Math.max/Math.min to find out the maximum/minimum value in an array.\n\n\t//min/max number in an array \n\tvar numbers = [5, 6, 2, 3, 7];\n\n\t//using Math.min/Math.max apply \n\tvar max = Math.max.apply(null, numbers); // This about equal to Math.max(numbers[0], ...) or Math.max(5, 6, ..) \n\tvar min = Math.min.apply(null, numbers);\n\n\t/ vs. simple loop based algorithm \n\tmax = -Infinity, min = +Infinity;\n\n\tfor (var i = 0; i < numbers.length; i++) {\n\t  if (numbers[i] > max)\n\t    max = numbers[i];\n\t  if (numbers[i] < min) \n\t    min = numbers[i];\n\t}\n\nBut beware: in using apply this way, you run the risk of exceeding the JavaScript engine's argument length limit. The consequences of applying a function with too many arguments (think more than tens of thousands of arguments) vary across engines (JavaScriptCore has hard-coded argument limit of 65536), because the limit (indeed even the nature of any excessively-large-stack behavior) is unspecified. Some engines will throw an exception. More perniciously, others will arbitrarily limit the number of arguments actually passed to the applied function. (To illustrate this latter case: if such an engine had a limit of four arguments [actual limits are of course significantly higher], it would be as if the arguments 5, 6, 2, 3 had been passed to apply in the examples above, rather than the full array.) If your value array might grow into the tens of thousands, use a hybrid strategy: apply your function to chunks of the array at a time:\n\n\tfunction minOfArray(arr) {\n\t  var min = Infinity;\n\t  var QUANTUM = 32768;\n\n\t  for (var i = 0, len = arr.length; i < len; i += QUANTUM) {\n\t    var submin = Math.min.apply(null, arr.slice(i, Math.min(i + QUANTUM, len)));\n\t    min = Math.min(submin, min);\n\t  }\n\n\t  return min;\n\t}\n\n\tvar min = minOfArray([5, 6, 2, 3, 7]);\nUsing apply in \"monkey-patching\"\n\nApply can be the best way to monkey-patch a builtin function of Firefox, or JS libraries. Given someobject.foo function, you can modify the function in a somewhat hacky way, like so:\n\n\tvar originalfoo = someobject.foo;\n\tsomeobject.foo = function() {\n\t  //Do stuff before calling function\n\t  console.log(arguments);\n\t  //Call the function as it would have been called normally:\n\t  originalfoo.apply(this,arguments);\n\t  //Run stuff after, here.\n\t}\n\nThis method is especially handy where you want to debug events, or interface with something that has no API like the various .on([event]... events, such as those usable on the Devtools Inspector).\n\n\n@param {Object}thisArg The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, null and undefined will be replaced with the global object, and primitive values will be boxed.\n@param {Array} argsArray An array-like object, specifying the arguments with which fun should be called, or null or undefined if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for browser compatibility information.\n\n@returns the result of evaluating this function with given context and parameters\n*/\n\n\n\n\n\n\n\n/*\n@method bind\n\n#Summary\nThe bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\n\n#Syntax\n\tfun.bind(thisArg[, arg1[, arg2[, ...]]])\n\n#Description\nThe bind() function creates a new function (a bound function) with the same function body (internal call property in ECMAScript 5 terms) as the function it is being called on (the bound function's target function) with the this value bound to the first argument of bind(), which cannot be overridden. bind() also accepts leading default arguments to provide to the target function when the bound function is called. A bound function may also be constructed using the new operator: doing so acts as though the target function had instead been constructed. The provided this value is ignored, while prepended arguments are provided to the emulated function.\n\n#Examples\nCreating a bound function\n\nThe simplest use of bind() is to make a function that, no matter how it is called, is called with a particular this value. A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its this (e.g. by using that method in callback-based code). Without special care, however, the original object is usually lost. Creating a bound function from the function, using the original object, neatly solves this problem:\n\n\tthis.x = 9; \n\tvar module = {\n\t  x: 81,\n\t  getX: function() { return this.x; }\n\t};\n\n\tmodule.getX(); // 81\n\n\tvar getX = module.getX;\n\tgetX(); // 9, because in this case, \"this\" refers to the global object\n\n\t// create a new function with 'this' bound to module\n\tvar boundGetX = getX.bind(module);\n\tboundGetX(); // 81\n\n##Partial Functions\n\nThe next simplest use of bind() is to make a function with pre-specified initial arguments. These arguments (if any) follow the provided this value and are then inserted at the start of the arguments passed to the target function, followed by the arguments passed to the bound function, whenever the bound function is called.\n\n\tfunction list() {\n\t  return Array.prototype.slice.call(arguments);\n\t}\n\n\tvar list1 = list(1, 2, 3); // [1, 2, 3]\n\n\t//  Create a function with a preset leading argument\n\tvar leadingThirtysevenList = list.bind(undefined, 37);\n\n\tvar list2 = leadingThirtysevenList(); // [37]\n\tvar list3 = leadingThirtysevenList(1, 2, 3); // [37, 1, 2, 3]\n\n##With setTimeout\n\nBy default within window.setTimeout(), the this keyword will be set to the window (or global) object. When working with class methods that require this to refer to class instances, you may explicitly bind this to the callback function, in order to maintain the instance.\n\n\tfunction LateBloomer() {\n\t  this.petalCount = Math.ceil( Math.random() * 12 ) + 1;\n\t}\n\n\t// declare bloom after a delay of 1 second\n\tLateBloomer.prototype.bloom = function() {\n\t  window.setTimeout( this.declare.bind( this ), 1000 );\n\t};\n\n\tLateBloomer.prototype.declare = function() {\n\t  console.log('I am a beautiful flower with ' + \n\t    this.petalCount + ' petals!');\n\t};\n\n##Bound functions used as constructors\n\nWarning: This section demonstrates JavaScript capabilities and documents some edge cases of the bind() method. The methods shown below are not the best way to do things and probably should not be used in any production environment.\nBound functions are automatically suitable for use with the new operator to construct new instances created by the target function. When a bound function is used to construct a value, the provided this is ignored. However, provided arguments are still prepended to the constructor call:\n\n\tfunction Point(x, y) {\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\n\tPoint.prototype.toString = function() { \n\t  return this.x + \",\" + this.y; \n\t};\n\n\tvar p = new Point(1, 2);\n\tp.toString(); // \"1,2\"\n\n\n\tvar emptyObj = {};\n\tvar YAxisPoint = Point.bind(emptyObj, 0);\n\t// not supported in the polyfill below, works fine with native bind:\n\tvar YAxisPoint = Point.bind(null,0 );\n\n\tvar axisPoint = new YAxisPoint(5);\n\taxisPoint.toString(); //  \"0,5\"\n\n\taxisPoint instanceof Point; // true\n\taxisPoint instanceof YAxisPoint; // true\n\tnew Point(17, 42) instanceof YAxisPoint; // false\nNote that you need do nothing special to create a bound function for use with new. The corollary is that you need do nothing special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using new.\n\n\t// Example can be run directly in your JavaScript console\n\t// ...continuing from above\n\n\t// Can still be called as a normal function \n\t// (although usually this is undesired)\n\tYAxisPoint(13);\n\n\temptyObj.x + \",\" + emptyObj.y;\n\t// >  \"0,13\"\nIf you wish to support use of a bound function only using new, or only by calling it, the target function must enforce that restriction.\n\n##Creating shortcuts\n\nbind() is also helpful in cases where you want to create a shortcut to a function which requires a specific this value.\n\nTake Array.prototype.slice, for example, which you want to use for converting an array-like object to a real array. You could create a shortcut like this:\n\n\tvar slice = Array.prototype.slice;\n\n\t// ...\n\n\tslice.call(arguments);\n\tWith bind(), this can be simplified. In the following piece of code, slice is a bound function to the call() function of Function.prototype, with the this value set to the slice() function of Array.prototype. This means that additional call() calls can be eliminated:\n\n\t// same as \"slice\" in the previous example\n\tvar unboundSlice = Array.prototype.slice;\n\tvar slice = Function.prototype.call.bind(unboundSlice);\n\n\t// ...\n\n\tslice(arguments);\n#Polyfill\nThe bind function is a recent addition to ECMA-262, 5th edition; as such it may not be present in all browsers. You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of bind() in implementations that do not natively support it.\n\n\tif (!Function.prototype.bind) {\n\t  Function.prototype.bind = function (oThis) {\n\t    if (typeof this !== \"function\") {\n\t      // closest thing possible to the ECMAScript 5\n\t      // internal IsCallable function\n\t      throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t    }\n\n\t    var aArgs = Array.prototype.slice.call(arguments, 1), \n\t        fToBind = this, \n\t        fNOP = function () {},\n\t        fBound = function () {\n\t          return fToBind.apply(this instanceof fNOP && oThis\n\t                 ? this\n\t                 : oThis,\n\t                 aArgs.concat(Array.prototype.slice.call(arguments)));\n\t        };\n\n\t    fNOP.prototype = this.prototype;\n\t    fBound.prototype = new fNOP();\n\n\t    return fBound;\n\t  };\n\t}\n\nSome of the many differences (there may well be others, as this list does not seriously attempt to be exhaustive) between this algorithm and the specified algorithm are:\n\nThe partial implementation relies Array.prototype.slice, Array.prototype.concat, Function.prototype.call and Function.prototype.apply, built-in methods to have their original values.\nThe partial implementation creates functions that do not have immutable \"poison pill\" caller and arguments properties that throw a TypeError upon get, set, or deletion. (This could be added if the implementation supports Object.defineProperty, or partially implemented [without throw-on-delete behavior] if the implementation supports the __defineGetter__ and __defineSetter__ extensions.)\nThe partial implementation creates functions that have a prototype property. (Proper bound functions have none.)\nThe partial implementation creates bound functions whose length property does not agree with that mandated by ECMA-262: it creates functions with length 0, while a full implementation, depending on the length of the target function and the number of pre-specified arguments, may return a non-zero length.\nIf you choose to use this partial implementation, you must not rely on those cases where behavior deviates from ECMA-262, 5th edition! With some care, however (and perhaps with additional modification to suit specific needs), this partial implementation may be a reasonable bridge to the time when bind() is widely implemented according to the specification.\n\n@param thisArg The value to be passed as the this parameter to the target function when the bound function is called. The value is ignored if the bound function is constructed using the new operator.\n@param args Arguments to prepend to arguments provided to the bound function when invoking the target function.\n\n*/\n\n\n\n\n\n\n/*\n@method call\n\n#Summary\nThe call() method calls a function with a given this value and arguments provided individually.\n\nNOTE: While the syntax of this function is almost identical to that of apply(), the fundamental difference is that call() accepts an argument list, while apply() accepts a single array of arguments.\n#Syntax\n\tfun.call(thisArg[, arg1[, arg2[, ...]]])\n\n#Description\nYou can assign a different this object when calling an existing function. this refers to the current object, the calling object.\n\nWith call, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.\n\n#Examples\n##Using call to chain constructors for an object\n\nYou can use call to chain constructors for an object, similar to Java. In the following example, the constructor for the Product object is defined with two parameters, name and price. Two other functions Food and Toy invoke Product passing this and name and price. Product initializes the properties name and price, both specialized functions define the category.\n\n\tfunction Product(name, price) {\n\t  this.name = name;\n\t  this.price = price;\n\n\t  if (price < 0) {\n\t    throw RangeError('Cannot create product ' +\n\t                      this.name + ' with a negative price');\n\t  }\n\n\t  return this;\n\t}\n\n\tfunction Food(name, price) {\n\t  Product.call(this, name, price);\n\t  this.category = 'food';\n\t}\n\n\tFood.prototype = Object.create(Product.prototype);\n\n\tfunction Toy(name, price) {\n\t  Product.call(this, name, price);\n\t  this.category = 'toy';\n\t}\n\n\tToy.prototype = Object.create(Product.prototype);\n\n\tvar cheese = new Food('feta', 5);\n\tvar fun = new Toy('robot', 40);\n \n##Using call to invoke an anonymous function\n\nIn this purely constructed example, we create anonymous function and use call to invoke it on every object in an array. The main purpose of the anonymous function here is to add a print function to every object, which is able to print the right index of the object in the array. Passing the object as this value was not strictly necessary, but is done for explanatory purpose.\n\n\tvar animals = [\n\t  {species: 'Lion', name: 'King'},\n\t  {species: 'Whale', name: 'Fail'}\n\t];\n\n\tfor (var i = 0; i < animals.length; i++) {\n\t  (function (i) { \n\t    this.print = function () { \n\t      console.log('#' + i  + ' ' + this.species \n\t                  + ': ' + this.name); \n\t    } \n\t    this.print();\n\t  }).call(animals[i], i);\n\t}\n\n\n@param thisArg The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, null and undefined will be replaced with the global object, and primitive values will be boxed.\n@param arg1,arg2,... Arguments for the object.\n\n*/\n\n\n\n\n/*\n@method toString\n#Summary\nThe toString() method returns a string representing the source code of the function.\n\n#Syntax\n\tfunction.toString(indentation)\n#Description\nThe Function object overrides the toString method inherited from Object; it does not inherit Object.prototype.toString. For Function objects, the toString method returns a string representation of the object in the form of a function declaration. That is, toString decompiles the function, and the string returned includes the function keyword, the argument list, curly braces, and the source of the function body.\n\nJavaScript calls the toString method automatically when a Function is to be represented as a text value, e.g. when a function is concatenated with a string.\n\n@return {String}\n*/\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js\n\n/*\n@module javascript\n@class Number\n\n#Summary\nThe Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor.\n\n#Constructor\n\tnew Number(value);\n\n#Description\nThe primary uses for the Number object are:\n\nIf the argument cannot be converted into a number, it returns NaN.\nIn a non-constructor context (i.e., without the new operator, Number can be used to perform a type conversion.\n\n\n#Examples\n##Example: Using the Number object to assign values to numeric variables\n\nThe following example uses the Number object's properties to assign values to several numeric variables:\n\n\tvar biggestNum = Number.MAX_VALUE;\n\tvar smallestNum = Number.MIN_VALUE;\n\tvar infiniteNum = Number.POSITIVE_INFINITY;\n\tvar negInfiniteNum = Number.NEGATIVE_INFINITY;\n\tvar notANum = Number.NaN;\n##Example: Integer range for Number\n\nThe following example shows minimum and maximum integer values that can be represented as Number object (for details, refer to EcmaScript standard, chapter 8.5 The Number Type):\n\n\tvar biggestInt = 9007199254740992;\n\tvar smallestInt = -9007199254740992;\n\nWhen parsing data that has been serialized to JSON, integer values falling out of this range can be expected to become corrupted when JSON parser coerces them to Number type. Using String instead is a possible workaround.\n\n##Example: Using Number to convert a Date object\n\nThe following example converts the Date object to a numerical value using Number as a function:\n\n\tvar d = new Date(\"December 17, 1995 03:24:00\");\n\tprint(Number(d));\n\nThis displays \"819199440000\".\n\n*/\n\n/*\n@constructor Number\n@param {Any}value The numeric value of the object being created.\n*/\n\n\n\n\n\n\n/*\n@property {Number} MAX_VALUE\n\n#Summary\nThe Number.MAX_VALUE property represents the maximum numeric value representable in JavaScript.\n\n#Description\nThe MAX_VALUE property has a value of approximately 1.79E+308. Values larger than MAX_VALUE are represented as \"Infinity\".\n\nBecause MAX_VALUE is a static property of Number, you always use it as Number.MAX_VALUE, rather than as a property of a Number object you created.\n\n#Examples\n##Example: Using MAX_VALUE\n\n\tThe following code multiplies two numeric values. If the result is less than or equal to MAX_VALUE, the func1 function is called; otherwise, the func2 function is called.\n\n\tif (num1 * num2 <= Number.MAX_VALUE) {\n\t   func1();\n\t} else {\n\t   func2();\n\t}\n\n@static\n\n*/\n\n\n\n/*\n@property {Number} MIN_VALUE\n\n#Summary\nThe Number.MIN_VALUE property represents the smallest positive numeric value representable in JavaScript.\n\n#Description\nThe MIN_VALUE property is the number closest to 0, not the most negative number, that JavaScript can represent.\n\nMIN_VALUE has a value of approximately 5e-324. Values smaller than MIN_VALUE (\"underflow values\") are converted to 0.\n\nBecause MIN_VALUE is a static property of Number, you always use it as Number.MIN_VALUE, rather than as a property of a Number object you created.\n\n#Examples\n##Example: Using MIN_VALUE\n\nThe following code divides two numeric values. If the result is greater than or equal to MIN_VALUE, the func1 function is called; otherwise, the func2 function is called.\n\n\tif (num1 / num2 >= Number.MIN_VALUE) {\n\t    func1();\n\t} else {\n\t    func2();\n\t}\n\n@static\n*/\n\n\n\n\n/*\n@property {Number}NEGATIVE_INFINITY\n\n#Summary\nThe Number.NEGATIVE_INFINITY property represents the negative Infinity value.\n\nYou do not have to create a Number object to access this static property (use Number.NEGATIVE_INFINITY).\n\n#Description\nThe value of Number.NEGATIVE_INFINITY is the same as the negative value of the global object's Infinity property.\n\nThis value behaves slightly differently than mathematical infinity:\n\n* Any positive value, including POSITIVE_INFINITY, multiplied by NEGATIVE_INFINITY is NEGATIVE_INFINITY.\n* Any negative value, including NEGATIVE_INFINITY, multiplied by NEGATIVE_INFINITY is POSITIVE_INFINITY.\n* Zero multiplied by NEGATIVE_INFINITY is NaN.\n* NaN multiplied by NEGATIVE_INFINITY is NaN.\n* NEGATIVE_INFINITY, divided by any negative value except NEGATIVE_INFINITY, is POSITIVE_INFINITY.\n* NEGATIVE_INFINITY, divided by any positive value except POSITIVE_INFINITY, is NEGATIVE_INFINITY.\n* NEGATIVE_INFINITY, divided by either NEGATIVE_INFINITY or POSITIVE_INFINITY, is NaN.\n* Any number divided by NEGATIVE_INFINITY is zero.\n\nYou might use the Number.NEGATIVE_INFINITY property to indicate an error condition that returns a finite number in case of success. Note, however, that isFinite would be more appropriate in such a case.\n\n#Example\nIn the following example, the variable smallNumber is assigned a value that is smaller than the minimum value. When the if statement executes, smallNumber has the value \"-Infinity\", so smallNumber is set to a more manageable value before continuing.\n\n\tvar smallNumber = (-Number.MAX_VALUE) * 2\n\n\tif (smallNumber == Number.NEGATIVE_INFINITY) {\n\t smallNumber = returnFinite();\n\t}\n\n@static\n*/\n\n\n\n/*\n@property {Number} NaN\n#Summary\nThe Number.NaN property represents Not-A-Number. Equivalent of NaN.\n\nYou do not have to create a Number object to access this static property (use Number.NaN).\n@static\n*/\n\n\n\n/*\n@property {Number}POSITIVE_INFINITY\n\n#Summary\nThe Number.POSITIVE_INFINITY property represents the positive Infinity value.\n\nYou do not have to create a Number object to access this static property (use Number.POSITIVE_INFINITY).\n\n#Description\nThe value of Number.POSITIVE_INFINITY is the same as the value of the global object's Infinity property.\n\nThis value behaves slightly differently than mathematical infinity:\n\n* Any positive value, including POSITIVE_INFINITY, multiplied by POSITIVE_INFINITY is POSITIVE_INFINITY.\n* Any negative value, including NEGATIVE_INFINITY, multiplied by POSITIVE_INFINITY is NEGATIVE_INFINITY.\n* Zero multiplied by POSITIVE_INFINITY is NaN.\n* NaN multiplied by POSITIVE_INFINITY is NaN.\n* POSITIVE_INFINITY, divided by any negative value except NEGATIVE_INFINITY, is NEGATIVE_INFINITY.\n* POSITIVE_INFINITY, divided by any positive value except POSITIVE_INFINITY, is POSITIVE_INFINITY.\n* POSITIVE_INFINITY, divided by either NEGATIVE_INFINITY or POSITIVE_INFINITY, is NaN.\n* Any number divided by POSITIVE_INFINITY is Zero.\n* You might use the Number.POSITIVE_INFINITY property to indicate an error condition that returns a finite number in case of success. Note, however, that isFinite would be more appropriate in such a case.\n\n#Example\nIn the following example, the variable bigNumber is assigned a value that is larger than the maximum value. When the if statement executes, bigNumber has the value \"Infinity\", so bigNumber is set to a more manageable value before continuing.\n\n\tvar bigNumber = Number.MAX_VALUE * 2\n\tif (bigNumber == Number.POSITIVE_INFINITY) {\n\t bigNumber = returnFinite();\n\t}\n\n@static \n*/\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js\n\n/*\n@module javascript\n\n@class Object\nAdapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\n\n#Description\nThe Object constructor creates an object wrapper for the given value. If the value is null or undefined, it will create and return an empty object, otherwise, it will return an object of a Type that corresponds to the given value. If the value is an object already, it will return the value.\n\nWhen called in a non-constructor context, Object behaves identically to new Object().\n\n#Object instances and Object prototype object\nAll objects in JavaScript are descended from Object; all objects inherit methods and properties from Object.prototype, although they may be overridden. For example, other constructors' prototypes override the constructor property and provide their own toString methods. Changes to the Object prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.\n\n#Examples\n##Example: Using Object given undefined and null types\n\nThe following examples store an empty Object object in o:\n\n\tvar o = new Object();\n\tvar o = new Object(undefined);\n\tvar o = new Object(null);\n##Example: Using Object to create Boolean objects\n\nThe following examples store Boolean objects in o:\n\n\t// equivalent to o = new Boolean(true);\n\tvar o = new Object(true);\n\t// equivalent to o = new Boolean(false);\n\tvar o = new Object(Boolean());\n\n\n@property {ObjectPrototype} prototype\n\n@static \n\n*/\n\n/*\n@constructor bla bla\n\n\t// Object initialiser or literal \n\t{ [ nameValuePair1 [, nameValuePair2 [, ...nameValuePairN] ] ] }  \n\t// Called as a constructor \n\tnew Object( [ value ] )\n\n@param nameValuePair1,nameValuePair2,...nameValuePairN Pairs of names (strings) and values (any value) where the name is separated from the value by a colon.\n@param value Any value.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n@method __defineGetter__()  \nAssociates a function with a property that, when accessed, executes that function and returns its return value.\n*/\n\n\n\n\n\n\n\n\n\n\n\n/*\n@method hasOwnProperty\n##Summary\nThe hasOwnProperty() method returns a boolean indicating whether the object has the specified property.\n\n##Syntax\nobj.hasOwnProperty(prop)\n\n##Examples\n###Example: Using hasOwnProperty to test for a property's existence\n\nThe following example determines whether the o object contains a property named prop:\n\n\to = new Object();\n\to.prop = 'exists';\n\n\tfunction changeO() {\n\t  o.newprop = o.prop;\n\t  delete o.prop;\n\t}\n\n\to.hasOwnProperty('prop');   // returns true\n\tchangeO();\n\to.hasOwnProperty('prop');   // returns false\n\n###Example: Direct versus inherited properties\n\nThe following example differentiates between direct properties and properties inherited through the prototype chain:\n\n\to = new Object();\n\to.prop = 'exists';\n\to.hasOwnProperty('prop');             // returns true\n\to.hasOwnProperty('toString');         // returns false\n\to.hasOwnProperty('hasOwnProperty');   // returns false\n\n##Example: Iterating over the properties of an object\n\nThe following example shows how to iterate over the properties of an object without executing on inherit properties. Note that the for..in loop is already only iterating enumerable items, so one should not assume based on the lack of non-enumerable properties shown in the loop that hasOwnProperty itself is confined strictly to enumerable items (as with Object.getOwnPropertyNames()).\n\n\tvar buz = {\n\t    fog: 'stack'\n\t};\n\n\tfor (var name in buz) {\n\t    if (buz.hasOwnProperty(name)) {\n\t        alert(\"this is fog (\" + name + \") for sure. Value: \" + buz[name]);\n\t    }\n\t    else {\n\t        alert(name); // toString or something else\n\t    }\n\t}\n\n###Example: hasOwnProperty as a property\n\nJavaScript does not protect the property name hasOwnProperty; thus, if the possibility exists that an object might have a property with this name, it is necessary to use an external hasOwnProperty to get correct results:\n\n\tvar foo = {\n\t    hasOwnProperty: function() {\n\t        return false;\n\t    },\n\t    bar: 'Here be dragons'\n\t};\n\n\tfoo.hasOwnProperty('bar'); // always returns false\n\n\t// Use another Object's hasOwnProperty and call it with 'this' set to foo\n\t({}).hasOwnProperty.call(foo, 'bar'); // true\n\n\t// It's also possible to use the hasOwnProperty property from the Object property for this purpose\n\tObject.prototype.hasOwnProperty.call(foo, 'bar'); // true\n\nNote that in the last case there are no newly created objects.\n\n@param param The name of the property to test.\n\n*/\n\n\n\n\n\n\n\n\n/*\n@method isPrototypeOf\n##Summary\nThe isPrototypeOf() method tests for an object in another object's prototype chain.\n\n\tNote: isPrototypeOf differs from the instanceof operator. In the expression \"object instanceof AFunction\", the object prototype chain is checked against AFunction.prototype, not against AFunction itself.\n\nThe isPrototypeOf method allows you to check whether or not an object exists within another object's prototype chain.\n\nFor example, consider the following prototype chain:\n\n\tfunction Fee() {\n\t  // . . .\n\t}\n\n\tfunction Fi() {\n\t  // . . .\n\t}\n\tFi.prototype = new Fee();\n\n\tfunction Fo() {\n\t  // . . .\n\t}\n\tFo.prototype = new Fi();\n\n\tfunction Fum() {\n\t  // . . .\n\t}\n\tFum.prototype = new Fo();\n\nLater on down the road, if you instantiate Fum and need to check if Fi's prototype exists within the Fum prototype chain, you could do this:\n\n\tvar fum = new Fum();\n\t. . .\n\t\n\tif (Fi.prototype.isPrototypeOf(fum)) {\n\t  // do something safe\n\t}\nThis, along with the instanceof operator particularly comes in handy if you have code that can only function when dealing with objects descended from a specific prototype chain, e.g., to guarantee that certain methods or properties will be present on that object.\n\n\n@param {Object} obj the object whose prototype chain will be searched\n*/\n\n\n\n\n\n/*\n@method propertyIsEnumerable\n##Summary\nThe propertyIsEnumerable() method returns a Boolean indicating whether the specified property is enumerable.\n\n##Description\nEvery object has a propertyIsEnumerable method. This method can determine whether the specified property in an object can be enumerated by a for...in loop, with the exception of properties inherited through the prototype chain. If the object does not have the specified property, this method returns false.\n\n##Examples\n###Example: A basic use of propertyIsEnumerable\n\nThe following example shows the use of propertyIsEnumerable on objects and arrays:\n\n\tvar o = {};\n\tvar a = [];\n\to.prop = 'is enumerable';\n\ta[0] = 'is enumerable';\n\n\to.propertyIsEnumerable('prop');   // returns true\n\ta.propertyIsEnumerable(0);        // returns true\n\n###Example: User-defined versus built-in objects\n\nThe following example demonstrates the enumerability of user-defined versus built-in properties:\n\n\tvar a = ['is enumerable'];\n\n\ta.propertyIsEnumerable(0);          // returns true\n\ta.propertyIsEnumerable('length');   // returns false\n\n\tMath.propertyIsEnumerable('random');   // returns false\n\tthis.propertyIsEnumerable('Math');     // returns false\n\tExample: Direct versus inherited properties\n\n\tvar a = [];\n\ta.propertyIsEnumerable('constructor');         // returns false\n\n\tfunction firstConstructor() {\n\t  this.property = 'is not enumerable';\n\t}\n\n\tfirstConstructor.prototype.firstMethod = function () {};\n\n\tfunction secondConstructor() {\n\t  this.method = function method() { return 'is enumerable'; };\n\t}\n\n\tsecondConstructor.prototype = new firstConstructor;\n\tsecondConstructor.prototype.constructor = secondConstructor;\n\n\tvar o = new secondConstructor();\n\to.arbitraryProperty = 'is enumerable';\n\n\to.propertyIsEnumerable('arbitraryProperty');   // returns true\n\to.propertyIsEnumerable('method');              // returns true\n\to.propertyIsEnumerable('property');            // returns false\n\n\to.property = 'is enumerable';\n\n\to.propertyIsEnumerable('property');            // returns true\n\n\t// These return false as they are on the prototype which \n\t// propertyIsEnumerable does not consider (even though the last two\n\t// are iteratable with for-in)\n\to.propertyIsEnumerable('prototype');   // returns false (as of JS 1.8.1/FF3.6)\n\to.propertyIsEnumerable('constructor'); // returns false\n\to.propertyIsEnumerable('firstMethod'); // returns false\n\n@param prop\nThe name of the property to test.\n*/\n\n\n\n\n/*\n@method toLocaleString\n##Summary\nThe toLocaleString() method returns a string representing the object. This method is meant to be overriden by derived objects for locale-specific purposes.\n\n##Syntax\nobj.toLocaleString();\n##Description\nObject's toLocaleString returns the result of calling toString().\n\nThis function is provided to give objects a generic toLocaleString method, even though not all may use it. See the list below.\n\n##Objects overriding toLocaleString\n\nArray: Array.prototype.toLocaleString()\nNumber: Number.prototype.toLocaleString()\nDate: Date.prototype.toLocaleString()\n*/\n\n\n\n\n\n/*\n@method toString\n##Summary\nThe toString() method returns a string representing object.\n\n##Syntax\nobj.toString()\n##Description\nEvery object has a toString() method that is automatically called when the object is to be represented as a text value or when an object is referred to in a manner in which a string is expected. By default, the toString() method is inherited by every object descended from Object. If this method is not overridden in a custom object, toString() returns \"[object type]\", where type is the object type. The following code illustrates this:\n\nvar o = new Object();\no.toString();           // returns [object Object]\nStarting in JavaScript 1.8.5 toString() called on null returns [object Null], and undefined returns [object Undefined], as defined in the 5th Edition of ECMAScript and a subsequent Errata. See Using toString to detect object type.\n##Examples\n###Overriding the default toString method\n\nYou can create a function to be called in place of the default toString() method. The toString() method takes no arguments and should return a string. The toString() method you create can be any value you want, but it will be most useful if it carries information about the object.\n\nThe following code defines the Dog object type and creates theDog, an object of type Dog:\n\n\tfunction Dog(name,breed,color,sex) {\n\t   this.name=name;\n\t   this.breed=breed;\n\t   this.color=color;\n\t   this.sex=sex;\n\t}\n\n\ttheDog = new Dog(\"Gabby\",\"Lab\",\"chocolate\",\"female\");\nIf you call the toString() method on this custom object, it returns the default value inherited from Object:\n\n\ttheDog.toString(); //returns [object Object]\n\tThe following code creates and assigns dogToString() to override the default toString() method. This function generates a string containing the name, breed, color, and sex of the object, in the form \"property = value;\".\n\n\tDog.prototype.toString = function dogToString() {\n\t  var ret = \"Dog \" + this.name + \" is a \" + this.sex + \" \" + this.color + \" \" + this.breed;\n\t  return ret;\n\t}\nWith the preceding code in place, any time theDog is used in a string context, JavaScript automatically calls the dogToString() function, which returns the following string:\n\nDog Gabby is a female chocolate Lab\nUsing toString() to detect object class\n\ntoString() can be used with every object and allows you to get its class. To use the Object.prototype.toString() with every object, you need to call Function.prototype.call() or Function.prototype.apply() on it, passing the object you want to inspect as the first parameter called thisArg.\n\n\tvar toString = Object.prototype.toString;\n\n\ttoString.call(new Date); // [object Date]\n\ttoString.call(new String); // [object String]\n\ttoString.call(Math); // [object Math]\n\n\t//Since JavaScript 1.8.5\n\ttoString.call(undefined); // [object Undefined]\n\ttoString.call(null); // [object Null]\n*/\n\n\n\n\n\n\n\n\n\n\n\n/*\n@method create\n\n#Summary\nThe Object.create() method creates a new object with the specified prototype object and properties.\n\n#Syntax\n\tObject.create(proto[, propertiesObject])\n\n#Examples\n\n##Example: Classical inheritance with Object.create\n\nBelow is an example of how to use Object.create to achieve classical inheritance. This is for single inheritance, which is all that Javascript supports.\n\n\t// Shape - superclass\n\tfunction Shape() {\n\t  this.x = 0;\n\t  this.y = 0;\n\t}\n\n\t// superclass method\n\tShape.prototype.move = function(x, y) {\n\t  this.x += x;\n\t  this.y += y;\n\t  console.info('Shape moved.');\n\t};\n\n\t// Rectangle - subclass\n\tfunction Rectangle() {\n\t  Shape.call(this); // call super constructor.\n\t}\n\n\t// subclass extends superclass\n\tRectangle.prototype = Object.create(Shape.prototype);\n\tRectangle.prototype.constructor = Rectangle;\n\n\tvar rect = new Rectangle();\n\n\trect instanceof Rectangle; // true\n\trect instanceof Shape; // true\n\n\trect.move(1, 1); // Outputs, 'Shape moved.'\n\tIf you wish to inherit from multiple objects, then mixins are a possibility.\n\n\tfunction MyClass() {\n\t  SuperClass.call(this);\n\t  OtherSuperClass.call(this);\n\t}\n\n\tMyClass.prototype = Object.create(SuperClass.prototype); // inherit\n\tmixin(MyClass.prototype, OtherSuperClass.prototype); // mixin\n\n\tMyClass.prototype.myMethod = function() {\n\t  // do a thing\n\t};\n\nThe mixin function would copy the functions from the superclass prototype to the subclass prototype, the mixin function needs to be supplied by the user. An example of a mixin like function would be jQuery.extend.\n\n##Example: Using propertiesObject argument with Object.create\n\n\tvar o;\n\n\t// create an object with null as prototype\n\to = Object.create(null);\n\n\n\to = {};\n\t// is equivalent to:\n\to = Object.create(Object.prototype);\n\n\n\t// Example where we create an object with a couple of sample properties.\n\t// (Note that the second parameter maps keys to *property descriptors*.)\n\to = Object.create(Object.prototype, {\n\t  // foo is a regular 'value property'\n\t  foo: { writable: true, configurable: true, value: 'hello' },\n\t  // bar is a getter-and-setter (accessor) property\n\t  bar: {\n\t    configurable: false,\n\t    get: function() { return 10; },\n\t    set: function(value) { console.log('Setting `o.bar` to', value); }\n\t  }\n\t});\n\n\n\tfunction Constructor() {}\n\to = new Constructor();\n\t// is equivalent to:\n\to = Object.create(Constructor.prototype);\n\t// Of course, if there is actual initialization code in the\n\t// Constructor function, the Object.create cannot reflect it\n\n\n\t// create a new object whose prototype is a new, empty object\n\t// and a adding single property 'p', with value 42\n\to = Object.create({}, { p: { value: 42 } });\n\n\t// by default properties ARE NOT writable, enumerable or configurable:\n\to.p = 24;\n\to.p;\n\t// 42\n\n\to.q = 12;\n\tfor (var prop in o) {\n\t  console.log(prop);\n\t}\n\t// 'q'\n\n\tdelete o.p;\n\t// false\n\n\t// to specify an ES3 property\n\to2 = Object.create({}, {\n\t  p: {\n\t    value: 42,\n\t    writable: true,\n\t    enumerable: true,\n\t    configurable: true\n\t  }\n\t});\n\n##Polyfill\nThis polyfill covers the main use case which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.\n\n\tif (typeof Object.create != 'function') {\n\t  Object.create = (function() {\n\t    var Object = function() {};\n\t    return function (prototype) {\n\t      if (arguments.length > 1) {\n\t        throw Error('Second argument not supported');\n\t      }\n\t      if (typeof prototype != 'object') {\n\t        throw TypeError('Argument must be an object');\n\t      }\n\t      Object.prototype = prototype;\n\t      var result = new Object();\n\t      Object.prototype = null;\n\t      return result;\n\t    };\n\t  })();\n\t}\n\n@static\n\n@param {Object} proto The object which should be the prototype of the newly-created object.\n\n@param {Object} propertiesObject If specified and not undefined, an object whose enumerable own properties (that is, those properties defined upon itself and not enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of Object.defineProperties(). @optional\n\n@throws Throws a TypeError exception if the proto parameter isn't null or an object.\n\n*/\n\n\n\n\n\n\n\n\n/*\n@method defineProperties\n\n#Summary\nThe Object.defineProperties() method defines new or modifies existing properties directly on an object, returning the object.\n\n#Syntax\n\tObject.defineProperties(obj, props)\n\n#Description\nObject.defineProperties, in essence, defines all properties corresponding to the enumerable own properties of props on the object obj object.\n\n#Example\n\n\tObject.defineProperties(obj, {\n\t  \"property1\": {\n\t    value: true,\n\t    writable: true\n\t  },\n\t  \"property2\": {\n\t    value: \"Hello\",\n\t    writable: false\n\t  }\n\t  // etc. etc.\n\t});\n\n\n# Polyfill\n\nAssuming a pristine execution environment with all names and properties referring to their initial values, Object.defineProperties is almost completely equivalent (note the comment in isCallable) to the following reimplementation in JavaScript:\n\n\tfunction defineProperties(obj, properties) {\n\t  function convertToDescriptor(desc) {\n\t    function hasProperty(obj, prop) {\n\t      return Object.prototype.hasOwnProperty.call(obj, prop);\n\t    }\n\n\t    function isCallable(v) {\n\t      // NB: modify as necessary if other values than functions are callable.\n\t      return typeof v === \"function\";\n\t    }\n\n\t    if (typeof desc !== \"object\" || desc === null)\n\t      throw new TypeError(\"bad desc\");\n\n\t    var d = {};\n\n\t    if (hasProperty(desc, \"enumerable\"))\n\t      d.enumerable = !!obj.enumerable;\n\t    if (hasProperty(desc, \"configurable\"))\n\t      d.configurable = !!obj.configurable;\n\t    if (hasProperty(desc, \"value\"))\n\t      d.value = obj.value;\n\t    if (hasProperty(desc, \"writable\"))\n\t      d.writable = !!desc.writable;\n\t    if (hasProperty(desc, \"get\")) {\n\t      var g = desc.get;\n\n\t      if (!isCallable(g) && typeof g !== \"undefined\")\n\t        throw new TypeError(\"bad get\");\n\t      d.get = g;\n\t    }\n\t    if (hasProperty(desc, \"set\")) {\n\t      var s = desc.set;\n\t      if (!isCallable(s) && typeof s !== \"undefined\")\n\t        throw new TypeError(\"bad set\");\n\t      d.set = s;\n\t    }\n\n\t    if ((\"get\" in d || \"set\" in d) && (\"value\" in d || \"writable\" in d))\n\t      throw new TypeError(\"identity-confused descriptor\");\n\n\t    return d;\n\t  }\n\n\t  if (typeof obj !== \"object\" || obj === null)\n\t    throw new TypeError(\"bad obj\");\n\n\t  properties = Object(properties);\n\n\t  var keys = Object.keys(properties);\n\t  var descs = [];\n\n\t  for (var i = 0; i < keys.length; i++)\n\t    descs.push([keys[i], convertToDescriptor(properties[keys[i]])]);\n\n\t  for (var i = 0; i < descs.length; i++)\n\t    Object.defineProperty(obj, descs[i][0], descs[i][1]);\n\n\t  return obj;\n\t} \n\n\n@static \n\n@param {Object} obj The object on which to define or modify properties.\n@param {Object} props An object whose own enumerable properties constitute descriptors for the properties to be defined or modified.\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n/*\n@method defineProperty\n\n#Summary\nThe Object.defineProperty() method defines a new property directly on an object, or modifies an existing property on an object, and returns the object.\n\n#Syntax\nObject.defineProperty(obj, prop, descriptor)\n\n#Description\nThis method allows precise addition to or modification of a property on an object. Normal property addition through assignment creates properties which show up during property enumeration (for...in loop or Object.keys method), whose values may be changed, and which may be deleted. This method allows these extra details to be changed from their defaults.\n\nProperty descriptors present in objects come in two main flavors: data descriptors and accessor descriptors. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter pair of functions. A descriptor must be one of these two flavors; it cannot be both.\n\nBoth data and accessor descriptors are objects. They share the following optional keys:\n\n###configurable\ntrue if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.\nDefaults to false.\n\n###enumerable\ntrue if and only if this property shows up during enumeration of the properties on the corresponding object.\nDefaults to false.\nA data descriptor also has the following optional keys:\n\n###value\nThe value associated with the property. Can be any valid JavaScript value (number, object, function, etc).\nDefaults to undefined.\nwritable\ntrue if and only if the value associated with the property may be changed with an assignment operator.\nDefaults to false.\nAn accessor descriptor also has the following optional keys:\n\n###get\nA function which serves as a getter for the property, or undefined if there is no getter. The function return will be used as the value of property.\nDefaults to undefined.\n\n###set\nA function which serves as a setter for the property, or undefined if there is no setter. The function will receive as only argument the new value being assigned to the property.\nDefaults to undefined.\nBear in mind that these options are not necessarily own properties so, if inherited, will be considered too. In order to ensure these defaults are preserved you might freeze the Object.prototype upfront, specify all options explicitly, or point to null as __proto__ property.\n\n\t// using __proto__\n\tObject.defineProperty(obj, 'key', {\n\t  __proto__: null, // no inherited properties\n\t  value: 'static'  // not enumerable\n\t                   // not configurable\n\t                   // not writable\n\t                   // as defaults\n\t});\n\n\t// being explicit\n\tObject.defineProperty(obj, 'key', {\n\t  enumerable: false,\n\t  configurable: false,\n\t  writable: false,\n\t  value: 'static'\n\t});\n\n\t// recycling same object\n\tfunction withValue(value) {\n\t  var d = withValue.d || (\n\t    withValue.d = {\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false,\n\t      value: null\n\t    }\n\t  );\n\t  d.value = value;\n\t  return d;\n\t}\n\t// ... and ...\n\tObject.defineProperty(obj, 'key', withValue('static'));\n\n\t// if freeze is available, prevents the code to add\n\t// value, get, set, enumerable, writable, configurable\n\t// to the Object prototype\n\t(Object.freeze || Object)(Object.prototype);\n\n#Examples\n\nIf you want to see how to use the Object.defineProperty method with a binary-flags-like syntax, see additional examples.\n\n##Example: Creating a property\n\nWhen the property specified doesn't exist in the object, Object.defineProperty() creates a new property as described. Fields may be omitted from the descriptor, and default values for those fields are imputed. All of the Boolean-valued fields default to false. The value, get, and set fields default to undefined. A property which is defined without get/set/value/writable is called “generic” and is “typed” as a data descriptor.\n\n\tvar o = {}; // Creates a new object\n\n\t// Example of an object property added with defineProperty with a data property descriptor\n\tObject.defineProperty(o, 'a', {\n\t  value: 37,\n\t  writable: true,\n\t  enumerable: true,\n\t  configurable: true\n\t});\n\t// 'a' property exists in the o object and its value is 37\n\n\t// Example of an object property added with defineProperty with an accessor property descriptor\n\tvar bValue = 38;\n\tObject.defineProperty(o, 'b', {\n\t  get: function() { return bValue; },\n\t  set: function(newValue) { bValue = newValue; },\n\t  enumerable: true,\n\t  configurable: true\n\t});\n\to.b; // 38\n\t// 'b' property exists in the o object and its value is 38\n\t// The value of o.b is now always identical to bValue, unless o.b is redefined\n\n\t// You cannot try to mix both:\n\tObject.defineProperty(o, 'conflict', {\n\t  value: 0x9f91102,\n\t  get: function() { return 0xdeadbeef; }\n\t});\n\t// throws a TypeError: value appears only in data descriptors, get appears only in accessor descriptors\n\n##Example: Modifying a property\n\nWhen the property already exists, Object.defineProperty() attempts to modify the property according to the values in the descriptor and the object's current configuration. If the old descriptor had its configurable attribute set to false (the property is said to be “non-configurable”), then no attribute besides writable can be changed. In that case, it is also not possible to switch back and forth between the data and accessor property types.\n\nIf a property is non-configurable, its writable attribute can only be changed to false.\n\nA TypeError is thrown when attempts are made to change non-configurable property attributes (besides the writable attribute) unless the current and new values are the same.\n\n##Writable attribute\n\nWhen the writable property attribute is set to false, the property is said to be “non-writable”. It cannot be reassigned.\n\n\tvar o = {}; // Creates a new object\n\n\tObject.defineProperty(o, 'a', {\n\t  value: 37,\n\t  writable: false\n\t});\n\n\tconsole.log(o.a); // logs 37\n\to.a = 25; // No error thrown (it would throw in strict mode, even if the value had been the same)\n\tconsole.log(o.a); // logs 37. The assignment didn't work.\n\nAs seen in the example, trying to write into the non-writable property doesn't change it but doesn't throw an error either.\n\n##Enumerable attribute\n\nThe enumerable property attribute defines whether the property shows up in a for...in loop and Object.keys() or not.\n\n\tvar o = {};\n\tObject.defineProperty(o, 'a', { value: 1, enumerable: true });\n\tObject.defineProperty(o, 'b', { value: 2, enumerable: false });\n\tObject.defineProperty(o, 'c', { value: 3 }); // enumerable defaults to false\n\to.d = 4; // enumerable defaults to true when creating a property by setting it\n\n\tfor (var i in o) {\n\t  console.log(i);\n\t}\n\t// logs 'a' and 'd' (in undefined order)\n\n\tObject.keys(o); // ['a', 'd']\n\n\to.propertyIsEnumerable('a'); // true\n\to.propertyIsEnumerable('b'); // false\n\to.propertyIsEnumerable('c'); // false\n\tConfigurable attribute\n\n\tThe configurable attribute controls at the same time whether the property can be deleted from the object and whether its attributes (other than writable) can be changed.\n\n\tvar o = {};\n\tObject.defineProperty(o, 'a', {\n\t  get: function() { return 1; },\n\t  configurable: false\n\t});\n\n\tObject.defineProperty(o, 'a', { configurable: true }); // throws a TypeError\n\tObject.defineProperty(o, 'a', { enumerable: true }); // throws a TypeError\n\tObject.defineProperty(o, 'a', { set: function() {} }); // throws a TypeError (set was undefined previously)\n\tObject.defineProperty(o, 'a', { get: function() { return 1; } }); // throws a TypeError (even though the new get does exactly the same thing)\n\tObject.defineProperty(o, 'a', { value: 12 }); // throws a TypeError\n\n\tconsole.log(o.a); // logs 1\n\tdelete o.a; // Nothing happens\n\tconsole.log(o.a); // logs 1\n\n\nIf the configurable attribute of o.a had been true, none of the errors would be thrown and the property would be deleted at the end.\n\n##Example: Adding properties and default values\n\nIt's important to consider the way default values of attributes are applied. There is often a difference between simply using dot notation to assign a value and using Object.defineProperty(), as shown in the example below.\n\n\tvar o = {};\n\n\to.a = 1;\n\t// is equivalent to:\n\tObject.defineProperty(o, 'a', {\n\t  value: 1,\n\t  writable: true,\n\t  configurable: true,\n\t  enumerable: true\n\t});\n\n\n\t// On the other hand,\n\tObject.defineProperty(o, 'a', { value: 1 });\n\t// is equivalent to:\n\tObject.defineProperty(o, 'a', {\n\t  value: 1,\n\t  writable: false,\n\t  configurable: false,\n\t  enumerable: false\n\t});\n\n\n##Example: Custom Setters and Getters\n\nExample below shows how to implement a self-archiving object. When temperature property is set, the archive array gets a log entry.\n\n\tfunction Archiver() {\n\t  var temperature = null;\n\t  var archive = [];\n\n\t  Object.defineProperty(this, 'temperature', {\n\t    get: function() {\n\t      console.log('get!');\n\t      return temperature;\n\t    },\n\t    set: function(value) {\n\t      temperature = value;\n\t      archive.push({ val: temperature });\n\t    }\n\t  });\n\n\t  this.getArchive = function() { return archive; };\n\t}\n\n\tvar arc = new Archiver();\n\tarc.temperature; // 'get!'\n\tarc.temperature = 11;\n\tarc.temperature = 13;\n\tarc.getArchive(); // [{ val: 11 }, { val: 13 }]\t\n\n\n@static\n@param {Object} obj The object on which to define the property.\n@param {String} prop The name of the property to be defined or modified.\n@param {Object} descriptor The descriptor for the property being defined or modified.\n\n*/\n\n\n\n\n\n\n\n\n\n\n/*\n@method freeze\n\n#Summary\nThe Object.freeze() method freezes an object: that is, prevents new properties from being added to it; prevents existing properties from being removed; and prevents existing properties, or their enumerability, configurability, or writability, from being changed. In essence the object is made effectively immutable. The method returns the object being frozen.\n\n#Syntax\nObject.freeze(obj)\n\n#Description\nNothing can be added to or removed from the properties set of a frozen object. Any attempt to do so will fail, either silently or by throwing a TypeError exception (most commonly, but not exclusively, when in strict mode).\n\nValues cannot be changed for data properties. Accessor properties (getters and setters) work the same (and still give the illusion that you are changing the value). Note that values that are objects can still be modified, unless they are also frozen.\n\n#Examples\n\tvar obj = {\n\t  prop: function() {},\n\t  foo: 'bar'\n\t};\n\n\t// New properties may be added, existing properties may be changed or removed\n\tobj.foo = 'baz';\n\tobj.lumpy = 'woof';\n\tdelete obj.prop;\n\n\tvar o = Object.freeze(obj);\n\n\tassert(Object.isFrozen(obj) === true);\n\n\t// Now any changes will fail\n\tobj.foo = 'quux'; // silently does nothing\n\tobj.quaxxor = 'the friendly duck'; // silently doesn't add the property\n\n\t// ...and in strict mode such attempts will throw TypeErrors\n\tfunction fail(){\n\t  'use strict';\n\t  obj.foo = 'sparky'; // throws a TypeError\n\t  delete obj.quaxxor; // throws a TypeError\n\t  obj.sparky = 'arf'; // throws a TypeError\n\t}\n\n\tfail();\n\n\t// Attempted changes through Object.defineProperty will also throw\n\tObject.defineProperty(obj, 'ohai', { value: 17 }); // throws a TypeError\n\tObject.defineProperty(obj, 'foo', { value: 'eit' }); // throws a TypeError\n\tThe following example shows that object values in a frozen object can be mutated (freeze is shallow).\n\n\tobj = {\n\t  internal: {}\n\t};\n\n\tObject.freeze(obj);\n\tobj.internal.a = 'aValue';\n\n\tobj.internal.a // 'aValue'\n\n\t// To make obj fully immutable, freeze each object in obj.\n\t// To do so, we use this function.\n\n\tfunction deepFreeze(o) {\n\t  var prop, propKey;\n\t  Object.freeze(o); // First freeze the object.\n\t  for (propKey in o) {\n\t    prop = o[propKey];\n\t    if (!o.hasOwnProperty(propKey) || !(typeof prop === 'object') || Object.isFrozen(prop)) {\n\t      // If the object is on the prototype, not an object, or is already frozen,\n\t      // skip it. Note that this might leave an unfrozen reference somewhere in the\n\t      // object if there is an already frozen object containing an unfrozen object.\n\t      continue;\n\t    }\n\n\t    deepFreeze(prop); // Recursively call deepFreeze.\n\t  }\n\t}\n\n\tobj2 = {\n\t  internal: {}\n\t};\n\n\tdeepFreeze(obj2);\n\tobj2.internal.a = 'anotherValue';\n\tobj2.internal.a; // undefined\n\n\n@static\n\n@param obj The object to freeze.\n\n*/\n\n\n\n\n\n\n\n\n\n\n/*\n@method getOwnPropertyDescriptor\n\n#Summary\nThe Object.getOwnPropertyDescriptor() method returns a property descriptor for an own property (that is, one directly present on an object, not present by dint of being along an object's prototype chain) of a given object.\n\n#Syntax\n\tObject.getOwnPropertyDescriptor(obj, prop)\n\n#Description\nThis method permits examination of the precise description of a property. A property in JavaScript consists of a string-valued name and a property descriptor. Further information about property descriptor types and their attributes can be found in Object.defineProperty().\n\nA property descriptor is a record with some of the following attributes:\n\n###value\nThe value associated with the property (data descriptors only).\n###writable\ntrue if and only if the value associated with the property may be changed (data descriptors only).\n###get\nA function which serves as a getter for the property, or undefined if there is no getter (accessor descriptors only).\n###set\nA function which serves as a setter for the property, or undefined if there is no setter (accessor descriptors only).\n###configurable\ntrue if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.\n###enumerable\ntrue if and only if this property shows up during enumeration of the properties on the corresponding object.\n\n#Examples\n\n\tvar o, d;\n\n\to = { get foo() { return 17; } };\n\td = Object.getOwnPropertyDescriptor(o, 'foo');\n\t// d is { configurable: true, enumerable: true, get: , set: undefined }\n\n\to = { bar: 42 };\n\td = Object.getOwnPropertyDescriptor(o, 'bar');\n\t// d is { configurable: true, enumerable: true, value: 42, writable: true }\n\n\to = {};\n\tObject.defineProperty(o, 'baz', { value: 8675309, writable: false, enumerable: false });\n\td = Object.getOwnPropertyDescriptor(o, 'baz');\n\t// d is { value: 8675309, writable: false, enumerable: false, configurable: false }\n\n\n@static \n@param {Object}obj The object in which to look for the property.\n@param {String}prop The name of the property whose description is to be retrieved.\n@returns A property descriptor of the given property if it exists on the object, undefined otherwise.\n*/\n\n\n\n\n\n\n\n\n\n\n/*\n@method getOwnPropertyNames\n\n#Summary\nThe Object.getOwnPropertyNames() method returns an array of all properties (enumerable or not) found directly upon a given object.\n\n#Syntax\nObject.getOwnPropertyNames(obj)\n\n#Description\nObject.getOwnPropertyNames returns an array whose elements are strings corresponding to the enumerable and non-enumerable properties found directly upon obj. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a for...in loop (or by Object.keys) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.\n\n#Examples\n##Example: Using getOwnPropertyNames\n\n\tvar arr = ['a', 'b', 'c'];\n\tprint(Object.getOwnPropertyNames(arr).sort()); // prints '0,1,2,length'\n\n\t// Array-like object\n\tvar obj = { 0: 'a', 1: 'b', 2: 'c' };\n\tprint(Object.getOwnPropertyNames(obj).sort()); // prints '0,1,2'\n\n\t// Printing property names and values using Array.forEach\n\tObject.getOwnPropertyNames(obj).forEach(function(val, idx, array) {\n\t  print(val + ' -> ' + obj[val]);\n\t});\n\t// prints\n\t// 0 -> a\n\t// 1 -> b\n\t// 2 -> c\n\n\t// non-enumerable property\n\tvar my_obj = Object.create({}, { getFoo: { value: function() { return this.foo; }, enumerable: false } });\n\tmy_obj.foo = 1;\n\n\tprint(Object.getOwnPropertyNames(my_obj).sort()); // prints 'foo,getFoo'\n\nIf you want only the enumerable properties, see Object.keys() or use a for...in loop (although note that this will return enumerable properties not found directly upon that object but also along the prototype chain for the object unless the latter is filtered with hasOwnProperty()).\n\nItems on the prototype chain are not listed:\n\n\tfunction ParentClass() {}\n\tParentClass.prototype.inheritedMethod = function() {};\n\n\tfunction ChildClass() {\n\t  this.prop = 5;\n\t  this.method = function() {};\n\t}\n\tChildClass.prototype = new ParentClass;\n\tChildClass.prototype.prototypeMethod = function() {};\n\n\talert(\n\t  Object.getOwnPropertyNames(\n\t    new ChildClass() // ['prop', 'method']\n\t  )\n\t);\n\n##Example: Get Non-Enumerable Only\n\nThis uses the Array.prototype.filter() function to remove the enumerable keys (obtained with Object.keys()) from a list of all keys (obtained with Object.getOwnPropertyNames) leaving only the non-enumerable keys.\n\n\tvar target = myObject;\n\tvar enum_and_nonenum = Object.getOwnPropertyNames(target);\n\tvar enum_only = Object.keys(target);\n\tvar nonenum_only = enum_and_nonenum.filter(function(key) {\n\t  var indexInEnum = enum_only.indexOf(key);\n\t  if (indexInEnum == -1) {\n\t    // not found in enum_only keys mean the key is non-enumerable,\n\t    // so return true so we keep this in the filter\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t});\n\n\tconsole.log(nonenum_only);\n\n@static\n@param {Object} obj The object whose enumerable and non-enumerable own properties are to be returned.\n\n*/\n\n\n\n\n\n\n\n\n\n\n/*\n@method isExtensible\n#Summary\nThe Object.isExtensible() method determines if an object is extensible (whether it can have new properties added to it).\n\n#Syntax\n\tObject.isExtensible(obj)\n\n#Description\nObjects are extensible by default: they can have new properties added to them, and (in engines that support __proto__  their __proto__ property) can be modified. An object can be marked as non-extensible using Object.preventExtensions(), Object.seal(), or Object.freeze().\n\n#Examples\n\t// New objects are extensible.\n\tvar empty = {};\n\tassert(Object.isExtensible(empty) === true);\n\n\t// ...but that can be changed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isExtensible(empty) === false);\n\n\t// Sealed objects are by definition non-extensible.\n\tvar sealed = Object.seal({});\n\tassert(Object.isExtensible(sealed) === false);\n\n\t// Frozen objects are also by definition non-extensible.\n\tvar frozen = Object.freeze({});\n\tassert(Object.isExtensible(frozen) === false);\n\tNotes\n\tIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n\n\t> Object.isExtensible(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isExtensible(1)\n\tfalse                \n\n@static \n\n@param {Object} obj The object which should be checked.\n@return {boolean}\n*/\n\n\n\n\n/*\n@method isFrozen\n\n#Summary\nThe Object.isFrozen() determines if an object is frozen.\n\n#Syntax\n\tObject.isFrozen(obj)\n\n#Description\nAn object is frozen if and only if it is not extensible, all its properties are non-configurable, and all its data properties (that is, properties which are not accessor properties with getter or setter components) are non-writable.\n\n#Examples\n\t// A new object is extensible, so it is not frozen.\n\tassert(Object.isFrozen({}) === false);\n\n\t// An empty object which is not extensible is vacuously frozen.\n\tvar vacuouslyFrozen = Object.preventExtensions({});\n\tassert(Object.isFrozen(vacuouslyFrozen) === true);\n\n\t// A new object with one property is also extensible, ergo not frozen.\n\tvar oneProp = { p: 42 };\n\tassert(Object.isFrozen(oneProp) === false);\n\n\t// Preventing extensions to the object still doesn't make it frozen,\n\t// because the property is still configurable (and writable).\n\tObject.preventExtensions(oneProp);\n\tassert(Object.isFrozen(oneProp) === false);\n\n\t// ...but then deleting that property makes the object vacuously frozen.\n\tdelete oneProp.p;\n\tassert(Object.isFrozen(oneProp) === true);\n\n\t// A non-extensible object with a non-writable but still configurable property is not frozen.\n\tvar nonWritable = { e: 'plep' };\n\tObject.preventExtensions(nonWritable);\n\tObject.defineProperty(nonWritable, 'e', { writable: false }); // make non-writable\n\tassert(Object.isFrozen(nonWritable) === false);\n\n\t// Changing that property to non-configurable then makes the object frozen.\n\tObject.defineProperty(nonWritable, 'e', { configurable: false }); // make non-configurable\n\tassert(Object.isFrozen(nonWritable) === true);\n\n\t// A non-extensible object with a non-configurable but still writable property also isn't frozen.\n\tvar nonConfigurable = { release: 'the kraken!' };\n\tObject.preventExtensions(nonConfigurable);\n\tObject.defineProperty(nonConfigurable, 'release', { configurable: false });\n\tassert(Object.isFrozen(nonConfigurable) === false);\n\n\t// Changing that property to non-writable then makes the object frozen.\n\tObject.defineProperty(nonConfigurable, 'release', { writable: false });\n\tassert(Object.isFrozen(nonConfigurable) === true);\n\n\t// A non-extensible object with a configurable accessor property isn't frozen.\n\tvar accessor = { get food() { return 'yum'; } };\n\tObject.preventExtensions(accessor);\n\tassert(Object.isFrozen(accessor) === false);\n\n\t// ...but make that property non-configurable and it becomes frozen.\n\tObject.defineProperty(accessor, 'food', { configurable: false });\n\tassert(Object.isFrozen(accessor) === true);\n\n\t// But the easiest way for an object to be frozen is if Object.freeze has been called on it.\n\tvar frozen = { 1: 81 };\n\tassert(Object.isFrozen(frozen) === false);\n\tObject.freeze(frozen);\n\tassert(Object.isFrozen(frozen) === true);\n\n\t// By definition, a frozen object is non-extensible.\n\tassert(Object.isExtensible(frozen) === false);\n\n\t// Also by definition, a frozen object is sealed.\n\tassert(Object.isSealed(frozen) === true);\n\n#Notes\nIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n\n\t> Object.isFrozen(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isFrozen(1)\n\ttrue                          // ES6 code\n\n\n@static\n@param {Object}obj The object which should be checked.\n@returns boolean\n*/\n\n\n\n\n\n/*\n@method isSealed\n\n#Summary\nThe Object.isSealed() method determines if an object is sealed.\n\n#Syntax\n\tObject.isSealed(obj)\n#Description\nReturns true if the object is sealed, otherwise false. An object is sealed if it is not extensible and if all its properties are non-configurable and therefore not removable (but not necessarily non-writable).\n\n#Examples\n\t// Objects aren't sealed by default.\n\tvar empty = {};\n\tassert(Object.isSealed(empty) === false);\n\n\t// If you make an empty object non-extensible, it is vacuously sealed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isSealed(empty) === true);\n\n\t// The same is not true of a non-empty object, unless its properties are all non-configurable.\n\tvar hasProp = { fee: 'fie foe fum' };\n\tObject.preventExtensions(hasProp);\n\tassert(Object.isSealed(hasProp) === false);\n\n\t// But make them all non-configurable and the object becomes sealed.\n\tObject.defineProperty(hasProp, 'fee', { configurable: false });\n\tassert(Object.isSealed(hasProp) === true);\n\n\t// The easiest way to seal an object, of course, is Object.seal.\n\tvar sealed = {};\n\tObject.seal(sealed);\n\tassert(Object.isSealed(sealed) === true);\n\n\t// A sealed object is, by definition, non-extensible.\n\tassert(Object.isExtensible(sealed) === false);\n\n\t// A sealed object might be frozen, but it doesn't have to be.\n\tassert(Object.isFrozen(sealed) === true); // all properties also non-writable\n\n\tvar s2 = Object.seal({ p: 3 });\n\tassert(Object.isFrozen(s2) === false); // 'p' is still writable\n\n\tvar s3 = Object.seal({ get p() { return 0; } });\n\tassert(Object.isFrozen(s3) === true); // only configurability matters for accessor properties\n\n#Notes\n\tIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n\n\t> Object.isSealed(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isSealed(1)\n\ttrue                          // ES6 code\n\n\n@static\n@param {Object} obj The object which should be checked.\n@returns {boolean}\n*/\n\n\n\n\n\n\n\n/*\n@method keys\n#Summary\nThe Object.keys() method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).\n\n#Syntax\n\tObject.keys(obj)\n\n#Examples\n\tvar arr = ['a', 'b', 'c'];\n\tconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\n\n\t// array like object\n\tvar obj = { 0: 'a', 1: 'b', 2: 'c' };\n\tconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\n\n\t// array like object with random key ordering\n\tvar an_obj = { 100: 'a', 2: 'b', 7: 'c' };\n\tconsole.log(Object.keys(an_obj)); // console: ['2', '7', '100']\n\n\t// getFoo is property which isn't enumerable\n\tvar my_obj = Object.create({}, { getFoo: { value: function() { return this.foo; } } });\n\tmy_obj.foo = 1;\n\n\tconsole.log(Object.keys(my_obj)); // console: ['foo']\nIf you want all properties, even not enumerables, see Object.getOwnPropertyNames().\n\n#Polyfill\nTo add compatible Object.keys support in older environments that do not natively support it, copy the following snippet:\n\n\t// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\tif (!Object.keys) {\n\t  Object.keys = (function() {\n\t    'use strict';\n\t    var hasOwnProperty = Object.prototype.hasOwnProperty,\n\t        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n\t        dontEnums = [\n\t          'toString',\n\t          'toLocaleString',\n\t          'valueOf',\n\t          'hasOwnProperty',\n\t          'isPrototypeOf',\n\t          'propertyIsEnumerable',\n\t          'constructor'\n\t        ],\n\t        dontEnumsLength = dontEnums.length;\n\n\t    return function(obj) {\n\t      if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n\t        throw new TypeError('Object.keys called on non-object');\n\t      }\n\n\t      var result = [], prop, i;\n\n\t      for (prop in obj) {\n\t        if (hasOwnProperty.call(obj, prop)) {\n\t          result.push(prop);\n\t        }\n\t      }\n\n\t      if (hasDontEnumBug) {\n\t        for (i = 0; i < dontEnumsLength; i++) {\n\t          if (hasOwnProperty.call(obj, dontEnums[i])) {\n\t            result.push(dontEnums[i]);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }());\n\t}\nPlease note that the above code includes non-enumerable keys in IE7 (and maybe IE8), when passing in an object from a different window.\n\nFor a simple browser polyfill, see Javascript - Object.keys Browser Compatibility.\n\n@static\n@param {Object} obj The object whose enumerable own properties are to be returned.\n@returns {Array<String>} method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).\n\n*/\n\n\n\n\n\n\n\n\n/*\n@method preventExtensions\n\n#Summary\nThe Object.preventExtensions() method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).\n\n#Syntax\n\tObject.preventExtensions(obj)\n\n#Description\nAn object is extensible if new properties can be added to it. Object.preventExtensions() marks an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible. Note that the properties of a non-extensible object, in general, may still be deleted. Attempting to add new properties to a non-extensible object will fail, either silently or by throwing a TypeError (most commonly, but not exclusively, when in strict mode).\n\nObject.preventExtensions() only prevents addition of own properties. Properties can still be added to the object prototype. However, calling Object.preventExtensions() on an object will also prevent extensions on its __proto__  property.\n\nIf there is a way to turn an extensible object to a non-extensible one, there is no way to do the opposite in ECMAScript 5.\n\n#Examples\n\t// Object.preventExtensions returns the object being made non-extensible.\n\tvar obj = {};\n\tvar obj2 = Object.preventExtensions(obj);\n\tassert(obj === obj2);\n\n\t// Objects are extensible by default.\n\tvar empty = {};\n\tassert(Object.isExtensible(empty) === true);\n\n\t// ...but that can be changed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isExtensible(empty) === false);\n\n\t// Object.defineProperty throws when adding a new property to a non-extensible object.\n\tvar nonExtensible = { removable: true };\n\tObject.preventExtensions(nonExtensible);\n\tObject.defineProperty(nonExtensible, 'new', { value: 8675309 }); // throws a TypeError\n\n\t// In strict mode, attempting to add new properties to a non-extensible object throws a TypeError.\n\tfunction fail() {\n\t  'use strict';\n\t  nonExtensible.newProperty = 'FAIL'; // throws a TypeError\n\t}\n\tfail();\n\n\t// EXTENSION (only works in engines supporting __proto__\n\t// (which is deprecated. Use Object.getPrototypeOf instead)):\n\t// A non-extensible object's prototype is immutable.\n\tvar fixed = Object.preventExtensions({});\n\tfixed.__proto__ = { oh: 'hai' }; // throws a TypeError\n\n#Notes\nIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return it.\n\n\t> Object.preventExtensions(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.preventExtensions(1)\n\t1                             // ES6 code\n\n@static\n@param {Object}obj The object which should be made non-extensible.\n\n*/\n\n\n\n\n\n\n\n/*\n@method hasOwnProperty\n\n#Summary\nThe hasOwnProperty() method returns a boolean indicating whether the object has the specified property.\n\n#Syntax\n\tobj.hasOwnProperty(prop)\n\n#Description\nEvery object descended from Object inherits the hasOwnProperty method. This method can be used to determine whether an object has the specified property as a direct property of that object; unlike the in operator, this method does not check down the object's prototype chain.\n\n#Examples\n##Example: Using hasOwnProperty to test for a property's existence\n\nThe following example determines whether the o object contains a property named prop:\n\n\to = new Object();\n\to.prop = 'exists';\n\n\tfunction changeO() {\n\t  o.newprop = o.prop;\n\t  delete o.prop;\n\t}\n\n\to.hasOwnProperty('prop');   // returns true\n\tchangeO();\n\to.hasOwnProperty('prop');   // returns false\n\tExample: Direct versus inherited properties\n\n\tThe following example differentiates between direct properties and properties inherited through the prototype chain:\n\n\to = new Object();\n\to.prop = 'exists';\n\to.hasOwnProperty('prop');             // returns true\n\to.hasOwnProperty('toString');         // returns false\n\to.hasOwnProperty('hasOwnProperty');   // returns false\n##Example: Iterating over the properties of an object\n\nThe following example shows how to iterate over the properties of an object without executing on inherit properties. Note that the for...in loop is already only iterating enumerable items, so one should not assume based on the lack of non-enumerable properties shown in the loop that hasOwnProperty itself is confined strictly to enumerable items (as with Object.getOwnPropertyNames()).\n\n\tvar buz = {\n\t  fog: 'stack'\n\t};\n\n\tfor (var name in buz) {\n\t  if (buz.hasOwnProperty(name)) {\n\t    alert('this is fog (' + name + ') for sure. Value: ' + buz[name]);\n\t  }\n\t  else {\n\t    alert(name); // toString or something else\n\t  }\n\t}\n##Example: hasOwnProperty as a property\n\nJavaScript does not protect the property name hasOwnProperty; thus, if the possibility exists that an object might have a property with this name, it is necessary to use an external hasOwnProperty to get correct results:\n\n\tvar foo = {\n\t  hasOwnProperty: function() {\n\t    return false;\n\t  },\n\t  bar: 'Here be dragons'\n\t};\n\n\tfoo.hasOwnProperty('bar'); // always returns false\n\n\t// Use another Object's hasOwnProperty and call it with 'this' set to foo\n\t({}).hasOwnProperty.call(foo, 'bar'); // true\n\n\t// It's also possible to use the hasOwnProperty property from the Object prototype for this purpose\n\tObject.prototype.hasOwnProperty.call(foo, 'bar'); // true\nNote that in the last case there are no newly created objects.\n\n@static \n@param {String}prop The name of the property to test.\n\n*/\n\n\n\n\n\n\n\n/*\n@method  isPrototypeOf\n\n\n#Summary\nThe isPrototypeOf() method tests for an object in another object's prototype chain.\n\nNote: isPrototypeOf differs from the instanceof operator. In the expression \"object instanceof AFunction\", the object prototype chain is checked against AFunction.prototype, not against AFunction itself.\n#Syntax\n\tprototypeObj.isPrototypeOf(obj)\n#Description\nThe isPrototypeOf method allows you to check whether or not an object exists within another object's prototype chain.\n\nFor example, consider the following prototype chain:\n\n\tfunction Fee() {\n\t  // ...\n\t}\n\n\tfunction Fi() {\n\t  // ...\n\t}\n\tFi.prototype = new Fee();\n\n\tfunction Fo() {\n\t  // ...\n\t}\n\tFo.prototype = new Fi();\n\n\tfunction Fum() {\n\t  // ...\n\t}\n\tFum.prototype = new Fo();\nLater on down the road, if you instantiate Fum and need to check if Fi's prototype exists within the Fum prototype chain, you could do this:\n\n\tvar fum = new Fum();\n\t// ...\n\n\tif (Fi.prototype.isPrototypeOf(fum)) {\n\t  // do something safe\n\t}\nThis, along with the instanceof operator particularly comes in handy if you have code that can only function when dealing with objects descended from a specific prototype chain, e.g., to guarantee that certain methods or properties will be present on that object.\n\n\n@static \n@param {Object} prototypeObj An object to be tested against each link in the prototype chain of the object argument.\n@param {Object}object The object whose prototype chain will be searched.\n@returns {boolean}\n*/\n\n\n\n\n\n\n/*\n\n@method propertyIsEnumerable\n\n#Summary\nThe propertyIsEnumerable() method returns a Boolean indicating whether the specified property is enumerable.\n#Syntax\n\tobj.propertyIsEnumerable(prop)\n\n#Description\nEvery object has a propertyIsEnumerable method. This method can determine whether the specified property in an object can be enumerated by a for...in loop, with the exception of properties inherited through the prototype chain. If the object does not have the specified property, this method returns false.\n\n#Examples\n##Example: A basic use of propertyIsEnumerable\n\nThe following example shows the use of propertyIsEnumerable on objects and arrays:\n\n\tvar o = {};\n\tvar a = [];\n\to.prop = 'is enumerable';\n\ta[0] = 'is enumerable';\n\n\to.propertyIsEnumerable('prop');   // returns true\n\ta.propertyIsEnumerable(0);        // returns true\n##Example: User-defined versus built-in objects\n\nThe following example demonstrates the enumerability of user-defined versus built-in properties:\n\n\tvar a = ['is enumerable'];\n\n\ta.propertyIsEnumerable(0);          // returns true\n\ta.propertyIsEnumerable('length');   // returns false\n\n\tMath.propertyIsEnumerable('random');   // returns false\n\tthis.propertyIsEnumerable('Math');     // returns false\n##Example: Direct versus inherited properties\n\n\tvar a = [];\n\ta.propertyIsEnumerable('constructor');         // returns false\n\n\tfunction firstConstructor() {\n\t  this.property = 'is not enumerable';\n\t}\n\n\tfirstConstructor.prototype.firstMethod = function() {};\n\n\tfunction secondConstructor() {\n\t  this.method = function method() { return 'is enumerable'; };\n\t}\n\n\tsecondConstructor.prototype = new firstConstructor;\n\tsecondConstructor.prototype.constructor = secondConstructor;\n\n\tvar o = new secondConstructor();\n\to.arbitraryProperty = 'is enumerable';\n\n\to.propertyIsEnumerable('arbitraryProperty');   // returns true\n\to.propertyIsEnumerable('method');              // returns true\n\to.propertyIsEnumerable('property');            // returns false\n\n\to.property = 'is enumerable';\n\n\to.propertyIsEnumerable('property');            // returns true\n\n\t// These return false as they are on the prototype which \n\t// propertyIsEnumerable does not consider (even though the last two\n\t// are iteratable with for-in)\n\to.propertyIsEnumerable('prototype');   // returns false (as of JS 1.8.1/FF3.6)\n\to.propertyIsEnumerable('constructor'); // returns false\n\to.propertyIsEnumerable('firstMethod'); // returns false\n\n\n@param {String}prop The name of the property to test.\n@return {boolean}\n\n*/\n\n\n\n/*\n@method toLocaleString\n#Summary\nThe toLocaleString() method returns a string representing the object. This method is meant to be overriden by derived objects for locale-specific purposes.\n\n#Syntax\n\tobj.toLocaleString();\n#Description\nObject's toLocaleString returns the result of calling toString().\n\nThis function is provided to give objects a generic toLocaleString method, even though not all may use it. See the list below.\n\nObjects overriding toLocaleString\n\n\tArray: Array.prototype.toLocaleString()\n\tNumber: Number.prototype.toLocaleString()\n\tDate: Date.prototype.toLocaleString()\n*/\n\n\n\n/*\n@method toString\n\n#Summary\nThe toString() method returns a string representing object.\n\n#Syntax\n\tobj.toString()\n#Description\nEvery object has a toString() method that is automatically called when the object is to be represented as a text value or when an object is referred to in a manner in which a string is expected. By default, the toString() method is inherited by every object descended from Object. If this method is not overridden in a custom object, toString() returns \"[object type]\", where type is the object type. The following code illustrates this:\n\n\tvar o = new Object();\n\to.toString();           // returns [object Object]\nNote: Starting in JavaScript 1.8.5 toString() called on null returns [object Null], and undefined returns [object Undefined], as defined in the 5th Edition of ECMAScript and a subsequent Errata. See Using toString to detect object type.\n#Examples\n##Example: Overriding the default toString method\n\nYou can create a function to be called in place of the default toString() method. The toString() method takes no arguments and should return a string. The toString() method you create can be any value you want, but it will be most useful if it carries information about the object.\n\nThe following code defines the Dog object type and creates theDog, an object of type Dog:\n\n\tfunction Dog(name, breed, color, sex) {\n\t  this.name = name;\n\t  this.breed = breed;\n\t  this.color = color;\n\t  this.sex = sex;\n\t}\n\n\ttheDog = new Dog('Gabby', 'Lab', 'chocolate', 'female');\nIf you call the toString() method on this custom object, it returns the default value inherited from Object:\n\n\ttheDog.toString(); // returns [object Object]\nThe following code creates and assigns dogToString() to override the default toString() method. This function generates a string containing the name, breed, color, and sex of the object, in the form \"property = value;\".\n\n\tDog.prototype.toString = function dogToString() {\n\t  var ret = 'Dog ' + this.name + ' is a ' + this.sex + ' ' + this.color + ' ' + this.breed;\n\t  return ret;\n\t}\n\nWith the preceding code in place, any time theDog is used in a string context, JavaScript automatically calls the dogToString() function, which returns the following string:\n\n\tDog Gabby is a female chocolate Lab\n\n##Example: Using toString() to detect object class\n\ntoString() can be used with every object and allows you to get its class. To use the Object.prototype.toString() with every object, you need to call Function.prototype.call() or Function.prototype.apply() on it, passing the object you want to inspect as the first parameter called thisArg.\n\n\tvar toString = Object.prototype.toString;\n\n\ttoString.call(new Date);    // [object Date]\n\ttoString.call(new String);  // [object String]\n\ttoString.call(Math);        // [object Math]\n\n\t// Since JavaScript 1.8.5\n\ttoString.call(undefined);   // [object Undefined]\n\ttoString.call(null);        // [object Null]\n\n@return{String}returns a string representing object.\n*/\n\n\n\n\n\n/*\n@method valueOf\n#Summary\nThe valueOf() method returns the primitive value of the specified object.\n\n#Syntax\n\tobject.valueOf()\n#Description\nJavaScript calls the valueOf method to convert an object to a primitive value. You rarely need to invoke the valueOf method yourself; JavaScript automatically invokes it when encountering an object where a primitive value is expected.\n\nBy default, the valueOf method is inherited by every object descended from Object. Every built-in core object overrides this method to return an appropriate value. If an object has no primitive value, valueOf returns the object itself, which is displayed as:\n\n\t[object Object]\nYou can use valueOf within your own code to convert a built-in object into a primitive value. When you create a custom object, you can override Object.prototype.valueOf() to call a custom method instead of the default Object method.\n\n##Overriding valueOf for custom objects\n\nYou can create a function to be called in place of the default valueOf method. Your function must take no arguments.\n\nSuppose you have an object type myNumberType and you want to create a valueOf method for it. The following code assigns a user-defined function to the object's valueOf method:\n\n\tmyNumberType.prototype.valueOf = function() { return customPrimitiveValue; };\nWith the preceding code in place, any time an object of type myNumberType is used in a context where it is to be represented as a primitive value, JavaScript automatically calls the function defined in the preceding code.\n\nAn object's valueOf method is usually invoked by JavaScript, but you can invoke it yourself as follows:\n\n\tmyNumber.valueOf()\nNote: Objects in string contexts convert via the toString() method, which is different from String objects converting to string primitives using valueOf. All objects have a string conversion, if only \"[object type]\". But many objects do not convert to number, boolean, or function.\n#Examples\n##Example: Using valueOf\n\n\to = new Object();\n\tmyVar = o.valueOf();      // [object Object]\n*/\n\n\n\n\n/*\n@method seal\n#Summary\nThe Object.seal() method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.\n\n#Syntax\n\tObject.seal(obj)\n\n#Description\nBy default, objects are extensible (new properties can be added to them). Sealing an object prevents new properties from being added and marks all existing properties as non-configurable. This has the effect of making the set of properties on the object fixed and immutable. Making all properties non-configurable also prevents them from being converted from data properties to accessor properties and vice versa, but it does not prevent the values of data properties from being changed. Attempting to delete or add properties to a sealed object, or to convert a data property to accessor or vice versa, will fail, either silently or by throwing a TypeError (most commonly, although not exclusively, when in strict mode code).\n\nThe prototype chain remains untouched. However, the __proto__  property is sealed as well.\n\n#Examples\n\tvar obj = {\n\t  prop: function() {},\n\t  foo: 'bar'\n\t};\n\n\t// New properties may be added, existing properties may be changed or removed.\n\tobj.foo = 'baz';\n\tobj.lumpy = 'woof';\n\tdelete obj.prop;\n\n\tvar o = Object.seal(obj);\n\n\tassert(o === obj);\n\tassert(Object.isSealed(obj) === true);\n\n\t// Changing property values on a sealed object still works.\n\tobj.foo = 'quux';\n\n\t// But you can't convert data properties to accessors, or vice versa.\n\tObject.defineProperty(obj, 'foo', { get: function() { return 'g'; } }); // throws a TypeError\n\n\t// Now any changes, other than to property values, will fail.\n\tobj.quaxxor = 'the friendly duck'; // silently doesn't add the property\n\tdelete obj.foo; // silently doesn't delete the property\n\n\t// ...and in strict mode such attempts will throw TypeErrors.\n\tfunction fail() {\n\t  'use strict';\n\t  delete obj.foo; // throws a TypeError\n\t  obj.sparky = 'arf'; // throws a TypeError\n\t}\n\tfail();\n\n\t// Attempted additions through Object.defineProperty will also throw.\n\tObject.defineProperty(obj, 'ohai', { value: 17 }); // throws a TypeError\n\tObject.defineProperty(obj, 'foo', { value: 'eit' }); // changes existing property value\n\n@static \n\n@param  obj The object which should be sealed.\n*/\n\n\n\n\n\n/*\n@class Any\nThis is an artificial type that means 'any value is valid here'\n*/\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js\n\n/*\n\n@module javascript \n\n\n\n@class ObjectPrototype\n\nAdapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype\n\n#Description\nThe Object.prototype property represents the Object prototype object.\n\nAll objects in JavaScript are descended from Object; all objects inherit methods and properties from Object.prototype, although they may be overridden (except an Object with a null prototype, i.e. Object.create(null)). For example, other constructors' prototypes override the constructor property and provide their own toString() methods. Changes to the Object prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.\n\n#Examples\nSince Javascript doesn't exactly have sub-class objects, prototype is a useful workaround to make a “base class” object of certain functions that act as objects. For example:\n\n\tvar Person = function() {\n\t  this.canTalk = true;\n\t  this.greet = function() {\n\t    if (this.canTalk) {\n\t      console.log('Hi, I'm ' + this.name);\n\t    }\n\t  };\n\t};\n\n\tvar Employee = function(name, title) {\n\t  this.name = name;\n\t  this.title = title;\n\t  this.greet = function() {\n\t    if (this.canTalk) {\n\t      console.log(\"Hi, I'm \" + this.name + \", the \" + this.title);\n\t    }\n\t  };\n\t};\n\tEmployee.prototype = new Person();\n\n\tvar Customer = function(name) {\n\t  this.name = name;\n\t};\n\tCustomer.prototype = new Person();\n\n\tvar Mime = function(name) {\n\t  this.name = name;\n\t  this.canTalk = false;\n\t};\n\tMime.prototype = new Person();\n\n\tvar bob = new Employee('Bob', 'Builder');\n\tvar joe = new Customer('Joe');\n\tvar rg = new Employee('Red Green', 'Handyman');\n\tvar mike = new Customer('Mike');\n\tvar mime = new Mime('Mime');\n\tbob.greet();\n\tjoe.greet();\n\trg.greet();\n\tmike.greet();\n\tmime.greet();\n\nThis will output:\n\n\tHi, I'm Bob, the Builder\n\tHi, I'm Joe\n\tHi, I'm Red Green, the Handyman\n\tHi, I'm Mike\n\n*/\n\n\n\n/*\n\n\n\n@property {Function} constructor Specifies the function that creates an object's prototype.\n\n##Summary\nReturns a reference to the Object function that created the instance's prototype. Note that the value of this property is a reference to the function itself, not a string containing the function's name. The value is only read-only for primitive values such as 1, true and \"test\".\n\n##Description\n\nAll objects inherit a constructor property from their prototype:\n\n\tvar o = {};\n\to.constructor === Object; // true\n\n\tvar a = [];\n\ta.constructor === Array; // true\n\n\tvar n = new Number(3);\n\tn.constructor === Number; // true\n\n##Examples\n\n###Example: Displaying the constructor of an object\n\nThe following example creates a prototype, Tree, and an object of that type, theTree. The example then displays the constructor property for the object theTree.\n\n\tfunction Tree(name) {\n\t  this.name = name;\n\t}\n\n\tvar theTree = new Tree('Redwood');\n\tconsole.log('theTree.constructor is ' + theTree.constructor);\n\tThis example displays the following output:\n\n\ttheTree.constructor is function Tree(name) {\n\t  this.name = name;\n\t}\n\n###Example: Changing the constructor of an object\n\nThe following example shows how to modify constructor value of generic objects. Only true, 1 and \"test\" will not be affected as they have read-only native constructors. This example shows that it is not always safe to rely on the constructor property of an object.\n\n\tfunction Type () {}\n\n\tvar types = [\n\t  new Array(),\n\t  [],\n\t  new Boolean(),\n\t  true,             // remains unchanged\n\t  new Date(),\n\t  new Error(),\n\t  new Function(),\n\t  function () {},\n\t  Math,\n\t  new Number(),\n\t  1,                // remains unchanged\n\t  new Object(),\n\t  {},\n\t  new RegExp(),\n\t  /(?:)/,\n\t  new String(),\n\t  'test'            // remains unchanged\n\t];\n\tfor (var i = 0; i < types.length; i++) {\n\t  types[i].constructor = Type;\n\t  types[i] = [types[i].constructor, types[i] instanceof Type, types[i].toString()];\n\t}\n\tconsole.log(types.join('\\n'));\n\tThis example displays the following output:\n\n\tfunction Type() {},false,\n\tfunction Type() {},false,\n\tfunction Type() {},false,false\n\tfunction Boolean() {\n\t    [native code]\n\t},false,true\n\tfunction Type() {},false,Mon Sep 01 2014 16:03:49 GMT+0600\n\tfunction Type() {},false,Error\n\tfunction Type() {},false,function anonymous() {\n\n\t}\n\tfunction Type() {},false,function () {}\n\tfunction Type() {},false,[object Math]\n\tfunction Type() {},false,0\n\tfunction Number() {\n\t    [native code]\n\t},false,1\n\tfunction Type() {},false,[object Object]\n\tfunction Type() {},false,[object Object]\n\tfunction Type() {},false,/(?:)/\n\tfunction Type() {},false,/(?:)/\n\tfunction Type() {},false,\n\tfunction String() {\n\t    [native code]\n\t},false,тест\n\n*/\n\n\n\n\n\n\n\n/*\n@property {Object} __proto__ \nPoints to the object which was used as prototype when the object was instantiated.\n\n@property {Function} __noSuchMethod__ \nAllows a function to be defined that will be executed when an undefined object member is called as a method.\n*/\n\n\n\n//@filename {Foo} fileName /Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js\n\n/* \n@module javascript\n\n@class String\n\n#Summary\nThe String global object is a constructor for strings, or a sequence of characters.\n\n#Syntax\nString literals take the forms:\n\n\t'string text' \"string text\" \"中文 español English हिन्दी العربية português বাংলা русский 日本語 ਪੰਜਾਬੀ 한국어\"\n\nBeside regular, printable characters, special characters can be encoded using escape notation:\n\n\tCode\tOutput\n\t\\0\tthe NUL character\n\t\\'\tsingle quote\n\t\\\"\tdouble quote\n\t\\\\\tbackslash\n\t\\n\tnew line\n\t\\r\tcarriage return\n\t\\v\tvertical tab\n\t\\t\ttab\n\t\\b\tbackspace\n\t\\f\tform feed\n\t\\uXXXX\tunicode codepoint\n\t\\xXX\tthe Latin-1 character\n\nOr, using the String global object directly:\n\n\tString(thing) new String(thing)\n\n#Description\nStrings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their length, to build and concatenate them using the + and += string operators, checking for the existence or location of substrings with the indexOf method, or extracting substrings with the substring method.\n\n##Character access\n\nThere are two ways to access an individual character in a string. The first is the charAt method:\n\n\treturn 'cat'.charAt(1); // returns \"a\"\n\nThe other way (introduced in ECMAScript 5) is to treat the string as an array-like object, where individual characters correspond to a numerical index:\n\n\treturn 'cat'[1]; // returns \"a\"\n\nFor character access using bracket notation, attempting to delete or assign a value to these properties will not succeed. The properties involved are neither writable nor configurable. (See Object.defineProperty for more information.)\n\n##Comparing strings\n\nC developers have the strcmp() function for comparing strings. In JavaScript, you just use the less-than and greater-than operators:\n\n\tvar a = \"a\";\n\tvar b = \"b\";\n\tif (a < b) // true\n\t  print(a + \" is less than \" + b);\n\telse if (a > b)\n\t  print(a + \" is greater than \" + b);\n\telse\n\t  print(a + \" and \" + b + \" are equal.\");\n\nA similar result can be achieved using the localeCompare method inherited by String instances.\n\n##Distinction between string primitives and String objects\n\nNote that JavaScript distinguishes between String objects and primitive string values. (The same is true of Boolean and Numbers.)\n\nString literals (denoted by double or single quotes) and strings returned from String calls in a non-constructor context (i.e., without using the new keyword) are primitive strings. JavaScript automatically converts primitives to String objects, so that it's possible to use String object methods for primitive strings. In contexts where a method is to be invoked on a primitive string or a property lookup occurs, JavaScript will automatically wrap the string primitive and call the method or perform the property lookup.\n\n\tvar s_prim = \"foo\";\n\tvar s_obj = new String(s_prim);\n\n\tconsole.log(typeof s_prim); // Logs \"string\"\n\tconsole.log(typeof s_obj);  // Logs \"object\"\n\tString primitives and String objects also give different results when using eval. Primitives passed to eval are treated as source code; String objects are treated as all other objects are, by returning the object. For example:\n\n\ts1 = \"2 + 2\";               // creates a string primitive\n\ts2 = new String(\"2 + 2\");   // creates a String object\n\tconsole.log(eval(s1));      // returns the number 4\n\tconsole.log(eval(s2));      // returns the string \"2 + 2\"\n\nFor these reasons, code may break when it encounters String objects when it expects a primitive string instead, although generally authors need not worry about the distinction.\n\nA String object can always be converted to its primitive counterpart with the valueOf method.\n\n\tconsole.log(eval(s2.valueOf())); // returns the number 4\n\nNote: For another possible approach to strings in JavaScript, please read the article about StringView – a C-like representation of strings based on typed arrays.\n\n\n#String generic methods\nThe String instance methods are also available in Firefox as of JavaScript 1.6 (though not part of the ECMAScript standard) on the String object for applying String methods to any object:\n\n\tvar num = 15;\n\talert(String.replace(num, /5/, '2'));\n\nGenerics are also available on Array methods.\n\nThe following is a shim to provide support to non-supporting browsers:\n\n\t//globals define\n\t// Assumes all supplied String instance methods already present\n\t// (one may use shims for these if not available)\n\t(function () {\n\t    'use strict';\n\n\t    var i,\n\t        // We could also build the array of methods with the following, but the\n\t        //   getOwnPropertyNames() method is non-shimable:\n\t        // Object.getOwnPropertyNames(String).filter(function (methodName)\n\t        //  {return typeof String[methodName] === 'function'});\n\t        methods = [\n\t            'quote', 'substring', 'toLowerCase', 'toUpperCase', 'charAt',\n\t            'charCodeAt', 'indexOf', 'lastIndexOf', 'startsWith', 'endsWith',\n\t            'trim', 'trimLeft', 'trimRight', 'toLocaleLowerCase',\n\t            'toLocaleUpperCase', 'localeCompare', 'match', 'search',\n\t            'replace', 'split', 'substr', 'concat', 'slice'\n\t        ],\n\t        methodCount = methods.length,\n\t        assignStringGeneric = function (methodName) {\n\t            var method = String.prototype[methodName];\n\t            String[methodName] = function (arg1) {\n\t                return method.apply(arg1, Array.prototype.slice.call(arguments, 1));\n\t            };\n\t        };\n\n\t    for (i = 0; i < methodCount; i++) {\n\t        assignStringGeneric(methods[i]);\n\t    }\n\t}());\n\n#Examples\n##String conversion\n\nIt's possible to use String as a \"safer\" toString alternative, as although it still normally calls the underlying toString, it also works for null and undefined. For example:\n\n\tvar outputStrings = [];\n\tfor (let i = 0, n = inputValues.length; i < n; ++i) {\n\t  outputStrings.push(String(inputValues[i]));\n\t}\n\n*/\n\n\n\n\n\n\n/*\n@property {Number} length\n\n#Summary\nThe length property represents the length of a string.\n\n#Syntax\n\n\tstr.length\n\n#Description\n\nThis property returns the number of code units in the string. UTF-16, the string format used by JavaScript, uses a single 16-bit code unit to represent the most common characters, but needs to use two code units for less commonly-used characters, so it's possible for the value returned by length to not match the actual number of characters in the string.\n\nFor an empty string, length is 0.\n\nThe static property String.length returns the value 1.\n\n#Examples\n\n\tvar x = \"Mozilla\";\n\tvar empty = \"\";\n\n\tconsole.log(\"Mozilla is \" + x.length + \" code units long\");\n\t// \"Mozilla is 7 code units long\" \n\n\tconsole.log(\"The empty string is has a length of \" + empty.length);\n\t // \"The empty string is has a length of 0\" \n\n*/\n\n\n\n\n/*\n@method fromCharCode\n\n#Summary\nThe static String.fromCharCode() method returns a string created by using the specified sequence of Unicode values.\n\n#Syntax\nString.fromCharCode(num1, ..., numN)\n#Description\nThis method returns a string and not a String object.\n\nBecause fromCharCode is a static method of String, you always use it as String.fromCharCode(), rather than as a method of a String object you created.\n\n#Examples\nExample: Using fromCharCode\n\nThe following example returns the string \"ABC\".\n\n\tString.fromCharCode(65,66,67)\n\n#Getting it to work with higher values\nAlthough most common Unicode values can be represented with one 16-bit number (as expected early on during JavaScript standardization) and fromCharCode() can be used to return a single character for the most common values (i.e., UCS-2 values which are the subset of UTF-16 with the most common characters), in order to deal with ALL legal Unicode values (up to 21 bits), fromCharCode() alone is inadequate. Since the higher code point characters use two (lower value) \"surrogate\" numbers to form a single character, String.fromCodePoint() (part of the ES6 draft) can be used to return such a pair and thus adequately represent these higher valued characters.\n\n@return {String}  returns a string created by using the specified sequence of Unicode values.}\n\n@param p1,...pn A sequence of numbers that are Unicode values\n\n*/\n\n\n\n\n\n\n\n/*\n@method charAt\n\n\n#Summary\nThe charAt() method returns the specified character from a string.\n\n#Syntax\n\tstr.charAt(index)\n#Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character in a string called stringName is stringName.length - 1. If the index you supply is out of range, JavaScript returns an empty string.\n\n#Examples\n##Example: Displaying characters at different locations in a string\n\nThe following example displays characters at different locations in the string \"Brave new world\":\n\n\tvar anyString = \"Brave new world\";\n\n\tconsole.log(\"The character at index 0   is '\" + anyString.charAt(0)   + \"'\");\n\tconsole.log(\"The character at index 1   is '\" + anyString.charAt(1)   + \"'\");\n\tconsole.log(\"The character at index 2   is '\" + anyString.charAt(2)   + \"'\");\n\tconsole.log(\"The character at index 3   is '\" + anyString.charAt(3)   + \"'\");\n\tconsole.log(\"The character at index 4   is '\" + anyString.charAt(4)   + \"'\");\n\tconsole.log(\"The character at index 999 is '\" + anyString.charAt(999) + \"'\");\n\nThese lines display the following:\n\n\tThe character at index 0 is 'B'\n\tThe character at index 1 is 'r'\n\tThe character at index 2 is 'a'\n\tThe character at index 3 is 'v'\n\tThe character at index 4 is 'e'\n\tThe character at index 999 is ''\n\n##Example: Getting whole characters\n\nThe following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.\n\n\tvar str = 'A \\uD87E\\uDC04 Z'; // We could also use a non-BMP character directly\n\tfor (var i=0, chr; i < str.length; i++) {\n\t  if ((chr = getWholeChar(str, i)) === false) {\n\t    continue;\n\t  } // Adapt this line at the top of each loop, passing in the whole string and\n\t    // the current iteration and returning a variable to represent the \n\t    // individual character\n\n\t  alert(chr);\n\t}\n\n\tfunction getWholeChar (str, i) {\n\t  var code = str.charCodeAt(i);     \n\t \n\t  if (isNaN(code)) {\n\t    return ''; // Position not found\n\t  }\n\t  if (code < 0xD800 || code > 0xDFFF) {\n\t    return str.charAt(i);\n\t  }\n\n\t  // High surrogate (could change last hex to 0xDB7F to treat high private\n\t  // surrogates as single characters)\n\t  if (0xD800 <= code && code <= 0xDBFF) { \n\t    if (str.length <= (i+1))  {\n\t      throw 'High surrogate without following low surrogate';\n\t    }\n\t    var next = str.charCodeAt(i+1);\n\t      if (0xDC00 > next || next > 0xDFFF) {\n\t        throw 'High surrogate without following low surrogate';\n\t      }\n\t      return str.charAt(i)+str.charAt(i+1);\n\t  }\n\t  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\t  if (i === 0) {\n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  var prev = str.charCodeAt(i-1);\n\t  \n\t  // (could change last hex to 0xDB7F to treat high private\n\t  // surrogates as single characters)\n\t  if (0xD800 > prev || prev > 0xDBFF) { \n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  // We can pass over low surrogates now as the second component\n\t  // in a pair which we have already processed\n\t  return false; \n\t}\n\nIn an exclusive JavaScript 1.7+ environment (such as Firefox) which allows destructured assignment, the following is a more succinct and somewhat more flexible alternative in that it does incrementing for an incrementing variable automatically (if the character warrants it in being a surrogate pair).\n\n\tvar str = 'A\\uD87E\\uDC04Z'; // We could also use a non-BMP character directly\n\tfor (var i=0, chr; i < str.length; i++) {\n\t  [chr, i] = getWholeCharAndI(str, i);\n\t  // Adapt this line at the top of each loop, passing in the whole string and\n\t  // the current iteration and returning an array with the individual character\n\t  // and 'i' value (only changed if a surrogate pair)\n\n\t  alert(chr);\n\t}\n\n\tfunction getWholeCharAndI (str, i) {\n\t  var code = str.charCodeAt(i);\n\n\t  if (isNaN(code)) {\n\t    return ''; // Position not found\n\t  }\n\t  if (code < 0xD800 || code > 0xDFFF) {\n\t    return [str.charAt(i), i]; // Normal character, keeping 'i' the same\n\t  }\n\n\t  // High surrogate (could change last hex to 0xDB7F to treat high private \n\t  // surrogates as single characters)\n\t  if (0xD800 <= code && code <= 0xDBFF) { \n\t    if (str.length <= (i+1))  {\n\t      throw 'High surrogate without following low surrogate';\n\t    }\n\t    var next = str.charCodeAt(i+1);\n\t      if (0xDC00 > next || next > 0xDFFF) {\n\t        throw 'High surrogate without following low surrogate';\n\t      }\n\t      return [str.charAt(i)+str.charAt(i+1), i+1];\n\t  }\n\t  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\t  if (i === 0) {\n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  var prev = str.charCodeAt(i-1);\n\n\t  // (could change last hex to 0xDB7F to treat high private surrogates\n\t  // as single characters)\n\t  if (0xD800 > prev || prev > 0xDBFF) { \n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  // Return the next character instead (and increment)\n\t  return [str.charAt(i+1), i+1]; \n\t}\n\n\n##Example: Fixing charAt to support non-Basic-Multilingual-Plane (BMP) characters\n\nWhile the example above may be more frequently useful for those wishing to support non-BMP characters (since it does not require the caller to know where any non-BMP character might appear), in the event that one does wish, in choosing a character by index, to treat the surrogate pairs within a string as the single characters they represent, one can use the following:\n\n\tfunction fixedCharAt (str, idx) {\n\t  var ret = '';\n\t  str += '';\n\t  var end = str.length;\n\n\t  var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t  while ((surrogatePairs.exec(str)) != null) {\n\t    var li = surrogatePairs.lastIndex;\n\t    if (li - 2 < idx) {\n\t      idx++;\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\n\t  if (idx >= end || idx < 0) {\n\t    return '';\n\t  }\n\n\t  ret += str.charAt(idx);\n\n\t  if (/[\\uD800-\\uDBFF]/.test(ret) && /[\\uDC00-\\uDFFF]/.test(str.charAt(idx+1))) {\n\t    // Go one further, since one of the \"characters\" is part of a surrogate pair\n\t    ret += str.charAt(idx+1); \n\t  }\n\t  return ret;\n\t}\n\n\n@param {Number} index An integer between 0 and 1-less-than the length of the string.\n@return {String} the specified character from a string.\n\n*/\n\n\n\n\n/*\n@method charCodeAt\n\n#Summary\nThe charCodeAt() method returns the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000).\n\n#Syntax\n\tstr.charCodeAt(index)\n#Description\nUnicode code points range from 0 to 1,114,111. The first 128 Unicode code points are a direct match of the ASCII character encoding. For information on Unicode, see the JavaScript Guide.\n\nNote that charCodeAt will always return a value that is less than 65,536. This is because the higher code points are represented by a pair of (lower valued) \"surrogate\" pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65,536 and above, for such characters, it is necessary to retrieve not only charCodeAt(i), but also charCodeAt(i+1) (as if examining/reproducing a string with two letters). See example 2 and 3 below.\n\ncharCodeAt returns NaN if the given index is not greater than 0 or is greater than the length of the string.\n\nBackward compatibilty: In historic versions (like JavaScript 1.2) the charCodeAt method returns a number indicating the ISO-Latin-1 codeset value of the character at the given index. The ISO-Latin-1 codeset ranges from 0 to 255. The first 0 to 127 are a direct match of the ASCII character set.\n\n#Examples\n##Example: Using charCodeAt\n\nThe following example returns 65, the Unicode value for A.\n\n\t\"ABC\".charCodeAt(0) // returns 65\n\n#Example: Fixing charCodeAt to handle non-Basic-Multilingual-Plane characters if their presence earlier in the string is unknown\n\nThis version might be used in for loops and the like when it is unknown whether non-BMP characters exist before the specified index position.\n\n\tfunction fixedCharCodeAt (str, idx) {\n\t    // ex. fixedCharCodeAt ('\\uD800\\uDC00', 0); // 65536\n\t    // ex. fixedCharCodeAt ('\\uD800\\uDC00', 1); // false\n\t    idx = idx || 0;\n\t    var code = str.charCodeAt(idx);\n\t    var hi, low;\n\t    \n\t    // High surrogate (could change last hex to 0xDB7F to treat high\n\t    // private surrogates as single characters)\n\t    if (0xD800 <= code && code <= 0xDBFF) {\n\t        hi = code;\n\t        low = str.charCodeAt(idx+1);\n\t        if (isNaN(low)) {\n\t            throw 'High surrogate not followed by low surrogate in fixedCharCodeAt()';\n\t        }\n\t        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    if (0xDC00 <= code && code <= 0xDFFF) { // Low surrogate\n\t        // We return false to allow loops to skip this iteration since should have\n\t        // already handled high surrogate above in the previous iteration\n\t        return false;\n\t        //hi = str.charCodeAt(idx-1);\n\t        //low = code;\n\t        //return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    return code;\n\t}\n\n##Example: Fixing charCodeAt to handle non-Basic-Multilingual-Plane characters if their presence earlier in the string is known\n\n\tfunction knownCharCodeAt (str, idx) {\n\t    str += '';\n\t    var code,\n\t        end = str.length;\n\n\t    var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t    while ((surrogatePairs.exec(str)) != null) {\n\t        var li = surrogatePairs.lastIndex;\n\t        if (li - 2 < idx) {\n\t            idx++;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\n\t    if (idx >= end || idx < 0) {\n\t        return NaN;\n\t    }\n\n\t    code = str.charCodeAt(idx);\n\n\t    var hi, low;\n\t    if (0xD800 <= code && code <= 0xDBFF) {\n\t        hi = code;\n\t        low = str.charCodeAt(idx+1);\n\t        // Go one further, since one of the \"characters\" is part of a surrogate pair\n\t        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    return code;\n\t}\n\n\n@param {Number} index\nAn integer greater than or equal to 0 and less than the length of the string; if it is not a number, it defaults to 0.\n\n@returns {Number}returns the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000).\n\n*/\n\n\n\n\n\n/*\n@method concat\n\n\n#Summary\nThe concat() method combines the text of two or more strings and returns a new string.\n\n#Syntax\n\tstr.concat(string2, string3[, ..., stringN])\n\n#Description\nThe concat function combines the text from one or more strings and returns a new string. Changes to the text in one string do not affect the other string.\n\n#Examples\n##Example: Using concat\n\nThe following example combines strings into a new string.\n\n\tvar hello = \"Hello, \";\n\tconsole.log(hello.concat(\"Kevin\", \" have a nice day.\")); \n\n\t// Hello, Kevin have a nice day. \n\n#Performance\nIt is strongly recommended that assignment operators (+, +=) are used instead of the concat method. See this perfomance test.\n\n@param string2...stringN Strings to concatenate to this string.\n\n@return {String}\n*/\n\n\n\n\n/*\n@method indexOf\n\n#Summary\nThe indexOf() method returns the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.\n\n#Syntax\n\tstr.indexOf(searchValue[, fromIndex])\n#Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character of a string called stringName is stringName.length - 1.\n\n\t\"Blue Whale\".indexOf(\"Blue\");     // returns  0\n\t\"Blue Whale\".indexOf(\"Blute\");    // returns -1\n\t\"Blue Whale\".indexOf(\"Whale\", 0); // returns  5\n\t\"Blue Whale\".indexOf(\"Whale\", 5); // returns  5\n\t\"Blue Whale\".indexOf(\"\", 9);      // returns  9\n\t\"Blue Whale\".indexOf(\"\", 10);     // returns 10\n\t\"Blue Whale\".indexOf(\"\", 11);     // returns 10\n\n##Case-sensitivity\n\nThe indexOf method is case sensitive. For example, the following expression returns -1:\n\n\"Blue Whale\".indexOf(\"blue\") // returns -1\n##Checking occurrences\n\nNote that '0' doesn't evaluate to true and '-1' doesn't evaluate to false. Therefore, when checking if a specific string exists within another string the correct way to check would be:\n\n\"Blue Whale\".indexOf(\"Blue\") != -1; // true\n\"Blue Whale\".indexOf(\"Bloe\") != -1; // false\n\n#Examples\n##Example: Using indexOf and lastIndexOf\n\nThe following example uses indexOf and lastIndexOf to locate values in the string \"Brave new world\".\n\n\tvar anyString = \"Brave new world\";\n\n\tconsole.log(\"The index of the first w from the beginning is \" + anyString.indexOf(\"w\"));\n\t// Displays 8\n\tconsole.log(\"The index of the first w from the end is \" + anyString.lastIndexOf(\"w\")); \n\t// Displays 10\n\n\tconsole.log(\"The index of 'new' from the beginning is \" + anyString.indexOf(\"new\"));   \n\t// Displays 6\n\tconsole.log(\"The index of 'new' from the end is \" + anyString.lastIndexOf(\"new\"));\n\t// Displays 6\n##Example: indexOf and case-sensitivity\n\nThe following example defines two string variables. The variables contain the same string except that the second string contains uppercase letters. The first log method displays 19. But because the indexOf method is case sensitive, the string \"cheddar\" is not found in myCapString, so the second log method displays -1.\n\n\tvar myString    = \"brie, pepper jack, cheddar\";\n\tvar myCapString = \"Brie, Pepper Jack, Cheddar\";\n\n\tconsole.log('myString.indexOf(\"cheddar\") is ' + myString.indexOf(\"cheddar\"));    \n\t// Displays 19\n\tconsole.log('myCapString.indexOf(\"cheddar\") is ' + myCapString.indexOf(\"cheddar\")); \n\t// Displays -1\n##Example: Using indexOf to count occurrences of a letter in a string\n\nThe following example sets count to the number of occurrences of the letter x in the string str:\n\n\tcount = 0;\n\tpos = str.indexOf(\"x\");\n\n\twhile ( pos != -1 ) {\n\t   count++;\n\t   pos = str.indexOf( \"x\",pos + 1 );\n\t}\n\n\n@param {String} searchValue A string representing the value to search for.\n@param {Number} fromIndex The location within the calling string to start the search from. It can be any integer. The default value is 0. If fromIndex < 0 the entire string is searched (same as passing 0). If fromIndex >= str.length, the method will return -1 unless searchValue is an empty string in which case str.length is returned. \n@optional\n@returns {Number} the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.\n*/",
    "classes": {
        "__DefaultModule.Account.ForgotPassword.ServiceController": {
            "annotation": "class",
            "name": "Account.ForgotPassword.ServiceController",
            "text": "Supports password recovery process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                434,
                555
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js \n Account.ForgotPassword.ServiceController.js \n ---------------- \n Service to enable the user to recover the password when he forgets it",
            "module": {
                "name": "__DefaultModule"
            },
            "absoluteName": "__DefaultModule.Account.ForgotPassword.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        596,
                        660
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js \n Account.ForgotPassword.ServiceController.js \n ---------------- \n Service to enable the user to recover the password when he forgets it"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Account.ForgotPassword.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "name": "True",
                            "text": "if the password retrieval email is successfully sent",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        716,
                        911
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js \n Account.ForgotPassword.ServiceController.js \n ---------------- \n Service to enable the user to recover the password when he forgets it"
                }
            }
        },
        "__DefaultModule.Account.Login.ServiceController": {
            "annotation": "class",
            "name": "Account.Login.ServiceController",
            "text": "Supports login process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1402,
                1497
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js \n Account.Login.ServiceController.js \n ---------------- \n Service to handle the login of a user into the system",
            "module": {
                "name": "__DefaultModule"
            },
            "absoluteName": "__DefaultModule.Account.Login.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        1538,
                        1602
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js \n Account.Login.ServiceController.js \n ---------------- \n Service to handle the login of a user into the system"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Account.Login.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Account.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        1649,
                        1794
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js \n Account.Login.ServiceController.js \n ---------------- \n Service to handle the login of a user into the system"
                }
            }
        },
        "Account.Account.Model": {
            "annotation": "class",
            "name": "Account.Model",
            "text": "Defines the model used by the all Account related services.\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2453,
                2557
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.Account.Model",
            "methods": {
                "login": {
                    "annotation": "method",
                    "name": "login",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "email",
                            "text": "",
                            "theRestString": "@param {String} password _lineCommentSeparatorMark_ @param {Boolean} redirect _lineCommentSeparatorMark_ @returns {Account.Model.Attributes} ret touchpoints and user profile data"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "password",
                            "text": "",
                            "theRestString": "@param {Boolean} redirect _lineCommentSeparatorMark_ @returns {Account.Model.Attributes} ret touchpoints and user profile data"
                        },
                        {
                            "annotation": "param",
                            "type": "{Boolean}",
                            "name": "redirect",
                            "text": "",
                            "theRestString": "@returns {Account.Model.Attributes} ret touchpoints and user profile data"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Account.Model.Attributes}",
                            "name": "ret",
                            "text": "touchpoints and user profile data",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        2605,
                        2783
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "forgotPassword": {
                    "annotation": "method",
                    "name": "forgotPassword",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "email",
                            "text": "",
                            "theRestString": "@returns {Boolean} success"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "name": "success",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        4131,
                        4212
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "resetPassword": {
                    "annotation": "method",
                    "name": "resetPassword",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "params",
                            "text": "",
                            "theRestString": "@param {String} password _lineCommentSeparatorMark_ @returns {Boolean} success"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "password",
                            "text": "",
                            "theRestString": "@returns {Boolean} success"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "name": "success",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        4792,
                        4902
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "registerAsGuest": {
                    "annotation": "method",
                    "name": "registerAsGuest",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "user",
                            "text": "",
                            "theRestString": "@return {Account.Model.Attributes}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Account.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        5136,
                        5225
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "register": {
                    "annotation": "method",
                    "name": "register",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{UserData}",
                            "name": "user_data",
                            "text": "",
                            "theRestString": "@param {Account.Model.Attributes} user_data"
                        },
                        {
                            "annotation": "param",
                            "type": "{Account.Model.Attributes}",
                            "name": "user_data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        5846,
                        5944
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                }
            }
        },
        "Account.Account.Model.Attributes": {
            "annotation": "class",
            "name": "Account.Model.Attributes",
            "text": "",
            "commentRange": [
                3701,
                4108
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.Account.Model.Attributes",
            "properties": {
                "touchpoints": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "touchpoints",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "user": {
                    "annotation": "property",
                    "type": "{Profile.Model}",
                    "name": "user",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "cart": {
                    "annotation": "property",
                    "type": "{LiveOrder.Model.Data}",
                    "name": "cart",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "address": {
                    "annotation": "property",
                    "type": "{Array<Address.Model.Attributes>}",
                    "name": "address",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "creditcard": {
                    "annotation": "property",
                    "type": "{Array<Address.Model.Attributes>}",
                    "name": "creditcard",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "language": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "language",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "currency": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "currency",
                    "text": "",
                    "commentRange": [
                        3701,
                        4108
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                }
            }
        },
        "Account.UserData": {
            "annotation": "class",
            "name": "UserData",
            "text": "",
            "commentRange": [
                7560,
                8019
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.UserData",
            "properties": {
                "email": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "email",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "password": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "password",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "password2": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "password2",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "firstname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "firstname",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "lastname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "lastname",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "company": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "company",
                    "text": "",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                },
                "emailsubscribe": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "emailsubscribe",
                    "text": "T or F",
                    "commentRange": [
                        7560,
                        8019
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
                }
            }
        },
        "Account.Account.Register.ServiceController": {
            "annotation": "class",
            "name": "Account.Register.ServiceController",
            "text": "Supports register process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                8187,
                8288
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js \n Account.Register.ServiceController.js \n ---------------- \n Service to receive a new user registration",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.Account.Register.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        8329,
                        8393
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js \n Account.Register.ServiceController.js \n ---------------- \n Service to receive a new user registration"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Account.Register.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Account.Model.register.data}",
                            "name": "Object",
                            "text": "literal with registration related data",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        8443,
                        8640
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js \n Account.Register.ServiceController.js \n ---------------- \n Service to receive a new user registration"
                }
            }
        },
        "Account.Account.RegisterAsGuest.ServiceController": {
            "annotation": "class",
            "name": "Account.RegisterAsGuest.ServiceController",
            "text": "Supports register as guest process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                9151,
                9268
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js \n Account.RegisterAsGuest.ServiceController.js \n ---------------- \n Service to enable the user to be registered as a guest.",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.Account.RegisterAsGuest.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        9309,
                        9373
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js \n Account.RegisterAsGuest.ServiceController.js \n ---------------- \n Service to enable the user to be registered as a guest."
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Account.RegisterAsGuest.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Account.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        9430,
                        9585
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js \n Account.RegisterAsGuest.ServiceController.js \n ---------------- \n Service to enable the user to be registered as a guest."
                }
            }
        },
        "Account.Account.ResetPassword.ServiceController": {
            "annotation": "class",
            "name": "Account.ResetPassword.ServiceController",
            "text": "Supports reset password process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                10081,
                10193
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js \n Account.ResetPassword.ServiceController.js \n ---------------- \n Service to reset the password of a user",
            "module": {
                "annotation": "module",
                "name": "Account",
                "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
                "commentRange": [
                    1926,
                    2129
                ],
                "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
            },
            "absoluteName": "Account.Account.ResetPassword.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        10234,
                        10298
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js \n Account.ResetPassword.ServiceController.js \n ---------------- \n Service to reset the password of a user"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Account.ResetPassword.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "name": "success",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        10353,
                        10497
                    ],
                    "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js \n Account.ResetPassword.ServiceController.js \n ---------------- \n Service to reset the password of a user"
                }
            }
        },
        "Address.Address.Model": {
            "annotation": "class",
            "name": "Address.Model",
            "text": "Defines the model used by the Address frontent module.\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                11022,
                11121
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js",
            "module": {
                "annotation": "module",
                "name": "Address",
                "text": "",
                "commentRange": [
                    10733,
                    10832
                ],
                "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
            },
            "absoluteName": "Address.Address.Model",
            "properties": {
                "validation": {
                    "annotation": "property",
                    "name": "validation",
                    "text": "",
                    "commentRange": [
                        11168,
                        11191
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                }
            },
            "methods": {
                "wrapAddressee": {
                    "annotation": "method",
                    "name": "wrapAddressee",
                    "text": "our model has \"fullname\" and \"company\" insted of the fields \"addresse\" and \"attention\" used on netsuite. \n this function prepare the address object for sending it to the frontend",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@returns {Object} address"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "name": "address",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        12387,
                        12659
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "unwrapAddressee": {
                    "annotation": "method",
                    "name": "unwrapAddressee",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@returns {Object} address"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "name": "address",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        13015,
                        13101
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@returns {Object} address"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "name": "address",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        13497,
                        13566
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "getDefaultBilling": {
                    "annotation": "method",
                    "name": "getDefaultBilling",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "name": "default",
                            "text": "billing address",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        14347,
                        14422
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "getDefaultShipping": {
                    "annotation": "method",
                    "name": "getDefaultShipping",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "name": "default",
                            "text": "shipping address",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        14599,
                        14676
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "list": {
                    "annotation": "method",
                    "name": "list",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Array<Object>}",
                            "name": "all",
                            "text": "user addresses",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        14853,
                        14917
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "updates a given address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@param {String} data _lineCommentSeparatorMark_ @returns undefined"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@returns undefined"
                        },
                        {
                            "annotation": "returns",
                            "name": "undefined",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        15097,
                        15217
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "create": {
                    "annotation": "method",
                    "name": "create",
                    "text": "creates a new address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Data.Model}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@returns {String} key of the new address"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "name": "key",
                            "text": "of the new address",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        15425,
                        15553
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "remove": {
                    "annotation": "method",
                    "name": "remove",
                    "text": "removes a given address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@returns undefined"
                        },
                        {
                            "annotation": "returns",
                            "name": "undefined",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        15728,
                        15822
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                }
            }
        },
        "Address.Address.Model.Attributes": {
            "annotation": "class",
            "name": "Address.Model.Attributes",
            "text": "",
            "commentRange": [
                13596,
                14273
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js",
            "module": {
                "annotation": "module",
                "name": "Address",
                "text": "",
                "commentRange": [
                    10733,
                    10832
                ],
                "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
            },
            "absoluteName": "Address.Address.Model.Attributes",
            "properties": {
                "company": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "company",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "fullname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fullname",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "defaultbilling": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "defaultbilling",
                    "text": "Valid values are 'T' or 'F'",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "defaultshipping": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "defaultshipping",
                    "text": "Valid values are 'T' or 'F'",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "isvalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "isvalid",
                    "text": "Valid values are 'T' or 'F'",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "isresidential": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "isresidential",
                    "text": "Valid values are 'T' or 'F'",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} addr3",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "addr2": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addr2",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "addr1": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addr1",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "country": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "country",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "city": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "city",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "state": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "state",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "phone": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "phone",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                },
                "zip": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "zip",
                    "text": "",
                    "commentRange": [
                        13596,
                        14273
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
                }
            }
        },
        "Address.Address.Data.Model": {
            "annotation": "class",
            "name": "Address.Data.Model",
            "text": "This is the model to send address to the backend",
            "commentRange": [
                15915,
                16188
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js",
            "module": {
                "annotation": "module",
                "name": "Address",
                "text": "",
                "commentRange": [
                    10733,
                    10832
                ],
                "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
            },
            "absoluteName": "Address.Address.Data.Model"
        },
        "Address.Address.ServiceController": {
            "annotation": "class",
            "name": "Address.ServiceController",
            "text": "Manage addresses requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                16379,
                16471
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests",
            "module": {
                "annotation": "module",
                "name": "Address",
                "text": "",
                "commentRange": [
                    10733,
                    10832
                ],
                "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
            },
            "absoluteName": "Address.Address.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        16512,
                        16576
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        16617,
                        16891
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Address.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Address.Model.Attributes | Array<Address.Model.Attributes>}",
                            "name": "one",
                            "text": "or all user addresses",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        16960,
                        17157
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Address.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{AddressModel.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        17314,
                        17452
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "The call to Address.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Address.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        17666,
                        17806
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                },
                "delete": {
                    "annotation": "method",
                    "name": "delete",
                    "text": "The call to Address.Service.ss with http method 'delete' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        17968,
                        18099
                    ],
                    "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
                }
            }
        },
        "Address.Case.Fields.ServiceController": {
            "annotation": "class",
            "name": "Case.Fields.ServiceController",
            "text": "Manage support case fields",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                18684,
                18781
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields",
            "module": {
                "annotation": "module",
                "name": "Address",
                "text": "",
                "commentRange": [
                    10733,
                    10832
                ],
                "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
            },
            "absoluteName": "Address.Case.Fields.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        18822,
                        18886
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        18931,
                        19205
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Case.Fields.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Case.Model}",
                            "name": "New",
                            "text": "Case record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        19357,
                        19500
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields"
                }
            }
        },
        "Case.Case.Model": {
            "annotation": "class",
            "name": "Case.Model",
            "text": "Defines the model used by the Case.Service.ss and Case.Fields.Service.ss services. \n Handles fetching, creating and updating cases.\n\n\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                19815,
                19986
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model",
            "properties": {
                "configuration": {
                    "annotation": "property",
                    "name": "configuration",
                    "text": "general settings",
                    "commentRange": [
                        20030,
                        20073
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "dummy_date": {
                    "annotation": "property",
                    "name": "dummy_date",
                    "text": "for cases with no messages. Not common, but it could happen.",
                    "commentRange": [
                        20118,
                        20202
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            },
            "methods": {
                "getNew": {
                    "annotation": "method",
                    "name": "getNew",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "name": "a",
                            "text": "new Case record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        20232,
                        20281
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "getColumnsArray": {
                    "annotation": "method",
                    "name": "getColumnsArray",
                    "text": "Helper method for defining search columns.",
                    "commentRange": [
                        23132,
                        23206
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "customer_id",
                            "text": "",
                            "theRestString": "@param {Object} list_header_data _lineCommentSeparatorMark_ @returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "list_header_data",
                            "text": "",
                            "theRestString": "@returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<Case.Model.Attributes>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        24151,
                        24281
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "searchHelper": {
                    "annotation": "method",
                    "name": "searchHelper",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "filters",
                            "text": "",
                            "theRestString": "@param {Array<String>} columns _lineCommentSeparatorMark_ @param {Number} page _lineCommentSeparatorMark_ @param {Boolean} join_messages _lineCommentSeparatorMark_ @returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "columns",
                            "text": "",
                            "theRestString": "@param {Number} page _lineCommentSeparatorMark_ @param {Boolean} join_messages _lineCommentSeparatorMark_ @returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "page",
                            "text": "",
                            "theRestString": "@param {Boolean} join_messages _lineCommentSeparatorMark_ @returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Boolean}",
                            "name": "join_messages",
                            "text": "",
                            "theRestString": "@returns {Array<Case.Model.Attributes>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<Case.Model.Attributes>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        24805,
                        25007
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "stripHtmlFromMessage": {
                    "annotation": "method",
                    "name": "stripHtmlFromMessage",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "message",
                            "text": "with HTML",
                            "theRestString": "@returns {String} message without HTML"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "name": "message",
                            "text": "without HTML",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        28358,
                        28472
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "appendMessagesToCase": {
                    "annotation": "method",
                    "name": "appendMessagesToCase",
                    "text": "When requesting a case detail, messages are included in the response.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Case.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        28609,
                        28748
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "getMessageDate": {
                    "annotation": "method",
                    "name": "getMessageDate",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Date}",
                            "name": "validJsDate",
                            "text": "",
                            "theRestString": "@returns {String} string date with the correct format"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "name": "string",
                            "text": "date with the correct format",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        30821,
                        30936
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "create": {
                    "annotation": "method",
                    "name": "create",
                    "text": "Creates a new case record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "customerId",
                            "text": "",
                            "theRestString": "@param {Object} data"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        31376,
                        31482
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "setSortOrder": {
                    "annotation": "method",
                    "name": "setSortOrder",
                    "text": "Adds sort condition to the respective column",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "sort",
                            "text": "column name",
                            "theRestString": "@param {Number} order _lineCommentSeparatorMark_ @param {Array} columns columns array"
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "order",
                            "text": "",
                            "theRestString": "@param {Array} columns columns array"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array}",
                            "name": "columns",
                            "text": "columns array",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        32323,
                        32503
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "Updates a Support Case given its id",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@param {String} data"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        32789,
                        32897
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Fields.Model.Attributes": {
            "annotation": "class",
            "name": "Case.Fields.Model.Attributes",
            "text": "",
            "commentRange": [
                21915,
                21980
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Fields.Model.Attributes",
            "properties": {
                "categories": {
                    "annotation": "property",
                    "type": "{Array<Case.Fields.Model.Attributes.Category>}",
                    "name": "categories",
                    "text": "",
                    "commentRange": [
                        22006,
                        22233
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "origins": {
                    "annotation": "property",
                    "type": "{Array<Case.Fields.Model.Attributes.Origin>}",
                    "name": "origins",
                    "text": "",
                    "commentRange": [
                        22281,
                        22501
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "statuses": {
                    "annotation": "property",
                    "type": "{Array<Case.Fields.Model.Attributes.Status>}",
                    "name": "statuses",
                    "text": "",
                    "commentRange": [
                        22542,
                        22763
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "priorities": {
                    "annotation": "property",
                    "type": "{Array<Case.Fields.Model.Attributes.Priority>}",
                    "name": "priorities",
                    "text": "",
                    "commentRange": [
                        22805,
                        23032
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            },
            "children": []
        },
        "Case.Case.Fields.Model.Attributes.Category": {
            "annotation": "class",
            "name": "Case.Fields.Model.Attributes.Category",
            "text": "",
            "commentRange": [
                22006,
                22233
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Fields.Model.Attributes.Category",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        22006,
                        22233
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        22006,
                        22233
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Fields.Model.Attributes.Origin": {
            "annotation": "class",
            "name": "Case.Fields.Model.Attributes.Origin",
            "text": "",
            "commentRange": [
                22281,
                22501
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Fields.Model.Attributes.Origin",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        22281,
                        22501
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        22281,
                        22501
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Fields.Model.Attributes.Status": {
            "annotation": "class",
            "name": "Case.Fields.Model.Attributes.Status",
            "text": "",
            "commentRange": [
                22542,
                22763
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Fields.Model.Attributes.Status",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        22542,
                        22763
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        22542,
                        22763
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Fields.Model.Attributes.Priority": {
            "annotation": "class",
            "name": "Case.Fields.Model.Attributes.Priority",
            "text": "",
            "commentRange": [
                22805,
                23032
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Fields.Model.Attributes.Priority",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        22805,
                        23032
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        22805,
                        23032
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes": {
            "annotation": "class",
            "name": "Case.Model.Attributes",
            "text": "",
            "commentRange": [
                25329,
                25360
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        25599,
                        25630
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "caseNumber": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "caseNumber",
                    "text": "",
                    "commentRange": [
                        25674,
                        25705
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "title": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "title",
                    "text": "",
                    "commentRange": [
                        25767,
                        25793
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "grouped_messages": {
                    "annotation": "property",
                    "type": "{Array<String, Case.Model.Attributes.Message>}",
                    "name": "grouped_messages",
                    "text": "",
                    "commentRange": [
                        25845,
                        26157
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "status": {
                    "annotation": "property",
                    "type": "{Case.Model.Attributes.Status}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        26193,
                        26394
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "origin": {
                    "annotation": "property",
                    "type": "{Case.Model.Attributes.Origin}",
                    "name": "origin",
                    "text": "",
                    "commentRange": [
                        26514,
                        26715
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "category": {
                    "annotation": "property",
                    "type": "{Case.Model.Attributes.Category}",
                    "name": "category",
                    "text": "",
                    "commentRange": [
                        26834,
                        27041
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "company": {
                    "annotation": "property",
                    "type": "{Case.Model.Attributes.Company}",
                    "name": "company",
                    "text": "",
                    "commentRange": [
                        27166,
                        27370
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "priority": {
                    "annotation": "property",
                    "type": "{Case.Model.Attributes.Priority}",
                    "name": "priority",
                    "text": "",
                    "commentRange": [
                        27492,
                        27699
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "createdDate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "createdDate",
                    "text": "",
                    "commentRange": [
                        27823,
                        27855
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "lastMessageDate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "lastMessageDate",
                    "text": "",
                    "commentRange": [
                        27956,
                        27992
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "email": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "email",
                    "text": "",
                    "commentRange": [
                        28107,
                        28133
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            },
            "children": []
        },
        "Case.Case.Model.Attributes.Message": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Message",
            "text": "",
            "commentRange": [
                25845,
                26157
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Message",
            "properties": {
                "author": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "author",
                    "text": "",
                    "commentRange": [
                        25845,
                        26157
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        25845,
                        26157
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "messageDate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "messageDate",
                    "text": "",
                    "commentRange": [
                        25845,
                        26157
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "initialDate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "initialDate",
                    "text": "",
                    "commentRange": [
                        25845,
                        26157
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes.Status": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Status",
            "text": "",
            "commentRange": [
                26193,
                26394
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Status",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        26193,
                        26394
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        26193,
                        26394
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes.Origin": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Origin",
            "text": "",
            "commentRange": [
                26514,
                26715
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Origin",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        26514,
                        26715
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        26514,
                        26715
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes.Category": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Category",
            "text": "",
            "commentRange": [
                26834,
                27041
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Category",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        26834,
                        27041
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        26834,
                        27041
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes.Company": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Company",
            "text": "",
            "commentRange": [
                27166,
                27370
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Company",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        27166,
                        27370
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        27166,
                        27370
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.Model.Attributes.Priority": {
            "annotation": "class",
            "name": "Case.Model.Attributes.Priority",
            "text": "",
            "commentRange": [
                27492,
                27699
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.Model.Attributes.Priority",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        27492,
                        27699
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                },
                "text": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "text",
                    "text": "",
                    "commentRange": [
                        27492,
                        27699
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
                }
            }
        },
        "Case.Case.ServiceController": {
            "annotation": "class",
            "name": "Case.ServiceController",
            "text": "Manage support cases",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                33608,
                33692
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases",
            "module": {
                "annotation": "module",
                "name": "Case",
                "text": "",
                "commentRange": [
                    19575,
                    19676
                ],
                "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
            },
            "absoluteName": "Case.Case.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        33733,
                        33797
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        33836,
                        34110
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Case.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<Case.Model.Attributes>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        34262,
                        34400
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Case.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Case.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        35048,
                        35181
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to Case.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Case.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        35328,
                        35459
                    ],
                    "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
                }
            }
        },
        "CMSadapter.CMSadapter.Model": {
            "annotation": "class",
            "name": "CMSadapter.Model",
            "text": "Mostly do the job of getting the landing pages of a CMS enabled site so they can be bootstrapped into the application environment.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                37501,
                37679
            ],
            "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js",
            "module": {
                "annotation": "module",
                "name": "CMSadapter",
                "text": "",
                "commentRange": [
                    37245,
                    37364
                ],
                "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js"
            },
            "absoluteName": "CMSadapter.CMSadapter.Model",
            "methods": {
                "getPages": {
                    "annotation": "method",
                    "name": "getPages",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{data:Array<CMSPages>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        37730,
                        37780
                    ],
                    "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js"
                }
            }
        },
        "CMSadapter.CreditCard.ServiceController": {
            "annotation": "class",
            "name": "CreditCard.ServiceController",
            "text": "Manage credit cards requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                40444,
                40542
            ],
            "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests",
            "module": {
                "annotation": "module",
                "name": "CMSadapter",
                "text": "",
                "commentRange": [
                    37245,
                    37364
                ],
                "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js"
            },
            "absoluteName": "CMSadapter.CreditCard.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        40583,
                        40647
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        40692,
                        40966
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to CreditCard.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{CreditCard.Model.Attributes || Array<CreditCard.Model.Attributes>}",
                            "name": "One",
                            "text": "or a list of credit cards",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        41035,
                        41246
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to CreditCard.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        41409,
                        41539
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to CreditCard.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{CreditCard.Model.Attributes}",
                            "name": "The",
                            "text": "updated credit card",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        41749,
                        41916
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "delete": {
                    "annotation": "method",
                    "name": "delete",
                    "text": "The call to CreditCard.Service.ss with http method 'delete' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        42084,
                        42218
                    ],
                    "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            }
        },
        "CreditMemo.CreditMemo.Model": {
            "annotation": "class",
            "name": "CreditMemo.Model",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                42695,
                42736
            ],
            "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.CreditMemo.Model"
        },
        "CreditMemo.CreditMemo.ServiceController": {
            "annotation": "class",
            "name": "CreditMemo.ServiceController",
            "text": "Manage credit memo requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                48582,
                48679
            ],
            "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.CreditMemo.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        48720,
                        48784
                    ],
                    "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        48829,
                        49103
                    ],
                    "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to CreditMemo.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{CreditMemo.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        49172,
                        49304
                    ],
                    "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests"
                }
            }
        },
        "CreditMemo.Deposit.ServiceController": {
            "annotation": "class",
            "name": "Deposit.ServiceController",
            "text": "Manage deposit requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                53412,
                53502
            ],
            "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.Deposit.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        53543,
                        53607
                    ],
                    "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        53649,
                        53923
                    ],
                    "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Deposit.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Deposit.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        53992,
                        54118
                    ],
                    "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests"
                }
            }
        },
        "CreditMemo.DepositApplication.ServiceController": {
            "annotation": "class",
            "name": "DepositApplication.ServiceController",
            "text": "Supports login process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                56889,
                56989
            ],
            "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.DepositApplication.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        57030,
                        57094
                    ],
                    "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        57147,
                        57421
                    ],
                    "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to DepositApplication.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{DepositApplication.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        57490,
                        57638
                    ],
                    "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            }
        },
        "CreditMemo.Invoice.ServiceController": {
            "annotation": "class",
            "name": "Invoice.ServiceController",
            "text": "Supports login process",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                61605,
                61694
            ],
            "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.Invoice.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        61735,
                        61799
                    ],
                    "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        61841,
                        62115
                    ],
                    "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Invoice.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        62333,
                        62506
                    ],
                    "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests"
                }
            }
        },
        "CreditMemo.LiveOrder.GiftCertificate.ServiceController": {
            "annotation": "class",
            "name": "LiveOrder.GiftCertificate.ServiceController",
            "text": "Manage gift certificates in the live order",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                63291,
                63418
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js \n LiveOrder.GiftCertificate.ServiceController.js \n ---------------- \n Service to manage gift certificates in the live order",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.LiveOrder.GiftCertificate.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        63459,
                        63523
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js \n LiveOrder.GiftCertificate.ServiceController.js \n ---------------- \n Service to manage gift certificates in the live order"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to LiveOrder.GiftCertificate.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data || EmptyObject}",
                            "name": "Returns",
                            "text": "the live order or an empty object",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        63583,
                        63793
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js \n LiveOrder.GiftCertificate.ServiceController.js \n ---------------- \n Service to manage gift certificates in the live order"
                }
            }
        },
        "CreditMemo.LiveOrder.Line.ServiceController": {
            "annotation": "class",
            "name": "LiveOrder.Line.ServiceController",
            "text": "Manage lines in the live order",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                64362,
                64466
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order",
            "module": {
                "annotation": "module",
                "name": "CreditMemo",
                "text": "",
                "commentRange": [
                    42380,
                    42498
                ],
                "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
            },
            "absoluteName": "CreditMemo.LiveOrder.Line.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        64507,
                        64571
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        64620,
                        64894
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to LiveOrder.Line.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data || Object}",
                            "name": "Returns",
                            "text": "a LiveOrder object or an empty object",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        64973,
                        65171
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to LiveOrder.Line.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data || Object}",
                            "name": "Returns",
                            "text": "a LiveOrder object or an empty object",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        65323,
                        65519
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
                },
                "delete": {
                    "annotation": "method",
                    "name": "delete",
                    "text": "The call to LiveOrder.Line.Service.ss with http method 'delete' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data || Object}",
                            "name": "Returns",
                            "text": "a LiveOrder object or an empty object",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        65996,
                        66198
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
                }
            }
        },
        "LiveOrder.LiveOrder.Model": {
            "annotation": "class",
            "name": "LiveOrder.Model",
            "text": "Defines the model used by the LiveOrder.Service.ss service \n Available methods allow fetching and updating Shopping Cart's data. Works against the \n Shopping session order, this is, nlapiGetWebContainer().getShoppingSession().getOrder()\n\n\n\n\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                66970,
                67257
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LiveOrder.Model",
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{LiveOrder.Model.Data}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        67307,
                        67353
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "will update the commerce order object with given data.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        70407,
                        70514
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "submit": {
                    "annotation": "method",
                    "name": "submit",
                    "text": "will call ModelsInit.order.submit() taking in account paypal payment",
                    "commentRange": [
                        71637,
                        71723
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "addAddress": {
                    "annotation": "method",
                    "name": "addAddress",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{OrderAddress}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@param {Array<OrderAddress>} addresses @returns {String} the given address internal id"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<OrderAddress>}",
                            "name": "addresses",
                            "text": "",
                            "theRestString": "@returns {String} the given address internal id"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "name": "the",
                            "text": "given address internal id",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        72819,
                        72957
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "hidePaymentPageWhenNoBalance": {
                    "annotation": "method",
                    "name": "hidePaymentPageWhenNoBalance",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        73934,
                        74008
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "redirectToPayPal": {
                    "annotation": "method",
                    "name": "redirectToPayPal",
                    "text": "calls ModelsInit.order.proceedToCheckout() method passing information for paypal third party checkout provider",
                    "commentRange": [
                        74407,
                        74545
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "redirectToPayPalExpress": {
                    "annotation": "method",
                    "name": "redirectToPayPalExpress",
                    "text": "calls ModelsInit.order.proceedToCheckout() method passing information for paypal-express third party checkout provider",
                    "commentRange": [
                        75137,
                        75290
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getConfirmation": {
                    "annotation": "method",
                    "name": "getConfirmation",
                    "text": "",
                    "commentRange": [
                        75787,
                        75813
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "confirmationCreateResult": {
                    "annotation": "method",
                    "name": "confirmationCreateResult",
                    "text": "",
                    "commentRange": [
                        76199,
                        76234
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "backFromPayPal": {
                    "annotation": "method",
                    "name": "backFromPayPal",
                    "text": "",
                    "commentRange": [
                        79641,
                        79666
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "removePaypalAddress": {
                    "annotation": "method",
                    "name": "removePaypalAddress",
                    "text": "remove the shipping address or billing address if phone number is null. \n This is because addresses are not valid created by Paypal.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "paypal_address",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        80354,
                        80551
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "addLine": {
                    "annotation": "method",
                    "name": "addLine",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Line}",
                            "name": "line_data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        81083,
                        81141
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "addLines": {
                    "annotation": "method",
                    "name": "addLines",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<LiveOrder.Model.Line>}",
                            "name": "lines_data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        82038,
                        82105
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "removeLine": {
                    "annotation": "method",
                    "name": "removeLine",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "line_id",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        82807,
                        82852
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "updateLine": {
                    "annotation": "method",
                    "name": "updateLine",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "line_id",
                            "text": "",
                            "theRestString": "@param {LiveOrder.Model.Line} line_data"
                        },
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Line}",
                            "name": "line_data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        83117,
                        83202
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "splitLines": {
                    "annotation": "method",
                    "name": "splitLines",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Line}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param current_order"
                        },
                        {
                            "annotation": "param",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        84541,
                        84618
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "removePromoCode": {
                    "annotation": "method",
                    "name": "removePromoCode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        85341,
                        85411
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getFieldValues": {
                    "annotation": "method",
                    "name": "getFieldValues",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Array<String>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        85613,
                        85663
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getPromoCode": {
                    "annotation": "method",
                    "name": "getPromoCode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@return {LiveOrder.Model.PromoCode}"
                        },
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.PromoCode}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        86272,
                        86367
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getMultiShipMethods": {
                    "annotation": "method",
                    "name": "getMultiShipMethods",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<LiveOrder.Model.Line>}",
                            "name": "lines",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        86851,
                        86924
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getShipMethods": {
                    "annotation": "method",
                    "name": "getShipMethods",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@returns {Array<OrderShipMethod>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<OrderShipMethod>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        87699,
                        87794
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getLinesSort": {
                    "annotation": "method",
                    "name": "getLinesSort",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Array<String>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        88222,
                        88270
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getPaymentMethods": {
                    "annotation": "method",
                    "name": "getPaymentMethods",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@returns {Array<ShoppingSession.PaymentMethod>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<ShoppingSession.PaymentMethod>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        88440,
                        88552
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getTransactionBodyField": {
                    "annotation": "method",
                    "name": "getTransactionBodyField",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        92448,
                        92500
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getAddresses": {
                    "annotation": "method",
                    "name": "getAddresses",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@returns {Array<OrderAddress>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<OrderAddress>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        92752,
                        92842
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getLines": {
                    "annotation": "method",
                    "name": "getLines",
                    "text": "Set Order Lines into the result. Standardizes the result of the lines",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@returns {Array<LiveOrder.Model.Line>}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<LiveOrder.Model.Line>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        93578,
                        93745
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "getIsMultiShipTo": {
                    "annotation": "method",
                    "name": "getIsMultiShipTo",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "order_fields",
                            "text": "",
                            "theRestString": "@returns {Boolean}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        97445,
                        97527
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setLinesSort": {
                    "annotation": "method",
                    "name": "setLinesSort",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "lines_sort",
                            "text": "",
                            "theRestString": "@returns {String}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        97661,
                        97729
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setBillingAddress": {
                    "annotation": "method",
                    "name": "setBillingAddress",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param {LiveOrder.Model.Data} current_order"
                        },
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        97859,
                        97943
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setShippingAddressAndMethod": {
                    "annotation": "method",
                    "name": "setShippingAddressAndMethod",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param current_order"
                        },
                        {
                            "annotation": "param",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        98491,
                        98585
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setShippingAddress": {
                    "annotation": "method",
                    "name": "setShippingAddress",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param current_order"
                        },
                        {
                            "annotation": "param",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        100143,
                        100228
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setPaymentMethods": {
                    "annotation": "method",
                    "name": "setPaymentMethods",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        101087,
                        101150
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setGiftCertificates": {
                    "annotation": "method",
                    "name": "setGiftCertificates",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Object>}",
                            "name": "gift_certificates",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        105254,
                        105325
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setShippingMethod": {
                    "annotation": "method",
                    "name": "setShippingMethod",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param current_order"
                        },
                        {
                            "annotation": "param",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        105663,
                        105747
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setPromoCode": {
                    "annotation": "method",
                    "name": "setPromoCode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@param current_order"
                        },
                        {
                            "annotation": "param",
                            "name": "current_order",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        106275,
                        106354
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setTermsAndConditions": {
                    "annotation": "method",
                    "name": "setTermsAndConditions",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        107382,
                        107449
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "setTransactionBodyField": {
                    "annotation": "method",
                    "name": "setTransactionBodyField",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{LiveOrder.Model.Data}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        107822,
                        107891
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                }
            },
            "properties": {
                "isSecure": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isSecure",
                    "text": "",
                    "commentRange": [
                        72548,
                        72579
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "isMultiShippingEnabled": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isMultiShippingEnabled",
                    "text": "",
                    "commentRange": [
                        72636,
                        72681
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                }
            }
        },
        "LiveOrder.LiveOrder.Model.Data": {
            "annotation": "class",
            "name": "LiveOrder.Model.Data",
            "text": "object containing high level shopping order object information. Serializeble to JSON and this is the object that the .ss service will serve and so it will poblate front end Model objects",
            "commentRange": [
                67444,
                67661
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LiveOrder.Model.Data",
            "properties": {
                "lines": {
                    "annotation": "property",
                    "type": "{Array<LiveOrder.Model.Line>}",
                    "name": "lines",
                    "text": "",
                    "commentRange": [
                        67678,
                        67725
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "lines_sort": {
                    "annotation": "property",
                    "type": "{Array<String>}",
                    "name": "lines_sort",
                    "text": "sorted lines ids",
                    "commentRange": [
                        67990,
                        68046
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "latest_addition": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "latest_addition",
                    "text": "",
                    "commentRange": [
                        68095,
                        68132
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "promocode": {
                    "annotation": "property",
                    "type": "{LiveOrder.Model.PromoCode}",
                    "name": "promocode",
                    "text": "",
                    "commentRange": [
                        68221,
                        68271
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "ismultishipto": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "ismultishipto",
                    "text": "",
                    "commentRange": [
                        68331,
                        68367
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "multishipmethods": {
                    "annotation": "property",
                    "type": "{Array<OrderShipMethod>}",
                    "name": "multishipmethods",
                    "text": "",
                    "commentRange": [
                        68489,
                        68543
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "shipmethods": {
                    "annotation": "property",
                    "type": "{Array<OrderShipMethod>}",
                    "name": "shipmethods",
                    "text": "",
                    "commentRange": [
                        69000,
                        69049
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "shipmethod": {
                    "annotation": "property",
                    "type": "{OrderShipMethod}",
                    "name": "shipmethod",
                    "text": "",
                    "commentRange": [
                        69114,
                        69155
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "paymentmethods": {
                    "annotation": "property",
                    "type": "{Array<ShoppingSession.PaymentMethod>}",
                    "name": "paymentmethods",
                    "text": "Payments",
                    "commentRange": [
                        69517,
                        69592
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "isPaypalComplete": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isPaypalComplete",
                    "text": "Paypal complete",
                    "commentRange": [
                        69662,
                        69717
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "touchpoints": {
                    "annotation": "property",
                    "type": "{Array<String>}",
                    "name": "touchpoints",
                    "text": "Some actions in the live order may change the URL of the checkout so to be sure we re send all the touchpoints",
                    "commentRange": [
                        69815,
                        69966
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "agreetermcondition": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "agreetermcondition",
                    "text": "Terms And Conditions",
                    "commentRange": [
                        70026,
                        70088
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "Summary": {
                    "annotation": "property",
                    "type": "{OrderSummary}",
                    "name": "Summary",
                    "text": "",
                    "commentRange": [
                        70165,
                        70200
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "options": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "options",
                    "text": "Transaction Body Field",
                    "commentRange": [
                        70247,
                        70299
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                }
            }
        },
        "LiveOrder.LiveOrder.Model.PromoCode": {
            "annotation": "class",
            "name": "LiveOrder.Model.PromoCode",
            "text": "",
            "commentRange": [
                86502,
                86575
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LiveOrder.Model.PromoCode",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        86502,
                        86575
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        86636,
                        86662
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "isvalid": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isvalid",
                    "text": "",
                    "commentRange": [
                        86717,
                        86747
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                }
            }
        },
        "LiveOrder.LiveOrder.Model.Line": {
            "annotation": "class",
            "name": "LiveOrder.Model.Line",
            "text": "represents a line in the LiveOrder",
            "commentRange": [
                94466,
                94531
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LiveOrder.Model.Line",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        94559,
                        94591
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "quantity": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "quantity",
                    "text": "",
                    "commentRange": [
                        94642,
                        94672
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "rate": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "rate",
                    "text": "",
                    "commentRange": [
                        94719,
                        94745
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "rate_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "rate_formatted",
                    "text": "",
                    "commentRange": [
                        94796,
                        94832
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "amount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "amount",
                    "text": "",
                    "commentRange": [
                        94891,
                        94919
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "tax_amount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "tax_amount",
                    "text": "",
                    "commentRange": [
                        94980,
                        95012
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "tax_rate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tax_rate",
                    "text": "",
                    "commentRange": [
                        95099,
                        95129
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "discount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discount",
                    "text": "",
                    "commentRange": [
                        95158,
                        95188
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "total",
                    "text": "",
                    "commentRange": [
                        95221,
                        95248
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "item": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "item",
                    "text": "internal id of the line's item",
                    "commentRange": [
                        95275,
                        95332
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "itemtype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "itemtype",
                    "text": "",
                    "commentRange": [
                        95377,
                        95407
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "options": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "options",
                    "text": "",
                    "commentRange": [
                        95454,
                        95483
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "shipaddress": {
                    "annotation": "property",
                    "type": "{OrderAddress}",
                    "name": "shipaddress",
                    "text": "",
                    "commentRange": [
                        95528,
                        95567
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                },
                "shipmethod": {
                    "annotation": "property",
                    "type": "{OrderShipMethod}",
                    "name": "shipmethod",
                    "text": "",
                    "commentRange": [
                        95620,
                        95661
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
                }
            }
        },
        "LiveOrder.LiveOrder.ServiceController": {
            "annotation": "class",
            "name": "LiveOrder.ServiceController",
            "text": "Manage cart items requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                108499,
                108594
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LiveOrder.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        108635,
                        108699
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        108743,
                        109017
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to LiveOrder.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        109146,
                        109281
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to LiveOrder.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        109349,
                        109486
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to LiveOrder.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LiveOrder.Model.Data}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        109985,
                        110120
                    ],
                    "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                }
            }
        },
        "LiveOrder.LivePayment.ServiceController": {
            "annotation": "class",
            "name": "LivePayment.ServiceController",
            "text": "Manage cart items requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                123278,
                123375
            ],
            "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.LivePayment.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        130905,
                        130930
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        123526,
                        123800
                    ],
                    "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "isReturnable": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isReturnable",
                    "text": "",
                    "commentRange": [
                        130476,
                        130510
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                },
                "isCancelable": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isCancelable",
                    "text": "",
                    "commentRange": [
                        130594,
                        130628
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        130845,
                        130876
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to LivePayment.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LivePayment.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        124001,
                        124135
                    ],
                    "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to LivePayment.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{LivePayment.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        124205,
                        124341
                    ],
                    "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests"
                },
                "isReturnable": {
                    "annotation": "method",
                    "name": "isReturnable",
                    "text": "Indicate if the current loaded transaction is returnable or not",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        136337,
                        136445
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                },
                "isCancelable": {
                    "annotation": "method",
                    "name": "isCancelable",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        138680,
                        138724
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
                }
            }
        },
        "LiveOrder.OrderHistory.ServiceController": {
            "annotation": "class",
            "name": "OrderHistory.ServiceController",
            "text": "Manage placed orders requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                139382,
                139483
            ],
            "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.OrderHistory.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        139524,
                        139588
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        139635,
                        139909
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to OrderHistory.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        140149,
                        140328
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to OrderHistory.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        141107,
                        141253
                    ],
                    "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests"
                }
            }
        },
        "LiveOrder.ReorderItems.Model": {
            "annotation": "class",
            "name": "ReorderItems.Model",
            "text": "Defines the model used by the ReorderItems.Service.ss service\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                142889,
                143000
            ],
            "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.ReorderItems.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        143029,
                        143054
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                },
                "isMultiSite": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isMultiSite",
                    "text": "",
                    "commentRange": [
                        143078,
                        143111
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                }
            },
            "methods": {
                "search": {
                    "annotation": "method",
                    "name": "search",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "order_id",
                            "text": "",
                            "theRestString": "@param {Object} query_filters _lineCommentSeparatorMark_ @return {Array<ReorderItems.Model.Attributes>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "query_filters",
                            "text": "",
                            "theRestString": "@return {Array<ReorderItems.Model.Attributes>}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<ReorderItems.Model.Attributes>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        143174,
                        143304
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                }
            }
        },
        "LiveOrder.ReorderItems.Model.Attributes": {
            "annotation": "class",
            "name": "ReorderItems.Model.Attributes",
            "text": "",
            "commentRange": [
                148522,
                148608
            ],
            "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.ReorderItems.Model.Attributes",
            "properties": {
                "item": {
                    "annotation": "property",
                    "type": "{StoreItem}",
                    "name": "item",
                    "text": "",
                    "commentRange": [
                        148630,
                        148658
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        148781,
                        148808
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                },
                "options": {
                    "annotation": "property",
                    "type": "{Array<Utils.ItemOptionsObject>}",
                    "name": "options",
                    "text": "",
                    "commentRange": [
                        148880,
                        148932
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                },
                "trandate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "trandate",
                    "text": "",
                    "commentRange": [
                        149027,
                        149056
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
                }
            }
        },
        "LiveOrder.ReorderItems.ServiceController": {
            "annotation": "class",
            "name": "ReorderItems.ServiceController",
            "text": "Manage reorder items requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                149701,
                149802
            ],
            "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests",
            "module": {
                "annotation": "module",
                "name": "LiveOrder",
                "text": "",
                "commentRange": [
                    66649,
                    66669
                ],
                "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
            },
            "absoluteName": "LiveOrder.ReorderItems.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        149843,
                        149907
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        149954,
                        150228
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to ReorderItems.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<ReorderItems.Model.Attributes>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        150468,
                        150622
                    ],
                    "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests"
                }
            }
        },
        "Payment.Payment.Model": {
            "annotation": "class",
            "name": "Payment.Model",
            "text": "Defines the model used by the payment.ss service\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                151415,
                151512
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service",
            "module": {
                "annotation": "module",
                "name": "Payment",
                "text": "",
                "commentRange": [
                    151131,
                    151318
                ],
                "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
            },
            "absoluteName": "Payment.Payment.Model",
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@returns {Payment.Model.Attributes}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Payment.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        151560,
                        151640
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "setPaymentMethod": {
                    "annotation": "method",
                    "name": "setPaymentMethod",
                    "text": "Binds customer payment method to customer payment object to return.",
                    "children": [
                        {
                            "annotation": "returns",
                            "name": "undefined",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        151788,
                        151912
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "createResult": {
                    "annotation": "method",
                    "name": "createResult",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "customer_payment",
                            "text": "NetSuite record",
                            "theRestString": "@returns {Payment.Model.Attributes}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Payment.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        152086,
                        152204
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "setInvoices": {
                    "annotation": "method",
                    "name": "setInvoices",
                    "text": "Binds invoices to customer payment object to return",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "customer_payment",
                            "text": "NetSuite record",
                            "theRestString": "@param {Payment.Model.Attributes} result _lineCommentSeparatorMark_ @returns invoices {Object}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Payment.Model.Attributes}",
                            "name": "result",
                            "text": "",
                            "theRestString": "@returns invoices {Object}"
                        },
                        {
                            "annotation": "returns",
                            "name": "invoices",
                            "text": "{Object}",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        153761,
                        153972
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                }
            }
        },
        "Payment.Payment.Model.Attributes": {
            "annotation": "class",
            "name": "Payment.Model.Attributes",
            "text": "",
            "commentRange": [
                152257,
                152291
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service",
            "module": {
                "annotation": "module",
                "name": "Payment",
                "text": "",
                "commentRange": [
                    151131,
                    151318
                ],
                "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
            },
            "absoluteName": "Payment.Payment.Model.Attributes",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        152316,
                        152349
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "type": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "type",
                    "text": "",
                    "commentRange": [
                        152403,
                        152428
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        152488,
                        152515
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "autoapply": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "autoapply",
                    "text": "",
                    "commentRange": [
                        152584,
                        152614
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "trandate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "trandate",
                    "text": "",
                    "commentRange": [
                        152689,
                        152718
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "status": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        152791,
                        152818
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "payment": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "payment",
                    "text": "",
                    "commentRange": [
                        152884,
                        152912
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "payment_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "payment_formatted",
                    "text": "",
                    "commentRange": [
                        153001,
                        153039
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "lastmodifieddate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "lastmodifieddate",
                    "text": "",
                    "commentRange": [
                        153142,
                        153179
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "balance": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "balance",
                    "text": "",
                    "commentRange": [
                        153268,
                        153296
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "balance_formatted": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "balance_formatted",
                    "text": "",
                    "commentRange": [
                        153385,
                        153423
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "paymentMethods": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "paymentMethods",
                    "text": "",
                    "commentRange": [
                        153523,
                        153566
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                },
                "invoices": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "invoices",
                    "text": "",
                    "commentRange": [
                        153623,
                        153660
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
                }
            }
        },
        "Payment.Payment.ServiceController": {
            "annotation": "class",
            "name": "Payment.ServiceController",
            "text": "Manage payment requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                155832,
                155922
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests",
            "module": {
                "annotation": "module",
                "name": "Payment",
                "text": "",
                "commentRange": [
                    151131,
                    151318
                ],
                "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
            },
            "absoluteName": "Payment.Payment.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        155963,
                        156027
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        156069,
                        156343
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Payment.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Payment.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        156506,
                        156643
                    ],
                    "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests"
                }
            }
        },
        "Payment.PrintStatement.ServiceController": {
            "annotation": "class",
            "name": "PrintStatement.ServiceController",
            "text": "Manage print requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                158914,
                159009
            ],
            "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests",
            "module": {
                "annotation": "module",
                "name": "Payment",
                "text": "",
                "commentRange": [
                    151131,
                    151318
                ],
                "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
            },
            "absoluteName": "Payment.PrintStatement.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        159050,
                        159114
                    ],
                    "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        159163,
                        159437
                    ],
                    "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests"
                }
            },
            "methods": {
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to PrintStatement.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{PrintStatementModel.UrlObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        159625,
                        159776
                    ],
                    "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests"
                }
            }
        },
        "ProductList.ProductListItem": {
            "annotation": "class",
            "name": "ProductListItem",
            "text": "Handles creating, fetching and updating Product List Items",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                159880,
                160112
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js",
            "module": {
                "annotation": "module",
                "name": "ProductList",
                "text": "",
                "commentRange": [
                    159880,
                    160112
                ],
                "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
            },
            "absoluteName": "ProductList.ProductListItem",
            "properties": {
                "configuration": {
                    "annotation": "property",
                    "type": "{Configuration.ProductLists}",
                    "name": "configuration",
                    "text": "General settings",
                    "commentRange": [
                        160491,
                        160563
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
                }
            },
            "methods": {
                "verifySession": {
                    "annotation": "method",
                    "name": "verifySession",
                    "text": "",
                    "children": [
                        {
                            "annotation": "throws",
                            "type": "{unauthorizedError}",
                            "name": "it",
                            "text": "if the user has not the appropriate session for accessing product lists.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        160613,
                        160740
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
                }
            }
        },
        "ProductList.ProductList.Item.ServiceController": {
            "annotation": "class",
            "name": "ProductList.Item.ServiceController",
            "text": "Manage product list items requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                173560,
                173670
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests",
            "module": {
                "annotation": "module",
                "name": "ProductList",
                "text": "",
                "commentRange": [
                    159880,
                    160112
                ],
                "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
            },
            "absoluteName": "ProductList.ProductList.Item.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        173711,
                        173775
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        173826,
                        174100
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                }
            },
            "methods": {
                "getUser": {
                    "annotation": "method",
                    "name": "getUser",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Integer}",
                            "name": "User",
                            "text": "id",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        174175,
                        174225
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "internalid",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        174633,
                        174683
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to ProductList.Item.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ProductList.Item.Model.Get.Result || ProductList.Item.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        174836,
                        175029
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to ProductList.Item.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        175703,
                        175839
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to ProductList.Item.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ProductList.Item.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        176069,
                        176224
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                },
                "delete": {
                    "annotation": "method",
                    "name": "delete",
                    "text": "The call to ProductList.Item.Service.ss with http method 'delete' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        176415,
                        176555
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
                }
            }
        },
        "ProductList.ProductList.ServiceController": {
            "annotation": "class",
            "name": "ProductList.ServiceController",
            "text": "Manage product list request",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                186904,
                187003
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests",
            "module": {
                "annotation": "module",
                "name": "ProductList",
                "text": "",
                "commentRange": [
                    159880,
                    160112
                ],
                "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
            },
            "absoluteName": "ProductList.ProductList.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        187044,
                        187108
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        187154,
                        187428
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            },
            "methods": {
                "getUser": {
                    "annotation": "method",
                    "name": "getUser",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Integer}",
                            "name": "user",
                            "text": "id",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        187503,
                        187553
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "internalid",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        187985,
                        188035
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to ProductList.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ProductList.Model.Get.Result || ProductList.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        188148,
                        188326
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to ProductList.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        188796,
                        188927
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to ProductList.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ProductList.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        189219,
                        189364
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                },
                "delete": {
                    "annotation": "method",
                    "name": "delete",
                    "text": "The call to ProductList.Service.ss with http method 'delete' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        189547,
                        189682
                    ],
                    "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
                }
            }
        },
        "ProductList.ProductReviews.ServiceController": {
            "annotation": "class",
            "name": "ProductReviews.ServiceController",
            "text": "Manage product review requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                200865,
                200969
            ],
            "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests",
            "module": {
                "annotation": "module",
                "name": "ProductList",
                "text": "",
                "commentRange": [
                    159880,
                    160112
                ],
                "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
            },
            "absoluteName": "ProductList.ProductReviews.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        201010,
                        201074
                    ],
                    "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        201123,
                        201397
                    ],
                    "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
                },
                "isLoggedIn.": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "isLoggedIn.",
                    "text": "It saves the user logged status in the specified string.",
                    "commentRange": [
                        205968,
                        206058
                    ],
                    "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.Model.js"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to ProductReviews.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{EmptyObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        201472,
                        201603
                    ],
                    "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to ProductReviews.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        202445,
                        202579
                    ],
                    "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to ProductReviews.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ProductReview.Model.Item}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        202755,
                        202899
                    ],
                    "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
                }
            }
        },
        "ProductList.Profile.ServiceController": {
            "annotation": "class",
            "name": "Profile.ServiceController",
            "text": "Manage profile requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                209108,
                209198
            ],
            "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests",
            "module": {
                "annotation": "module",
                "name": "ProductList",
                "text": "",
                "commentRange": [
                    159880,
                    160112
                ],
                "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
            },
            "absoluteName": "ProductList.Profile.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        209239,
                        209303
                    ],
                    "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        209345,
                        209619
                    ],
                    "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Profile.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Profile.Model.Item}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        209739,
                        209869
                    ],
                    "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to Profile.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Profile.Model.Item}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        209934,
                        210064
                    ],
                    "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests"
                }
            }
        },
        "Quote.Quote.Model": {
            "annotation": "class",
            "name": "Quote.Model",
            "text": "Defines the model used by the Quote.Service.ss service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Transaction.Model",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                210679,
                210786
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        210824,
                        210849
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            },
            "methods": {
                "_isCreatingARecord": {
                    "annotation": "method",
                    "name": "_isCreatingARecord",
                    "text": "Internal method used to indicate whether the current operation is a creation or not",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        210869,
                        211003
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getTransactionRecord": {
                    "annotation": "method",
                    "name": "getTransactionRecord",
                    "text": "Load a NetSuite record (transaction)",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type",
                            "text": "",
                            "theRestString": "@param {String} id _lineCommentSeparatorMark_ @return {nlobjRecord}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@return {nlobjRecord}"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        211086,
                        211234
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "Returns an Estimate JSON object",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Quote.Model.Attributes}",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        211532,
                        211919
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "setExtraRecordFields": {
                    "annotation": "method",
                    "name": "setExtraRecordFields",
                    "text": "Override empty base method to add extra values in the estimate",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        211532,
                        211919
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getRecordAddresses": {
                    "annotation": "method",
                    "name": "getRecordAddresses",
                    "text": "Override parent method to load address using real internal id",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        213101,
                        213305
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getAddressInternalId": {
                    "annotation": "method",
                    "name": "getAddressInternalId",
                    "text": "Internal method used to generate the internal id of an address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Model.Attributes}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        215972,
                        216133
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "_getQuoteStatus": {
                    "annotation": "method",
                    "name": "_getQuoteStatus",
                    "text": "ALERT: \n AWFUL HACK TO SOLVE SUITESCRIPT ISSUE: 359794 !!",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "estimate_id",
                            "text": "",
                            "theRestString": "@return dummy"
                        },
                        {
                            "annotation": "return",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        216353,
                        216490
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "setEntityStatus": {
                    "annotation": "method",
                    "name": "setEntityStatus",
                    "text": "Set the entity status of the current estimate (Quote)",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        216757,
                        216950
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getDiscountInformation": {
                    "annotation": "method",
                    "name": "getDiscountInformation",
                    "text": "Get the discount information of the current estimate",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        217609,
                        217808
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getDueDate": {
                    "annotation": "method",
                    "name": "getDueDate",
                    "text": "Get all date related field of the current estimate",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        218371,
                        218556
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "list": {
                    "annotation": "method",
                    "name": "list",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.List.Parameters}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@return {Quote.Model.List.Result} _lineCommentSeparatorMark_"
                        },
                        {
                            "annotation": "return",
                            "type": "{Quote.Model.List.Result}",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        219255,
                        219606
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "setExtraListColumns": {
                    "annotation": "method",
                    "name": "setExtraListColumns",
                    "text": "Overwritten method to add extra columns (due date, expected close date, entity status, and total)",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        219255,
                        219606
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "setExtraListFilters": {
                    "annotation": "method",
                    "name": "setExtraListFilters",
                    "text": "Overwritten method to add extra filter of the list (entity status filter)",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        219920,
                        220043
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "mapListResult": {
                    "annotation": "method",
                    "name": "mapListResult",
                    "text": "overrides method from Transaction.Model \n We are able to apply any custom extension over each record returned",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.List.Result.Record}",
                            "name": "result",
                            "text": "Base result to be extended",
                            "theRestString": "@param {nlobjSearchResult} record Instance of the record returned by NetSuite search _lineCommentSeparatorMark_ @return {Transaction.Model.List.Result.Record}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjSearchResult}",
                            "name": "record",
                            "text": "Instance of the record returned by NetSuite search",
                            "theRestString": "@return {Transaction.Model.List.Result.Record}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.List.Result.Record}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        220279,
                        220643
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isDateInterval": {
                    "annotation": "method",
                    "name": "isDateInterval",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "date",
                            "text": "",
                            "theRestString": "@return {Boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        221786,
                        221857
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getDaysBeforeExpiration": {
                    "annotation": "method",
                    "name": "getDaysBeforeExpiration",
                    "text": "return {Number}",
                    "commentRange": [
                        221969,
                        222022
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "getSalesRepFromId": {
                    "annotation": "method",
                    "name": "getSalesRepFromId",
                    "text": "This method does NOT depend on this.record and this.result",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "quote_id",
                            "text": "",
                            "theRestString": "@return {Quote.Model.Get.SalesRepresentative}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Quote.Model.Get.SalesRepresentative}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        222137,
                        222302
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "postSubmitRecord": {
                    "annotation": "method",
                    "name": "postSubmitRecord",
                    "text": "Overwritten method used to extend the confirmation submission result",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Confirmation}",
                            "name": "confirmation_result",
                            "text": "",
                            "theRestString": "@return {Quote.Model.Confirmation}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Quote.Model.Confirmation}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        223319,
                        223517
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.Attributes": {
            "annotation": "class",
            "name": "Quote.Model.Attributes",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.Get.Result",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                211532,
                211919
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.Attributes",
            "properties": {
                "statusRef": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "statusRef",
                    "text": "",
                    "commentRange": [
                        212037,
                        212103
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "",
                    "commentRange": [
                        212174,
                        212202
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "allowToPurchase": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "allowToPurchase",
                    "text": "",
                    "commentRange": [
                        212291,
                        212328
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isOpen": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isOpen",
                    "text": "",
                    "commentRange": [
                        212426,
                        212454
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "purchasablestatus": {
                    "annotation": "property",
                    "type": "{QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus}",
                    "name": "purchasablestatus",
                    "text": "",
                    "commentRange": [
                        212575,
                        212668
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "entitystatus": {
                    "annotation": "property",
                    "type": "{Quote.Model.Attributes.EntityStatus}",
                    "name": "entitystatus",
                    "text": "",
                    "commentRange": [
                        217140,
                        217286
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{Quote.Model.Attributes.Discount?} discount",
                    "commentRange": [
                        217855,
                        217946
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "duedate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "duedate",
                    "text": "",
                    "commentRange": [
                        218714,
                        218742
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isOverdue": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isOverdue",
                    "text": "",
                    "commentRange": [
                        218780,
                        218811
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isCloseOverdue": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isCloseOverdue",
                    "text": "",
                    "commentRange": [
                        218917,
                        218953
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "expectedclosedate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "expectedclosedate",
                    "text": "",
                    "commentRange": [
                        219099,
                        219137
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Transaction.Model.Get.Result": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Result",
            "text": "",
            "commentRange": [
                213348,
                213444
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Transaction.Model.Get.Result",
            "properties": {
                "addresses": {
                    "annotation": "property",
                    "type": "{Array<Address.Model.Attributes>}",
                    "name": "addresses",
                    "text": "",
                    "commentRange": [
                        213348,
                        213444
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "shipaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipaddress",
                    "text": "Id of the shipping address",
                    "commentRange": [
                        214585,
                        214673
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "billaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "billaddress",
                    "text": "Id of the billing address",
                    "commentRange": [
                        215267,
                        215350
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.Attributes.EntityStatus": {
            "annotation": "class",
            "name": "Quote.Model.Attributes.EntityStatus",
            "text": "",
            "commentRange": [
                217140,
                217286
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.Attributes.EntityStatus",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "id: record.getFieldValue('entitystatus')",
                    "commentRange": [
                        217323,
                        217395
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": ", name: record.getFieldText('entitystatus')",
                    "commentRange": [
                        217446,
                        217522
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.Attributes.Discount": {
            "annotation": "class",
            "name": "Quote.Model.Attributes.Discount",
            "text": "",
            "commentRange": [
                218020,
                218060
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.Attributes.Discount",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        218070,
                        218101
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        218164,
                        218189
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "rate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "rate",
                    "text": "",
                    "commentRange": [
                        218246,
                        218271
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.List.Result": {
            "annotation": "class",
            "name": "Quote.Model.List.Result",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.List.Result",
                    "text": "",
                    "theRestString": ""
                },
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.List.Result",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                219255,
                219606
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.List.Result",
            "properties": {
                "records": {
                    "annotation": "property",
                    "type": "{Arra<Quote.Model.List.Result.Record>}",
                    "name": "records",
                    "text": "",
                    "commentRange": [
                        224053,
                        224370
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.List.Result.Record": {
            "annotation": "class",
            "name": "Quote.Model.List.Result.Record",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.List.Result.Record",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                220773,
                220891
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.List.Result.Record",
            "properties": {
                "duedate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "duedate",
                    "text": "",
                    "commentRange": [
                        220773,
                        220891
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isOverdue": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isOverdue",
                    "text": "",
                    "commentRange": [
                        220924,
                        220956
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "isCloseOverdue": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isCloseOverdue",
                    "text": "",
                    "commentRange": [
                        221057,
                        221094
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "expectedclosedate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "expectedclosedate",
                    "text": "",
                    "commentRange": [
                        221235,
                        221274
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "entitystatus": {
                    "annotation": "property",
                    "type": "{Quote.Model.Attributes.EntityStatus}",
                    "name": "entitystatus",
                    "text": "",
                    "commentRange": [
                        221346,
                        221409
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "total",
                    "text": "",
                    "commentRange": [
                        221528,
                        221555
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "total_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "total_formatted",
                    "text": "",
                    "commentRange": [
                        221621,
                        221658
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.Get.SalesRepresentative": {
            "annotation": "class",
            "name": "Quote.Model.Get.SalesRepresentative",
            "text": "",
            "commentRange": [
                222595,
                222671
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.Get.SalesRepresentative",
            "properties": {
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} mobilephone",
                    "commentRange": [
                        222995,
                        223028
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "email": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "email",
                    "text": "",
                    "commentRange": [
                        222730,
                        222756
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "fullname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fullname",
                    "text": "",
                    "commentRange": [
                        222815,
                        222844
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        222909,
                        222934
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "fax": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fax",
                    "text": "",
                    "commentRange": [
                        223099,
                        223123
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        223178,
                        223209
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
                }
            }
        },
        "Quote.Quote.Model.Confirmation": {
            "annotation": "class",
            "name": "Quote.Model.Confirmation",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.Confirmation",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                223686,
                223758
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.Model.Confirmation"
        },
        "Quote.Quote.ServiceController": {
            "annotation": "class",
            "name": "Quote.ServiceController",
            "text": "Manage quote requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                224523,
                224609
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests",
            "module": {
                "annotation": "module",
                "name": "Quote",
                "text": "",
                "commentRange": [
                    210248,
                    210352
                ],
                "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
            },
            "absoluteName": "Quote.Quote.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        224650,
                        224714
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        224754,
                        225028
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Quote.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        225225,
                        225397
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to Quote.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        225950,
                        226091
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to Quote.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        226611,
                        226750
                    ],
                    "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
                }
            }
        },
        "QuoteToSalesOrder.RequireQuoteError": {
            "annotation": "class",
            "name": "RequireQuoteError",
            "text": "",
            "commentRange": [
                227354,
                227380
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.RequireQuoteError",
            "properties": {
                "status": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        227413,
                        227441
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        227460,
                        227486
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "",
                    "commentRange": [
                        227532,
                        227561
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model",
            "text": "Defines the model used by the Quote.Service.ss service\n\n\n\n\n\n\n\n\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Transaction.Model",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                227647,
                227766
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        227803,
                        227828
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            },
            "methods": {
                "getTransactionRecord": {
                    "annotation": "method",
                    "name": "getTransactionRecord",
                    "text": "Override default method to read record id from local property quoteId",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        227860,
                        227986
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "getInvoiceCustomFormId": {
                    "annotation": "method",
                    "name": "getInvoiceCustomFormId",
                    "text": "Returns the id of the form used to generate sales order that are begin pay using invoices (terms)",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        228689,
                        228840
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "getExtraRecordFields": {
                    "annotation": "method",
                    "name": "getExtraRecordFields",
                    "text": "Override empty base method to add extra values in the estimate & sales order",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        228990,
                        229211
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "getQuoteDetailsForValidation": {
                    "annotation": "method",
                    "name": "getQuoteDetailsForValidation",
                    "text": "Returns all the extra quote information we return in the sales order. \n It is used for two purposes, to validate that the quote you are transforming is valid to be transformed and to return \n quote related information on the sales order",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "quote_id",
                            "text": "",
                            "theRestString": "@return {QuoteToSalesOrder.Model.Attributes.QuoteDetails}"
                        },
                        {
                            "annotation": "return",
                            "type": "{QuoteToSalesOrder.Model.Attributes.QuoteDetails}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        229813,
                        230183
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "getSalesRep": {
                    "annotation": "method",
                    "name": "getSalesRep",
                    "text": "Override base method to NOT depend on this.record and this.result",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "quote_id",
                            "text": "",
                            "theRestString": "@return {QuoteToSalesOrder.Model.Get.SalesRepresentative}"
                        },
                        {
                            "annotation": "return",
                            "type": "{QuoteToSalesOrder.Model.Get.SalesRepresentative}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        231184,
                        231362
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "Override default method to specify quote id from which the sales order is loaded",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "quote_id",
                            "text": "",
                            "theRestString": "@param {Boolean} skip_quote_validation _lineCommentSeparatorMark_ @return {QuoteToSalesOrder.Model.Attributes}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Boolean}",
                            "name": "skip_quote_validation",
                            "text": "",
                            "theRestString": "@return {QuoteToSalesOrder.Model.Attributes}"
                        },
                        {
                            "annotation": "return",
                            "type": "{QuoteToSalesOrder.Model.Attributes}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        232397,
                        232612
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "Override default method to specify the quote id from which the transformation is done",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "quote_id",
                            "text": "",
                            "theRestString": "@param {Transaction.Model.UpdateAttributes} data _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.UpdateAttributes}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        233006,
                        233209
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "setLines": {
                    "annotation": "method",
                    "name": "setLines",
                    "text": "Override default method so not lines are set. As those cannot be touched when creating a sales order",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        233363,
                        233501
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "getRecordAddresses": {
                    "annotation": "method",
                    "name": "getRecordAddresses",
                    "text": "Override parent method to load address using real internal id",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        233533,
                        233737
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model.Attributes",
            "text": "",
            "commentRange": [
                229256,
                229378
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes",
            "properties": {
                "quoteDetails": {
                    "annotation": "property",
                    "type": "{QuoteToSalesOrder.Model.Attributes.QuoteDetails}",
                    "name": "quoteDetails",
                    "text": "",
                    "commentRange": [
                        229256,
                        229378
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            },
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.Get.Result",
                    "text": "",
                    "theRestString": ""
                }
            ]
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes.QuoteDetails": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model.Attributes.QuoteDetails",
            "text": "",
            "commentRange": [
                230412,
                230468
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes.QuoteDetails",
            "properties": {
                "entitystatus": {
                    "annotation": "property",
                    "type": "{QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus}",
                    "name": "entitystatus",
                    "text": "",
                    "commentRange": [
                        230485,
                        230646
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "statusRef": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "statusRef",
                    "text": "",
                    "commentRange": [
                        230746,
                        230837
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        230887,
                        230918
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "salesrep": {
                    "annotation": "property",
                    "type": "{QuoteToSalesOrder.Model.Get.SalesRepresentative}",
                    "name": "salesrep",
                    "text": "",
                    "commentRange": [
                        230949,
                        231019
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        231066,
                        231093
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            },
            "children": []
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus",
            "text": "",
            "commentRange": [
                230485,
                230646
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model.Attributes.QuoteDetails.EntityStatus",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        230672,
                        230695
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model.Get.SalesRepresentative": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model.Get.SalesRepresentative",
            "text": "",
            "commentRange": [
                231649,
                231737
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model.Get.SalesRepresentative",
            "properties": {
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} mobilephone",
                    "commentRange": [
                        232061,
                        232094
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "email": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "email",
                    "text": "",
                    "commentRange": [
                        231796,
                        231822
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "fullname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fullname",
                    "text": "",
                    "commentRange": [
                        231881,
                        231910
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        231975,
                        232000
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "fax": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fax",
                    "text": "",
                    "commentRange": [
                        232165,
                        232189
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        232244,
                        232275
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.Transaction.Model.Get.Result": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Result",
            "text": "",
            "commentRange": [
                233780,
                233876
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.Transaction.Model.Get.Result",
            "properties": {
                "addresses": {
                    "annotation": "property",
                    "type": "{Array<Address.Model.Attributes>}",
                    "name": "addresses",
                    "text": "",
                    "commentRange": [
                        233780,
                        233876
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "shipaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipaddress",
                    "text": "Id of the shipping address",
                    "commentRange": [
                        235018,
                        235106
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "billaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "billaddress",
                    "text": "Id of the billing address",
                    "commentRange": [
                        235700,
                        235783
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.Quote.Model": {
            "annotation": "class",
            "name": "Quote.Model",
            "text": "",
            "commentRange": [
                236376,
                236397
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.Quote.Model",
            "methods": {
                "getAddressInternalId": {
                    "annotation": "method",
                    "name": "getAddressInternalId",
                    "text": "Internal method used to generate the internal id of an address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Model.Attributes}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        236405,
                        236566
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                },
                "postSubmitRecord": {
                    "annotation": "method",
                    "name": "postSubmitRecord",
                    "text": "Overwritten method used to extend the confirmation submission result",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Confirmation}",
                            "name": "confirmation_result",
                            "text": "",
                            "theRestString": "@return {QuoteToSalesOrder.Model.Confirmation}"
                        },
                        {
                            "annotation": "return",
                            "type": "{QuoteToSalesOrder.Model.Confirmation}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        236786,
                        236996
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
                }
            }
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.Model.Confirmation": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.Model.Confirmation",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Transaction.Model.Confirmation",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                237167,
                237251
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.Model.Confirmation"
        },
        "QuoteToSalesOrder.QuoteToSalesOrder.ServiceController": {
            "annotation": "class",
            "name": "QuoteToSalesOrder.ServiceController",
            "text": "Manage quote to sales order request",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                237921,
                238033
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrder",
                "text": "",
                "commentRange": [
                    227000,
                    227139
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
            },
            "absoluteName": "QuoteToSalesOrder.QuoteToSalesOrder.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        238074,
                        238138
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        238190,
                        238464
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to QuoteToSalesOrder.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        238543,
                        238694
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to QuoteToSalesOrder.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        238835,
                        238988
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
                },
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "The call to QuoteToSalesOrder.Service.ss with http method 'put' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        239532,
                        239683
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
                }
            }
        },
        "QuoteToSalesOrderValidator.InvalidQuoteError": {
            "annotation": "class",
            "name": "InvalidQuoteError",
            "text": "",
            "commentRange": [
                240388,
                240414
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.InvalidQuoteError",
            "properties": {
                "status": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        240445,
                        240473
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        240492,
                        240518
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "",
                    "commentRange": [
                        240559,
                        240588
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            }
        },
        "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model": {
            "annotation": "class",
            "name": "QuoteToSalesOrderValidator.Model",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "SC.Model",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                240671,
                240729
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        240757,
                        240782
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "invalidQuoteError": {
                    "annotation": "property",
                    "type": "{InvalidQuoteError}",
                    "name": "invalidQuoteError",
                    "text": "",
                    "commentRange": [
                        240823,
                        240872
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "purchasableQuoteConditions": {
                    "annotation": "property",
                    "type": "{Array<QuoteToSalesOrderValidator.Model.PurchasableValidator>}",
                    "name": "purchasableQuoteConditions",
                    "text": "",
                    "commentRange": [
                        240916,
                        241017
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            },
            "methods": {
                "getQuoteToSalesOrderValidation": {
                    "annotation": "method",
                    "name": "getQuoteToSalesOrderValidation",
                    "text": "Set the purchasable status of the current estimate",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Quote.Model.Attributes}",
                            "name": "record",
                            "text": "",
                            "theRestString": "@param {Array<QuoteToSalesOrderValidator.Model.PurchasableValidator>?} validators _lineCommentSeparatorMark_ @return {QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus}"
                        },
                        {
                            "annotation": "param",
                            "text": "{Array<QuoteToSalesOrderValidator.Model.PurchasableValidator>?} validators",
                            "theRestString": "@return {QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus}"
                        },
                        {
                            "annotation": "return",
                            "type": "{QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        243355,
                        243697
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            }
        },
        "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model.PurchasableValidator": {
            "annotation": "class",
            "name": "QuoteToSalesOrderValidator.Model.PurchasableValidator",
            "text": "",
            "commentRange": [
                241054,
                241116
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model.PurchasableValidator",
            "properties": {
                "stopValidation": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "stopValidation",
                    "text": "",
                    "commentRange": [
                        241161,
                        241197
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "errorCode": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "errorCode",
                    "text": "",
                    "commentRange": [
                        241359,
                        241389
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            },
            "methods": {
                "validatesCondtion": {
                    "annotation": "method",
                    "name": "validatesCondtion",
                    "text": "Validated ONE condition over a quote",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Quote.Model.Attributes}",
                            "name": "quote",
                            "text": "",
                            "theRestString": "@return {Boolean} True in case the quote is valid, false otherwise"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "name": "True",
                            "text": "in case the quote is valid, false otherwise",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        241431,
                        241612
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            }
        },
        "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus": {
            "annotation": "class",
            "name": "QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus",
            "text": "Container used to transport the result of validating a quote as ready for purchase",
            "commentRange": [
                244204,
                244357
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.QuoteToSalesOrderValidator.Model.Attributes.PurchasableStatus",
            "properties": {
                "isPurchasable": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isPurchasable",
                    "text": "",
                    "commentRange": [
                        244374,
                        244409
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                },
                "validationErrors": {
                    "annotation": "property",
                    "type": "{Array<String>}",
                    "name": "validationErrors",
                    "text": "",
                    "commentRange": [
                        244455,
                        244499
                    ],
                    "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
                }
            }
        },
        "QuoteToSalesOrderValidator.Receipt.ServiceController": {
            "annotation": "class",
            "name": "Receipt.ServiceController",
            "text": "Manage invoice requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                246203,
                246293
            ],
            "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.Receipt.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        246334,
                        246398
                    ],
                    "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        246440,
                        246714
                    ],
                    "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Receipt.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        246911,
                        247085
                    ],
                    "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests"
                }
            }
        },
        "QuoteToSalesOrderValidator.ReturnAuthorization.Model": {
            "annotation": "class",
            "name": "ReturnAuthorization.Model",
            "text": "Defines the model used by the ReturnAuthorization.Service.ss service",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Transaction",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                247966,
                248095
            ],
            "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.ReturnAuthorization.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        248128,
                        248153
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "validation": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "validation",
                    "text": "",
                    "commentRange": [
                        248187,
                        248218
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                }
            },
            "methods": {
                "isCancelable": {
                    "annotation": "method",
                    "name": "isCancelable",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        248859,
                        248903
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "create": {
                    "annotation": "method",
                    "name": "create",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "data",
                            "text": "",
                            "theRestString": "@return {Number}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Number}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        250668,
                        250721
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "findLine": {
                    "annotation": "method",
                    "name": "findLine",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "line_id",
                            "text": "",
                            "theRestString": "@param lines"
                        },
                        {
                            "annotation": "param",
                            "name": "lines",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        251870,
                        251924
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "setLines": {
                    "annotation": "method",
                    "name": "setLines",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "return_authorization",
                            "text": "",
                            "theRestString": "@param lines _lineCommentSeparatorMark_ @return {ReturnAuthorization.Model}"
                        },
                        {
                            "annotation": "param",
                            "name": "lines",
                            "text": "",
                            "theRestString": "@return {ReturnAuthorization.Model}"
                        },
                        {
                            "annotation": "return",
                            "type": "{ReturnAuthorization.Model}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        253292,
                        253399
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "list": {
                    "annotation": "method",
                    "name": "list",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@return {Object}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        254381,
                        254441
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                }
            }
        },
        "QuoteToSalesOrderValidator.CreatedFrom": {
            "annotation": "class",
            "name": "CreatedFrom",
            "text": "",
            "commentRange": [
                263406,
                263426
            ],
            "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.CreatedFrom",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        263436,
                        263467
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        263512,
                        263537
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "recordtype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "recordtype",
                    "text": "",
                    "commentRange": [
                        263571,
                        263602
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        263642,
                        263669
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
                }
            }
        },
        "QuoteToSalesOrderValidator.ReturnAuthorization.ServiceController": {
            "annotation": "class",
            "name": "ReturnAuthorization.ServiceController",
            "text": "Manage return authorization requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                264437,
                264552
            ],
            "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests",
            "module": {
                "annotation": "module",
                "name": "QuoteToSalesOrderValidator",
                "text": "",
                "commentRange": [
                    239983,
                    240149
                ],
                "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
            },
            "absoluteName": "QuoteToSalesOrderValidator.ReturnAuthorization.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        264593,
                        264657
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        264711,
                        264985
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to ReturnAuthorization.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        265346,
                        265531
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests"
                },
                "post": {
                    "annotation": "method",
                    "name": "post",
                    "text": "The call to ReturnAuthorization.Service.ss with http method 'post' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{StatusObject}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        266030,
                        266169
                    ],
                    "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests"
                }
            }
        },
        "SiteSettings.SiteSettings": {
            "annotation": "class",
            "name": "SiteSettings",
            "text": "Pre-processes the SiteSettings to be used on the site. For performance reasons it \n adds a cache layer using netsuite's application cache. Cache use the siteid in the keyword to support multi sites. \n Cache douration can be configured in cacheTtl property. Some properties like touchpoints, siteid, languages and currencies are never cached.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                266716,
                267105
            ],
            "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js",
            "module": {
                "annotation": "module",
                "name": "SiteSettings",
                "text": "Pre-processes the SiteSettings to be used on the site",
                "commentRange": [
                    266368,
                    266550
                ],
                "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js"
            },
            "absoluteName": "SiteSettings.SiteSettings",
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "the site settings. Notice that can be cached",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{ ShoppingSession.SiteSettings}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        267158,
                        267258
                    ],
                    "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js"
                }
            }
        },
        "SiteSettings.SiteSettings.ServiceController": {
            "annotation": "class",
            "name": "SiteSettings.ServiceController",
            "text": "Manage sitesettings requests",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                270680,
                270780
            ],
            "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests",
            "module": {
                "annotation": "module",
                "name": "SiteSettings",
                "text": "Pre-processes the SiteSettings to be used on the site",
                "commentRange": [
                    266368,
                    266550
                ],
                "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js"
            },
            "absoluteName": "SiteSettings.SiteSettings.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        270821,
                        270885
                    ],
                    "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        270932,
                        271206
                    ],
                    "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to SiteSettings.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{ShoppingSession.SiteSettings}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        271281,
                        271427
                    ],
                    "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests"
                }
            }
        },
        "ssp.libraries.Application": {
            "annotation": "class",
            "name": "Application",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Events",
                    "text": "The Application object contains high level functions to interact with low level suitescript and Commerce API \n like obtaining all the context environment information, sending http responses, defining http errors, searching with paginated results, etc.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                272148,
                272443
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Contains the @?class Application with basic utilities for accessing netsuite environment, searches, dealing with requests and \n responses, defining error types.\n\n\n\nContains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.\n\n\n\nSupports infrastructure for defining model classes by using @?class SCModel.\n\n\n\nProvides @?class ServiceController utility class for nice service definitions.\n\n",
                "commentRange": [
                    271774,
                    271965
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
            },
            "absoluteName": "ssp.libraries.Application",
            "methods": {
                "getEnvironment": {
                    "annotation": "method",
                    "name": "getEnvironment",
                    "text": "returns an Object with high level settings. Gets the information with session.getSiteSettings() \n and then mix it with high level information like languages, permissions, currencies, hosts, etc. also it will take care of calling \n session.setShopperCurrency and session.setShopperLanguage to automatically set this information in the shopper session according to passed request parameters.",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {ShoppingSession} session _lineCommentSeparatorMark_ @param {nlobjRequest} request - used for read passed parameters in the url, i.e. in sc.environment.ssp?lang=es_ES _lineCommentSeparatorMark_ @return {Object} an object with many environment properties serializable to JSON."
                        },
                        {
                            "annotation": "param",
                            "type": "{ShoppingSession}",
                            "name": "session",
                            "text": "",
                            "theRestString": "@param {nlobjRequest} request - used for read passed parameters in the url, i.e. in sc.environment.ssp?lang=es_ES _lineCommentSeparatorMark_ @return {Object} an object with many environment properties serializable to JSON."
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRequest}",
                            "name": "request",
                            "text": "- used for read passed parameters in the url, i.e. in sc.environment.ssp?lang=es_ES",
                            "theRestString": "@return {Object} an object with many environment properties serializable to JSON."
                        },
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "name": "an",
                            "text": "object with many environment properties serializable to JSON.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        272499,
                        273201
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "getPermissions": {
                    "annotation": "method",
                    "name": "getPermissions",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{transactions: Object, lists: Object}",
                            "name": "the",
                            "text": "permissions the current user has for each role.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        279497,
                        279621
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "getHost": {
                    "annotation": "method",
                    "name": "getHost",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "return",
                            "text": "the current url's host",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        281928,
                        281993
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "sendContent": {
                    "annotation": "method",
                    "name": "sendContent",
                    "text": "writes the given content in the request object using the right headers, and content type. \n Deprecated: Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "content",
                            "text": "",
                            "theRestString": "@param {status: Number, cache: Boolean} options"
                        },
                        {
                            "annotation": "param",
                            "type": "{status: Number, cache: Boolean}",
                            "name": "options",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        282091,
                        282441
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "processError": {
                    "annotation": "method",
                    "name": "processError",
                    "text": "builds an error object suitable to send back in the http response.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjError|Application.Error}",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@returns {errorStatusCode:Number,errorCode:String,errorMessage:String} an error object suitable to send back in the http response. _lineCommentSeparatorMark_ @deprecated Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module"
                        },
                        {
                            "annotation": "returns",
                            "type": "{errorStatusCode:Number,errorCode:String,errorMessage:String}",
                            "name": "an",
                            "text": "error object suitable to send back in the http response.",
                            "theRestString": "@deprecated Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module"
                        },
                        {
                            "annotation": "deprecated",
                            "name": "Only",
                            "text": "included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        283836,
                        284246
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "sendError": {
                    "annotation": "method",
                    "name": "sendError",
                    "text": "process the error and then writes it in the http response.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjError|Application.Error}",
                            "name": "e",
                            "text": "",
                            "theRestString": "@deprecated Only included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module"
                        },
                        {
                            "annotation": "deprecated",
                            "name": "Only",
                            "text": "included for backward compatibility, please use the same method available in SspLibraries, 'Service.Controller' module",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        285175,
                        285435
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "getPaginatedSearchResults": {
                    "annotation": "method",
                    "name": "getPaginatedSearchResults",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {page:Number,columns:Array<nlobjSearchColumn>,filters:Array<nlobjSearchFilter>,record_type:String,results_per_page:Number} options _lineCommentSeparatorMark_ @returns {records:Array<nlobjSearchResult>,totalRecordsFound:Number,page:Number}"
                        },
                        {
                            "annotation": "param",
                            "type": "{page:Number,columns:Array<nlobjSearchColumn>,filters:Array<nlobjSearchFilter>,record_type:String,results_per_page:Number}",
                            "name": "options",
                            "text": "",
                            "theRestString": "@returns {records:Array<nlobjSearchResult>,totalRecordsFound:Number,page:Number}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{records:Array<nlobjSearchResult>,totalRecordsFound:Number,page:Number}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        286302,
                        286590
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "getAllSearchResults": {
                    "annotation": "method",
                    "name": "getAllSearchResults",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {String} record_type _lineCommentSeparatorMark_ @param {Array<nlobjSearchFilter>} filters _lineCommentSeparatorMark_ @param {Array<nlobjSearchColumn>} columns _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchFilter>} filters _lineCommentSeparatorMark_ @param {Array<nlobjSearchColumn>} columns _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchFilter>}",
                            "name": "filters",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchColumn>} columns _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchColumn>}",
                            "name": "columns",
                            "text": "",
                            "theRestString": "@return {Array<nlobjSearchResult>}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<nlobjSearchResult>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        287938,
                        288144
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "addFilterSite": {
                    "annotation": "method",
                    "name": "addFilterSite",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param adds filters to current search filters so it matches given website item ids. _lineCommentSeparatorMark_ @param {Array<String>} filters"
                        },
                        {
                            "annotation": "param",
                            "name": "adds",
                            "text": "filters to current search filters so it matches given website item ids.",
                            "theRestString": "@param {Array<String>} filters"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "filters",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        289347,
                        289499
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "getSearchFilterArray": {
                    "annotation": "method",
                    "name": "getSearchFilterArray",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@return {Array<String>} current record search filters array taking in account multi site feature"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "name": "current",
                            "text": "record search filters array taking in account multi site feature",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        289726,
                        289862
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "searchUnion": {
                    "annotation": "method",
                    "name": "searchUnion",
                    "text": "utility method for unite two arrays",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array}",
                            "name": "target",
                            "text": "",
                            "theRestString": "@param {Array} array"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array}",
                            "name": "array",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        290435,
                        290536
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                }
            },
            "events": {
                "before:Application.sendError": {
                    "annotation": "event",
                    "name": "before:Application.sendError",
                    "text": "",
                    "commentRange": [
                        286200,
                        286238
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                }
            },
            "properties": {
                "Utils": {
                    "annotation": "property",
                    "type": "{Utils}",
                    "name": "Utils",
                    "text": "",
                    "commentRange": [
                        342253,
                        342298
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                }
            }
        },
        "ssp.libraries.globals": {
            "annotation": "class",
            "name": "globals",
            "text": "all properties and functions inside this class are accessible globally",
            "commentRange": [
                290681,
                290846
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Contains the @?class Application with basic utilities for accessing netsuite environment, searches, dealing with requests and \n responses, defining error types.\n\n\n\nContains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.\n\n\n\nSupports infrastructure for defining model classes by using @?class SCModel.\n\n\n\nProvides @?class ServiceController utility class for nice service definitions.\n\n",
                "commentRange": [
                    271774,
                    271965
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
            },
            "absoluteName": "ssp.libraries.globals",
            "properties": {
                "badRequestError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "badRequestError",
                    "text": "",
                    "commentRange": [
                        290681,
                        290846
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "unauthorizedError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "unauthorizedError",
                    "text": "",
                    "commentRange": [
                        290943,
                        290993
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "sessionTimedOutError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "sessionTimedOutError",
                    "text": "",
                    "commentRange": [
                        291099,
                        291152
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "forbiddenError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "forbiddenError",
                    "text": "",
                    "commentRange": [
                        291275,
                        291322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "notFoundError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "notFoundError",
                    "text": "",
                    "commentRange": [
                        291442,
                        291488
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "methodNotAllowedError": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "methodNotAllowedError",
                    "text": "",
                    "commentRange": [
                        291584,
                        291638
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "invalidItemsFieldsAdvancedName": {
                    "annotation": "property",
                    "type": "{Application.Error}",
                    "name": "invalidItemsFieldsAdvancedName",
                    "text": "",
                    "commentRange": [
                        291785,
                        291848
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                }
            }
        },
        "ssp.libraries.Application.Error": {
            "annotation": "class",
            "name": "Application.Error",
            "text": "a high level error object that can be processed and written in the response using processError and sendError methods",
            "commentRange": [
                292009,
                292454
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Contains the @?class Application with basic utilities for accessing netsuite environment, searches, dealing with requests and \n responses, defining error types.\n\n\n\nContains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.\n\n\n\nSupports infrastructure for defining model classes by using @?class SCModel.\n\n\n\nProvides @?class ServiceController utility class for nice service definitions.\n\n",
                "commentRange": [
                    271774,
                    271965
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
            },
            "absoluteName": "ssp.libraries.Application.Error",
            "properties": {
                "status": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        292009,
                        292454
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        292009,
                        292454
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                },
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "",
                    "commentRange": [
                        292009,
                        292454
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
                }
            }
        },
        "ssp.libraries.Configuration": {
            "annotation": "class",
            "name": "Configuration",
            "text": "Backend Configuration file\n\n\n\n\n\n\n\n\n\n\n\n",
            "commentRange": [
                292009,
                292454
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration",
            "properties": {
                "filter_site": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "filter_site",
                    "text": "Filter by site on Record Lists (possible values: 'all', 'current', [1,2,3]) \n 'all': all the sites in the account. \n 'current': just records under current site. \n [1,2,3]: Array of site ids. Current site and not related to any site records will be also considered.",
                    "commentRange": [
                        292533,
                        292840
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "order_checkout_field_keys": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "order_checkout_field_keys",
                    "text": "",
                    "commentRange": [
                        292869,
                        292916
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "order_shopping_field_keys": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "order_shopping_field_keys",
                    "text": "",
                    "commentRange": [
                        293494,
                        293541
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "items_fields_advanced_name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "items_fields_advanced_name",
                    "text": "",
                    "commentRange": [
                        293918,
                        293966
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "items_fields_standard_keys": {
                    "annotation": "property",
                    "type": "{Array<String>}",
                    "name": "items_fields_standard_keys",
                    "text": "",
                    "commentRange": [
                        294009,
                        294064
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "product_reviews": {
                    "annotation": "property",
                    "type": "{Configuration.ProductReviews}",
                    "name": "product_reviews",
                    "text": "product reviews configuration",
                    "commentRange": [
                        294561,
                        294691
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "product_lists": {
                    "annotation": "property",
                    "type": "{Configuration.ProductLists}",
                    "name": "product_lists",
                    "text": "Product lists configuration. \n Note: for activating the \"single list\" user experience use additionEnabled==false && list_templates.length === 1",
                    "commentRange": [
                        295309,
                        295577
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "cases": {
                    "annotation": "property",
                    "type": "{default_values:Object}",
                    "name": "cases",
                    "text": "Support Cases configuration",
                    "commentRange": [
                        297238,
                        297335
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "quote": {
                    "annotation": "property",
                    "type": "{QuotesBackendConfiguration}",
                    "name": "quote",
                    "text": "Quote configuration",
                    "commentRange": [
                        297732,
                        297838
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "quote_to_salesorder_wizard": {
                    "annotation": "property",
                    "type": "{QuotesToSalesOrderWizardBackendConfiguration}",
                    "name": "quote_to_salesorder_wizard",
                    "text": "QuoteToSalesOrder configuration",
                    "commentRange": [
                        298218,
                        298420
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "returnAuthorizations": {
                    "annotation": "property",
                    "type": "{cancelUrlRoot:String}",
                    "name": "returnAuthorizations",
                    "text": "Return Authorization Configuration",
                    "commentRange": [
                        298803,
                        298921
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "results_per_page": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "results_per_page",
                    "text": "results per page in default Application record search pagination",
                    "commentRange": [
                        299263,
                        299366
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "checkout_skip_login": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "checkout_skip_login",
                    "text": "Checkout skip login mode - false by default. If enabled, \n anonymous users will skip the login page and go directly to the Checkout's wizard first step with \n the possibility of login.",
                    "commentRange": [
                        299394,
                        299627
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "hosts": {
                    "annotation": "property",
                    "type": "{Array<Configuration.Host>}",
                    "name": "hosts",
                    "text": "Multi Language Support - not included by default. \n If included, must set the according hosts for each language. Next, a sample configuration:",
                    "commentRange": [
                        299661,
                        299853
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "publish": {
                    "annotation": "property",
                    "type": "{Array<Configuration.Publish>}",
                    "name": "publish",
                    "text": "Here you can specify objects that will be exported to the frontend using environment.ssp. \n A model specified in \"model\" will be created and the function specified in \"call\" will return \n a value that will be retrieved in the frontend by \"key\" calling SC.getPublishedObject(\"key1\")",
                    "commentRange": [
                        301379,
                        301718
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "isMultiShippingEnabled": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isMultiShippingEnabled",
                    "text": "must be truthy for the multiple shipping experience to be enabled (turned off by default)",
                    "commentRange": [
                        302047,
                        302182
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "isSCISIntegrationEnabled": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isSCISIntegrationEnabled",
                    "text": "must be truthy for the omni channel experience to be enabled (turned on by default)",
                    "commentRange": [
                        302218,
                        302349
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "The": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "The",
                    "text": "use of CDS and CMS are mutually exclusive, if you use CMS you can't use CDS, or if you use CDS you can't use CMS \n By default we use CMS, so if you are going to use CDS, set 'useCMS' to 'false'",
                    "commentRange": [
                        302473,
                        302696
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            },
            "children": []
        },
        "ssp.libraries.Configuration.ProductReviews": {
            "annotation": "class",
            "name": "Configuration.ProductReviews",
            "text": "",
            "commentRange": [
                294561,
                294691
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.ProductReviews",
            "properties": {
                "maxFlagsCount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "maxFlagsCount",
                    "text": "is the number at which a review is marked as flagged by users",
                    "commentRange": [
                        294717,
                        294814
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "loginRequired": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "loginRequired",
                    "text": "",
                    "commentRange": [
                        294838,
                        294874
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "flaggedStatus": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "flaggedStatus",
                    "text": "the id of the flaggedStatus. If maxFlagsCount is reached, this will be its new status.",
                    "commentRange": [
                        294903,
                        295025
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "approvedStatus": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "approvedStatus",
                    "text": "id of the approvedStatus",
                    "commentRange": [
                        295050,
                        295111
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "pendingApprovalStatus": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "pendingApprovalStatus",
                    "text": "id of pendingApprovalStatus",
                    "commentRange": [
                        295139,
                        295210
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "resultsPerPage": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "resultsPerPage",
                    "text": "",
                    "commentRange": [
                        295243,
                        295279
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            },
            "children": []
        },
        "ssp.libraries.Configuration.ProductLists": {
            "annotation": "class",
            "name": "Configuration.ProductLists",
            "text": "",
            "commentRange": [
                295309,
                295577
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.ProductLists"
        },
        "ssp.libraries.Configuration.ProductReviews.Template": {
            "annotation": "class",
            "name": "Configuration.ProductReviews.Template",
            "text": "",
            "commentRange": [
                295889,
                296361
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.ProductReviews.Template",
            "properties": {
                "templateid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "templateid",
                    "text": "",
                    "commentRange": [
                        296395,
                        296427
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        296454,
                        296480
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "description": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "description",
                    "text": "",
                    "commentRange": [
                        296508,
                        296541
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "scope": {
                    "annotation": "property",
                    "type": "{id:String,name:String}",
                    "name": "scope",
                    "text": "",
                    "commentRange": [
                        296595,
                        296637
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.QuotesBackendConfiguration": {
            "annotation": "class",
            "name": "QuotesBackendConfiguration",
            "text": "",
            "commentRange": [
                297732,
                297838
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.QuotesBackendConfiguration",
            "properties": {
                "days_to_expire": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "days_to_expire",
                    "text": "Days before the expiration of the quote",
                    "commentRange": [
                        297854,
                        297930
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "purchase_ready_status_id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "purchase_ready_status_id",
                    "text": "Set the id used by SCA to know when the estimate/Quote have is ready to be purchased by the shopper \n The list of status is configured in: Setup > Sales > Customer Statuses",
                    "commentRange": [
                        297955,
                        298176
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.QuotesToSalesOrderWizardBackendConfiguration": {
            "annotation": "class",
            "name": "QuotesToSalesOrderWizardBackendConfiguration",
            "text": "",
            "commentRange": [
                298218,
                298420
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.QuotesToSalesOrderWizardBackendConfiguration",
            "properties": {
                "invoice_form_id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "invoice_form_id",
                    "text": "Set the id of the invoice form used to generate sales order using terms \n This value can be set by going to: Customization > Forms > Transaction Forms. Find the entry of type: Sales Order and name: Standard Sales Order - Invoice \n for that value copy here its INTERNAL ID",
                    "commentRange": [
                        298457,
                        298771
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.Configuration.Host": {
            "annotation": "class",
            "name": "Configuration.Host",
            "text": "",
            "commentRange": [
                299870,
                300322
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.Host",
            "properties": {
                "title": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "title",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "currencies": {
                    "annotation": "property",
                    "type": "{Array<Configuration.Host.Currency>}",
                    "name": "currencies",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "languages": {
                    "annotation": "property",
                    "type": "{Array<Configuration.Host.Language>}",
                    "name": "languages",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.Configuration.Host.Currency": {
            "annotation": "class",
            "name": "Configuration.Host.Currency",
            "text": "",
            "commentRange": [
                299870,
                300322
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.Host.Currency",
            "properties": {
                "title": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "title",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.Configuration.Host.Language": {
            "annotation": "class",
            "name": "Configuration.Host.Language",
            "text": "",
            "commentRange": [
                299870,
                300322
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.Host.Language",
            "properties": {
                "title": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "title",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "host": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "host",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                },
                "locale": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "locale",
                    "text": "",
                    "commentRange": [
                        299870,
                        300322
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
                }
            }
        },
        "ssp.libraries.Configuration.Publish": {
            "annotation": "class",
            "name": "Configuration.Publish",
            "text": "",
            "children": [
                {
                    "annotation": "param",
                    "type": "{String}",
                    "name": "key",
                    "text": "",
                    "theRestString": "@param {String} model @param {String} call the function name to call _lineCommentSeparatorMark_"
                },
                {
                    "annotation": "param",
                    "type": "{String}",
                    "name": "model",
                    "text": "",
                    "theRestString": "@param {String} call the function name to call _lineCommentSeparatorMark_"
                },
                {
                    "annotation": "param",
                    "type": "{String}",
                    "name": "call",
                    "text": "the function name to call",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                301735,
                301888
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    292009,
                    292454
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
            },
            "absoluteName": "ssp.libraries.Configuration.Publish"
        },
        "ssp.libraries.Events": {
            "annotation": "class",
            "name": "Events",
            "text": "A module that can be mixed in to *any object* in order to provide it with\ncustom events. You may bind with `on` or remove with `off` callback functions\nto an event; triggering an event fires all callbacks in succession.\n\n\tvar object = {};\n\t_.extend(object, Events);\n\tobject.on('expand', function(){ alert('expanded'); });\n\tobject.trigger('expand');",
            "commentRange": [
                305516,
                306456
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Contains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.",
                "commentRange": [
                    305516,
                    306456
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js"
            },
            "absoluteName": "ssp.libraries.Events",
            "methods": {
                "on": {
                    "annotation": "method",
                    "name": "on",
                    "text": "Bind one or more space separated events, `events`, to a `callback` \n function. Passing `\"all\"` will bind the callback to all events fired.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String|Array<String>}",
                            "name": "events",
                            "text": "",
                            "theRestString": "@param {Function} callback @param {Object} context @return {Backone.Events}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Function}",
                            "name": "callback",
                            "text": "",
                            "theRestString": "@param {Object} context @return {Backone.Events}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "context",
                            "text": "",
                            "theRestString": "@return {Backone.Events}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Backone.Events}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        306657,
                        306930
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js"
                },
                "off": {
                    "annotation": "method",
                    "name": "off",
                    "text": "Remove one or many callbacks. If `context` is null, removes all callbacks \n with that function. If `callback` is null, removes all callbacks for the \n event. If `events` is null, removes all bound callbacks for all events.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String|Array<String>}",
                            "name": "events",
                            "text": "",
                            "theRestString": "@param {Function} callback @param {Object} context @return {Backone.Events}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Function}",
                            "name": "callback",
                            "text": "",
                            "theRestString": "@param {Object} context @return {Backone.Events}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "context",
                            "text": "",
                            "theRestString": "@return {Backone.Events}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Backone.Events}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        307600,
                        307961
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js"
                }
            }
        },
        "ssp.libraries.SCEventWrapper": {
            "annotation": "class",
            "name": "SCEventWrapper",
            "text": "The base model class that add supports for: \n\n * class inheritance\n * basic AOP-like method subscription. \n\nExample:\n\n\tvar MyCoolThing = SCEventEmitter.extend({\n\t\tname: 'MyCoolThing'\n\t,\tdance: function(id)\n\t\t{\n\t\t\treturn this.serialize(nlapiLoadRecord('MyCoolThingRecordType', id));\n\t\t}\n\t,\tserialize: function() {...TODO...}\n\t});\n\nand then from a third party code, we can hook in using AOP-like method interception:\n\n\tApplication.on('before:MyCoolThing:dance', function(param)\n\t{\n\t\t... do something before doing the cool thing dance method is called, probably adding/modifying the param object ...\n\t})",
            "commentRange": [
                312006,
                312656
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    311703,
                    311837
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js"
            },
            "absoluteName": "ssp.libraries.SCEventWrapper",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Each SC.EventWrapper subclass must have an unique name - if not it won't work.",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        312669,
                        312782
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js"
                }
            },
            "methods": {
                "extend": {
                    "annotation": "method",
                    "name": "extend",
                    "text": "use SCEventEmitter.extend to define new models.",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {name:String} model the properties and methods of the new class. The name is mandatory\n\t\t@return {SCModel} the new instance model with the new properties added ready to be used"
                        },
                        {
                            "annotation": "param",
                            "type": "{name:String}",
                            "name": "model",
                            "text": "the properties and methods of the new class. The name is mandatory",
                            "theRestString": "@return {SCModel} the new instance model with the new properties added ready to be used"
                        },
                        {
                            "annotation": "return",
                            "type": "{SCModel}",
                            "name": "the",
                            "text": "new instance model with the new properties added ready to be used",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        312811,
                        313080
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js"
                },
                "wrapFunctionWithEvents": {
                    "annotation": "method",
                    "name": "wrapFunctionWithEvents",
                    "text": "Gives to the received method the ability to trigger events.",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Function}",
                            "name": "result",
                            "text": "The function wrapped with events.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        313555,
                        313713
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js"
                }
            }
        },
        "ssp.libraries.SCModel": {
            "annotation": "class",
            "name": "SCModel",
            "text": "Subclasses of SCModel are used to implement the RESTFUL methods for accessing a particular\nresource, in general a netsuite record like commerce order, session, or custom record.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCEventWrapper",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                315015,
                315240
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Supports infrastructure for defining model classes by using @?class SCModel.",
                "commentRange": [
                    314579,
                    314787
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js"
            },
            "absoluteName": "ssp.libraries.SCModel",
            "properties": {
                "validation": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "validation",
                    "text": "object declaration based on [backbone.validation project](https://github.com/thedersen/backbone.validation). See @?method validate .",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        315302,
                        315724
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js"
                }
            },
            "methods": {
                "validate": {
                    "annotation": "method",
                    "name": "validate",
                    "text": "validates given data using @?property validation definition",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {Object} data the data to be validated against @?property validation _lineCommentSeparatorMark_ @throw {Application.Error} of code 400 if validation fails."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "the data to be validated against @?property validation",
                            "theRestString": "@throw {Application.Error} of code 400 if validation fails."
                        },
                        {
                            "annotation": "throw",
                            "type": "{Application.Error}",
                            "name": "of",
                            "text": "code 400 if validation fails.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        315302,
                        315724
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js"
                }
            }
        },
        "ssp.libraries.ServiceController.Validations": {
            "annotation": "class",
            "name": "ServiceController.Validations",
            "text": "Contains auxiliary function for checking for permissions and throwing errors used by the @?class ServiceController",
            "commentRange": [
                316520,
                317345
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    316192,
                    316340
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
            },
            "absoluteName": "ssp.libraries.ServiceController.Validations",
            "methods": {
                "_evaluatePermissions": {
                    "annotation": "method",
                    "name": "_evaluatePermissions",
                    "text": "Evaluates if the permissions demanded are fulfilled by the user of the service",
                    "children": [
                        {
                            "annotation": "parameter",
                            "type": "{transactions: Object, lists: Object}",
                            "name": "user_permissions",
                            "text": "The permissions the user has",
                            "theRestString": "@parameter {Object} required_permissions Object literal with all the permissions required by the current service _lineCommentSeparatorMark_ @parameter {String} permissions_operator The operator that must be applied to the array of permissions required by the current service _lineCommentSeparatorMark_ @return {Boolean} True if the permissions have been validated _lineCommentSeparatorMark_ TODO: This method should be shared in both back and frontend. Maybe have a copy in Utils and reuse it in Backbone.View.Plugins?"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{Object}",
                            "name": "required_permissions",
                            "text": "Object literal with all the permissions required by the current service",
                            "theRestString": "@parameter {String} permissions_operator The operator that must be applied to the array of permissions required by the current service _lineCommentSeparatorMark_ @return {Boolean} True if the permissions have been validated _lineCommentSeparatorMark_ TODO: This method should be shared in both back and frontend. Maybe have a copy in Utils and reuse it in Backbone.View.Plugins?"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{String}",
                            "name": "permissions_operator",
                            "text": "The operator that must be applied to the array of permissions required by the current service",
                            "theRestString": "@return {Boolean} True if the permissions have been validated _lineCommentSeparatorMark_ TODO: This method should be shared in both back and frontend. Maybe have a copy in Utils and reuse it in Backbone.View.Plugins?"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "name": "True",
                            "text": "if the permissions have been validated \n TODO: This method should be shared in both back and frontend. Maybe have a copy in Utils and reuse it in Backbone.View.Plugins?",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        316520,
                        317345
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                },
                "requirePermissions": {
                    "annotation": "method",
                    "name": "requirePermissions",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {Object} options"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "options",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        318376,
                        318442
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                },
                "requireSecure": {
                    "annotation": "method",
                    "name": "requireSecure",
                    "text": "If http protocol is not secure",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@throw {Application.Error} methodNotAllowedError"
                        },
                        {
                            "annotation": "throw",
                            "type": "{Application.Error}",
                            "name": "methodNotAllowedError",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        318722,
                        318835
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                },
                "requireLoggedInPPS": {
                    "annotation": "method",
                    "name": "requireLoggedInPPS",
                    "text": "Verifies if user is not logged in and Pwd protected site is enabled, and if registration is enabled",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@throw {Application.Error} methodNotAllowedError"
                        },
                        {
                            "annotation": "throw",
                            "type": "{Application.Error}",
                            "name": "methodNotAllowedError",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        318969,
                        319160
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                },
                "requireLogin": {
                    "annotation": "method",
                    "name": "requireLogin",
                    "text": "If user not logged in, throw an error",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@throw {Application.Error} unauthorizedError"
                        },
                        {
                            "annotation": "throw",
                            "type": "{Application.Error}",
                            "name": "unauthorizedError",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        319695,
                        319815
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                },
                "checkLoggedInCheckout": {
                    "annotation": "method",
                    "name": "checkLoggedInCheckout",
                    "text": "Pass only if we are not in checkout OR if we are logged in",
                    "children": [
                        {
                            "annotation": "throw",
                            "type": "{Application.Error}",
                            "name": "unauthorizedError",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        319937,
                        320079
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
                }
            }
        },
        "ssp.libraries.ServiceController": {
            "annotation": "class",
            "name": "ServiceController",
            "text": "Instances of this class define controllers used by all auto-generated services.\nIn SC, for a ServiceController to auto-generate a service, they need to be declared in module's ns.package.json file, for example: \n\n\t{\n\t\t\"gulp\": {\n\t\t\t...\n\t\t,\t\"autogenerated-services\": {\n\t\t\t\t\"ReturnAuthorization.Service.ss\" : \"ReturnAuthorization.ServiceController\"\n\t\t\t}\n\t\t\t...\n\t\t}\n\t}\n\nSee also @?class ServiceController.Validations that contain auxiliary methods.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCEventWrapper",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                320754,
                321268
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "Provides @?class ServiceController utility class for nice service definitions.",
                "commentRange": [
                    320274,
                    320492
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
            },
            "absoluteName": "ssp.libraries.ServiceController",
            "methods": {
                "getMethod": {
                    "annotation": "method",
                    "name": "getMethod",
                    "text": "Returns which http method is used by the request",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        321333,
                        321424
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "_deepObjectExtend": {
                    "annotation": "method",
                    "name": "_deepObjectExtend",
                    "text": "Makes a deep copy of the objects passed as parameters",
                    "children": [
                        {
                            "annotation": "parameter",
                            "type": "{Service.ValidationOptions.common}",
                            "name": "target",
                            "text": "Object literal with required validation common to all methods",
                            "theRestString": "@parameter {Service.ValidationOptions.<Object>} source Object literal with required validation specific to the http method used _lineCommentSeparatorMark_ @return {Service.ValidationOptions.Extended} Object with all the validation required for the current service"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{Service.ValidationOptions.<Object>}",
                            "name": "source",
                            "text": "Object literal with required validation specific to the http method used",
                            "theRestString": "@return {Service.ValidationOptions.Extended} Object with all the validation required for the current service"
                        },
                        {
                            "annotation": "return",
                            "type": "{Service.ValidationOptions.Extended}",
                            "name": "Object",
                            "text": "with all the validation required for the current service",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        321681,
                        322130
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "getOptions": {
                    "annotation": "method",
                    "name": "getOptions",
                    "text": "Get the validation options related to the current service",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@parameter {String} method The http method used in the request _lineCommentSeparatorMark_ @return {ServiceController.options} Object with all the validation options of the current service"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{String}",
                            "name": "method",
                            "text": "The http method used in the request",
                            "theRestString": "@return {ServiceController.options} Object with all the validation options of the current service"
                        },
                        {
                            "annotation": "return",
                            "type": "{ServiceController.options}",
                            "name": "Object",
                            "text": "with all the validation options of the current service",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        322412,
                        322675
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "validateRequest": {
                    "annotation": "method",
                    "name": "validateRequest",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@parameter {Service.ValidationOptions.Extended} validation_options Object literal with the validation options _lineCommentSeparatorMark_ @throws {Error} throw errors if validation fails"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{Service.ValidationOptions.Extended}",
                            "name": "validation_options",
                            "text": "Object literal with the validation options",
                            "theRestString": "@throws {Error} throw errors if validation fails"
                        },
                        {
                            "annotation": "throws",
                            "type": "{Error}",
                            "name": "throw",
                            "text": "errors if validation fails",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        322809,
                        323018
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "handle": {
                    "annotation": "method",
                    "name": "handle",
                    "text": "Executes the function associated with the http method in the proper ServiceController",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@parameter {nlobjRequest} request _lineCommentSeparatorMark_ @parameter {nlobjResponse} response _lineCommentSeparatorMark_ @throws {Error}"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{nlobjRequest}",
                            "name": "request",
                            "text": "",
                            "theRestString": "@parameter {nlobjResponse} response _lineCommentSeparatorMark_ @throws {Error}"
                        },
                        {
                            "annotation": "parameter",
                            "type": "{nlobjResponse}",
                            "name": "response",
                            "text": "",
                            "theRestString": "@throws {Error}"
                        },
                        {
                            "annotation": "throws",
                            "type": "{Error}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        323320,
                        323537
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "sendContent": {
                    "annotation": "method",
                    "name": "sendContent",
                    "text": "Writes the given content in the request object using the right headers, and content type \n This method replaces @?method ssp.libraries.Application.sendContent , which is deprecated",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {String} content _lineCommentSeparatorMark_ @param {Object} options"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "content",
                            "text": "",
                            "theRestString": "@param {Object} options"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "options",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        324100,
                        324377
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "processError": {
                    "annotation": "method",
                    "name": "processError",
                    "text": "Builds an error object suitable to be sent back in the http response. \n This method replaces @?method ssp.libraries.Application.processError , which is deprecated",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {nlobjError || Application.Error} e _lineCommentSeparatorMark_ @returns {errorStatusCode:Number, errorCode:String, errorMessage:String} An error object suitable to send back in the http response."
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjError || Application.Error}",
                            "name": "e",
                            "text": "",
                            "theRestString": "@returns {errorStatusCode:Number, errorCode:String, errorMessage:String} An error object suitable to send back in the http response."
                        },
                        {
                            "annotation": "returns",
                            "type": "{errorStatusCode:Number, errorCode:String, errorMessage:String}",
                            "name": "An",
                            "text": "error object suitable to send back in the http response.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        326003,
                        326391
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "sendError": {
                    "annotation": "method",
                    "name": "sendError",
                    "text": "Process the error and then writes it in the http response @?class Application.Error \n This method replaces its namesake in @?method ssp.libraries.Application.sendError , which is deprecated",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {nlobjError || Application.Error} e"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjError || Application.Error}",
                            "name": "e",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        327349,
                        327624
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                }
            },
            "properties": {
                "options": {
                    "annotation": "property",
                    "type": "{ServiceController.Options}",
                    "name": "options",
                    "text": "The needed permissions, validations, etc, that are exposed so they're easily extensible.",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        321512,
                        321662
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                }
            },
            "events": {
                "before:ServiceController.sendContent": {
                    "annotation": "event",
                    "name": "before:ServiceController.sendContent",
                    "text": "Event triggered just before responding any content back to the clients. Usage: \n\n\tApplication.on('before:ServiceController.sendContent', function(content, options){...})",
                    "commentRange": [
                        324519,
                        324747
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "after:ServiceController.sendContent": {
                    "annotation": "event",
                    "name": "after:ServiceController.sendContent",
                    "text": "Event triggered after some content is send back to the clients. Usage: \n\n\tApplication.on('after:ServiceController.sendContent', function(content, options){...})",
                    "commentRange": [
                        325696,
                        325914
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "before:ServiceController.sendError": {
                    "annotation": "event",
                    "name": "before:ServiceController.sendError",
                    "text": "event triggered just before sending an error back to the client. \nThe handler is passed the @?class Application.Error instance as first param. Usage: \n\n\tApplication.on('before:ServiceController.sendError', function(errorObject){...})",
                    "commentRange": [
                        327714,
                        328007
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                },
                "after:ServiceController.sendError": {
                    "annotation": "event",
                    "name": "after:ServiceController.sendError",
                    "text": "event triggered just after sending an error back to the client. \nThe handler is passed the @?class Application.Error instance as first param. Usage: \n\n\tApplication.on('after:ServiceController.sendError', function(errorObject){...})",
                    "commentRange": [
                        328555,
                        328845
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
                }
            }
        },
        "ssp.libraries.Utils": {
            "annotation": "class",
            "name": "Utils",
            "text": "Contain global/static utility methods from high level API for searching records, format currencies, record type meta information, etc\n\n",
            "commentRange": [
                329499,
                329648
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    328924,
                    329048
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
            },
            "absoluteName": "ssp.libraries.Utils",
            "methods": {
                "mapSearchResult": {
                    "annotation": "method",
                    "name": "mapSearchResult",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchColumn>} columns _lineCommentSeparatorMark_ @param {nlobjSearchColumn} apiElement _lineCommentSeparatorMark_ @returns {Object}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchColumn>}",
                            "name": "columns",
                            "text": "",
                            "theRestString": "@param {nlobjSearchColumn} apiElement _lineCommentSeparatorMark_ @returns {Object}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjSearchColumn}",
                            "name": "apiElement",
                            "text": "",
                            "theRestString": "@returns {Object}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Object}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        329667,
                        329814
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "mapSearchResults": {
                    "annotation": "method",
                    "name": "mapSearchResults",
                    "text": "Extracts search results to a JSON-friendly format.",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchColumn>} searchColumns _lineCommentSeparatorMark_ @param {Array<nlobjSearchResult>} searchResults _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchColumn>}",
                            "name": "searchColumns",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchResult>} searchResults _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchResult>}",
                            "name": "searchResults",
                            "text": "",
                            "theRestString": "@return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<nlobjSearchResult>}",
                            "name": "mapped",
                            "text": "results",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        330301,
                        330548
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "mapLoadResult": {
                    "annotation": "method",
                    "name": "mapLoadResult",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchColumn>} columns _lineCommentSeparatorMark_ @param {nlobjRecord} record _lineCommentSeparatorMark_ @return {Object}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchColumn>}",
                            "name": "columns",
                            "text": "",
                            "theRestString": "@param {nlobjRecord} record _lineCommentSeparatorMark_ @return {Object}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "record",
                            "text": "",
                            "theRestString": "@return {Object}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        331558,
                        331692
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "loadAndMapSearch": {
                    "annotation": "method",
                    "name": "loadAndMapSearch",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {String}searchName _lineCommentSeparatorMark_ @param {Array<nlobjSearchFilter>} filters _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "searchName",
                            "text": "",
                            "theRestString": "@param {Array<nlobjSearchFilter>} filters _lineCommentSeparatorMark_ @return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchFilter>}",
                            "name": "filters",
                            "text": "",
                            "theRestString": "@return {Array<nlobjSearchResult>} mapped results"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<nlobjSearchResult>}",
                            "name": "mapped",
                            "text": "results",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        332170,
                        332338
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "mapOptions": {
                    "annotation": "method",
                    "name": "mapOptions",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {String} record_options"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_options",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        332790,
                        332862
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "makeid": {
                    "annotation": "method",
                    "name": "makeid",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "maxLength",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        333264,
                        333319
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "getMolecule": {
                    "annotation": "method",
                    "name": "getMolecule",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjRequest}",
                            "name": "request",
                            "text": "",
                            "theRestString": "@returns {String} Meanings:\n\n\t\t\t'' is 'system'\n\t\t\t'f'\tmeans 'system.f'\n\t\t\t'p'\tmeans 'system.p'\n\t\t\t'na1.f'\tmeans 'system.na1.f'\n\n\t\t@public dummy"
                        },
                        {
                            "annotation": "returns",
                            "type": "{String}",
                            "name": "Meanings:",
                            "text": "'' is 'system'\n\t\t\t'f'\tmeans 'system.f'\n\t\t\t'p'\tmeans 'system.p'\n\t\t\t'na1.f'\tmeans 'system.na1.f'",
                            "theRestString": "@public dummy"
                        },
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        333442,
                        333644
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "formatReceiptCurrency": {
                    "annotation": "method",
                    "name": "formatReceiptCurrency",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {String|Number} value"
                        },
                        {
                            "annotation": "param",
                            "type": "{String|Number}",
                            "name": "value",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        333846,
                        333915
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "sanitizeString": {
                    "annotation": "method",
                    "name": "sanitizeString",
                    "text": "Remove any HTML code form the string",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "",
                            "theRestString": "@param {String} text String with possible HTML code in it _lineCommentSeparatorMark_ @return {String} HTML-free string"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "text",
                            "text": "String with possible HTML code in it",
                            "theRestString": "@return {String} HTML-free string"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "HTML-free",
                            "text": "string",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        334250,
                        334422
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "formatCurrency": {
                    "annotation": "method",
                    "name": "formatCurrency",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {String} value @param {String} symbol @return {String}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "value",
                            "text": "",
                            "theRestString": "@param {String} symbol @return {String}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "symbol",
                            "text": "",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        334565,
                        334660
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "isDepartmentMandatory": {
                    "annotation": "method",
                    "name": "isDepartmentMandatory",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        337605,
                        337656
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "isLocationMandatory": {
                    "annotation": "method",
                    "name": "isLocationMandatory",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        337754,
                        337803
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "isClassMandatory": {
                    "annotation": "method",
                    "name": "isClassMandatory",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        337897,
                        337943
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "isFeatureEnabled": {
                    "annotation": "method",
                    "name": "isFeatureEnabled",
                    "text": "",
                    "children": [
                        {
                            "annotation": "public",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {String} feature the feature id we want to know is enabled in the current account @returns {Boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "feature",
                            "text": "the feature id we want to know is enabled in the current account",
                            "theRestString": "@returns {Boolean}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        338032,
                        338175
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "toCurrency": {
                    "annotation": "method",
                    "name": "toCurrency",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "amount",
                            "text": "",
                            "theRestString": "@return {Number}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Number}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        338577,
                        338638
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "recordTypeExists": {
                    "annotation": "method",
                    "name": "recordTypeExists",
                    "text": "returns true if and only if the given record type name is present in the current account - useful for checking if a bundle is installed or not in this account.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type_name",
                            "text": "",
                            "theRestString": "@return {Boolean} @public dummy"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "@public dummy",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        338743,
                        338994
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "recordTypeHasField": {
                    "annotation": "method",
                    "name": "recordTypeHasField",
                    "text": "returns true if and only if the given field_name exists on the given record_type_name.",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type_name",
                            "text": "",
                            "theRestString": "@param {String} field_name @return {Boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "field_name",
                            "text": "",
                            "theRestString": "@return {Boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        339174,
                        339373
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "getItemOptionsObject": {
                    "annotation": "method",
                    "name": "getItemOptionsObject",
                    "text": "Parse an item string options into an object",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "options_string",
                            "text": "String containg all item options",
                            "theRestString": "@return {Utils.ItemOptionsObject} Returns an object with the properties: id, name, value, displayvalue and mandatory"
                        },
                        {
                            "annotation": "return",
                            "type": "{Utils.ItemOptionsObject}",
                            "name": "Returns",
                            "text": "an object with the properties: id, name, value, displayvalue and mandatory",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        339768,
                        340031
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "setPaymentMethodToResult": {
                    "annotation": "method",
                    "name": "setPaymentMethodToResult",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "record",
                            "text": "",
                            "theRestString": "@param {Object} result"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "result",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        340861,
                        340947
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                }
            },
            "children": []
        },
        "ssp.libraries.Utils.ItemOptionsObject": {
            "annotation": "class",
            "name": "Utils.ItemOptionsObject",
            "text": "",
            "commentRange": [
                340402,
                340434
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js",
            "module": {
                "annotation": "module",
                "name": "ssp.libraries",
                "text": "",
                "commentRange": [
                    328924,
                    329048
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
            },
            "absoluteName": "ssp.libraries.Utils.ItemOptionsObject",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        340468,
                        340491
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        340523,
                        340548
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "value": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "value",
                    "text": "",
                    "commentRange": [
                        340583,
                        340609
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "displayValue": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "displayValue",
                    "text": "",
                    "commentRange": [
                        340645,
                        340678
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                },
                "mandatory": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "mandatory",
                    "text": "",
                    "commentRange": [
                        340721,
                        340751
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
                }
            }
        },
        "ns.commerce.ShoppingSession": {
            "annotation": "class",
            "name": "ShoppingSession",
            "text": "",
            "commentRange": [
                342349,
                342865
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession",
            "methods": {
                "doChangePassword": {
                    "annotation": "method",
                    "name": "doChangePassword",
                    "text": "Changes the password for the customer identified by email. Returns true if the password is changed correctly.\n\nSupported Domains: Checkout\n\nLogin Required?: no",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "Params",
                            "text": "– pass parameters from original request",
                            "theRestString": "@param {String} newPassword –  value for new password to be set\n@return {Boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "newPassword",
                            "text": "–  value for new password to be set",
                            "theRestString": "@return {Boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        342870,
                        343694
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "getAbsoluteUrl": {
                    "annotation": "method",
                    "name": "getAbsoluteUrl",
                    "text": "Gets absolute URL for given path and domain type.\n\nSupported Domains: Checkout, Shopping\n\nLogin Required?: No",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "domaintype",
                            "text": "[required] - value should be either “shopping” or “checkout”",
                            "theRestString": "@param {String} path [required]"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "path",
                            "text": "[required]",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        342870,
                        343694
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "getCampaignID": {
                    "annotation": "method",
                    "name": "getCampaignID",
                    "text": "Gets the campaign ID of the leadsource parameter from the current session.\n\nParameters\n\nNo parameters to set.\n\nReturns {String} campaignid\n\nSupported Domains: Checkout, Shopping\n\nLogin Required?: No",
                    "commentRange": [
                        342870,
                        343694
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "getSiteSettings": {
                    "annotation": "method",
                    "name": "getSiteSettings",
                    "text": "Gets settings of current web store. Supported Domains: Checkout, Shopping. Login Required? No",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "fields",
                            "text": "[optional] Array of field names to be included in returned JSON object; if omitted, all supported fields are returned\nObject with fields listed for sitesettings JSON object.",
                            "theRestString": "@returns {SiteSettings}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{SiteSettings}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            },
            "children": []
        },
        "ns.commerce.OrderAddress": {
            "annotation": "class",
            "name": "OrderAddress",
            "text": "This object contains address information for a web store shopping order.",
            "commentRange": [
                343697,
                344684
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.OrderAddress",
            "properties": {
                "addressee": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addressee",
                    "text": "Person to which order is sent. Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "addr1": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addr1",
                    "text": "First line of address. Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "addr2": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addr2",
                    "text": "Second line of address",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "addr3": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "addr3",
                    "text": "Third line of address",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "attention": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "attention",
                    "text": "Text for ATTN: line of address",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "city": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "city",
                    "text": "Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "country": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "country",
                    "text": "Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "defaultbil": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "defaultbil",
                    "text": "l​i​n​g Indicates whether address is default billing address. Value should be “T” or “F”.",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "defaultshi": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "defaultshi",
                    "text": "p​p​i​n​g Indicates whether address is default shipping address. Value should be “T” or “F”.",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "Internal  ID",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "isresidential": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "isresidential",
                    "text": "Indicates whether address is residential. Value should be “T” or “F”.",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "phone": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "phone",
                    "text": "Phone number. Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "state": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "state",
                    "text": "State for address. Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "zip": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "zip",
                    "text": "Zip code. Required",
                    "commentRange": [
                        343697,
                        344684
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.OrderShipMethod": {
            "annotation": "class",
            "name": "OrderShipMethod",
            "text": "This object contains shipping method information for the order.",
            "commentRange": [
                344688,
                345056
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.OrderShipMethod",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Name of the shipping method",
                    "commentRange": [
                        344688,
                        345056
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "rate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "rate",
                    "text": "Rate of the shipping method",
                    "commentRange": [
                        344688,
                        345056
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shipcarrier": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipcarrier",
                    "text": "Shipping carrier ID. Note: Valid values that can be set for shipcarrier are ups or noups.",
                    "commentRange": [
                        344688,
                        345056
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shipmethod": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipmethod",
                    "text": "Shipping method ID",
                    "commentRange": [
                        344688,
                        345056
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.OrderSummary": {
            "annotation": "class",
            "name": "OrderSummary",
            "text": "This object contains summary information for the order.",
            "commentRange": [
                345059,
                347776
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.OrderSummary",
            "properties": {
                "discountedsubtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discountedsubtotal",
                    "text": "Item subtotal - any applicable discount",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "discountedsubtotal_": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discountedsubtotal_",
                    "text": "Item subtotal - any applicable discount formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "discountrate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discountrate",
                    "text": "Raw discount",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "discounttotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discounttotal",
                    "text": "Total amount of discounts applied",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "discounttotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discounttotal_formatted",
                    "text": "Total amount of discounts applied formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "giftcertapplied": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "giftcertapplied",
                    "text": "Total amount of gift certificates applied",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "giftcertapplied_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "giftcertapplied_formatted",
                    "text": "Total amount of gift certificates applied formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "handlingcost": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "handlingcost",
                    "text": "Amount of handling cost",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "handlingcost_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "handlingcost_formatted",
                    "text": "Amount of handling cost formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shippingcost": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "shippingcost",
                    "text": "Amount of shipping cost",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shippingcost_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shippingcost_formatted",
                    "text": "Amount of shipping cost formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "subtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "subtotal",
                    "text": "Total of quantity * rate per line item",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "Total": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "Total",
                    "text": "of quantity * rate per line item formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "tax2total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "tax2total",
                    "text": "Total secondary tax on taxable elements of the order (items + shipping + handling) - effect of any discounts",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "tax2total_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tax2total_formatted",
                    "text": "Total secondary tax on taxable elements of the order (items + shipping + handling) - effect of any discounts formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxondiscount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxondiscount",
                    "text": "For VAT countries, currency amount of the tax rate * the discount amount",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxondiscount_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxondiscount_formatted",
                    "text": "For VAT countries, currency amount of the tax rate * the discount amount formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxonhandling": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxonhandling",
                    "text": "Currency amount of the tax rate * taxable handling amount",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxonhandling_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxonhandling_formatted",
                    "text": "Currency amount of the tax rate * taxable handling amount formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxonshipping": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxonshipping",
                    "text": "Currency amount of the tax rate * taxable shipping amount",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxonshipping_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxonshipping_formatted",
                    "text": "Currency amount of the tax rate * taxable shipping amount formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxtotal",
                    "text": "Total tax on taxable elements of the order (items + shipping + handling) - effect of any discounts",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "taxtotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxtotal_formatted",
                    "text": "Total tax on taxable elements of the order (items + shipping + handling) - effect of any discounts formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "total",
                    "text": "Order subtotal + shipping, handling, and all tax, less the effect of any discounts",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "total_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "total_formatted",
                    "text": "Order subtotal + shipping, handling, and all tax, less the effect of any discounts formatted with currency symbol",
                    "commentRange": [
                        345059,
                        347776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.SiteSettings": {
            "annotation": "class",
            "name": "ShoppingSession.SiteSettings",
            "text": "",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.SiteSettings",
            "properties": {
                "analytics": {
                    "annotation": "property",
                    "type": "{ShoppingSession.AnalyticsSettings}",
                    "name": "analytics",
                    "text": "Analytics settings",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "checkout": {
                    "annotation": "property",
                    "type": "{ShoppingSession.CheckoutSettings}",
                    "name": "checkout",
                    "text": "Checkout settings",
                    "children": [
                        {
                            "annotation": "properties",
                            "type": "{Array<Object>}",
                            "name": "currencies",
                            "text": "Array of JSON objects with fields (internalid, name, isdefault)\nOrdered list of currencies supported by the site",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "isdefault": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "isdefault",
                    "text": "field is a Boolean, with a value of “T” for default subsidiary, “F” for others",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "defaultshipcountry": {
                    "annotation": "property",
                    "type": "{String }",
                    "name": "defaultshipcountry",
                    "text": "Default ship to country",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "defaultshi": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "defaultshi",
                    "text": "p​p​i​n​g​m​e​t​h​o​d Default shipping method",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "displayname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "displayname",
                    "text": "",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "imagesizes": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "imagesizes",
                    "text": "Array of JSON objects with image resize definitions (resizeid, resizeh, resizew).\nEach object has the following properties:\n\n * maxwidth maximum resized image width in pixels\n * maxheight maximum resized image height in pixels\n * urlsuffix suffix that should be added to the image URL to return a resized image\n * internalid internal system ID of image resize definition.\n * name value from the Image Resize ID field (image resize definition) as entered on the Web Site Setup page.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "languages": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "languages",
                    "text": "Array of JSON objects with fields (internalid, name, isdefault)\nOrdered list of languages for the site",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "loginallowed": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "loginallowed",
                    "text": "Indicates whether login is allowed.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "loginrequired": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "loginrequired",
                    "text": "Indicates whether login is required to access the site. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "order": {
                    "annotation": "property",
                    "type": "{OrderSettings}",
                    "name": "order",
                    "text": "JSON ordersettings object .Order settings",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "paymentmethods": {
                    "annotation": "property",
                    "type": "{Array<PaymentMethod>}",
                    "name": "paymentmethods",
                    "text": "array of paymentmethod objects .Payment methods",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "pricesincludevat": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "pricesincludevat",
                    "text": "Indicates whether prices include VAT. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "registration": {
                    "annotation": "property",
                    "type": "{RegistrationSettings}",
                    "name": "registration",
                    "text": "JSON registrationsettings object. Registration settings",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "requireloginforpricing": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "requireloginforpricing",
                    "text": "Indicates whether login is required to display item prices. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shipallcountries": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipallcountries",
                    "text": "Indicates whether shipping is supported to all countries. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shippingrequired": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shippingrequired",
                    "text": "Indicates whether shipping is required for the site. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shiptocountries": {
                    "annotation": "property",
                    "type": "{Array<String>}",
                    "name": "shiptocountries",
                    "text": "Countries where shipping is supported",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "showextendedcart": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "showextendedcart",
                    "text": "Indicates whether extended cart should be displayed. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "showshippi": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "showshippi",
                    "text": "n​g​e​s​t​i​m​a​t​o​r Indicates whether shipping estimator should be displayed.  Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "sitetype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "sitetype",
                    "text": "Indicates the type of web site. Value should be ADVANCED or STANDARD.\n\nADVANCED indicates the site is a SuiteCommerce Advanced site where STANDARD indicates it is a Standard web site built with the NetSuite Site Builder.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "subsidiaries": {
                    "annotation": "property",
                    "type": "{Array<Object>}",
                    "name": "subsidiaries",
                    "text": "Array of JSON objects with fields (internalid, name, isdefault). \nOrdered list of subsidiaries for the site.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.AnalyticsSettings": {
            "annotation": "class",
            "name": "ShoppingSession.AnalyticsSettings",
            "text": "",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.AnalyticsSettings",
            "properties": {
                "clickattributes": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "clickattributes",
                    "text": "",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "confpagetr": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "confpagetr",
                    "text": "a​c​k​i​n​g​h​t​m​l",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "submitattributes": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "submitattributes",
                    "text": "",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.CheckoutSettings": {
            "annotation": "class",
            "name": "ShoppingSession.CheckoutSettings",
            "text": "",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.CheckoutSettings",
            "properties": {
                "cancelurl": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "cancelurl",
                    "text": "Full URL path for redirect after cancel action during order submission.\nUsed for PayPal Express support",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "continueurl": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "continueurl",
                    "text": "Full URL path for redirect after order submission\nUsed for PayPal Express support",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "createorder": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "createorder",
                    "text": "If value is set to “T,” backend submits current shopping order when Continue link is clicked\nDefault value is “F”. Used for PayPal Express support",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "custchoosespaymethod": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "custchoosespaymethod",
                    "text": "Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "paymentauthorization": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "paymentauthorization",
                    "text": "threedsecure object with fields. Settings to handle payment authorization.\nUsed for 3D Secure support",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "paymentmandatory": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "paymentmandatory",
                    "text": "Indicates whether payment is mandatory. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "paypalexpress.": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "paypalexpress.",
                    "text": "Object with fields. Used for PayPal Express support\nIncludes the following fields:\n\n * available (boolean) (must be set to “T” to support PayPal Express)\n * imageurl (string)",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "requiretermsandconditions": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "requiretermsandconditions",
                    "text": "Indicates whether terms and conditions text is required.\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "saveccinfo": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "saveccinfo",
                    "text": "Indicates whether credit card should be saved by default. \nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "shippingaddrfirst": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shippingaddrfirst",
                    "text": "Indicates whether shipping address should be displayed first.\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "showpurchaseorder": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "showpurchaseorder",
                    "text": "Indicates whether purchase order should be displayed.\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "showsavecc": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "showsavecc",
                    "text": "Indicates whether the Save Credit Card field should be displayed\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "termsandconditions": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "termsandconditions",
                    "text": "Text of Terms and Conditions field",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "type": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "type",
                    "text": "Used for integration with third party checkout providers\nValid values are: paypalexpress, google",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.OrderSettings": {
            "annotation": "class",
            "name": "ShoppingSession.OrderSettings",
            "text": "",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.OrderSettings",
            "properties": {
                "itemdispla": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "itemdispla",
                    "text": "y​o​r​d​e​r Ordering of items in an order",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "outofstock": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "outofstock",
                    "text": "b​e​h​a​v​i​o​r Behavior for out of stock items",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "upselldisplay": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "upselldisplay",
                    "text": "One of \n\n * Related Items Only Upsell Items\n * Related Items and then Upsell Items\n * Upsell Items and then Related Items",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.RegistrationSettings": {
            "annotation": "class",
            "name": "ShoppingSession.RegistrationSettings",
            "text": "",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.RegistrationSettings",
            "properties": {
                "companyfie": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "companyfie",
                    "text": "l​d​m​a​n​d​a​t​o​r​y Indicates whether Company field is mandatory.\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "registrationallowed": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "registrationallowed",
                    "text": "Indicates whether registration is allowed.\nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "registrati": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "registrati",
                    "text": "o​n​m​a​n​d​a​t​o​r​y . Indicates whether registration is required. \nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "registrationoptional": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "registrationoptional",
                    "text": "Indicates whether registration is optional. \nValue should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "showcompanyfield": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "showcompanyfield",
                    "text": "Indicates whether to show Company field on registration form",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.commerce.ShoppingSession.PaymentMethod": {
            "annotation": "class",
            "name": "ShoppingSession.PaymentMethod",
            "text": "This object includes payment method information for the order.",
            "commentRange": [
                347780,
                354864
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.",
            "module": {
                "annotation": "module",
                "name": "ns.commerce",
                "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
                "commentRange": [
                    342349,
                    342865
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
            },
            "absoluteName": "ns.commerce.ShoppingSession.PaymentMethod",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "Internal ID",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "iscreditcard": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "iscreditcard",
                    "text": "Indicates whether payment method is a credit card. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "ispaypal": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ispaypal",
                    "text": "Indicates whether payment method is PayPal. Value should be “T” or “F”.",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Name of the payment method",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                },
                "paypalemai": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "paypalemai",
                    "text": "l​a​d​d​r​e​s​s Primary paypal email address",
                    "commentRange": [
                        347780,
                        354864
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
                }
            }
        },
        "ns.suitescript.globals": {
            "annotation": "class",
            "name": "globals",
            "text": "An artificial space to put all suitescript global functions - We put all suitescript global functions as methods of this class. - customization for compatibility with psg jsdocs\n\n",
            "commentRange": [
                370077,
                370423
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript",
                "text": "* Note that there are some restrictions on API usage. Also note that the only 2 objects that can be\n* contructed are nlobjSearchFilter and nlobjSearchColumn. All other objects can only be created via\n* top-level function or method calls.\n*\n* The governance tag refers to the usage governance for an API call\n* The restricted tag refers to any known restrictions with a particular API call\n*\n* All Object arguments are Javascript Objects used as hash tables for specifying key-value pairs\n*\n*",
                "children": [
                    {
                        "annotation": "since",
                        "name": "2005.0",
                        "text": "Support scripting of current record in Client SuiteScript\n*",
                        "theRestString": "@version\t2007.0 Support scripting of records in user events, portlets, and scheduled scripts\n* @version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2007.0",
                        "text": "Support scripting of records in user events, portlets, and scheduled scripts\n*",
                        "theRestString": "@version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2008.1",
                        "text": "Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n*",
                        "theRestString": "@version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.1",
                        "text": "Support scripting of file objects\n*",
                        "theRestString": "@version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.2",
                        "text": "Support scripting of setup records and assistant (multi-step) pages\n*",
                        "theRestString": "@version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.2",
                        "text": "converted JS template to use eclipse code completion friendly format\n*",
                        "theRestString": "@version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2010.1",
                        "text": "Suppport dynamic scripting",
                        "theRestString": ""
                    }
                ],
                "commentRange": [
                    368946,
                    370074
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.globals",
            "methods": {
                "nlapiCopyRecord": {
                    "annotation": "method",
                    "name": "nlapiCopyRecord",
                    "text": "Return a new record using values from an existing record.\n\nThe following example initializes a new partner record from an existing one.\n\n\tvar partner = nlapiCopyRecord('partner', 20)\n\tpartner.setFieldValue('entityid', 'New Partner')\n\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *\n *",
                            "theRestString": "@param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of a copied record.\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of a copied record.\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of a copied record.\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "initializeValues",
                            "text": "Contains an array of name/value pairs of defaults to be used during record initialization.\n *",
                            "theRestString": "@return {nlobjRecord}  Returns an nlobjRecord object of a copied record.\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "name": "Returns",
                            "text": "an nlobjRecord object of a copied record.\n *\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        370425,
                        371107
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiLoadRecord": {
                    "annotation": "method",
                    "name": "nlapiLoadRecord",
                    "text": "Load an existing record from the system.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *\n *",
                            "theRestString": "@param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of an existing NetSuite record.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \tid The internal ID for the record.\n * @param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of an existing NetSuite record.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@param {Object} \tinitializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}  Returns an nlobjRecord object of an existing NetSuite record.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "initializeValues",
                            "text": "Contains an array of name/value pairs of defaults to be used during record initialization.\n *",
                            "theRestString": "@return {nlobjRecord}  Returns an nlobjRecord object of an existing NetSuite record.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "name": "Returns",
                            "text": "an nlobjRecord object of an existing NetSuite record.\n *\n *",
                            "theRestString": "@exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_RECORD_TYPE}",
                            "text": "*",
                            "theRestString": "@exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_TYPE_ARG_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_INTERNAL_ID}",
                            "text": "*",
                            "theRestString": "@exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_ID_ARG_REQD}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        371168,
                        371818
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateRecord": {
                    "annotation": "method",
                    "name": "nlapiCreateRecord",
                    "text": "Instantiate a new nlobjRecord object containing all the default field data for that record type.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *\n *",
                            "theRestString": "@param {string} type record type ID.\n * @param {Object} initializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}   Returns an nlobjRecord object of a new record from the system.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "record type ID.\n *",
                            "theRestString": "@param {Object} initializeValues Contains an array of name/value pairs of defaults to be used during record initialization.\n * @return {nlobjRecord}   Returns an nlobjRecord object of a new record from the system.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "initializeValues",
                            "text": "Contains an array of name/value pairs of defaults to be used during record initialization.\n *",
                            "theRestString": "@return {nlobjRecord}   Returns an nlobjRecord object of a new record from the system.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "name": "Returns",
                            "text": "an nlobjRecord object of a new record from the system.\n *\n *",
                            "theRestString": "@exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_RECORD_TYPE}",
                            "text": "*",
                            "theRestString": "@exception {SSS_TYPE_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_TYPE_ARG_REQD}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        371879,
                        372457
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSubmitRecord": {
                    "annotation": "method",
                    "name": "nlapiSubmitRecord",
                    "text": "Submit a record to the system for creation or update.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units for transactions, 4 for custom records, 8 for all other records\n *\n *",
                            "theRestString": "@param {nlobjRecord} record nlobjRecord object containing the data record.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false.\n * @param {boolean} \t[ignoreMandatoryFields] Disables mandatory field validation for this submit operation.\n * @return {string} internal ID for committed record.\n *\n * @exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "record",
                            "text": "nlobjRecord object containing the data record.\n *",
                            "theRestString": "@param {boolean} \t[doSourcing] If not set, this argument defaults to false.\n * @param {boolean} \t[ignoreMandatoryFields] Disables mandatory field validation for this submit operation.\n * @return {string} internal ID for committed record.\n *\n * @exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[doSourcing] If not set, this argument defaults to false.\n *",
                            "theRestString": "@param {boolean} \t[ignoreMandatoryFields] Disables mandatory field validation for this submit operation.\n * @return {string} internal ID for committed record.\n *\n * @exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[ignoreMandatoryFields] Disables mandatory field validation for this submit operation.\n *",
                            "theRestString": "@return {string} internal ID for committed record.\n *\n * @exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "name": "internal",
                            "text": "ID for committed record.\n *\n *",
                            "theRestString": "@exception {SSS_INVALID_RECORD_OBJ}\n * @exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_RECORD_OBJ}",
                            "text": "*",
                            "theRestString": "@exception {SSS_RECORD_OBJ_REQD}\n * @exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_RECORD_OBJ_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SOURCE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SOURCE_ARG}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        372516,
                        373153
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiDeleteRecord": {
                    "annotation": "method",
                    "name": "nlapiDeleteRecord",
                    "text": "Delete a record from the system.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units for transactions, 4 for custom records, 8 for all other records\n *\n *",
                            "theRestString": "@param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @return {void}\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \tid The internal ID for the record.\n * @return {void}\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@return {void}\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_RECORD_TYPE}",
                            "text": "*",
                            "theRestString": "@exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_TYPE_ARG_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_INTERNAL_ID}",
                            "text": "*",
                            "theRestString": "@exception {SSS_ID_ARG_REQD}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_ID_ARG_REQD}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        373231,
                        373677
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateSearch": {
                    "annotation": "method",
                    "name": "nlapiCreateSearch",
                    "text": "Creates a new search. The search can be modified and run as an ad-hoc search, without saving it. Alternatively, calling nlobjSearch.saveSearch(title, scriptId) will save the search to the database, so it can be resused later in the UI or using nlapiLoadSearch(type, id).\n\n> Note: This function is agnostic in terms of its filters argument. It can accept input of either a search filter (nlobjSearchFilter), a search filter list (nlobjSearchFilter[]), or a search filter expression (Object[]).",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "[required] - The record internal ID of the record type you are searching (for example, customer|lead|prospect|partner|vendor|contact). For a list of internal IDs, in the NetSuite Help Center see SuiteScript Supported Records.",
                            "theRestString": "@param filters {nlobjSearchFilter|Array<nlobjSearchFilter>|Array<Object>} [optional] - A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects - or - a search filter expression.\n\n> Note You can further filter the returned nlobjSearch object by passing additional filter values. You will do this using the nlobjSearch.addFilter(filter) method or nlobjSearch.addFilters(filters) method.\n\n@param {nlobjSearchColumn|Array<nlobjSearchColumn>} columns [optional] - A single nlobjSearchColumn(name, join, summary) object - or - an array of nlobjSearchColumn(name, join, summary) objects. Note that you can further filter the returned nlobjSearch object by passing additional search return column values. You will do this using the nlobjSearch.setColumns(columns) method\n\n@returns {nlobjSearch}"
                        },
                        {
                            "annotation": "param",
                            "name": "filters",
                            "text": "{nlobjSearchFilter|Array<nlobjSearchFilter>|Array<Object>} [optional] - A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects - or - a search filter expression.\n\n> Note You can further filter the returned nlobjSearch object by passing additional filter values. You will do this using the nlobjSearch.addFilter(filter) method or nlobjSearch.addFilters(filters) method.",
                            "theRestString": "@param {nlobjSearchColumn|Array<nlobjSearchColumn>} columns [optional] - A single nlobjSearchColumn(name, join, summary) object - or - an array of nlobjSearchColumn(name, join, summary) objects. Note that you can further filter the returned nlobjSearch object by passing additional search return column values. You will do this using the nlobjSearch.setColumns(columns) method\n\n@returns {nlobjSearch}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjSearchColumn|Array<nlobjSearchColumn>}",
                            "name": "columns",
                            "text": "[optional] - A single nlobjSearchColumn(name, join, summary) object - or - an array of nlobjSearchColumn(name, join, summary) objects. Note that you can further filter the returned nlobjSearch object by passing additional search return column values. You will do this using the nlobjSearch.setColumns(columns) method",
                            "theRestString": "@returns {nlobjSearch}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{nlobjSearch}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        373726,
                        375311
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSearchRecord": {
                    "annotation": "method",
                    "name": "nlapiSearchRecord",
                    "text": "Perform a record search using an existing search or filters and columns.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction returns the first 1000 rows in the search\n *\n * @param {string} \t\ttype record type ID.\n * @param {int, string} [id] The internal ID or script ID for the saved search to use for search.\n * @param {nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n * @param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "restriction",
                            "name": "returns",
                            "text": "the first 1000 rows in the search\n *\n *",
                            "theRestString": "@param {string} \t\ttype record type ID.\n * @param {int, string} [id] The internal ID or script ID for the saved search to use for search.\n * @param {nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n * @param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "record type ID.\n *",
                            "theRestString": "@param {int, string} [id] The internal ID or script ID for the saved search to use for search.\n * @param {nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n * @param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int, string}",
                            "text": "[id] The internal ID or script ID for the saved search to use for search.\n *",
                            "theRestString": "@param {nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n * @param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "text": "{nlobjSearchFilter, nlobjSearchFilter[]} [filters] [optional] A single nlobjSearchFilter object - or - an array of nlobjSearchFilter objects.\n *",
                            "theRestString": "@param {nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n * @return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "text": "{nlobjSearchColumn, nlobjSearchColumn[]} [columns] [optional] A single nlobjSearchColumn object - or - an array of nlobjSearchColumn objects.\n *",
                            "theRestString": "@return {nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n * @exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "text": "{nlobjSearchResult[]} Returns an array of nlobjSearchResult objects corresponding to the searched records.\n *\n *",
                            "theRestString": "@exception {SSS_INVALID_RECORD_TYPE}\n * @exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_RECORD_TYPE}",
                            "text": "*",
                            "theRestString": "@exception {SSS_TYPE_ARG_REQD}\n * @exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_TYPE_ARG_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_ID}\n * @exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_ID}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_FILTER}\n * @exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_FILTER}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_FILTER_JOIN}\n * @exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_FILTER_JOIN}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_OPERATOR}\n * @exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_OPERATOR}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_COL_NAME}\n * @exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_COL_NAME}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_SRCH_COL_JOIN}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_SRCH_COL_JOIN}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        375360,
                        376460
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSearchGlobal": {
                    "annotation": "method",
                    "name": "nlapiSearchGlobal",
                    "text": "Perform a global record search across the system.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction returns the first 1000 rows in the search\n *\n * @param {string} keywords Global search keywords string or expression.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects containing the following four columns: name, type (as shown in the UI), info1, and info2.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "returns",
                            "text": "the first 1000 rows in the search\n *\n *",
                            "theRestString": "@param {string} keywords Global search keywords string or expression.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects containing the following four columns: name, type (as shown in the UI), info1, and info2.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "keywords",
                            "text": "Global search keywords string or expression.\n *",
                            "theRestString": "@return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects containing the following four columns: name, type (as shown in the UI), info1, and info2.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "return",
                            "text": "{nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects containing the following four columns: name, type (as shown in the UI), info1, and info2.\n *\n *",
                            "theRestString": "@since\t2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        376523,
                        376956
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSearchDuplicate": {
                    "annotation": "method",
                    "name": "nlapiSearchDuplicate",
                    "text": "Perform a duplicate record search using Duplicate Detection criteria.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction returns the first 1000 rows in the search\n *\n * @param {string} \t\ttype The recordType you are checking duplicates for (for example, customer|lead|prospect|partner|vendor|contact).\n * @param {Array<String>} \t[fields] array of field names used to detect duplicate (for example, companyname|email|name|phone|address1|city|state|zipcode).\n * @param {int} \t\t[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "returns",
                            "text": "the first 1000 rows in the search\n *\n *",
                            "theRestString": "@param {string} \t\ttype The recordType you are checking duplicates for (for example, customer|lead|prospect|partner|vendor|contact).\n * @param {Array<String>} \t[fields] array of field names used to detect duplicate (for example, companyname|email|name|phone|address1|city|state|zipcode).\n * @param {int} \t\t[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The recordType you are checking duplicates for (for example, customer|lead|prospect|partner|vendor|contact).\n *",
                            "theRestString": "@param {Array<String>} \t[fields] array of field names used to detect duplicate (for example, companyname|email|name|phone|address1|city|state|zipcode).\n * @param {int} \t\t[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "text": "[fields] array of field names used to detect duplicate (for example, companyname|email|name|phone|address1|city|state|zipcode).\n *",
                            "theRestString": "@param {int} \t\t[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n * @return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[id] internal ID of existing record. Depending on the use case, id may or may not be a required argument.\n *",
                            "theRestString": "@return {nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "return",
                            "text": "{nlobjSearchResult[]} Returns an Array of nlobjSearchResult objects corresponding to the duplicate records.\n *\n *",
                            "theRestString": "@since\t2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        377001,
                        377748
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiTransformRecord": {
                    "annotation": "method",
                    "name": "nlapiTransformRecord",
                    "text": "Create a new record using values from an existing record of a different type.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *\n *",
                            "theRestString": "@param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {string} \ttransformType The recordType you are transforming the existing record into.\n * @param {Object} \t[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n * @return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \tid The internal ID for the record.\n * @param {string} \ttransformType The recordType you are transforming the existing record into.\n * @param {Object} \t[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n * @return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@param {string} \ttransformType The recordType you are transforming the existing record into.\n * @param {Object} \t[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n * @return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "transformType",
                            "text": "The recordType you are transforming the existing record into.\n *",
                            "theRestString": "@param {Object} \t[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n * @return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[transformValues] An object containing transform default option/value pairs used to pre-configure transformed record\n *",
                            "theRestString": "@return {nlobjRecord}\n *\n * @exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "*\n *",
                            "theRestString": "@exception {SSS_INVALID_URL_CATEGORY}\n * @exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_URL_CATEGORY}",
                            "text": "*",
                            "theRestString": "@exception {SSS_CATEGORY_ARG_REQD}\n * @exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_CATEGORY_ARG_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_TASK_ID}\n * @exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_TASK_ID}",
                            "text": "*",
                            "theRestString": "@exception {SSS_TASK_ID_REQD}\n * @exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_TASK_ID_REQD}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_INTERNAL_ID}\n * @exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_INTERNAL_ID}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_EDITMODE_ARG}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_EDITMODE_ARG}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        377809,
                        378626
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiVoidTransaction": {
                    "annotation": "method",
                    "name": "nlapiVoidTransaction",
                    "text": "void a transaction based on type and id .\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions\n *\n *",
                            "theRestString": "@param {string} \ttype The transaction type name.\n * @param {string} \tid The internal ID for the record.\n * @return {string}  if accounting preference is reversing journal, then it is new journal id,\n *                   otherwise, it is the input record id\n *\n * @since\t2014.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The transaction type name.\n *",
                            "theRestString": "@param {string} \tid The internal ID for the record.\n * @return {string}  if accounting preference is reversing journal, then it is new journal id,\n *                   otherwise, it is the input record id\n *\n * @since\t2014.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@return {string}  if accounting preference is reversing journal, then it is new journal id,\n *                   otherwise, it is the input record id\n *\n * @since\t2014.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "name": "if",
                            "text": "accounting preference is reversing journal, then it is new journal id,\n *                   otherwise, it is the input record id\n *\n *",
                            "theRestString": "@since\t2014.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2014.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        378706,
                        379111
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiLookupField": {
                    "annotation": "method",
                    "name": "nlapiLookupField",
                    "text": "Fetch the value of one or more fields on a record. This API uses search to look up the fields and is much\n * faster than loading the record in order to get the field.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *\n *",
                            "theRestString": "@param {string} \ttype The record type name.\n * @param {int} \tid The internal ID for the record.\n * @param {string| Array<String>} fields - field or fields to look up.\n * @param {boolean} [text] If set then the display value is returned instead for select fields.\n * @return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \tid The internal ID for the record.\n * @param {string| Array<String>} fields - field or fields to look up.\n * @param {boolean} [text] If set then the display value is returned instead for select fields.\n * @return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@param {string| Array<String>} fields - field or fields to look up.\n * @param {boolean} [text] If set then the display value is returned instead for select fields.\n * @return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Array<String>}",
                            "name": "fields",
                            "text": "- field or fields to look up.\n *",
                            "theRestString": "@param {boolean} [text] If set then the display value is returned instead for select fields.\n * @return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[text] If set then the display value is returned instead for select fields.\n *",
                            "theRestString": "@return {string| Object} single value or an Object of field name/value pairs depending on the fields argument.\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string| Object}",
                            "name": "single",
                            "text": "value or an Object of field name/value pairs depending on the fields argument.\n *\n *",
                            "theRestString": "@since\t2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        379158,
                        379851
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSubmitField": {
                    "annotation": "method",
                    "name": "nlapiSubmitField",
                    "text": "Submit the values of a field or set of fields for an existing record.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units for transactions, 2 for custom records, 4 for all other records\n *",
                            "theRestString": "@restriction only supported for records and fields where DLE (Direct List Editing) is supported\n *\n * @param {string} \t\ttype The record type name.\n * @param {int} \t\tid The internal ID for the record.\n * @param {string| Array<String>} fields field or fields being updated.\n * @param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for records and fields where DLE (Direct List Editing) is supported\n *\n *",
                            "theRestString": "@param {string} \t\ttype The record type name.\n * @param {int} \t\tid The internal ID for the record.\n * @param {string| Array<String>} fields field or fields being updated.\n * @param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "The record type name.\n *",
                            "theRestString": "@param {int} \t\tid The internal ID for the record.\n * @param {string| Array<String>} fields field or fields being updated.\n * @param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "The internal ID for the record.\n *",
                            "theRestString": "@param {string| Array<String>} fields field or fields being updated.\n * @param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Array<String>}",
                            "name": "fields",
                            "text": "field or fields being updated.\n *",
                            "theRestString": "@param {string| Array<String>} values field value or field values used for updating.\n * @param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Array<String>}",
                            "name": "values",
                            "text": "field value or field values used for updating.\n *",
                            "theRestString": "@param {boolean} \t[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n * @return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[doSourcing] If not set, this argument defaults to false and field sourcing does not occur.\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        379907,
                        380614
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiAttachRecord": {
                    "annotation": "method",
                    "name": "nlapiAttachRecord",
                    "text": "Attach a single record to another with optional properties.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} \ttype1 The record type name being attached\n * @param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type1",
                            "text": "The record type name being attached\n *",
                            "theRestString": "@param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id1",
                            "text": "The internal ID for the record being attached\n *",
                            "theRestString": "@param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type2",
                            "text": "The record type name being attached to\n *",
                            "theRestString": "@param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id2",
                            "text": "The internal ID for the record being attached to\n *",
                            "theRestString": "@param {Object} \t[properties] Object containing name/value pairs used to configure attach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[properties] Object containing name/value pairs used to configure attach operation\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        380682,
                        381210
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiDetachRecord": {
                    "annotation": "method",
                    "name": "nlapiDetachRecord",
                    "text": "Detach a single record from another with optional properties.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} \ttype1 The record type name being attached\n * @param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type1",
                            "text": "The record type name being attached\n *",
                            "theRestString": "@param {int} \tid1 The internal ID for the record being attached\n * @param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id1",
                            "text": "The internal ID for the record being attached\n *",
                            "theRestString": "@param {string} \ttype2 The record type name being attached to\n * @param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type2",
                            "text": "The record type name being attached to\n *",
                            "theRestString": "@param {int} \tid2 The internal ID for the record being attached to\n * @param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id2",
                            "text": "The internal ID for the record being attached to\n *",
                            "theRestString": "@param {Object} \t[properties] Object containing name/value pairs used to configure detach operation\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[properties] Object containing name/value pairs used to configure detach operation\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        381281,
                        381811
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiResolveURL": {
                    "annotation": "method",
                    "name": "nlapiResolveURL",
                    "text": "Resolve a URL to a resource or object in the system.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "type specifier for URL: suitelet|tasklink|record|mediaitem\n *",
                            "theRestString": "@param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @return {string}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "subtype",
                            "text": "subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n *",
                            "theRestString": "@param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @return {string}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n *",
                            "theRestString": "@param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @return {string}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n *",
                            "theRestString": "@return {string}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        381883,
                        382450
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetRedirectURL": {
                    "annotation": "method",
                    "name": "nlapiSetRedirectURL",
                    "text": "Redirect the user to a page. Only valid in the UI on Suitelets and User Events. In Client scripts this will initialize the redirect URL used upon submit.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "type specifier for URL: suitelet|tasklink|record|mediaitem\n *",
                            "theRestString": "@param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "subtype",
                            "text": "subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid\n *",
                            "theRestString": "@param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n *",
                            "theRestString": "@param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n *",
                            "theRestString": "@param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[parameters] Object used to specify additional URL parameters as name/value pairs\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        382512,
                        383283
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiRequestURL": {
                    "annotation": "method",
                    "name": "nlapiRequestURL",
                    "text": "Request a URL to an external or internal resource.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "NetSuite",
                            "text": "maintains a white list of CAs that are allowed for https requests. Please see the online documentation for the complete list.\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {string} url \t\tA fully qualified URL to an HTTP(s) resource\n * @param {string| Object} \t[postdata] - string, document, or Object containing POST payload\n * @param {Object} \t\t\t[headers] - Object containing request headers.\n * @param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} url \t\tA fully qualified URL to an HTTP(s) resource\n * @param {string| Object} \t[postdata] - string, document, or Object containing POST payload\n * @param {Object} \t\t\t[headers] - Object containing request headers.\n * @param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "url",
                            "text": "A fully qualified URL to an HTTP(s) resource\n *",
                            "theRestString": "@param {string| Object} \t[postdata] - string, document, or Object containing POST payload\n * @param {Object} \t\t\t[headers] - Object containing request headers.\n * @param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Object}",
                            "text": "[postdata] - string, document, or Object containing POST payload\n *",
                            "theRestString": "@param {Object} \t\t\t[headers] - Object containing request headers.\n * @param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[headers] - Object containing request headers.\n *",
                            "theRestString": "@param {function} \t\t[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n * @return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{function}",
                            "text": "[callback] - available on the Client to support asynchronous requests. function is passed an nlobjServerResponse with the results.\n *",
                            "theRestString": "@return {nlobjServerResponse}\n *\n * @exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjServerResponse}",
                            "text": "*\n *",
                            "theRestString": "@exception {SSS_UNKNOWN_HOST}\n * @exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_UNKNOWN_HOST}",
                            "text": "*",
                            "theRestString": "@exception {SSS_INVALID_HOST_CERT}\n * @exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_INVALID_HOST_CERT}",
                            "text": "*",
                            "theRestString": "@exception {SSS_REQUEST_TIME_EXCEEDED}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "exception",
                            "type": "{SSS_REQUEST_TIME_EXCEEDED}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        383361,
                        384179
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetContext": {
                    "annotation": "method",
                    "name": "nlapiGetContext",
                    "text": "Return context information about the current user/script.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjContext}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        384254,
                        384395
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetUser": {
                    "annotation": "method",
                    "name": "nlapiGetUser",
                    "text": "Return the internal ID for the currently logged in user. Returns -4 when called from online forms or \"Available without Login\" Suitelets.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        384430,
                        384639
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetRole": {
                    "annotation": "method",
                    "name": "nlapiGetRole",
                    "text": "Return the internal ID for the current user's role. Returns 31 (Online Form User) when called from online forms or \"Available without Login\" Suitelets.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        384671,
                        384894
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetDepartment": {
                    "annotation": "method",
                    "name": "nlapiGetDepartment",
                    "text": "Return the internal ID for the current user's department.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        384926,
                        385061
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLocation": {
                    "annotation": "method",
                    "name": "nlapiGetLocation",
                    "text": "Return the internal ID for the current user's location.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        385099,
                        385230
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetSubsidiary": {
                    "annotation": "method",
                    "name": "nlapiGetSubsidiary",
                    "text": "Return the internal ID for the current user's subsidiary.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        385266,
                        385401
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetRecordType": {
                    "annotation": "method",
                    "name": "nlapiGetRecordType",
                    "text": "Return the recordtype corresponding to the current page or userevent script.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        385439,
                        385596
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetRecordId": {
                    "annotation": "method",
                    "name": "nlapiGetRecordId",
                    "text": "Return the internal ID corresponding to the current page or userevent script.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        385634,
                        385788
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSendEmail": {
                    "annotation": "method",
                    "name": "nlapiSendEmail",
                    "text": "Send out an email and associate it with records in the system.\n * Supported base types are entity for entities, transaction for transactions, activity for activities and cases, record|recordtype for custom records\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction all outbound emails subject to email Anti-SPAM policies\n *\n * @param {int} \t\tfrom internal ID for employee user on behalf of whom this email is sent\n * @param {string| int} to email address or internal ID of user that this email is being sent to\n * @param {string} \t\tsubject email subject\n * @param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "restriction",
                            "name": "all",
                            "text": "outbound emails subject to email Anti-SPAM policies\n *\n *",
                            "theRestString": "@param {int} \t\tfrom internal ID for employee user on behalf of whom this email is sent\n * @param {string| int} to email address or internal ID of user that this email is being sent to\n * @param {string} \t\tsubject email subject\n * @param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "from",
                            "text": "internal ID for employee user on behalf of whom this email is sent\n *",
                            "theRestString": "@param {string| int} to email address or internal ID of user that this email is being sent to\n * @param {string} \t\tsubject email subject\n * @param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "to",
                            "text": "email address or internal ID of user that this email is being sent to\n *",
                            "theRestString": "@param {string} \t\tsubject email subject\n * @param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "subject",
                            "text": "email subject\n *",
                            "theRestString": "@param {string} \t\tbody email body\n * @param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "body",
                            "text": "email body\n *",
                            "theRestString": "@param {string| Array<String>} cc copy email address(es)\n * @param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Array<String>}",
                            "name": "cc",
                            "text": "copy email address(es)\n *",
                            "theRestString": "@param {string| Array<String>} bcc blind copy email address(es)\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| Array<String>}",
                            "name": "bcc",
                            "text": "blind copy email address(es)\n *",
                            "theRestString": "@param {Object} \t\trecords Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "records",
                            "text": "Object of base types -> internal IDs used to associate email to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n *",
                            "theRestString": "@param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "text": "{nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n *",
                            "theRestString": "@param {boolean}     notifySenderOnBounce controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n * @param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "notifySenderOnBounce",
                            "text": "controls whether or not the sender will receive email notification of bounced emails (defaults to false)\n *",
                            "theRestString": "@param {boolean}     internalOnly controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n * @param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "internalOnly",
                            "text": "controls or not the resultingMmessage record will be visible to non-employees on the Communication tab of attached records (defaults to false)\n *",
                            "theRestString": "@param {string} \t\treplyTo email reply-to address\n * @return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "replyTo",
                            "text": "email reply-to address\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        385824,
                        387242
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSendCampaignEmail": {
                    "annotation": "method",
                    "name": "nlapiSendCampaignEmail",
                    "text": "Sends a single on-demand campaign email to a specified recipient and returns a campaign response ID to track the email.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction works in conjunction with the Lead Nurturing (campaigndrip) sublist only\n *\n * @param {int} campaigneventid internal ID of the campaign event\n * @param {int} recipientid internal ID of the recipient - the recipient must have an email\n * @return {int}\n *\n * @since\t2010.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "works",
                            "text": "in conjunction with the Lead Nurturing (campaigndrip) sublist only\n *\n *",
                            "theRestString": "@param {int} campaigneventid internal ID of the campaign event\n * @param {int} recipientid internal ID of the recipient - the recipient must have an email\n * @return {int}\n *\n * @since\t2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "campaigneventid",
                            "text": "internal ID of the campaign event\n *",
                            "theRestString": "@param {int} recipientid internal ID of the recipient - the recipient must have an email\n * @return {int}\n *\n * @since\t2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "recipientid",
                            "text": "internal ID of the recipient - the recipient must have an email\n *",
                            "theRestString": "@return {int}\n *\n * @since\t2010.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since\t2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        387369,
                        387841
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSendFax": {
                    "annotation": "method",
                    "name": "nlapiSendFax",
                    "text": "Send out a fax and associate it with records in the system. This requires fax preferences to be configured.\n * Supported base types are entity for entities, transaction for transactions, activity for activities and cases, record|recordtype for custom records\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {int} \t\tfrom internal ID for employee user on behalf of whom this fax is sent\n * @param {string| int} to fax address or internal ID of user that this fax is being sent to\n * @param {string} \t\tsubject fax subject\n * @param {string} \t\tbody fax body\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "from",
                            "text": "internal ID for employee user on behalf of whom this fax is sent\n *",
                            "theRestString": "@param {string| int} to fax address or internal ID of user that this fax is being sent to\n * @param {string} \t\tsubject fax subject\n * @param {string} \t\tbody fax body\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "to",
                            "text": "fax address or internal ID of user that this fax is being sent to\n *",
                            "theRestString": "@param {string} \t\tsubject fax subject\n * @param {string} \t\tbody fax body\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "subject",
                            "text": "fax subject\n *",
                            "theRestString": "@param {string} \t\tbody fax body\n * @param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "body",
                            "text": "fax body\n *",
                            "theRestString": "@param {Object} \t\trecords Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n * @param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "records",
                            "text": "Object of base types -> internal IDs used to associate fax to records. i.e. {entity: 100, record: 23, recordtype: customrecord_surveys}\n *",
                            "theRestString": "@param {nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n * @return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "param",
                            "text": "{nlobjFile[]} files array of nlobjFile objects (files) to include as attachments\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        387911,
                        388779
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetField": {
                    "annotation": "method",
                    "name": "nlapiGetField",
                    "text": "Return field definition for a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the name of the field\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        388850,
                        389014
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetMatrixField": {
                    "annotation": "method",
                    "name": "nlapiGetMatrixField",
                    "text": "Return field definition for a matrix field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tfldnam matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix field column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix field column index (1-based)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        389053,
                        389332
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemField": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemField",
                    "text": "Return field definition for a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \t[linenum] line number for sublist field (1-based) and only valid for sublists of type staticlist and list\n * @return {nlobjField}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \t[linenum] line number for sublist field (1-based) and only valid for sublists of type staticlist and list\n * @return {nlobjField}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[linenum] line number for sublist field (1-based) and only valid for sublists of type staticlist and list\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        389391,
                        389730
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemMatrixField": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemMatrixField",
                    "text": "Return an nlobjField containing sublist field metadata.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tfldnam matrix field name\n * @param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        389792,
                        390132
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetFieldValue": {
                    "annotation": "method",
                    "name": "nlapiGetFieldValue",
                    "text": "Return the value of a field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} fldnam the field name\n * @return {string}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@return {string}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        390208,
                        390452
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetFieldValue": {
                    "annotation": "method",
                    "name": "nlapiSetFieldValue",
                    "text": "Set the value of a field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \tfldnam the field name\n * @param {string} \tvalue value used to set field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \tfldnam the field name\n * @param {string} \tvalue value used to set field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@param {string} \tvalue value used to set field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "value used to set field\n *",
                            "theRestString": "@param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        390496,
                        391096
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetFieldText": {
                    "annotation": "method",
                    "name": "nlapiGetFieldText",
                    "text": "Return the display value of a select field's current selection on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} fldnam the field name\n * @return {string}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@return {string}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        391175,
                        391453
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetFieldText": {
                    "annotation": "method",
                    "name": "nlapiSetFieldText",
                    "text": "Set the value of a field on the current record on a page using it's label.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \tfldnam the field name\n * @param {string} \ttxt display name used to lookup field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@param {string} \ttxt display name used to lookup field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "txt",
                            "text": "display name used to lookup field value\n *",
                            "theRestString": "@param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        391496,
                        392061
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetFieldValues": {
                    "annotation": "method",
                    "name": "nlapiGetFieldValues",
                    "text": "Return the values of a multiselect field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} fldnam the field name\n * @return {Array<String>}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        392137,
                        392402
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetFieldValues": {
                    "annotation": "method",
                    "name": "nlapiSetFieldValues",
                    "text": "Set the values of a multiselect field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \t\tfldnam field name\n * @param {Array<String>} \tvalues array of strings containing values for field\n * @param {boolean} \t[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \t\tfldnam field name\n * @param {Array<String>} \tvalues array of strings containing values for field\n * @param {boolean} \t[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<String>} \tvalues array of strings containing values for field\n * @param {boolean} \t[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "values",
                            "text": "array of strings containing values for field\n *",
                            "theRestString": "@param {boolean} \t[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        392447,
                        393089
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetFieldTexts": {
                    "annotation": "method",
                    "name": "nlapiGetFieldTexts",
                    "text": "Return the values (via display text) of a multiselect field on the current record.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} fldnam field name\n * @return {Array<String>}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        393170,
                        393439
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetFieldTexts": {
                    "annotation": "method",
                    "name": "nlapiSetFieldTexts",
                    "text": "Set the values (via display text) of a multiselect field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@restriction synchronous arg is only supported in client SuiteScript\n *\n * @param {string} \t\tfldnam field name\n * @param {Array<String>}\ttexts array of strings containing display values for field\n * @param {boolean}\t\t[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \t\tfldnam field name\n * @param {Array<String>}\ttexts array of strings containing display values for field\n * @param {boolean}\t\t[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<String>}\ttexts array of strings containing display values for field\n * @param {boolean}\t\t[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "texts",
                            "text": "array of strings containing display values for field\n *",
                            "theRestString": "@param {boolean}\t\t[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} \t[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        393483,
                        394149
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiGetMatrixValue",
                    "text": "Get the value of a matrix header field\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {string}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @return {string}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        394228,
                        394486
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiSetMatrixValue",
                    "text": "Set the value of a matrix header field\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value for matrix field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value for matrix field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value for matrix field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue field value for matrix field\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value for matrix field\n *",
                            "theRestString": "@param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        394545,
                        395163
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetCurrentLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiGetCurrentLineItemMatrixValue",
                    "text": "Get the current value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @return {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @return {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@return {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "name": "value",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        395260,
                        395636
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetCurrentLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiSetCurrentLineItemMatrixValue",
                    "text": "Set the current value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@restriction synchronous arg is only supported in Client SuiteScript\n *\n * @param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in Client SuiteScript\n *\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue matrix field value\n * @param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "matrix field value\n *",
                            "theRestString": "@param {boolean} [firefieldchanged] if false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged] if false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        395710,
                        396433
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemMatrixValue",
                    "text": "Return the value of a sublist matrix field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn column index (1-based)\n * @param {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn column index (1-based)\n * @param {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @param {int} \tcolumn column index (1-based)\n * @param {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {int} \tcolumn column index (1-based)\n * @param {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "column index (1-based)\n *",
                            "theRestString": "@param {string} value\n *\n * @since\t2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*\n *",
                            "theRestString": "@since\t2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        396545,
                        396955
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemValue": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemValue",
                    "text": "Return the value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        397031,
                        397376
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemDateTimeValue",
                    "text": "Return the value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} \ttimezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} \ttimezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @param {string} \ttimezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} \ttimezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        397857,
                        398245
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetLineItemValue": {
                    "annotation": "method",
                    "name": "nlapiSetLineItemValue",
                    "text": "Set the value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} value\n * @retun {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} value\n * @retun {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @param {string} value\n * @retun {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} value\n * @retun {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@retun {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "retun",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        398322,
                        398686
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "nlapiSetLineItemDateTimeValue",
                    "text": "Set the value of a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} datetime value\n * @param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @param {string} datetime value\n * @param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @param {string} datetime value\n * @param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} datetime value\n * @param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "datetime",
                            "text": "value\n *",
                            "theRestString": "@param {string} timezone value\n * @retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@retun {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "retun",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        399207,
                        399622
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemText": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemText",
                    "text": "Return the label of a select field's current selection for a particular line.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tlinenum line number (1-based)\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        399705,
                        399996
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiFindLineItemValue": {
                    "annotation": "method",
                    "name": "nlapiFindLineItemValue",
                    "text": "Return the 1st line number that a sublist field value appears in\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} val the value being queried for in a sublist field\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} val the value being queried for in a sublist field\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "val",
                            "text": "the value being queried for in a sublist field\n *",
                            "theRestString": "@return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        400055,
                        400353
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiFindLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "nlapiFindLineItemMatrixValue",
                    "text": "Return the 1st line number that a matrix field value appears in\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam matrix field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tval the value being queried for in a matrix field\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tval the value being queried for in a matrix field\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tval the value being queried for in a matrix field\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "val",
                            "text": "the value being queried for in a matrix field\n *",
                            "theRestString": "@return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        400412,
                        400770
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetMatrixCount": {
                    "annotation": "method",
                    "name": "nlapiGetMatrixCount",
                    "text": "Return the number of columns for a matrix field\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam matrix field name\n * @return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@return {int}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        400843,
                        401050
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemCount": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemCount",
                    "text": "Return the number of sublists in a sublist on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} type sublist name\n * @return {int}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {int}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        401101,
                        401356
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiInsertLineItem": {
                    "annotation": "method",
                    "name": "nlapiInsertLineItem",
                    "text": "Insert and select a new line into the sublist on a page or userevent.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} [line] line number at which to insert a new line.\n * @return{void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[line] line number at which to insert a new line.\n *",
                            "theRestString": "@return{void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        401401,
                        401652
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiRemoveLineItem": {
                    "annotation": "method",
                    "name": "nlapiRemoveLineItem",
                    "text": "Remove the currently selected line from the sublist on a page or userevent.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} [line]\tline number to remove.\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[line]\tline number to remove.\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        401701,
                        401939
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetCurrentLineItemValue": {
                    "annotation": "method",
                    "name": "nlapiSetCurrentLineItemValue",
                    "text": "Set the value of a field on the currently selected line.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} value field value\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        401988,
                        402559
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetCurrentLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "nlapiSetCurrentLineItemDateTimeValue",
                    "text": "Set the value of a field on the currently selected line.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {string} timezone value\n * @return {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} value field value\n * @param {string} timezone value\n * @return {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} value field value\n * @param {string} timezone value\n * @return {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@param {string} timezone value\n * @return {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@return {void}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        403070,
                        403448
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetCurrentLineItemText": {
                    "annotation": "method",
                    "name": "nlapiSetCurrentLineItemText",
                    "text": "Set the value of a field on the currently selected line using it's label.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "synchronous",
                            "text": "arg is only supported in client SuiteScript\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @param {string} fldnam sublist field name\n * @param {string} txt string containing display value or search text.\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} txt string containing display value or search text.\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} txt string containing display value or search text.\n * @param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "txt",
                            "text": "string containing display value or search text.\n *",
                            "theRestString": "@param {boolean} [firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n * @param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[firefieldchanged]\tif false then the field change event is suppressed (defaults to true)\n *",
                            "theRestString": "@param {boolean} [synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[synchronous] if true then sourcing and field change execution happens synchronously (defaults to false).\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        403530,
                        404151
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetCurrentLineItemValue": {
                    "annotation": "method",
                    "name": "nlapiGetCurrentLineItemValue",
                    "text": "Return the value of a field on the currently selected line.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        404242,
                        404474
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetCurrentLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "nlapiGetCurrentLineItemDateTimeValue",
                    "text": "Return the value of a field on the currently selected line.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} timezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} timezone value\n * @return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@return {string}\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        404840,
                        405114
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetCurrentLineItemText": {
                    "annotation": "method",
                    "name": "nlapiGetCurrentLineItemText",
                    "text": "Return the label of a select field's current selection on the currently selected line.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        405191,
                        405449
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetCurrentLineItemIndex": {
                    "annotation": "method",
                    "name": "nlapiGetCurrentLineItemIndex",
                    "text": "Return the line number for the currently selected line.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {int}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        405507,
                        405687
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetLineItemDisabled": {
                    "annotation": "method",
                    "name": "nlapiSetLineItemDisabled",
                    "text": "Disable a sublist field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported on sublists of type inlineeditor, editor and list (current field only)\n *\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {boolean} disable if true then field is disabled\n * @param {int} linenum line number for sublist field (1-based) and only valid for sublists of type list\n * @return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {boolean} disable if true then field is disabled\n * @param {int} linenum line number for sublist field (1-based) and only valid for sublists of type list\n * @return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {boolean} disable if true then field is disabled\n * @param {int} linenum line number for sublist field (1-based) and only valid for sublists of type list\n * @return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "disable",
                            "text": "if true then field is disabled\n *",
                            "theRestString": "@param {int} linenum line number for sublist field (1-based) and only valid for sublists of type list\n * @return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number for sublist field (1-based) and only valid for sublists of type list\n *",
                            "theRestString": "@return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        405739,
                        406198
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetFieldMandatory": {
                    "annotation": "method",
                    "name": "nlapiGetFieldMandatory",
                    "text": "Return field mandatoriness.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@return {boolean}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        406270,
                        406420
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetLineItemMandatory": {
                    "annotation": "method",
                    "name": "nlapiGetLineItemMandatory",
                    "text": "Return sublist field mandatoriness.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported on sublists of type inlineeditor or editor (current field only)\n *\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @return {boolean}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @return {boolean}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@return {boolean}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        406468,
                        406771
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetFieldMandatory": {
                    "annotation": "method",
                    "name": "nlapiSetFieldMandatory",
                    "text": "Make a field mandatory.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "mandatory",
                            "text": "if true then field is made mandatory\n *",
                            "theRestString": "@return {void}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        406827,
                        407038
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSetLineItemMandatory": {
                    "annotation": "method",
                    "name": "nlapiSetLineItemMandatory",
                    "text": "Make a sublist field mandatory.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported on sublists of type inlineeditor or editor (current field only)\n *\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {boolean} mandatory if true then field is made mandatory\n * @return {void}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "mandatory",
                            "text": "if true then field is made mandatory\n *",
                            "theRestString": "@return {void}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        407096,
                        407459
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectLineItem": {
                    "annotation": "method",
                    "name": "nlapiSelectLineItem",
                    "text": "Select an existing line in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} linenum line number to select\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number to select\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        407525,
                        407725
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCommitLineItem": {
                    "annotation": "method",
                    "name": "nlapiCommitLineItem",
                    "text": "Save changes made on the currently selected line to the sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        407777,
                        407958
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCancelLineItem": {
                    "annotation": "method",
                    "name": "nlapiCancelLineItem",
                    "text": "Cancel any changes made on the currently selected line.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported for sublists of type inlineeditor and editor\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        408001,
                        408249
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectNewLineItem": {
                    "annotation": "method",
                    "name": "nlapiSelectNewLineItem",
                    "text": "Select a new line in a sublist.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported for sublists of type inlineeditor and editor\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        408292,
                        408519
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiRefreshLineItems": {
                    "annotation": "method",
                    "name": "nlapiRefreshLineItems",
                    "text": "Refresh the sublist table.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Only",
                            "text": "supported for sublists of type inlineeditor, editor, and staticlist\n *",
                            "theRestString": "@restriction Client SuiteScript only.\n *\n * @param {string} type sublist name\n * @return{void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only.\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @return{void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return{void}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        408565,
                        408839
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiInsertSelectOption": {
                    "annotation": "method",
                    "name": "nlapiInsertSelectOption",
                    "text": "Adds a select option to a scripted select or multiselect field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} fldnam field name\n * @param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "internal ID for select option\n *",
                            "theRestString": "@param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "display text for select option\n *",
                            "theRestString": "@param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[selected] if true then option will be selected by default\n *",
                            "theRestString": "@return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        408884,
                        409297
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiRemoveSelectOption": {
                    "annotation": "method",
                    "name": "nlapiRemoveSelectOption",
                    "text": "Removes a select option (or all if value is null) from a scripted select or multiselect field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} fldnam field name\n * @param {string} value internal ID of select option to remove\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@param {string} value internal ID of select option to remove\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "internal ID of select option to remove\n *",
                            "theRestString": "@return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        409369,
                        409688
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiInsertLineItemOption": {
                    "annotation": "method",
                    "name": "nlapiInsertLineItemOption",
                    "text": "Adds a select option to a scripted select or multiselect sublist field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} type\tsublist name\n * @param {string} fldnam sublist field name\n * @param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} value internal ID for select option\n * @param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "internal ID for select option\n *",
                            "theRestString": "@param {string} text display text for select option\n * @param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "display text for select option\n *",
                            "theRestString": "@param {boolean} [selected] if true then option will be selected by default\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[selected] if true then option will be selected by default\n *",
                            "theRestString": "@return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        409744,
                        410212
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiRemoveLineItemOption": {
                    "annotation": "method",
                    "name": "nlapiRemoveLineItemOption",
                    "text": "Removes a select option (or all if value is null) from a scripted select or multiselect sublist field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} type\tsublist name\n * @param {string} fldnam sublist field name\n * @param {string} value internal ID for select option to remove\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {string} value internal ID for select option to remove\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} value internal ID for select option to remove\n * @return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "internal ID for select option to remove\n *",
                            "theRestString": "@return {void}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        410292,
                        410667
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiIsLineItemChanged": {
                    "annotation": "method",
                    "name": "nlapiIsLineItemChanged",
                    "text": "Returns true if any changes have been made to a sublist.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Client",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} type sublist name\n * @return {boolean}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {boolean}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        410731,
                        410950
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetNewRecord": {
                    "annotation": "method",
                    "name": "nlapiGetNewRecord",
                    "text": "Return an record object containing the data being submitted to the system for the currenr record.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "User",
                            "text": "Event scripts only\n *\n *",
                            "theRestString": "@return {nlobjRecord}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        410996,
                        411218
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetOldRecord": {
                    "annotation": "method",
                    "name": "nlapiGetOldRecord",
                    "text": "Return an record object containing the current record's data prior to the write operation.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "beforeSubmit",
                            "text": "|afterSubmit User Event scripts only\n *\n *",
                            "theRestString": "@return {nlobjRecord}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        411255,
                        411495
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateError": {
                    "annotation": "method",
                    "name": "nlapiCreateError",
                    "text": "Create an nlobjError object that can be used to abort script execution and configure error notification\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "code",
                            "text": "error code\n *",
                            "theRestString": "@param {string} \tdetails error description\n * @param {boolean} [suppressEmail] if true then suppress the error notification emails from being sent out (false by default).\n * @return {nlobjError}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "details",
                            "text": "error description\n *",
                            "theRestString": "@param {boolean} [suppressEmail] if true then suppress the error notification emails from being sent out (false by default).\n * @return {nlobjError}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[suppressEmail] if true then suppress the error notification emails from being sent out (false by default).\n *",
                            "theRestString": "@return {nlobjError}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjError}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        411532,
                        411928
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateForm": {
                    "annotation": "method",
                    "name": "nlapiCreateForm",
                    "text": "Return a new entry form page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Suitelets",
                            "text": "only\n *\n *",
                            "theRestString": "@param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjForm}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "page title\n *",
                            "theRestString": "@param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjForm}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[hideHeader] true to hide the page header (false by default)\n *",
                            "theRestString": "@return {nlobjForm}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjForm}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        411990,
                        412249
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateList": {
                    "annotation": "method",
                    "name": "nlapiCreateList",
                    "text": "Return a new list page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Suitelets",
                            "text": "only\n *\n *",
                            "theRestString": "@param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "page title\n *",
                            "theRestString": "@param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[hideHeader] true to hide the page header (false by default)\n *",
                            "theRestString": "@return {nlobjList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjList}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        412301,
                        412554
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateAssistant": {
                    "annotation": "method",
                    "name": "nlapiCreateAssistant",
                    "text": "Return a new assistant page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Suitelets",
                            "text": "only\n *\n *",
                            "theRestString": "@param {string} \ttitle page title\n * @param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjAssistant}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "page title\n *",
                            "theRestString": "@param {boolean} [hideHeader] true to hide the page header (false by default)\n * @return {nlobjAssistant}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[hideHeader] true to hide the page header (false by default)\n *",
                            "theRestString": "@return {nlobjAssistant}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistant}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        412606,
                        412874
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiLoadFile": {
                    "annotation": "method",
                    "name": "nlapiLoadFile",
                    "text": "Load a file from the file cabinet (via its internal ID or path).\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *",
                            "theRestString": "@restriction Server SuiteScript only\n *\n * @param {string| int} id internal ID or relative path to file in the file cabinet (i.e. /SuiteScript/foo.js)\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string| int} id internal ID or relative path to file in the file cabinet (i.e. /SuiteScript/foo.js)\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "id",
                            "text": "internal ID or relative path to file in the file cabinet (i.e. /SuiteScript/foo.js)\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        412931,
                        413249
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSubmitFile": {
                    "annotation": "method",
                    "name": "nlapiSubmitFile",
                    "text": "Add/update a file in the file cabinet.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *",
                            "theRestString": "@restriction Server SuiteScript only\n *\n * @param {nlobjFile} file a file object to submit\n * @return {int} return internal ID of file\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {nlobjFile} file a file object to submit\n * @return {int} return internal ID of file\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjFile}",
                            "name": "file",
                            "text": "a file object to submit\n *",
                            "theRestString": "@return {int} return internal ID of file\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "name": "return",
                            "text": "internal ID of file\n *\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        413284,
                        413539
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiDeleteFile": {
                    "annotation": "method",
                    "name": "nlapiDeleteFile",
                    "text": "Delete a file from the file cabinet.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *",
                            "theRestString": "@restriction Server SuiteScript only\n *\n * @param {int} id internal ID of file to be deleted\n * @return {id}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {int} id internal ID of file to be deleted\n * @return {id}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "internal ID of file to be deleted\n *",
                            "theRestString": "@return {id}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{id}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        413578,
                        413805
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateFile": {
                    "annotation": "method",
                    "name": "nlapiCreateFile",
                    "text": "Instantiate a file object (specifying the name, type, and contents which are base-64 encoded for binary types.)\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {string} name file name\n * @param {string} type file type i.e. plainText, htmlDoc, pdf, word (see documentation for the list of supported file types)\n * @param {string} contents string containing file contents (must be base-64 encoded for binary types)\n * @return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "file name\n *",
                            "theRestString": "@param {string} type file type i.e. plainText, htmlDoc, pdf, word (see documentation for the list of supported file types)\n * @param {string} contents string containing file contents (must be base-64 encoded for binary types)\n * @return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "file type i.e. plainText, htmlDoc, pdf, word (see documentation for the list of supported file types)\n *",
                            "theRestString": "@param {string} contents string containing file contents (must be base-64 encoded for binary types)\n * @return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "contents",
                            "text": "string containing file contents (must be base-64 encoded for binary types)\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        413842,
                        414337
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiMergeRecord": {
                    "annotation": "method",
                    "name": "nlapiMergeRecord",
                    "text": "Perform a mail merge operation using any template and up to 2 records and returns an nlobjFile with the results.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for record types that are available in mail merge: transactions, entities, custom records, and cases\n *",
                            "theRestString": "@restriction Server SuiteScript only\n * @governance 10 units\n *\n * @param {int} \tid internal ID of template\n * @param {string} \tbaseType primary record type\n * @param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {int} \tid internal ID of template\n * @param {string} \tbaseType primary record type\n * @param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {int} \tid internal ID of template\n * @param {string} \tbaseType primary record type\n * @param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "internal ID of template\n *",
                            "theRestString": "@param {string} \tbaseType primary record type\n * @param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "baseType",
                            "text": "primary record type\n *",
                            "theRestString": "@param {int} \tbaseId internal ID of primary record\n * @param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "baseId",
                            "text": "internal ID of primary record\n *",
                            "theRestString": "@param {string} \t[altType] secondary record type\n * @param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[altType] secondary record type\n *",
                            "theRestString": "@param {int} \t[altId] internal ID of secondary record\n * @param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[altId] internal ID of secondary record\n *",
                            "theRestString": "@param {Object} \t[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[fields] Object of merge field values to use in the mail merge (by default all field values are obtained from records) which overrides those from the record.\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        414392,
                        415216
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiPrintRecord": {
                    "annotation": "method",
                    "name": "nlapiPrintRecord",
                    "text": "Print a record (transaction) gievn its type, id, and output format.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {string} \ttype print output type: transaction|statement|packingslip|pickingticket\n * @param {int} \tid internal ID of record to print\n * @param {string} \t[format] output format: html|pdf|default\n * @param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} \ttype print output type: transaction|statement|packingslip|pickingticket\n * @param {int} \tid internal ID of record to print\n * @param {string} \t[format] output format: html|pdf|default\n * @param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "print output type: transaction|statement|packingslip|pickingticket\n *",
                            "theRestString": "@param {int} \tid internal ID of record to print\n * @param {string} \t[format] output format: html|pdf|default\n * @param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "internal ID of record to print\n *",
                            "theRestString": "@param {string} \t[format] output format: html|pdf|default\n * @param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[format] output format: html|pdf|default\n *",
                            "theRestString": "@param {Object} \t[properties] Object of properties used to configure print\n * @return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[properties] Object of properties used to configure print\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        415296,
                        415791
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiXMLToPDF": {
                    "annotation": "method",
                    "name": "nlapiXMLToPDF",
                    "text": "Generate a PDF from XML using the BFO report writer (see http://big.faceless.org/products/report/).\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {string} input string containing BFO compliant XHTML\n * @return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} input string containing BFO compliant XHTML\n * @return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "input",
                            "text": "string containing BFO compliant XHTML\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        415855,
                        416160
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateTemplateRenderer": {
                    "annotation": "method",
                    "name": "nlapiCreateTemplateRenderer",
                    "text": "Create a template renderer used to generate various outputs based on a template.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {string} type\tmedia type: pdf|html\n * @param {string} [engineType] [optional]: default is freemarker/html\n * @return {nlobjTemplateRenderer}\n *"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} type\tmedia type: pdf|html\n * @param {string} [engineType] [optional]: default is freemarker/html\n * @return {nlobjTemplateRenderer}\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "media type: pdf|html\n *",
                            "theRestString": "@param {string} [engineType] [optional]: default is freemarker/html\n * @return {nlobjTemplateRenderer}\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[engineType] [optional]: default is freemarker/html\n *",
                            "theRestString": "@return {nlobjTemplateRenderer}\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTemplateRenderer}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        416198,
                        416546
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateEmailMerger": {
                    "annotation": "method",
                    "name": "nlapiCreateEmailMerger",
                    "text": "Create an email merger used to assemble subject and body text of an email from a given\n * FreeMarker template and a set of associated records.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *\n *",
                            "theRestString": "@param {int} templateId\tinternal ID of the template\n * @return {nlobjEmailMerger}\n *\n * @since 2015.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "templateId",
                            "text": "internal ID of the template\n *",
                            "theRestString": "@return {nlobjEmailMerger}\n *\n * @since 2015.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjEmailMerger}",
                            "text": "*\n *",
                            "theRestString": "@since 2015.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2015.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        416593,
                        416925
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiLogExecution": {
                    "annotation": "method",
                    "name": "nlapiLogExecution",
                    "text": "Create an entry in the script execution log (note that execution log entries are automatically purged after 30 days).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "log type: debug|audit|error|emergency\n *",
                            "theRestString": "@param {string} title log title (up to 90 characters supported)\n * @param {string} [details] log details (up to 3000 characters supported)\n * @return {void}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "log title (up to 90 characters supported)\n *",
                            "theRestString": "@param {string} [details] log details (up to 3000 characters supported)\n * @return {void}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[details] log details (up to 3000 characters supported)\n *",
                            "theRestString": "@return {void}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        416969,
                        417368
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiScheduleScript": {
                    "annotation": "method",
                    "name": "nlapiScheduleScript",
                    "text": "Queue a scheduled script for immediate execution and return the status QUEUED if successfull.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 20 units\n *\n * @param {string| int}\tscript script ID or internal ID of scheduled script\n * @param {string| int} [deployment] script ID or internal ID of scheduled script deployment. If empty, the first \"free\" deployment (i.e. status = Not Scheduled or Completed) will be used\n * @param {Object} \t\tparameters Object of parameter name->values used in this scheduled script instance\n * @return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string| int}\tscript script ID or internal ID of scheduled script\n * @param {string| int} [deployment] script ID or internal ID of scheduled script deployment. If empty, the first \"free\" deployment (i.e. status = Not Scheduled or Completed) will be used\n * @param {Object} \t\tparameters Object of parameter name->values used in this scheduled script instance\n * @return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "script",
                            "text": "script ID or internal ID of scheduled script\n *",
                            "theRestString": "@param {string| int} [deployment] script ID or internal ID of scheduled script deployment. If empty, the first \"free\" deployment (i.e. status = Not Scheduled or Completed) will be used\n * @param {Object} \t\tparameters Object of parameter name->values used in this scheduled script instance\n * @return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "text": "[deployment] script ID or internal ID of scheduled script deployment. If empty, the first \"free\" deployment (i.e. status = Not Scheduled or Completed) will be used\n *",
                            "theRestString": "@param {Object} \t\tparameters Object of parameter name->values used in this scheduled script instance\n * @return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "parameters",
                            "text": "Object of parameter name->values used in this scheduled script instance\n *",
                            "theRestString": "@return {string}\tQUEUED or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "name": "QUEUED",
                            "text": "or null if no available deployments were found or the current status of the deployment specified if it was not available.\n *\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        417425,
                        418161
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiOutboundSSO": {
                    "annotation": "method",
                    "name": "nlapiOutboundSSO",
                    "text": "Return a URL with a generated OAuth token.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Suitelets",
                            "text": "and Portlets only\n *",
                            "theRestString": "@governance 20 units\n *\n * @param {string} ssoAppKey\n * @return {string}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} ssoAppKey\n * @return {string}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "ssoAppKey",
                            "text": "*",
                            "theRestString": "@return {string}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        418230,
                        418448
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiLoadConfiguration": {
                    "annotation": "method",
                    "name": "nlapiLoadConfiguration",
                    "text": "Loads a configuration record\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {string} type\n * @return {nlobjConfiguration}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} type\n * @return {nlobjConfiguration}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "*",
                            "theRestString": "@return {nlobjConfiguration}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjConfiguration}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        418493,
                        418706
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSubmitConfiguration": {
                    "annotation": "method",
                    "name": "nlapiSubmitConfiguration",
                    "text": "Commits all changes to a configuration record.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "Server",
                            "text": "SuiteScript only\n *",
                            "theRestString": "@governance 10 units\n *\n * @param {nlobjConfiguration} setup record\n * @return (void)\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {nlobjConfiguration} setup record\n * @return (void)\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjConfiguration}",
                            "name": "setup",
                            "text": "record\n *",
                            "theRestString": "@return (void)\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "text": "(void)\n *\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        418752,
                        418991
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiStringToDate": {
                    "annotation": "method",
                    "name": "nlapiStringToDate",
                    "text": "Convert a String into a Date object.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "str",
                            "text": "date string in the user's date format, timeofday format, or datetime format\n *",
                            "theRestString": "@param {string} format format type to use: date|datetime|timeofday with date being the default\n * @return {date}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "format",
                            "text": "format type to use: date|datetime|timeofday with date being the default\n *",
                            "theRestString": "@return {date}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{date}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        419040,
                        419351
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiDateToString": {
                    "annotation": "method",
                    "name": "nlapiDateToString",
                    "text": "Convert a Date object into a String\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{date}",
                            "name": "d",
                            "text": "date object being converted to a string\n *",
                            "theRestString": "@param {string} [formattype] format type to use: date|datetime|timeofday with date being the default\n * @return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[formattype] format type to use: date|datetime|timeofday with date being the default\n *",
                            "theRestString": "@return {string}\n *\n * @since 2005.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2005.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2005.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        419399,
                        419678
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiAddDays": {
                    "annotation": "method",
                    "name": "nlapiAddDays",
                    "text": "Add days to a Date object and returns a new Date\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{date}",
                            "name": "d",
                            "text": "date object used to calculate the new date\n *",
                            "theRestString": "@param {int}\tdays the number of days to add to this date object.\n * @return {date}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "days",
                            "text": "the number of days to add to this date object.\n *",
                            "theRestString": "@return {date}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{date}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        419728,
                        419979
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiAddMonths": {
                    "annotation": "method",
                    "name": "nlapiAddMonths",
                    "text": "Add months to a Date object and returns a new Date.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{date}",
                            "name": "d",
                            "text": "date object used to calculate the new date\n *",
                            "theRestString": "@param {int} months the number of months to add to this date object.\n * @return {date}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "months",
                            "text": "the number of months to add to this date object.\n *",
                            "theRestString": "@return {date}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{date}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        420018,
                        420278
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiFormatCurrency": {
                    "annotation": "method",
                    "name": "nlapiFormatCurrency",
                    "text": "Format a number for data entry into a currency field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "str",
                            "text": "numeric string used to format for display as currency using user's locale\n *",
                            "theRestString": "@return {string}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        420321,
                        420553
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiEncrypt": {
                    "annotation": "method",
                    "name": "nlapiEncrypt",
                    "text": "Encrypt a String using a SHA-1 hash function\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "s",
                            "text": "string to encrypt\n *",
                            "theRestString": "@return {string}\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        420595,
                        420753
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiEscapeXML": {
                    "annotation": "method",
                    "name": "nlapiEscapeXML",
                    "text": "Escape a String for use in an XML document.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "string to escape\n *",
                            "theRestString": "@return {string}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        420786,
                        420947
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiStringToXML": {
                    "annotation": "method",
                    "name": "nlapiStringToXML",
                    "text": "Convert a String into an XML document. Note that in Server SuiteScript XML is supported natively by the JS runtime using the e4x standard (http://en.wikipedia.org/wiki/E4X)\n * This makes scripting XML simpler and more efficient\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "str",
                            "text": "string being parsed into an XML document\n *",
                            "theRestString": "@return {document}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{document}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        420985,
                        421357
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiXMLToString": {
                    "annotation": "method",
                    "name": "nlapiXMLToString",
                    "text": "Convert an XML document into a String.  Note that in Server SuiteScript XML is supported natively by the JS runtime using the e4x standard (http://en.wikipedia.org/wiki/E4X)\n * This makes scripting XML data simpler and more efficient\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{document}",
                            "name": "xml",
                            "text": "document being serialized into a string\n *",
                            "theRestString": "@return {string}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        421396,
                        421773
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiValidateXML": {
                    "annotation": "method",
                    "name": "nlapiValidateXML",
                    "text": "Validate that a given XML document conforms to a given XML schema. XML Schema Definition (XSD) is the expected schema format.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{document}",
                            "name": "xmlDocument",
                            "text": "xml to validate\n *",
                            "theRestString": "@param {document} schemaDocument schema to enforce\n * @param {string} schemaFolderId if your schema utilizes <import> or <include> tags which refer to sub-schemas by file name (as opposed to URL),\n *                 provide the Internal Id of File Cabinet folder containing these sub-schemas as the schemaFolderId argument\n * @throws {nlobjError} error containsing validation failure message(s) - limited to first 10\n *\n * @since 2014.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{document}",
                            "name": "schemaDocument",
                            "text": "schema to enforce\n *",
                            "theRestString": "@param {string} schemaFolderId if your schema utilizes <import> or <include> tags which refer to sub-schemas by file name (as opposed to URL),\n *                 provide the Internal Id of File Cabinet folder containing these sub-schemas as the schemaFolderId argument\n * @throws {nlobjError} error containsing validation failure message(s) - limited to first 10\n *\n * @since 2014.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "schemaFolderId",
                            "text": "if your schema utilizes <import> or <include> tags which refer to sub-schemas by file name (as opposed to URL),\n *                 provide the Internal Id of File Cabinet folder containing these sub-schemas as the schemaFolderId argument\n *",
                            "theRestString": "@throws {nlobjError} error containsing validation failure message(s) - limited to first 10\n *\n * @since 2014.1"
                        },
                        {
                            "annotation": "throws",
                            "type": "{nlobjError}",
                            "name": "error",
                            "text": "containsing validation failure message(s) - limited to first 10\n *\n *",
                            "theRestString": "@since 2014.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2014.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        421812,
                        422465
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectValue": {
                    "annotation": "method",
                    "name": "nlapiSelectValue",
                    "text": "select a value from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{node}",
                            "name": "node",
                            "text": "node being queried\n *",
                            "theRestString": "@param {string} xpath string containing XPath expression.\n * @return {string}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "xpath",
                            "text": "string containing XPath expression.\n *",
                            "theRestString": "@return {string}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        422544,
                        422871
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectValues": {
                    "annotation": "method",
                    "name": "nlapiSelectValues",
                    "text": "Select an array of values from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{node}",
                            "name": "node",
                            "text": "node being queried\n *",
                            "theRestString": "@param {string} \txpath string containing XPath expression.\n * @return {Array<String>}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "xpath",
                            "text": "string containing XPath expression.\n *",
                            "theRestString": "@return {Array<String>}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        422918,
                        423266
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectNode": {
                    "annotation": "method",
                    "name": "nlapiSelectNode",
                    "text": "Select a node from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{node}",
                            "name": "node",
                            "text": "node being queried\n *",
                            "theRestString": "@param {string} \txpath string containing XPath expression.\n * @return {node}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "xpath",
                            "text": "string containing XPath expression.\n *",
                            "theRestString": "@return {node}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{node}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        423314,
                        423639
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiSelectNodes": {
                    "annotation": "method",
                    "name": "nlapiSelectNodes",
                    "text": "Select an array of nodes from an XML node using XPath. Supports custom namespaces (nodes in default namespace can be referenced using \"nlapi\" as the prefix)\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{node}",
                            "name": "node",
                            "text": "node being queried\n *",
                            "theRestString": "@param {string} \txpath string containing XPath expression.\n * @return {node[]}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "xpath",
                            "text": "string containing XPath expression.\n *",
                            "theRestString": "@return {node[]}\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "text": "{node[]}\n *\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        423685,
                        424024
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiExchangeRate": {
                    "annotation": "method",
                    "name": "nlapiExchangeRate",
                    "text": "Calculate exchange rate between two currencies as of today or an optional effective date.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "10",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string| int} fromCurrency internal ID or currency code of currency we are converting from\n * @param {string| int} toCurrency internal ID or currency code of currency we are converting to\n * @param {string} [date] string containing date of effective exchange rate. defaults to today\n * @return {float}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "fromCurrency",
                            "text": "internal ID or currency code of currency we are converting from\n *",
                            "theRestString": "@param {string| int} toCurrency internal ID or currency code of currency we are converting to\n * @param {string} [date] string containing date of effective exchange rate. defaults to today\n * @return {float}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "toCurrency",
                            "text": "internal ID or currency code of currency we are converting to\n *",
                            "theRestString": "@param {string} [date] string containing date of effective exchange rate. defaults to today\n * @return {float}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[date] string containing date of effective exchange rate. defaults to today\n *",
                            "theRestString": "@return {float}\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{float}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        424071,
                        424556
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiInitiateWorkflow": {
                    "annotation": "method",
                    "name": "nlapiInitiateWorkflow",
                    "text": "Initiates a workflow on-demand and returns the workflow instance ID for the workflow-record combination.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} recordtype record type ID of the workflow base record\n * @param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "recordtype",
                            "text": "record type ID of the workflow base record\n *",
                            "theRestString": "@param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "internal ID of the base record\n *",
                            "theRestString": "@param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "workflowid",
                            "text": "internal ID or script ID for the workflow definition\n *",
                            "theRestString": "@return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        424623,
                        425043
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiInitiateWorkflowAsync": {
                    "annotation": "method",
                    "name": "nlapiInitiateWorkflowAsync",
                    "text": "Initiates a workflow on-demand and returns the workflow instance ID for the workflow-record combination.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} recordtype record type ID of the workflow base record\n * @param {string| int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {string}\n *\n * @since 2014.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "recordtype",
                            "text": "record type ID of the workflow base record\n *",
                            "theRestString": "@param {string| int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {string}\n *\n * @since 2014.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "id",
                            "text": "internal ID of the base record\n *",
                            "theRestString": "@param {string| int} workflowid internal ID or script ID for the workflow definition\n * @return {string}\n *\n * @since 2014.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "workflowid",
                            "text": "internal ID or script ID for the workflow definition\n *",
                            "theRestString": "@return {string}\n *\n * @since 2014.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since 2014.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2014.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        425110,
                        425546
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiTriggerWorkflow": {
                    "annotation": "method",
                    "name": "nlapiTriggerWorkflow",
                    "text": "Triggers a workflow on a record.\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *\n *",
                            "theRestString": "@param {string} recordtype record type ID of the workflow base record\n * @param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @param {string| int} actionid internal ID or script ID of the action script\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "recordtype",
                            "text": "record type ID of the workflow base record\n *",
                            "theRestString": "@param {int} id internal ID of the base record\n * @param {string| int} workflowid internal ID or script ID for the workflow definition\n * @param {string| int} actionid internal ID or script ID of the action script\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "id",
                            "text": "internal ID of the base record\n *",
                            "theRestString": "@param {string| int} workflowid internal ID or script ID for the workflow definition\n * @param {string| int} actionid internal ID or script ID of the action script\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "workflowid",
                            "text": "internal ID or script ID for the workflow definition\n *",
                            "theRestString": "@param {string| int} actionid internal ID or script ID of the action script\n * @return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "actionid",
                            "text": "internal ID or script ID of the action script\n *",
                            "theRestString": "@return {int}\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n *",
                            "theRestString": "@since 2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        425627,
                        426053
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiCreateCurrentLineSubrecord": {
                    "annotation": "method",
                    "name": "nlapiCreateCurrentLineSubrecord",
                    "text": "Create a subrecord on a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "retun",
                            "type": "{nlobjSubrecord}",
                            "text": "*\n *",
                            "theRestString": "@since 2011.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2011.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        426129,
                        426446
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiEditCurrentLineItemSubrecord": {
                    "annotation": "method",
                    "name": "nlapiEditCurrentLineItemSubrecord",
                    "text": "edit a subrecord on a sublist field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} \ttype sublist name\n * @param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam sublist field name\n * @retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@retun {nlobjSubrecord}\n *\n * @since 2011.2"
                        },
                        {
                            "annotation": "retun",
                            "type": "{nlobjSubrecord}",
                            "text": "*\n *",
                            "theRestString": "@since 2011.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2011.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        426508,
                        426825
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "undefined": {
                    "annotation": "method",
                    "text": "*",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubrecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        429312,
                        429447
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            },
            "children": []
        },
        "ns.suitescript.nlobjSearch": {
            "annotation": "class",
            "name": "nlobjSearch",
            "text": "TODO",
            "commentRange": [
                375313,
                375358
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript",
                "text": "* Note that there are some restrictions on API usage. Also note that the only 2 objects that can be\n* contructed are nlobjSearchFilter and nlobjSearchColumn. All other objects can only be created via\n* top-level function or method calls.\n*\n* The governance tag refers to the usage governance for an API call\n* The restricted tag refers to any known restrictions with a particular API call\n*\n* All Object arguments are Javascript Objects used as hash tables for specifying key-value pairs\n*\n*",
                "children": [
                    {
                        "annotation": "since",
                        "name": "2005.0",
                        "text": "Support scripting of current record in Client SuiteScript\n*",
                        "theRestString": "@version\t2007.0 Support scripting of records in user events, portlets, and scheduled scripts\n* @version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2007.0",
                        "text": "Support scripting of records in user events, portlets, and scheduled scripts\n*",
                        "theRestString": "@version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2008.1",
                        "text": "Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n*",
                        "theRestString": "@version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.1",
                        "text": "Support scripting of file objects\n*",
                        "theRestString": "@version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.2",
                        "text": "Support scripting of setup records and assistant (multi-step) pages\n*",
                        "theRestString": "@version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2009.2",
                        "text": "converted JS template to use eclipse code completion friendly format\n*",
                        "theRestString": "@version\t2010.1 Suppport dynamic scripting"
                    },
                    {
                        "annotation": "version",
                        "name": "2010.1",
                        "text": "Suppport dynamic scripting",
                        "theRestString": ""
                    }
                ],
                "commentRange": [
                    368946,
                    370074
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.nlobjSearch"
        },
        "ns.suitescript.standard.nlobjRecord": {
            "annotation": "class",
            "name": "nlobjRecord",
            "text": "Class definition for business records in the system. Used for accessing and manipulating record objects.\n * \n *",
            "commentRange": [
                429993,
                430190
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjRecord",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "*",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        429993,
                        430190
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "Return the internalId of the record or NULL for new records.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "name": "Return",
                            "text": "the integer value of the record ID.\n *\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        430221,
                        430389
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRecordType": {
                    "annotation": "method",
                    "name": "getRecordType",
                    "text": "Return the recordType corresponding to this record.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "name": "The",
                            "text": "string value of the record name internal ID\n *\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        430438,
                        430641
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getField": {
                    "annotation": "method",
                    "name": "getField",
                    "text": "Return field metadata for field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@return\t{nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        430699,
                        430871
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSubList": {
                    "annotation": "method",
                    "name": "getSubList",
                    "text": "Return sublist metadata for sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        430929,
                        431109
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMatrixField": {
                    "annotation": "method",
                    "name": "getMatrixField",
                    "text": "Return field metadata for field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} fldnam matrix field name\n * @param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{column}",
                            "name": "linenum",
                            "text": "matrix column (1-based)\n *",
                            "theRestString": "@return {nlobjField}\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        431167,
                        431444
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemField": {
                    "annotation": "method",
                    "name": "getLineItemField",
                    "text": "Return metadata for sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam sublist field name\n * @param {int} [linenum] line number (1-based). If empty, the current sublist field is returned. only settable for sublists of type list\n * @return {nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} [linenum] line number (1-based). If empty, the current sublist field is returned. only settable for sublists of type list\n * @return {nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[linenum] line number (1-based). If empty, the current sublist field is returned. only settable for sublists of type list\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        431522,
                        431887
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemMatrixField": {
                    "annotation": "method",
                    "name": "getLineItemMatrixField",
                    "text": "Return metadata for sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} fldnam matrix field name\n * @param {int} linenum line number\n * @param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} linenum line number\n * @param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "linenum",
                            "text": "line number\n *",
                            "theRestString": "@param {column} linenum matrix column (1-based)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{column}",
                            "name": "linenum",
                            "text": "matrix column (1-based)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        431968,
                        432298
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValue": {
                    "annotation": "method",
                    "name": "setFieldValue",
                    "text": "Set the value of a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} value field value\n * @return {void}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@return {void}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        432393,
                        432596
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValues": {
                    "annotation": "method",
                    "name": "setFieldValues",
                    "text": "Set the values of a multi-select field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<String>} values string array containing field values\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "values",
                            "text": "string array containing field values\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        432666,
                        432899
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValue": {
                    "annotation": "method",
                    "name": "getFieldValue",
                    "text": "Return the value of a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {string}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        432971,
                        433138
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValues": {
                    "annotation": "method",
                    "name": "getFieldValues",
                    "text": "Return the selected values of a multi-select field as an Array.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        433201,
                        433411
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldText": {
                    "annotation": "method",
                    "name": "setFieldText",
                    "text": "Set the value (via display value) of a select field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @param {string} text field display value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} text field display value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "field display value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        433475,
                        433760
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldTexts": {
                    "annotation": "method",
                    "name": "setFieldTexts",
                    "text": "Set the values (via display values) of a multi-select field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for multi-select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @param {Array<String>} texts array of field display values\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<String>} texts array of field display values\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "texts",
                            "text": "array of field display values\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        433828,
                        434146
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldText": {
                    "annotation": "method",
                    "name": "getFieldText",
                    "text": "Return the display value for a select field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        434216,
                        434451
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldTexts": {
                    "annotation": "method",
                    "name": "getFieldTexts",
                    "text": "Return the selected display values of a multi-select field as an Array.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for multi-select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        434513,
                        434789
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMatrixValue": {
                    "annotation": "method",
                    "name": "getMatrixValue",
                    "text": "Get the value of a matrix header field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} name\tmatrix field name\n * @param {int} column matrix column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} column matrix column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        434852,
                        435139
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setMatrixValue": {
                    "annotation": "method",
                    "name": "setMatrixValue",
                    "text": "Set the value of a matrix header field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tname\tmatrix field name\n * @param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix column index (1-based)\n * @param {string} \tvalue field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        435217,
                        435543
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFields": {
                    "annotation": "method",
                    "name": "getAllFields",
                    "text": "Return an Array of all field names on the record.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        435628,
                        435791
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllLineItemFields": {
                    "annotation": "method",
                    "name": "getAllLineItemFields",
                    "text": "Return an Array of all field names on a record for a particular sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        435848,
                        436080
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLineItemValue": {
                    "annotation": "method",
                    "name": "setLineItemValue",
                    "text": "Set the value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \tvalue sublist field value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline line number (1-based)\n * @param {string} \tvalue sublist field value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} \tvalue sublist field value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "sublist field value\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        436151,
                        436448
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "setLineItemDateTimeValue",
                    "text": "Set the value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \tdatetime value\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline line number (1-based)\n * @param {string} \tdatetime value\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} \tdatetime value\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "datetime",
                            "text": "value\n *",
                            "theRestString": "@param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        436922,
                        437251
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemValue": {
                    "annotation": "method",
                    "name": "getLineItemValue",
                    "text": "Return the value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline line number (1-based)\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        437355,
                        437609
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "getLineItemDateTimeValue",
                    "text": "Return the value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline line number (1-based)\n * @param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} \ttimezone value\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        438037,
                        438334
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemText": {
                    "annotation": "method",
                    "name": "getLineItemText",
                    "text": "Return the text value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline line number (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline line number (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        438431,
                        438709
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCurrentLineItemValue": {
                    "annotation": "method",
                    "name": "setCurrentLineItemValue",
                    "text": "Set the current value of a sublist field.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {string} \tvalue sublist field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} \tvalue sublist field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "sublist field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        438787,
                        439070
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCurrentLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "setCurrentLineItemDateTimeValue",
                    "text": "Set the current value of a sublist field.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {string} \tvalue sublist field value\n * @param {string} \ttimezone value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} \tvalue sublist field value\n * @param {string} \ttimezone value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "sublist field value\n *",
                            "theRestString": "@param {string} \ttimezone value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        439543,
                        439869
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCurrentLineItemValue": {
                    "annotation": "method",
                    "name": "getCurrentLineItemValue",
                    "text": "Return the current value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        439973,
                        440218
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCurrentLineItemDateTimeValue": {
                    "annotation": "method",
                    "name": "getCurrentLineItemDateTimeValue",
                    "text": "Return the current value of a sublist field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {string} \ttimezone value\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} \ttimezone value\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "value\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        440639,
                        440927
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCurrentLineItemText": {
                    "annotation": "method",
                    "name": "getCurrentLineItemText",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        441025,
                        441276
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCurrentLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "setCurrentLineItemMatrixValue",
                    "text": "Set the current value of a sublist matrix field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tname matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @param {string} \tvalue matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix field column index (1-based)\n * @param {string} \tvalue matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix field column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "matrix field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        441355,
                        441719
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCurrentLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "getCurrentLineItemMatrixValue",
                    "text": "Return the current value of a sublist matrix field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tname matrix field name\n * @param {int} \tcolumn matrix field column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tcolumn matrix field column index (1-based)\n * @return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix field column index (1-based)\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        441820,
                        442144
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMatrixCount": {
                    "annotation": "method",
                    "name": "getMatrixCount",
                    "text": "Return the number of columns for a matrix field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "matrix sublist name\n *",
                            "theRestString": "@param {string} \tname matrix field name\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "matrix field name\n *",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        442238,
                        442481
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemCount": {
                    "annotation": "method",
                    "name": "getLineItemCount",
                    "text": "Return the number of lines in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        442552,
                        442721
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "findLineItemValue": {
                    "annotation": "method",
                    "name": "findLineItemValue",
                    "text": "Return line number for 1st occurence of field value in a sublist column.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} fldnam\tsublist field name\n * @param {string} value\tsublist field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {string} value\tsublist field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "sublist field value\n *",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        442788,
                        443097
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "findLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "findLineItemMatrixValue",
                    "text": "Return line number for 1st occurence of field value in a sublist column.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tfldnam\tsublist field name\n * @param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue \tmatrix field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue \tmatrix field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue \tmatrix field value\n * @return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "matrix field value\n *",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        443180,
                        443553
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "insertLineItem": {
                    "annotation": "method",
                    "name": "insertLineItem",
                    "text": "Insert a new line into a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} \t[line] line index at which to insert line\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[line] line index at which to insert line\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        443650,
                        443870
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "removeLineItem": {
                    "annotation": "method",
                    "name": "removeLineItem",
                    "text": "Remove an existing line from a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} \t[line] line number to remove\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "text": "[line] line number to remove\n *\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        443941,
                        444154
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "selectNewLineItem": {
                    "annotation": "method",
                    "name": "selectNewLineItem",
                    "text": "Insert and select a new line in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        444225,
                        444415
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "selectLineItem": {
                    "annotation": "method",
                    "name": "selectLineItem",
                    "text": "Select an existing line in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {int} \tline  line number to select\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number to select\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        444483,
                        444711
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "commitLineItem": {
                    "annotation": "method",
                    "name": "commitLineItem",
                    "text": "Commit the current line in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        444782,
                        444965
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDateTimeValue": {
                    "annotation": "method",
                    "name": "setDateTimeValue",
                    "text": "set the value of a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} value field value\n * @return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 20013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjRecord\n *\n * @since 20013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRecord\n *\n * @since 20013.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRecord",
                            "text": "*\n *",
                            "theRestString": "@since 20013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "20013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        445359,
                        445566
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getDateTimeValue": {
                    "annotation": "method",
                    "name": "getDateTimeValue",
                    "text": "Return the value of a field on the current record on a page.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "supported",
                            "text": "in client and user event scripts only.\n *",
                            "theRestString": "@param {string} fldnam the field name\n * @param {string} timezone Olson value\n * @return {string}\n *\n * @since\t2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the field name\n *",
                            "theRestString": "@param {string} timezone Olson value\n * @return {string}\n *\n * @since\t2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "timezone",
                            "text": "Olson value\n *",
                            "theRestString": "@return {string}\n *\n * @since\t2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@since\t2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        445947,
                        446229
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjConfiguration": {
            "annotation": "class",
            "name": "nlobjConfiguration",
            "text": "Class definition for interacting with setup/configuration pages\n * \n *",
            "commentRange": [
                446321,
                446514
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjConfiguration",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjConfiguration..\n *\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        446321,
                        446514
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getType": {
                    "annotation": "method",
                    "name": "getType",
                    "text": "return the type corresponding to this setup record.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        446553,
                        446713
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getField": {
                    "annotation": "method",
                    "name": "getField",
                    "text": "return field metadata for field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "field name\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        446772,
                        446955
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValue": {
                    "annotation": "method",
                    "name": "setFieldValue",
                    "text": "set the value of a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} value field value\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        447020,
                        447230
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValues": {
                    "annotation": "method",
                    "name": "setFieldValues",
                    "text": "Set the values of a multi-select field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for multi-select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @param {Array<string>} value field values\n * @return {void}\n *\n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<string>} value field values\n * @return {void}\n *\n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<string>}",
                            "name": "value",
                            "text": "field values\n *",
                            "theRestString": "@return {void}\n *\n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        447307,
                        447591
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValue": {
                    "annotation": "method",
                    "name": "getFieldValue",
                    "text": "return the value of a field.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        447669,
                        447847
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValues": {
                    "annotation": "method",
                    "name": "getFieldValues",
                    "text": "return the selected values of a multi-select field as an Array.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for multi-select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        447917,
                        448193
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldText": {
                    "annotation": "method",
                    "name": "setFieldText",
                    "text": "set the value (via display value) of a field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @param {string} text field display text\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} text field display text\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "field display text\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        448264,
                        448548
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldTexts": {
                    "annotation": "method",
                    "name": "setFieldTexts",
                    "text": "set the values (via display values) of a multi-select field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for multi-select fields\n *\n *",
                            "theRestString": "@param {string} \t name field name\n * @param {Array<string>} texts array of field display text values\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {Array<string>} texts array of field display text values\n * @return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<string>}",
                            "name": "texts",
                            "text": "array of field display text values\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        448623,
                        448955
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldText": {
                    "annotation": "method",
                    "name": "getFieldText",
                    "text": "return the text value of a field.\n *",
                    "children": [
                        {
                            "annotation": "restriction",
                            "name": "only",
                            "text": "supported for select fields\n *\n *",
                            "theRestString": "@param {string} name field name\n * @return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        449032,
                        449263
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldTexts": {
                    "annotation": "method",
                    "name": "getFieldTexts",
                    "text": "return the selected text values of a multi-select field as an Array.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {Array<string>}\n *\n * \n * @memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        449332,
                        449554
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFields": {
                    "annotation": "method",
                    "name": "getAllFields",
                    "text": "return an Array of all field names on the record.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjConfiguration\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjConfiguration",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        449624,
                        449791
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjFile": {
            "annotation": "class",
            "name": "nlobjFile",
            "text": "Encapsulation of files (media items) in the file cabinet.\n * \n *",
            "commentRange": [
                449864,
                450114
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjFile",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjFile used for accessing and manipulating files in the file cabinet.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        449864,
                        450114
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getName": {
                    "annotation": "method",
                    "name": "getName",
                    "text": "Return the name of the file.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        450144,
                        450269
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setName": {
                    "annotation": "method",
                    "name": "setName",
                    "text": "Sets the name of a file.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the file\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        450319,
                        450483
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFolder": {
                    "annotation": "method",
                    "name": "getFolder",
                    "text": "return the internal ID of the folder that this file is in.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        450538,
                        450692
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFolder": {
                    "annotation": "method",
                    "name": "setFolder",
                    "text": "sets the internal ID of the folder that this file is in.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "folder",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        450744,
                        450920
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setEncoding": {
                    "annotation": "method",
                    "name": "setEncoding",
                    "text": "sets the character encoding for the file.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "encoding",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2010.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2010.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2010.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        450979,
                        451147
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isOnline": {
                    "annotation": "method",
                    "name": "isOnline",
                    "text": "return true if the file is \"Available without Login\".\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        451210,
                        451362
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setIsOnline": {
                    "annotation": "method",
                    "name": "setIsOnline",
                    "text": "sets the file's \"Available without Login\" status.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "online",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        451413,
                        451588
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isInactive": {
                    "annotation": "method",
                    "name": "isInactive",
                    "text": "return true if the file is inactive.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        451649,
                        451786
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setIsInactive": {
                    "annotation": "method",
                    "name": "setIsInactive",
                    "text": "sets the file's inactive status.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "inactive",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        451839,
                        452001
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getDescription": {
                    "annotation": "method",
                    "name": "getDescription",
                    "text": "return the file description.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        452066,
                        452198
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDescription": {
                    "annotation": "method",
                    "name": "setDescription",
                    "text": "sets the file's description.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "descr",
                            "text": "the file description\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        452255,
                        452431
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "Return the id of the file (if stored in the FC).\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        452494,
                        452634
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSize": {
                    "annotation": "method",
                    "name": "getSize",
                    "text": "Return the size of the file in bytes.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        452682,
                        452813
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getURL": {
                    "annotation": "method",
                    "name": "getURL",
                    "text": "Return the URL of the file (if stored in the FC).\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        452863,
                        453008
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getType": {
                    "annotation": "method",
                    "name": "getType",
                    "text": "Return the type of the file.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        453057,
                        453182
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getValue": {
                    "annotation": "method",
                    "name": "getValue",
                    "text": "Return the value (base64 encoded for binary types) of the file.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFile\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFile",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        453232,
                        453393
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjSearchFilter": {
            "annotation": "class",
            "name": "nlobjSearchFilter",
            "text": "search filter\n *",
            "commentRange": [
                453444,
                453924
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjSearchFilter",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjSearchFilter filter objects used to define search criteria.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "filter name.\n *",
                            "theRestString": "@param {string} join internal ID for joined search where this filter is defined\n * @param {string} operator operator name (i.e. anyOf, contains, lessThan, etc..)\n * @param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "internal ID for joined search where this filter is defined\n *",
                            "theRestString": "@param {string} operator operator name (i.e. anyOf, contains, lessThan, etc..)\n * @param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "operator",
                            "text": "operator name (i.e. anyOf, contains, lessThan, etc..)\n *",
                            "theRestString": "@param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string|Array<string>}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value2",
                            "text": "*",
                            "theRestString": "@return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSearchFilter}",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        453444,
                        453924
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "filter name.\n *",
                            "theRestString": "@param {string} join internal ID for joined search where this filter is defined\n * @param {string} operator operator name (i.e. anyOf, contains, lessThan, etc..)\n * @param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "internal ID for joined search where this filter is defined\n *",
                            "theRestString": "@param {string} operator operator name (i.e. anyOf, contains, lessThan, etc..)\n * @param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "operator",
                            "text": "operator name (i.e. anyOf, contains, lessThan, etc..)\n *",
                            "theRestString": "@param {string|Array<string>} value\n * @param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string|Array<string>}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@param {string} value2\n * @return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value2",
                            "text": "*",
                            "theRestString": "@return {nlobjSearchFilter}\n *\n * @since 2007.0"
                        }
                    ],
                    "throws": []
                }
            ],
            "methods": {
                "getName": {
                    "annotation": "method",
                    "name": "getName",
                    "text": "Return the name of this search filter.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchFilter\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchFilter",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        453998,
                        454141
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getJoin": {
                    "annotation": "method",
                    "name": "getJoin",
                    "text": "Return the join id for this search filter.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchFilter\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchFilter",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        454199,
                        454346
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getOperator": {
                    "annotation": "method",
                    "name": "getOperator",
                    "text": "Return the filter operator used.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchFilter\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchFilter",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        454404,
                        454545
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjSearchColumn": {
            "annotation": "class",
            "name": "nlobjSearchColumn",
            "text": "search column.\n *",
            "commentRange": [
                454607,
                454983
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjSearchColumn",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjSearchColumn used for column objects used to define search return columns.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjSearchColumn}",
                            "text": "*",
                            "theRestString": "@param {string} name column name.\n * @param {string} join internal ID for joined search where this column is defined\n * @param {string} summary\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "column name.\n *",
                            "theRestString": "@param {string} join internal ID for joined search where this column is defined\n * @param {string} summary\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "internal ID for joined search where this column is defined\n *",
                            "theRestString": "@param {string} summary\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "summary",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        454607,
                        454983
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "column name.\n *",
                            "theRestString": "@param {string} join internal ID for joined search where this column is defined\n * @param {string} summary\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "internal ID for joined search where this column is defined\n *",
                            "theRestString": "@param {string} summary\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "summary",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        }
                    ],
                    "throws": []
                }
            ],
            "methods": {
                "getName": {
                    "annotation": "method",
                    "name": "getName",
                    "text": "return the name of this search column.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        455041,
                        455181
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getJoin": {
                    "annotation": "method",
                    "name": "getJoin",
                    "text": "return the join id for this search column.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        455239,
                        455383
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLabel": {
                    "annotation": "method",
                    "name": "getLabel",
                    "text": "return the label of this search column.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        455441,
                        455586
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSummary": {
                    "annotation": "method",
                    "name": "getSummary",
                    "text": "return the summary type (avg,group,sum,count) of this search column.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        455645,
                        455818
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFormula": {
                    "annotation": "method",
                    "name": "getFormula",
                    "text": "return formula for this search column.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        455879,
                        456025
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSort": {
                    "annotation": "method",
                    "name": "setSort",
                    "text": "return nlobjSearchColumn sorted in either ascending or descending order.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjSearchColumn}",
                            "text": "*",
                            "theRestString": "@param {boolean} sort if not set, defaults to false, which returns column data in ascending order.\n *\n * \n * @memberOf nlobjSearchColumn\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "sort",
                            "text": "if not set, defaults to false, which returns column data in ascending order.\n *\n * \n *",
                            "theRestString": "@memberOf nlobjSearchColumn\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        456086,
                        456376
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjSearchResult": {
            "annotation": "class",
            "name": "nlobjSearchResult",
            "text": "Class definition for interacting with the results of a search operation\n *",
            "commentRange": [
                456440,
                456679
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjSearchResult",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjSearchResult}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        456440,
                        456679
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "return the internalId for the record returned in this row.\n * \n *",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchResult",
                            "text": "*",
                            "theRestString": "@return {int}"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        456717,
                        456852
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRecordType": {
                    "annotation": "method",
                    "name": "getRecordType",
                    "text": "return the recordtype for the record returned in this row.\n * \n *",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchResult",
                            "text": "*",
                            "theRestString": "@return {string}"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        456908,
                        457054
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getValue": {
                    "annotation": "method",
                    "name": "getValue",
                    "text": "return the value for a return column specified by name, join ID, and summary type.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the search column\n *",
                            "theRestString": "@param {string} join the join ID for the search column\n * @param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "the join ID for the search column\n *",
                            "theRestString": "@param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "summary",
                            "text": "summary type specified for this column\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchResult",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        457392,
                        457758
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getText": {
                    "annotation": "method",
                    "name": "getText",
                    "text": "return the text value of this return column if it's a select field.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the search column\n *",
                            "theRestString": "@param {string} join the join ID for the search column\n * @param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "join",
                            "text": "the join ID for the search column\n *",
                            "theRestString": "@param {string} summary summary type specified for this column\n * @return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "summary",
                            "text": "summary type specified for this column\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchResult\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchResult",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        458142,
                        458492
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllColumns": {
                    "annotation": "method",
                    "name": "getAllColumns",
                    "text": "return an array of all nlobjSearchColumn objects returned in this search.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<nlobjSearchColumn>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSearchResult\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSearchResult",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        458570,
                        458772
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjContext": {
            "annotation": "class",
            "name": "nlobjContext",
            "text": "Utility class providing information about the current user and the script runtime. Return a new instance of nlobjContext used for user and script context information.\n *",
            "children": [
                {
                    "annotation": "return",
                    "type": "{nlobjContext}",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                458836,
                459066
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjContext",
            "methods": {
                "getName": {
                    "annotation": "method",
                    "name": "getName",
                    "text": "return the name of the current user.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        459098,
                        459234
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getUser": {
                    "annotation": "method",
                    "name": "getUser",
                    "text": "return the internalId of the current user.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        459287,
                        459429
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRole": {
                    "annotation": "method",
                    "name": "getRole",
                    "text": "return the internalId of the current user's role.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        459482,
                        459631
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRoleId": {
                    "annotation": "method",
                    "name": "getRoleId",
                    "text": "return the script ID of the current user's role.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        459684,
                        459834
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRoleCenter": {
                    "annotation": "method",
                    "name": "getRoleCenter",
                    "text": "return the internalId of the current user's center type.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        459889,
                        460051
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getEmail": {
                    "annotation": "method",
                    "name": "getEmail",
                    "text": "return the email address of the current user.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        460110,
                        460256
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getContact": {
                    "annotation": "method",
                    "name": "getContact",
                    "text": "return the internal ID of the contact logged in on behalf of a customer, vendor, or partner. It returns -1 for non-contact logins\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        460310,
                        460539
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCompany": {
                    "annotation": "method",
                    "name": "getCompany",
                    "text": "return the account ID of the current user.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        460595,
                        460740
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getDepartment": {
                    "annotation": "method",
                    "name": "getDepartment",
                    "text": "return the internalId of the current user's department.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        460796,
                        460954
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLocation": {
                    "annotation": "method",
                    "name": "getLocation",
                    "text": "return the internalId of the current user's location.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        461013,
                        461167
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSubsidiary": {
                    "annotation": "method",
                    "name": "getSubsidiary",
                    "text": "return the internalId of the current user's subsidiary.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        461224,
                        461382
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getExecutionContext": {
                    "annotation": "method",
                    "name": "getExecutionContext",
                    "text": "return the execution context for this script: webServices|csvImport|client|userInterface|scheduledScript|portlet|suitelet|debugger|custommassupdate\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        461441,
                        461700
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRemainingUsage": {
                    "annotation": "method",
                    "name": "getRemainingUsage",
                    "text": "return the amount of usage units remaining for this script.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2007.0"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2007.0"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        461765,
                        461931
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFeature": {
                    "annotation": "method",
                    "name": "getFeature",
                    "text": "return true if feature is enabled, false otherwise\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {boolean}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        461994,
                        462172
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getPermission": {
                    "annotation": "method",
                    "name": "getPermission",
                    "text": "return current user's permission level (0-4) for this permission\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        462233,
                        462424
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getPreference": {
                    "annotation": "method",
                    "name": "getPreference",
                    "text": "return system or script preference selection for current user\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        462488,
                        462679
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSessionObject": {
                    "annotation": "method",
                    "name": "getSessionObject",
                    "text": "return value of session object set by script\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        462743,
                        462920
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSessionObject": {
                    "annotation": "method",
                    "name": "setSessionObject",
                    "text": "get the value of a session object using a key.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@param {string} value\n * @return {void}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        462987,
                        463189
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllSessionObjects": {
                    "annotation": "method",
                    "name": "getAllSessionObjects",
                    "text": "return an array containing the names of all keys used to set session objects\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        463263,
                        463459
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getVersion": {
                    "annotation": "method",
                    "name": "getVersion",
                    "text": "return the NetSuite version for the current account\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        463524,
                        463678
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getEnvironment": {
                    "annotation": "method",
                    "name": "getEnvironment",
                    "text": "return the environment that the script is executing in: SANDBOX, PRODUCTION, BETA, INTERNAL\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        463735,
                        463877
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLogLevel": {
                    "annotation": "method",
                    "name": "getLogLevel",
                    "text": "return the logging level for the current script execution. Not supported in CLIENT scripts\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        463938,
                        464076
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getScriptId": {
                    "annotation": "method",
                    "name": "getScriptId",
                    "text": "return the script ID for the current script\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        464134,
                        464277
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getDeploymentId": {
                    "annotation": "method",
                    "name": "getDeploymentId",
                    "text": "return the deployment ID for the current script\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        464335,
                        464490
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getPercentComplete": {
                    "annotation": "method",
                    "name": "getPercentComplete",
                    "text": "return the % complete specified for the current scheduled script execution\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        464552,
                        464734
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setPercentComplete": {
                    "annotation": "method",
                    "name": "setPercentComplete",
                    "text": "set the % complete for the current scheduled script execution\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{float}",
                            "name": "ct",
                            "text": "the percentage of records completed\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        464799,
                        465026
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSetting": {
                    "annotation": "method",
                    "name": "getSetting",
                    "text": "return a system/script setting. Types are SCRIPT, SESSION, FEATURE, PERMISSION\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "*",
                            "theRestString": "@param {string} name\n * @since 2007.0\n * @deprecated dummy"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@since 2007.0\n * @deprecated dummy"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "*",
                            "theRestString": "@deprecated dummy"
                        },
                        {
                            "annotation": "deprecated",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        465094,
                        465285
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSetting": {
                    "annotation": "method",
                    "name": "setSetting",
                    "text": "set a system/script setting. Only supported type is SESSION\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "*",
                            "theRestString": "@param {string} name\n * @param {string} value\n * @since 2007.0\n * @deprecated dummy"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@param {string} value\n * @since 2007.0\n * @deprecated dummy"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@since 2007.0\n * @deprecated dummy"
                        },
                        {
                            "annotation": "since",
                            "name": "2007.0",
                            "text": "*",
                            "theRestString": "@deprecated dummy"
                        },
                        {
                            "annotation": "deprecated",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        465352,
                        465549
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getColorPreferences": {
                    "annotation": "method",
                    "name": "getColorPreferences",
                    "text": "return an Object containing name/value pairs of color groups to their corresponding RGB hex color based on the currenly logged in user's color them preferences.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2010.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        465623,
                        465895
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRuntimeVersion": {
                    "annotation": "method",
                    "name": "getRuntimeVersion",
                    "text": "return the runtime version of SuiteScript, could be 1.0 or 2.0\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjContext\n *\n * @since 2014.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjContext",
                            "text": "*\n *",
                            "theRestString": "@since 2014.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2014.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        465959,
                        466131
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjError": {
            "annotation": "class",
            "name": "nlobjError",
            "text": "Encapsulation of errors thrown during script execution.\n *",
            "commentRange": [
                466194,
                466403
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjError",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjError used system or user-defined error object.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjError}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        466194,
                        466403
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "return the error db ID for this error (if it was an unhandled unexpected error).\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        466434,
                        466610
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCode": {
                    "annotation": "method",
                    "name": "getCode",
                    "text": "return the error code for this system or user-defined error.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        466659,
                        466817
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getDetails": {
                    "annotation": "method",
                    "name": "getDetails",
                    "text": "return the error description for this error.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        466868,
                        467013
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getStackTrace": {
                    "annotation": "method",
                    "name": "getStackTrace",
                    "text": "return a stacktrace containing the location of the error.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        467067,
                        467235
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getUserEvent": {
                    "annotation": "method",
                    "name": "getUserEvent",
                    "text": "return the userevent script name where this error was thrown.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        467292,
                        467456
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getInternalId": {
                    "annotation": "method",
                    "name": "getInternalId",
                    "text": "return the internalid of the record if this error was thrown in an aftersubmit script.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjError\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjError",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        467512,
                        467699
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjServerResponse": {
            "annotation": "class",
            "name": "nlobjServerResponse",
            "text": "Contains the results of a server response to an outbound Http(s) call.\n *",
            "commentRange": [
                467756,
                467987
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjServerResponse",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjServerResponse..\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjServerResponse}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        467756,
                        467987
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getContentType": {
                    "annotation": "method",
                    "name": "getContentType",
                    "text": "return the Content-Type header in response\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        468027,
                        468183
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getHeader": {
                    "annotation": "method",
                    "name": "getHeader",
                    "text": "return the value of a header returned.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the header to return\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        468250,
                        468454
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getHeaders": {
                    "annotation": "method",
                    "name": "getHeaders",
                    "text": "return all the values of a header returned.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the header to return\n *",
                            "theRestString": "@return {Array<string>}\n *\n * \n * @memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        468519,
                        468736
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllHeaders": {
                    "annotation": "method",
                    "name": "getAllHeaders",
                    "text": "return an Array of all headers returned.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{array<string>}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        468802,
                        468962
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCode": {
                    "annotation": "method",
                    "name": "getCode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        469028,
                        469166
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getBody": {
                    "annotation": "method",
                    "name": "getBody",
                    "text": "return the response body returned.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        469226,
                        469367
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getError": {
                    "annotation": "method",
                    "name": "getError",
                    "text": "return the nlobjError thrown via a client call to nlapiRequestURL.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjError}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjServerResponse\n *\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjServerResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        469427,
                        469605
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRecord": {
                    "annotation": "method",
                    "name": "addRecord",
                    "text": "add a record for to a template engine\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[recordName] name of record used as a reference in template.\n *",
                            "theRestString": "@param  {nlobjRecord} record to add to template engine\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "record",
                            "text": "to add to template engine\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjTemplateRenderer",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        469667,
                        469935
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSearchResults": {
                    "annotation": "method",
                    "name": "addSearchResults",
                    "text": "add search results to a template engine\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[searchName] name of search results used as a reference in template.\n *",
                            "theRestString": "@param {Array<nlobjSearchResults>} [results] An array of nlobjSearchResult objects.\n * @return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array<nlobjSearchResults>}",
                            "text": "[results] An array of nlobjSearchResult objects.\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjTemplateRenderer",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        470006,
                        470319
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setTemplateset": {
                    "annotation": "method",
                    "name": "setTemplateset",
                    "text": "the template xml in the template engine\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "xml",
                            "text": "BFO template\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjTemplateRenderer\n *"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjTemplateRenderer",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        470410,
                        470583
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "renderToResponse": {
                    "annotation": "method",
                    "name": "renderToResponse",
                    "text": "render the output of the template engine into the response\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjResponse}",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjTemplateRenderer"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjTemplateRenderer"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjTemplateRenderer",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        470653,
                        470833
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setEntity": {
                    "annotation": "method",
                    "name": "setEntity",
                    "text": "associate an entity to the merger\n*",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "entityType",
                            "text": "type of the entity (customer/contact/partner/vendor/employee)\n *",
                            "theRestString": "@param  {int} entityId ID of the entity to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "entityId",
                            "text": "ID of the entity to be associated with the merger\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        470917,
                        471203
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setRecipient": {
                    "annotation": "method",
                    "name": "setRecipient",
                    "text": "associate a second entity (recipient) to the merger\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "recipientType",
                            "text": "type of the entity (customer/contact/partner/vendor/employee)\n *",
                            "theRestString": "@param  {int} recipientId ID of the entity to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "recipientId",
                            "text": "ID of the entity to be associated with the merger\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        471283,
                        471596
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSupportCase": {
                    "annotation": "method",
                    "name": "setSupportCase",
                    "text": "associate a support case to the merger\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "caseId",
                            "text": "ID of the support case to be associated with the merger\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        471685,
                        471892
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setTransaction": {
                    "annotation": "method",
                    "name": "setTransaction",
                    "text": "associate a transaction to the merger\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "transactionId",
                            "text": "ID of the transaction to be associated with the merger\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        471963,
                        472175
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCustomRecord": {
                    "annotation": "method",
                    "name": "setCustomRecord",
                    "text": "associate a custom record to the merger\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "recordType",
                            "text": "type of the custom record\n *",
                            "theRestString": "@param  {int} recordId ID of the record to be associated with the merger\n * @return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "recordId",
                            "text": "ID of the record to be associated with the merger\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        472253,
                        472516
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "merge": {
                    "annotation": "method",
                    "name": "merge",
                    "text": "perform the merge and return an object containing email subject and body\n *",
                    "children": [
                        {
                            "annotation": "governance",
                            "name": "20",
                            "text": "units\n *",
                            "theRestString": "@return {object} pure javascript object with two properties: subject and body\n *\n * \n * @memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "return",
                            "type": "{object}",
                            "name": "pure",
                            "text": "javascript object with two properties: subject and body\n *\n * \n *",
                            "theRestString": "@memberOf nlobjEmailMerger"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjEmailMerger",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        472602,
                        472841
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjResponse": {
            "annotation": "class",
            "name": "nlobjResponse",
            "text": "Accessor to Http response made available to Suitelets.\n *",
            "commentRange": [
                472896,
                473117
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjResponse",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjResponse used for scripting web responses in Suitelets\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjResponse}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        472896,
                        473117
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "addHeader": {
                    "annotation": "method",
                    "name": "addHeader",
                    "text": "add a value for a response header.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "of header\n *",
                            "theRestString": "@param  {string} value for header\n * @return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "for header\n *",
                            "theRestString": "@return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        473151,
                        473359
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHeader": {
                    "annotation": "method",
                    "name": "setHeader",
                    "text": "set the value of a response header.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "of header\n *",
                            "theRestString": "@param  {string} value for header\n * @return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "for header\n *",
                            "theRestString": "@return  {void}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        473427,
                        473636
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getHeader": {
                    "annotation": "method",
                    "name": "getHeader",
                    "text": "return the value of a response header.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "of header\n *",
                            "theRestString": "@return  {string}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        473704,
                        473881
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getHeaders": {
                    "annotation": "method",
                    "name": "getHeaders",
                    "text": "return an Array of all response header values for a header\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "of header\n *",
                            "theRestString": "@return  {Array<string>}\n *\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        473937,
                        474142
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllHeaders": {
                    "annotation": "method",
                    "name": "getAllHeaders",
                    "text": "return an Array of all response headers\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object<String,String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        474204,
                        474366
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "sendNoCache": {
                    "annotation": "method",
                    "name": "sendNoCache",
                    "text": "suppress caching for this response.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        474426,
                        474565
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setContentType": {
                    "annotation": "method",
                    "name": "setContentType",
                    "text": "sets the content type for the response (and an optional filename for binary output).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "the file type i.e. plainText, word, pdf, htmldoc (see list of media item types)\n *",
                            "theRestString": "@param {string} filename the file name\n * @param {string} disposition Content Disposition used for streaming attachments: inline|attachment\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "filename",
                            "text": "the file name\n *",
                            "theRestString": "@param {string} disposition Content Disposition used for streaming attachments: inline|attachment\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "disposition",
                            "text": "Content Disposition used for streaming attachments: inline|attachment\n *",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        474623,
                        475060
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "sendRedirect": {
                    "annotation": "method",
                    "name": "sendRedirect",
                    "text": "sets the redirect URL for the response. all URLs must be internal unless the Suitelet is being executed in an \"Available without Login\" context\n *  at which point it can use type \"external\" to specify an external url via the subtype arg\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "type specifier for URL: suitelet|tasklink|record|mediaitem|external\n *",
                            "theRestString": "@param {string} subtype subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid|url\n * @param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "subtype",
                            "text": "subtype specifier for URL (corresponding to type): scriptid|taskid|recordtype|mediaid|url\n *",
                            "theRestString": "@param {string} [id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n * @param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[id] internal ID specifier (sub-subtype corresponding to type): deploymentid|n/a|recordid|n/a\n *",
                            "theRestString": "@param {string} [pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n * @param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[pagemode] string specifier used to configure page (suitelet: external|internal, tasklink|record: edit|view)\n *",
                            "theRestString": "@param {Object} [parameters] Object used to specify additional URL parameters as name/value pairs\n * @return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "text": "[parameters] Object used to specify additional URL parameters as name/value pairs\n *",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        475149,
                        476040
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "write": {
                    "annotation": "method",
                    "name": "write",
                    "text": "write information (text/xml/html) to the response.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "output",
                            "text": "*",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        476139,
                        476312
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "writeLine": {
                    "annotation": "method",
                    "name": "writeLine",
                    "text": "write line information (text/xml/html) to the response.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "output",
                            "text": "*",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        476371,
                        476553
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "writePage": {
                    "annotation": "method",
                    "name": "writePage",
                    "text": "write a UI object page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "pageobject",
                            "text": "page UI object: nlobjList|nlobjAssistant|nlobjForm|nlobjDashboard\n *",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        476616,
                        476836
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setEncoding": {
                    "annotation": "method",
                    "name": "setEncoding",
                    "text": "sets the character encoding for the response.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "encoding",
                            "text": "*",
                            "theRestString": "@return {void}\n * \n * @memberOf nlobjResponse\n *\n * @since 2012.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjResponse\n *\n * @since 2012.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjResponse",
                            "text": "*\n *",
                            "theRestString": "@since 2012.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2012.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        476903,
                        477076
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjRequest": {
            "annotation": "class",
            "name": "nlobjRequest",
            "text": "Accessor to Http request data made available to Suitelets\n * \n *",
            "commentRange": [
                477144,
                477366
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
                "commentRange": [
                    429518,
                    429985
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjRequest",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjRequest used for scripting web requests in Suitelets",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjRequest}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        477144,
                        477366
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "getParameter": {
                    "annotation": "method",
                    "name": "getParameter",
                    "text": "return the value of a request parameter.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "parameter name\n *",
                            "theRestString": "@return {string}\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        477399,
                        477583
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getParameterValues": {
                    "annotation": "method",
                    "name": "getParameterValues",
                    "text": "return the values of a request parameter as an Array.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "parameter name\n *",
                            "theRestString": "@return {Array<string>}\n *\n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        477646,
                        477856
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllParameters": {
                    "annotation": "method",
                    "name": "getAllParameters",
                    "text": "return an Object containing all the request parameters and their values.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object<String,String>}",
                            "text": "* \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        477925,
                        478118
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemValue": {
                    "annotation": "method",
                    "name": "getLineItemValue",
                    "text": "return the value of a sublist value.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname  sublist field name\n * @param {int} \tline  sublist line number\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline  sublist line number\n * @return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "sublist line number\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        478180,
                        478452
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemCount": {
                    "annotation": "method",
                    "name": "getLineItemCount",
                    "text": "return the number of lines in a sublist.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        478532,
                        478716
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getHeader": {
                    "annotation": "method",
                    "name": "getHeader",
                    "text": "return the value of a request header.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        478784,
                        478947
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllHeaders": {
                    "annotation": "method",
                    "name": "getAllHeaders",
                    "text": "return an Object containing all the request headers and their values.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        479007,
                        479182
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFile": {
                    "annotation": "method",
                    "name": "getFile",
                    "text": "return the value of an uploaded file.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "file field name\n *",
                            "theRestString": "@return {nlobjFile}\n *\n * \n * @memberOf nlobjRequest\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFile}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        479241,
                        479421
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFiles": {
                    "annotation": "method",
                    "name": "getAllFiles",
                    "text": "return an Object containing field names to file objects for all uploaded files.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Object<String,String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n *\n * @since 2009.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*\n *",
                            "theRestString": "@since 2009.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        479479,
                        479677
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getBody": {
                    "annotation": "method",
                    "name": "getBody",
                    "text": "return the body of the POST request\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        479734,
                        479866
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getURL": {
                    "annotation": "method",
                    "name": "getURL",
                    "text": "return the URL of the request\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        479919,
                        480044
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMethod": {
                    "annotation": "method",
                    "name": "getMethod",
                    "text": "return the METHOD of the request\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjRequest\n * @since 2008.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjRequest",
                            "text": "*",
                            "theRestString": "@since 2008.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        480096,
                        480227
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjPortlet": {
            "annotation": "class",
            "name": "nlobjPortlet",
            "text": "UI Object used for building portlets that are displayed on dashboard pages\n *\n *",
            "commentRange": [
                480823,
                481055
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjPortlet",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjPortlet used for scriptable dashboard portlet.",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjPortlet}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        480823,
                        481055
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "setTitle": {
                    "annotation": "method",
                    "name": "setTitle",
                    "text": "set the portlet title.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        481088,
                        481183
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHtml": {
                    "annotation": "method",
                    "name": "setHtml",
                    "text": "set the entire contents of the HTML portlet (will be placed inside a <TD>...</TD>).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "html",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        481243,
                        481397
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addColumn": {
                    "annotation": "method",
                    "name": "addColumn",
                    "text": "add a column (nlobjColumn) to this LIST portlet and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "column name\n *",
                            "theRestString": "@param {string} type column type\n * @param {string} label column label\n * @param {string} [align] column alignment\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "column type\n *",
                            "theRestString": "@param {string} label column label\n * @param {string} [align] column alignment\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "column label\n *",
                            "theRestString": "@param {string} [align] column alignment\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[align] column alignment\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        481455,
                        481720
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addEditColumn": {
                    "annotation": "method",
                    "name": "addEditColumn",
                    "text": "add an Edit column (nlobjColumn) to the left of the column specified (supported on LIST portlets only).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjColumn}",
                            "name": "column",
                            "text": "*",
                            "theRestString": "@param {boolean} showView should Edit|View instead of Edit link\n * @param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "showView",
                            "text": "should Edit|View instead of Edit link\n *",
                            "theRestString": "@param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n *",
                            "theRestString": "@return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjColumn}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        481800,
                        482208
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRow": {
                    "annotation": "method",
                    "name": "addRow",
                    "text": "add a row (nlobjSearchResult or Array of name-value pairs) to this LIST portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>|nlobjSearchResult}",
                            "name": "row",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        482294,
                        482468
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRows": {
                    "annotation": "method",
                    "name": "addRows",
                    "text": "add multiple rows (Array of nlobjSearchResults or name-value pair Arrays) to this LIST portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Array<string>>|Array<nlobjSearchResult>}",
                            "name": "rows",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        482524,
                        482729
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addField": {
                    "annotation": "method",
                    "name": "addField",
                    "text": "add a field (nlobjField) to this FORM portlet and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} type field type\n * @param {string} [label] field label\n * @param {string|int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "field type\n *",
                            "theRestString": "@param {string} [label] field label\n * @param {string|int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] field label\n *",
                            "theRestString": "@param {string|int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string|int}",
                            "text": "[source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        482787,
                        483169
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSubmitButton": {
                    "annotation": "method",
                    "name": "setSubmitButton",
                    "text": "add a FORM submit button to this FORM portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "url",
                            "text": "URL that this form portlet will POST to\n *",
                            "theRestString": "@param {string} [label] label for submit button (defaults to Save)\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] label for submit button (defaults to Save)\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        483246,
                        483480
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addLine": {
                    "annotation": "method",
                    "name": "addLine",
                    "text": "add a line (containing text or simple HTML) with optional indenting and URL to this LINKS portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "data to output to line\n *",
                            "theRestString": "@param {string} \t[url] URL if this line should be clickable (if NULL then line will not be clickable)\n * @param {int} \tindent # of indents to insert before text\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[url] URL if this line should be clickable (if NULL then line will not be clickable)\n *",
                            "theRestString": "@param {int} \tindent # of indents to insert before text\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "indent",
                            "text": "# of indents to insert before text\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        483552,
                        483909
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjList": {
            "annotation": "class",
            "name": "nlobjList",
            "text": "UI Object page type used for building lists\n *",
            "commentRange": [
                483980,
                484163
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjList",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjList used for scriptable list page.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjList}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        483980,
                        484163
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "setTitle": {
                    "annotation": "method",
                    "name": "setTitle",
                    "text": "set the page title.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        484193,
                        484285
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setStyle": {
                    "annotation": "method",
                    "name": "setStyle",
                    "text": "set the global style for this list: grid|report|plain|normal.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "style",
                            "text": "overall style used to render list\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        484342,
                        484510
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setScript": {
                    "annotation": "method",
                    "name": "setScript",
                    "text": "set the Client SuiteScript used for this page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "script",
                            "text": "script ID or internal ID for global client script used to enable Client SuiteScript on page\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        484567,
                        484786
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addColumn": {
                    "annotation": "method",
                    "name": "addColumn",
                    "text": "add a column (nlobjColumn) to this list and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "column name\n *",
                            "theRestString": "@param {string} type column type\n * @param {string} label column label\n * @param {string} [align] column alignment\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "column type\n *",
                            "theRestString": "@param {string} label column label\n * @param {string} [align] column alignment\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "column label\n *",
                            "theRestString": "@param {string} [align] column alignment\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[align] column alignment\n *",
                            "theRestString": "@return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjColumn}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        484845,
                        485130
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addEditColumn": {
                    "annotation": "method",
                    "name": "addEditColumn",
                    "text": "add an Edit column (nlobjColumn) to the left of the column specified.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjColumn}",
                            "name": "column",
                            "text": "*",
                            "theRestString": "@param {boolean} showView should Edit|View instead of Edit link\n * @param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "showView",
                            "text": "should Edit|View instead of Edit link\n *",
                            "theRestString": "@param {string} \t[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n * @return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[showHref] column that evaluates to T or F that determines whether to disable the edit|view link per-row.\n *",
                            "theRestString": "@return {nlobjColumn}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjColumn}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        485207,
                        485581
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRow": {
                    "annotation": "method",
                    "name": "addRow",
                    "text": "add a row (Array of name-value pairs or nlobjSearchResult) to this portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>|nlobjSearchResult}",
                            "name": "row",
                            "text": "data used to add a single row\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        485664,
                        485863
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRows": {
                    "annotation": "method",
                    "name": "addRows",
                    "text": "add multiple rows (Array of nlobjSearchResults or name-value pair Arrays) to this portlet.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>|Array<nlobjSearchResult>}",
                            "name": "rows",
                            "text": "data used to add multiple rows\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        485916,
                        486140
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addButton": {
                    "annotation": "method",
                    "name": "addButton",
                    "text": "add a button (nlobjButton) to the footer of this page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "button name\n *",
                            "theRestString": "@param {string} label button label\n * @param {string} script button script (function name)\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "button label\n *",
                            "theRestString": "@param {string} script button script (function name)\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "script",
                            "text": "button script (function name)\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        486195,
                        486428
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addPageLink": {
                    "annotation": "method",
                    "name": "addPageLink",
                    "text": "add a navigation cross-link to the page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "page link type: crosslink|breadcrumb\n *",
                            "theRestString": "@param {string} title page link title\n * @param {string} url URL for page link\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "page link title\n *",
                            "theRestString": "@param {string} url URL for page link\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "url",
                            "text": "URL for page link\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        486500,
                        486734
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjForm": {
            "annotation": "class",
            "name": "nlobjForm",
            "text": "UI Object page type used for building basic data entry forms.\n *",
            "commentRange": [
                486805,
                486999
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjForm",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjForm used for scriptable form page.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjForm}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        486805,
                        486999
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "setTitle": {
                    "annotation": "method",
                    "name": "setTitle",
                    "text": "set the page title.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        487029,
                        487121
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addTitleHtml": {
                    "annotation": "method",
                    "name": "addTitleHtml",
                    "text": "set additional title Html. INTERNAL ONLY\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        487178,
                        487295
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setScript": {
                    "annotation": "method",
                    "name": "setScript",
                    "text": "set the Client Script definition used for this page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "script",
                            "text": "script ID or internal ID for global client script used to enable Client SuiteScript on page\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        487355,
                        487579
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValues": {
                    "annotation": "method",
                    "name": "setFieldValues",
                    "text": "set the values for all the fields on this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "values",
                            "text": "Object containing field name/value pairs\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        487638,
                        487806
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addPageLink": {
                    "annotation": "method",
                    "name": "addPageLink",
                    "text": "add a navigation cross-link to the page.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "page link type: crosslink|breadcrumb\n *",
                            "theRestString": "@param {string} title page link title\n * @param {string} url URL for page link\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "page link title\n *",
                            "theRestString": "@param {string} url URL for page link\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "url",
                            "text": "URL for page link\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        487870,
                        488104
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addButton": {
                    "annotation": "method",
                    "name": "addButton",
                    "text": "add a button to this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "button name\n *",
                            "theRestString": "@param {string} label button label\n * @param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "button label\n *",
                            "theRestString": "@param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "script",
                            "text": "button script (function name)\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        488175,
                        488408
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getButton": {
                    "annotation": "method",
                    "name": "getButton",
                    "text": "get a button from this form by name.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "*",
                            "theRestString": "@return {nlobjButton}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        488480,
                        488729
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "undefined": {
                    "annotation": "method",
                    "text": "*",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjForm",
                            "text": "*\n *",
                            "theRestString": "@since 2012.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2012.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        494144,
                        494294
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addResetButton": {
                    "annotation": "method",
                    "name": "addResetButton",
                    "text": "add a reset button to this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] label for this button. defaults to \"Reset\"\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        488786,
                        488970
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSubmitButton": {
                    "annotation": "method",
                    "name": "addSubmitButton",
                    "text": "add a submit button to this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] label for this submit button. defaults to \"Save\"\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        489033,
                        489225
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addTab": {
                    "annotation": "method",
                    "name": "addTab",
                    "text": "add a tab (nlobjTab) to this form and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "tab name\n *",
                            "theRestString": "@param {string} label tab label\n * @return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "tab label\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        489289,
                        489476
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addField": {
                    "annotation": "method",
                    "name": "addField",
                    "text": "add a field (nlobjField) to this form and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} type field type\n * @param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "field type\n *",
                            "theRestString": "@param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] field label\n *",
                            "theRestString": "@param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "text": "[source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n *",
                            "theRestString": "@param {string} [tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[tab] tab name that this field will live on. If empty then the field is added to the main section of the form (immediately below the title bar)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        489537,
                        490075
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addCredentialField": {
                    "annotation": "method",
                    "name": "addCredentialField",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "name",
                            "text": "",
                            "theRestString": "@param {String} label @param {String} scriptId @param {String} value @param {String} entityMatch @param {String} tab"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "label",
                            "text": "",
                            "theRestString": "@param {String} scriptId @param {String} value @param {String} entityMatch @param {String} tab"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "scriptId",
                            "text": "",
                            "theRestString": "@param {String} value @param {String} entityMatch @param {String} tab"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "value",
                            "text": "",
                            "theRestString": "@param {String} entityMatch @param {String} tab"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "entityMatch",
                            "text": "",
                            "theRestString": "@param {String} tab"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "tab",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        490160,
                        490329
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSubTab": {
                    "annotation": "method",
                    "name": "addSubTab",
                    "text": "add a subtab (nlobjTab) to this form and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "subtab name\n *",
                            "theRestString": "@param {string} label subtab label\n * @param {string} [tab] parent tab that this subtab lives on. If empty, it is added to the main tab.\n * @return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "subtab label\n *",
                            "theRestString": "@param {string} [tab] parent tab that this subtab lives on. If empty, it is added to the main tab.\n * @return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[tab] parent tab that this subtab lives on. If empty, it is added to the main tab.\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        490635,
                        490936
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSubList": {
                    "annotation": "method",
                    "name": "addSubList",
                    "text": "add a sublist (nlobjSubList) to this form and return it.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} type sublist type: inlineeditor|editor|list|staticlist\n * @param {string} label sublist label\n * @param {string} [tab] parent tab that this sublist lives on. If empty, it is added to the main tab\n * @return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist type: inlineeditor|editor|list|staticlist\n *",
                            "theRestString": "@param {string} label sublist label\n * @param {string} [tab] parent tab that this sublist lives on. If empty, it is added to the main tab\n * @return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "sublist label\n *",
                            "theRestString": "@param {string} [tab] parent tab that this sublist lives on. If empty, it is added to the main tab\n * @return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[tab] parent tab that this sublist lives on. If empty, it is added to the main tab\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        491003,
                        491390
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "insertTab": {
                    "annotation": "method",
                    "name": "insertTab",
                    "text": "insert a tab (nlobjTab) before another tab (name).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjTab}",
                            "name": "tab",
                            "text": "the tab object to insert\n *",
                            "theRestString": "@param {string} \t\tnexttab the name of the tab before which to insert this tab\n * @return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "nexttab",
                            "text": "the name of the tab before which to insert this tab\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        491463,
                        491720
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "insertField": {
                    "annotation": "method",
                    "name": "insertField",
                    "text": "insert a field (nlobjField) before another field (name).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjField}",
                            "name": "field",
                            "text": "the field object to insert\n *",
                            "theRestString": "@param {string} \t\tnextfld the name of the field before which to insert this field\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "nextfld",
                            "text": "the name of the field before which to insert this field\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        491785,
                        492061
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "insertSubTab": {
                    "annotation": "method",
                    "name": "insertSubTab",
                    "text": "insert a subtab (nlobjTab) before another subtab or sublist (name).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjTab}",
                            "name": "subtab",
                            "text": "the subtab object to insert\n *",
                            "theRestString": "@param {string} \tnextsubtab the name of the subtab before which to insert this subtab\n * @return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "nextsubtab",
                            "text": "the name of the subtab before which to insert this subtab\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        492130,
                        492419
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "insertSubList": {
                    "annotation": "method",
                    "name": "insertSubList",
                    "text": "insert a sublist (nlobjSubList) before another subtab or sublist (name).\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjSubList}",
                            "name": "sublist",
                            "text": "the sublist object to insert\n *",
                            "theRestString": "@param {string} \t\tnextsublist the name of the sublist before which to insert this sublist\n * @return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "nextsublist",
                            "text": "the name of the sublist before which to insert this sublist\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        492493,
                        492802
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getTab": {
                    "annotation": "method",
                    "name": "getTab",
                    "text": "return a tab (nlobjTab) on this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "tab name\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        492879,
                        493020
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getField": {
                    "annotation": "method",
                    "name": "getField",
                    "text": "return a field (nlobjField) on this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} [radio] if this is a radio field, specify which radio field to return based on radio value\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[radio] if this is a radio field, specify which radio field to return based on radio value\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        493074,
                        493335
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSubTab": {
                    "annotation": "method",
                    "name": "getSubTab",
                    "text": "return a subtab (nlobjTab) on this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "subtab name\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        493398,
                        493548
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSubList": {
                    "annotation": "method",
                    "name": "getSubList",
                    "text": "return a sublist (nlobjSubList) on this form.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist name\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        493605,
                        493766
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addFieldGroup": {
                    "annotation": "method",
                    "name": "addFieldGroup",
                    "text": "add a field group to the form.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field group name\n *",
                            "theRestString": "@param {string} label field group label\n * @param tab\n * @return {nlobjFieldGroup}\n *\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "field group label\n *",
                            "theRestString": "@param tab\n * @return {nlobjFieldGroup}\n *\n *"
                        },
                        {
                            "annotation": "param",
                            "name": "tab",
                            "text": "*",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        493824,
                        494071
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getTabs": {
                    "annotation": "method",
                    "name": "getTabs",
                    "text": "get a list of all tabs.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "an",
                            "text": "array with names of all tabs\n *\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        494144,
                        494294
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjAssistant": {
            "annotation": "class",
            "name": "nlobjAssistant",
            "text": "UI Object page type used to build multi-step \"assistant\" pages to simplify complex workflows. All data and state for an assistant is tracked automatically\n * throughout the user's session up until completion of the assistant.\n *\n *",
            "commentRange": [
                494344,
                494713
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjAssistant",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Return a new instance of nlobjAssistant.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistant}",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        494344,
                        494713
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [],
                    "throws": []
                }
            ],
            "methods": {
                "setTitle": {
                    "annotation": "method",
                    "name": "setTitle",
                    "text": "set the page title.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        494747,
                        494899
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "undefined": {
                    "annotation": "method",
                    "text": "*",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        496881,
                        497200
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setScript": {
                    "annotation": "method",
                    "name": "setScript",
                    "text": "set the script ID for Client Script used for this form.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "name": "script",
                            "text": "script ID or internal ID for global client script used to enable Client SuiteScript on page\n *",
                            "theRestString": "@return {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        494961,
                        495248
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSplash": {
                    "annotation": "method",
                    "name": "setSplash",
                    "text": "set the splash screen used for this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "title",
                            "text": "splash portlet title\n *",
                            "theRestString": "@param {string} text1 splash portlet content (left side)\n * @param {string} [text2] splash portlet content (right side)\n * @return {void}\n *\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text1",
                            "text": "splash portlet content (left side)\n *",
                            "theRestString": "@param {string} [text2] splash portlet content (right side)\n * @return {void}\n *\n *"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[text2] splash portlet content (right side)\n *",
                            "theRestString": "@return {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        495312,
                        495631
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setShortcut": {
                    "annotation": "method",
                    "name": "setShortcut",
                    "text": "show/hide shortcut link. Always hidden on external pages\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "show",
                            "text": "enable/disable \"Add To Shortcut\" link on this page\n *",
                            "theRestString": "@return {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        495708,
                        495951
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFieldValues": {
                    "annotation": "method",
                    "name": "setFieldValues",
                    "text": "set the values for all the fields on this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "values",
                            "text": "Object of field name/value pairs used to set all fields on page\n *",
                            "theRestString": "@return {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        496013,
                        496264
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setOrdered": {
                    "annotation": "method",
                    "name": "setOrdered",
                    "text": "if ordered, steps are show on left and must be completed sequentially, otherwise steps are shown on top and can be done in any order\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "ordered",
                            "text": "If true (default assistant behavior) then a navigation order thru the steps/pages will be imposed on the user. Otherwise the user\n * \t\t\t\t\t\t\twill be allowed to navigate across steps/pages in any order they choose.\n *",
                            "theRestString": "@return  {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        496333,
                        496817
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setNumbered": {
                    "annotation": "method",
                    "name": "setNumbered",
                    "text": "if numbered, step numbers are displayed next to the step's label in the navigation area\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "numbered",
                            "text": "If true (default assistant behavior) step numbers will be displayed next to the step label\n *",
                            "theRestString": "@return  {void}\n *\n *"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        496881,
                        497200
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isFinished": {
                    "annotation": "method",
                    "name": "isFinished",
                    "text": "return true if all the steps have been completed.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        497266,
                        497421
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setFinished": {
                    "annotation": "method",
                    "name": "setFinished",
                    "text": "mark assistant page as completed and optionally set the rich text to display on completed page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "html",
                            "text": "completion message (rich text) to display on the \"Finish\" page\n *",
                            "theRestString": "@return  {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        497479,
                        497766
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "hasError": {
                    "annotation": "method",
                    "name": "hasError",
                    "text": "return true if the assistant has an error message to display for the current step.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        497830,
                        498016
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setError": {
                    "annotation": "method",
                    "name": "setError",
                    "text": "set the error message for the currrent step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "html",
                            "text": "error message (rich text) to display on the page to the user\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        498072,
                        498302
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCurrentStep": {
                    "annotation": "method",
                    "name": "setCurrentStep",
                    "text": "mark a step as current. It will be highlighted accordingly when the page is displayed\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjAssistantStep}",
                            "name": "step",
                            "text": "assistant step object representing the current step that the user is on.\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        498363,
                        498664
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addStep": {
                    "annotation": "method",
                    "name": "addStep",
                    "text": "add a step to the assistant.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "the name of the step\n *",
                            "theRestString": "@param {string} label label used for this step\n * @return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "label used for this step\n *",
                            "theRestString": "@return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        498731,
                        498968
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addField": {
                    "annotation": "method",
                    "name": "addField",
                    "text": "add a field to this page and return it.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} type field type\n * @param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [group] group name that this field will live on. If empty then the field is added to the main section of the page\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "field type\n *",
                            "theRestString": "@param {string} [label] field label\n * @param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [group] group name that this field will live on. If empty then the field is added to the main section of the page\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[label] field label\n *",
                            "theRestString": "@param {string| int} [source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n * @param {string} [group] group name that this field will live on. If empty then the field is added to the main section of the page\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "text": "[source] script ID or internal ID for source list (select and multiselects only) -or- radio value for radio fields\n *",
                            "theRestString": "@param {string} [group] group name that this field will live on. If empty then the field is added to the main section of the page\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[group] group name that this field will live on. If empty then the field is added to the main section of the page\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        499035,
                        499562
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSubList": {
                    "annotation": "method",
                    "name": "addSubList",
                    "text": "add a sublist to this page and return it. For now only sublists of type inlineeditor are supported\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} type sublist type (inlineeditor only for now)\n * @param {string} label sublist label\n * @return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "sublist type (inlineeditor only for now)\n *",
                            "theRestString": "@param {string} label sublist label\n * @return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "sublist label\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        499648,
                        499998
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addFieldGroup": {
                    "annotation": "method",
                    "name": "addFieldGroup",
                    "text": "add a field group to the page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field group name\n *",
                            "theRestString": "@param {string} label field group label\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "field group label\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        500072,
                        500303
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getStep": {
                    "annotation": "method",
                    "name": "getStep",
                    "text": "return an assistant step on this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "step name\n *",
                            "theRestString": "@return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        500376,
                        500562
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getField": {
                    "annotation": "method",
                    "name": "getField",
                    "text": "return a field on this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        500622,
                        500792
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getSubList": {
                    "annotation": "method",
                    "name": "getSubList",
                    "text": "return a sublist on this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist name\n *",
                            "theRestString": "@return {nlobjSubList}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjSubList}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        500853,
                        501031
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldGroup": {
                    "annotation": "method",
                    "name": "getFieldGroup",
                    "text": "return a field group on this page.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field group name\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        501094,
                        501286
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllSteps": {
                    "annotation": "method",
                    "name": "getAllSteps",
                    "text": "return an array of all the assistant steps for this assistant.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<nlobjAssistantStep>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        501352,
                        501539
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFields": {
                    "annotation": "method",
                    "name": "getAllFields",
                    "text": "return an array of the names of all fields on this page.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        501598,
                        501768
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllSubLists": {
                    "annotation": "method",
                    "name": "getAllSubLists",
                    "text": "return an array of the names of all sublists on this page .\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<string>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        501828,
                        502003
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFieldGroups": {
                    "annotation": "method",
                    "name": "getAllFieldGroups",
                    "text": "return an array of the names of all field groups on this page.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        502065,
                        502246
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLastAction": {
                    "annotation": "method",
                    "name": "getLastAction",
                    "text": "return the last submitted action by the user: next|back|cancel|finish|jump\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        502311,
                        502493
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLastStep": {
                    "annotation": "method",
                    "name": "getLastStep",
                    "text": "return step from which the last submitted action came from\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        502553,
                        502729
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getNextStep": {
                    "annotation": "method",
                    "name": "getNextStep",
                    "text": "return the next logical step corresponding to the user's last submitted action. You should only call this after\n * you have successfully captured all the information from the last step and are ready to move on to the next step. You\n * would use the return value to set the current step prior to continuing.\n *\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        502787,
                        503214
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getCurrentStep": {
                    "annotation": "method",
                    "name": "getCurrentStep",
                    "text": "return current step set via nlobjAssistant.setCurrentStep(step)\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        503272,
                        503456
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getStepCount": {
                    "annotation": "method",
                    "name": "getStepCount",
                    "text": "return the total number of steps in the assistant\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        503517,
                        503670
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "sendRedirect": {
                    "annotation": "method",
                    "name": "sendRedirect",
                    "text": "redirect the user following a user submit operation. Use this to automatically redirect the user to the next logical step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjResponse}",
                            "name": "response",
                            "text": "the response object used to communicate back to the user's client\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistant\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistant",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        503729,
                        504057
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjField": {
            "annotation": "class",
            "name": "nlobjField",
            "text": "Core descriptor for fields used to define records and also used to build pages and portlets.\n * Return a new instance of nlobjField used for scriptable form/sublist field.\n * This object is READ-ONLY except for scripted fields created via the UI Object API using Suitelets or beforeLoad user events\n *",
            "commentRange": [
                504124,
                504458
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjField",
            "methods": {
                "getName": {
                    "annotation": "method",
                    "name": "getName",
                    "text": "return field name.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        504489,
                        504607
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLabel": {
                    "annotation": "method",
                    "name": "getLabel",
                    "text": "return field label.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n *\n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        504658,
                        504776
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getType": {
                    "annotation": "method",
                    "name": "getType",
                    "text": "return field type.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        504828,
                        504945
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isHidden": {
                    "annotation": "method",
                    "name": "isHidden",
                    "text": "return true if field is hidden.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        504996,
                        505127
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isMandatory": {
                    "annotation": "method",
                    "name": "isMandatory",
                    "text": "return true if field is mandatory.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        505179,
                        505316
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isDisabled": {
                    "annotation": "method",
                    "name": "isDisabled",
                    "text": "return true if field is disabled.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        505371,
                        505506
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "*",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        505560,
                        505763
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setAlias": {
                    "annotation": "method",
                    "name": "setAlias",
                    "text": "set the alias used to set the value for this field. Defaults to field name.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "alias",
                            "text": "column used to populate the field (mostly relevant when populating sublist fields)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        505821,
                        506153
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDefaultValue": {
                    "annotation": "method",
                    "name": "setDefaultValue",
                    "text": "set the default value for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        506211,
                        506429
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDisabled": {
                    "annotation": "method",
                    "name": "setDisabled",
                    "text": "Disable field via field metadata.\n * This method is only supported on scripted fields via the UI Object API\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "disabled",
                            "text": "if true then field should be disabled.\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        506494,
                        506775
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setMandatory": {
                    "annotation": "method",
                    "name": "setMandatory",
                    "text": "make this field mandatory.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "mandatory",
                            "text": "if true then field becomes mandatory\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        506839,
                        507085
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setMaxLength": {
                    "annotation": "method",
                    "name": "setMaxLength",
                    "text": "set the maxlength for this field (only valid for certain field types).\n *  This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "maxlength",
                            "text": "maximum length for this field\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        507151,
                        507431
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDisplayType": {
                    "annotation": "method",
                    "name": "setDisplayType",
                    "text": "set the display type for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "display type: inline|normal|hidden|disabled|readonly|entry\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        507497,
                        507771
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setBreakType": {
                    "annotation": "method",
                    "name": "setBreakType",
                    "text": "set the break type (startcol|startrow|none) for this field. startrow is only used for fields with a layout type of outside\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "breaktype",
                            "text": "break type used to add a break in flow layout for this field: startcol|startrow|none\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        507834,
                        508254
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLayoutType": {
                    "annotation": "method",
                    "name": "setLayoutType",
                    "text": "set the layout type and optionally the break type.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "layout type: outside|startrow|midrow|endrow|normal\n *",
                            "theRestString": "@param {string} [breaktype] break type: startcol|startrow|none\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[breaktype] break type: startcol|startrow|none\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        508321,
                        508666
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLinkText": {
                    "annotation": "method",
                    "name": "setLinkText",
                    "text": "set the text that gets displayed in lieu of the field value for URL fields.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "user-friendly display value in lieu of URL\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        508739,
                        508959
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDisplaySize": {
                    "annotation": "method",
                    "name": "setDisplaySize",
                    "text": "set the width and height for this field.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "width",
                            "text": "*",
                            "theRestString": "@param {int} height\n * @return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "height",
                            "text": "*",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        509019,
                        509259
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setPadding": {
                    "annotation": "method",
                    "name": "setPadding",
                    "text": "set the amount of emppty vertical space (rows) between this field and the previous field.\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "padding",
                            "text": "# of empty rows to display above field\n *",
                            "theRestString": "@return {nlobjField}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        509331,
                        509634
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHelpText": {
                    "annotation": "method",
                    "name": "setHelpText",
                    "text": "set help text for this field. If inline is set on assistant pages, help is displayed inline below field\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "help",
                            "text": "field level help content (rich text) for field\n *",
                            "theRestString": "@param {string} [inline] if true then in addition to the popup field help, the help will also be displayed inline below field (supported on assistant pages only)\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "text": "[inline] if true then in addition to the popup field help, the help will also be displayed inline below field (supported on assistant pages only)\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjField\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjField",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        509696,
                        510218
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addSelectOption": {
                    "annotation": "method",
                    "name": "addSelectOption",
                    "text": "add a select option to this field (valid for select/multiselect fields).\n * This method is only supported on scripted fields via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "internal ID for this select option\n *",
                            "theRestString": "@param {string} text display value for this select option\n * @param {boolean} [selected] if true then this select option will be selected by default\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "text",
                            "text": "display value for this select option\n *",
                            "theRestString": "@param {boolean} [selected] if true then this select option will be selected by default\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[selected] if true then this select option will be selected by default\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        510286,
                        510699
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjSubList": {
            "annotation": "class",
            "name": "nlobjSubList",
            "text": "high level container for defining sublist (many to one) relationships on a record or multi-line data entry UIs on pages.\n * Return a new instance of nlobjSubList used for scriptable sublist (sublist).\n * This object is READ-ONLY except for instances created via the UI Object API using Suitelets or beforeLoad user events.",
            "commentRange": [
                510780,
                511133
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjSubList",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this sublist.\n * This method is only supported on sublists via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        511166,
                        511337
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHelpText": {
                    "annotation": "method",
                    "name": "setHelpText",
                    "text": "set helper text for this sublist.\n * This method is only supported on sublists via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "help",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        511397,
                        511572
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDisplayType": {
                    "annotation": "method",
                    "name": "setDisplayType",
                    "text": "set the displaytype for this sublist: hidden|normal.\n * This method is only supported on scripted or staticlist sublists via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "*",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        511634,
                        511854
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLineItemValue": {
                    "annotation": "method",
                    "name": "setLineItemValue",
                    "text": "set the value of a cell in this sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "field",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline  line number (1-based)\n * @param {string} \tvalue sublist value\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {string} \tvalue sublist value\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "sublist value\n *\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        511919,
                        512181
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLineItemMatrixValue": {
                    "annotation": "method",
                    "name": "setLineItemMatrixValue",
                    "text": "set the value of a matrix cell in this sublist.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "field",
                            "text": "matrix field name\n *",
                            "theRestString": "@param {int} \tline \tline number (1-based)\n * @param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue   matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "line number (1-based)\n *",
                            "theRestString": "@param {int} \tcolumn  matrix column index (1-based)\n * @param {string} \tvalue   matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "column",
                            "text": "matrix column index (1-based)\n *",
                            "theRestString": "@param {string} \tvalue   matrix field value\n * @return {void}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "matrix field value\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        512262,
                        512613
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setLineItemValues": {
                    "annotation": "method",
                    "name": "setLineItemValues",
                    "text": "set values for multiple lines (Array of nlobjSearchResults or name-value pair Arrays) in this sublist.\n * Note that this method is only supported on scripted sublists via the UI Object API\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "text": "{Array<String>[], nlobjSearchResult[]} values\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        512708,
                        513009
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemCount": {
                    "annotation": "method",
                    "name": "getLineItemCount",
                    "text": "Return the number of lines in a sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n * @since 2010.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*",
                            "theRestString": "@since 2010.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2010.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        513079,
                        513246
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addField": {
                    "annotation": "method",
                    "name": "addField",
                    "text": "add a field (column) to this sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@param {string} type field type\n * @param {string} label field label\n * @param {string| int} [source] script ID or internal ID for source list used for this select field\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "type",
                            "text": "field type\n *",
                            "theRestString": "@param {string} label field label\n * @param {string| int} [source] script ID or internal ID for source list used for this select field\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "field label\n *",
                            "theRestString": "@param {string| int} [source] script ID or internal ID for source list used for this select field\n * @return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string| int}",
                            "text": "[source] script ID or internal ID for source list used for this select field\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        513314,
                        513667
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setUniqueField": {
                    "annotation": "method",
                    "name": "setUniqueField",
                    "text": "designate a field on sublist that must be unique across all lines (only supported on sublists of type inlineeditor, editor).\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "fldnam",
                            "text": "the name of a field on this sublist whose value must be unique across all lines\n *",
                            "theRestString": "@return {nlobjField}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjField}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        513744,
                        514085
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addButton": {
                    "annotation": "method",
                    "name": "addButton",
                    "text": "add a button to this sublist.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "button name\n *",
                            "theRestString": "@param {string} label button label\n * @param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "button label\n *",
                            "theRestString": "@param {string} script button script (function name)\n * @return {nlobjButton}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "script",
                            "text": "button script (function name)\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * \n * @memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        514152,
                        514421
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addRefreshButton": {
                    "annotation": "method",
                    "name": "addRefreshButton",
                    "text": "add \"Refresh\" button to sublists of type \"staticlist\" to support manual refreshing of the sublist (without entire page reloads) if it's contents are very volatile\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSubList\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        514496,
                        514772
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addMarkAllButtons": {
                    "annotation": "method",
                    "name": "addMarkAllButtons",
                    "text": "add \"Mark All\" and \"Unmark All\" buttons to this sublist of type \"list\".\n *\n * \n *",
                    "children": [
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSubList",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        514834,
                        514995
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjColumn": {
            "annotation": "class",
            "name": "nlobjColumn",
            "text": "Class definition for columns used on lists and list portlets. Return a new instance of nlobjColumn used for scriptable list column.",
            "commentRange": [
                515058,
                515226
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjColumn",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the header name for this column.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "the label for this column\n *\n * \n *",
                            "theRestString": "@memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        515258,
                        515428
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setURL": {
                    "annotation": "method",
                    "name": "setURL",
                    "text": "set the base URL (optionally defined per row) for this column.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "the base URL or a column in the datasource that returns the base URL for each row\n *",
                            "theRestString": "@param {boolean} perRow if true then the 1st arg is expected to be a column in the datasource\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "perRow",
                            "text": "if true then the 1st arg is expected to be a column in the datasource\n *\n * \n *",
                            "theRestString": "@memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        515487,
                        515834
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "addParamToURL": {
                    "annotation": "method",
                    "name": "addParamToURL",
                    "text": "add a URL parameter (optionally defined per row) to this column's URL.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "param",
                            "text": "the name of a parameter to add to URL\n *",
                            "theRestString": "@param {string} value the value of the parameter to add to URL -or- a column in the datasource that returns the parameter value for each row\n * @param {boolean} [perRow] if true then the 2nd arg is expected to be a column in the datasource\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "the value of the parameter to add to URL -or- a column in the datasource that returns the parameter value for each row\n *",
                            "theRestString": "@param {boolean} [perRow] if true then the 2nd arg is expected to be a column in the datasource\n *\n * \n * @memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[perRow] if true then the 2nd arg is expected to be a column in the datasource\n *\n * \n *",
                            "theRestString": "@memberOf nlobjColumn\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjColumn",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        515899,
                        516363
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjTab": {
            "annotation": "class",
            "name": "nlobjTab",
            "text": "high level grouping for fields on a data entry form (nlobjForm). Return a new instance of nlobjTab used for scriptable tab or subtab.",
            "commentRange": [
                516442,
                516609
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjTab",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this tab or subtab.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "string used as label for this tab or subtab\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        516638,
                        516817
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHelpText": {
                    "annotation": "method",
                    "name": "setHelpText",
                    "text": "set helper text for this tab or subtab.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "help",
                            "text": "inline help text used for this tab or subtab\n *",
                            "theRestString": "@return {nlobjTab}\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjTab}",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        516873,
                        517057
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjAssistantStep": {
            "annotation": "class",
            "name": "nlobjAssistantStep",
            "text": "assistant step definition. Used to define individual steps/pages in multi-step workflows. Return a new instance of nlobjAssistantStep.\n * \n *",
            "children": [
                {
                    "annotation": "since",
                    "name": "2009.2",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                517115,
                517314
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjAssistantStep",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this assistant step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "display label used for this assistant step\n *",
                            "theRestString": "@return {void}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        517353,
                        517564
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setHelpText": {
                    "annotation": "method",
                    "name": "setHelpText",
                    "text": "set helper text for this assistant step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "help",
                            "text": "inline help text to display on assistant page for this step\n *",
                            "theRestString": "@return {nlobjAssistantStep}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjAssistantStep}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        517630,
                        517876
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getStepNumber": {
                    "annotation": "method",
                    "name": "getStepNumber",
                    "text": "return the index of this step in the assistant page (1-based)\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "name": "the",
                            "text": "index of this step in the assistant (1-based) based on the order in which the steps were added.\n *\n *\n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        517944,
                        518214
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValue": {
                    "annotation": "method",
                    "name": "getFieldValue",
                    "text": "return the value of a field entered by the user during this step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "field name\n *",
                            "theRestString": "@return {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        518279,
                        518491
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFieldValues": {
                    "annotation": "method",
                    "name": "getFieldValues",
                    "text": "return the selected values of a multi-select field as an Array entered by the user during this step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "multi-select field name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        518561,
                        518829
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemCount": {
                    "annotation": "method",
                    "name": "getLineItemCount",
                    "text": "return the number of lines previously entered by the user in this step (or -1 if the sublist does not exist).\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {int}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{int}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        518900,
                        519159
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getLineItemValue": {
                    "annotation": "method",
                    "name": "getLineItemValue",
                    "text": "return the value of a sublist field entered by the user during this step.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@param {string} \tname sublist field name\n * @param {int} \tline sublist (1-based)\n * @return  {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "name",
                            "text": "sublist field name\n *",
                            "theRestString": "@param {int} \tline sublist (1-based)\n * @return  {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "line",
                            "text": "sublist (1-based)\n *",
                            "theRestString": "@return  {string}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        519233,
                        519545
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllFields": {
                    "annotation": "method",
                    "name": "getAllFields",
                    "text": "return an array of the names of all fields entered by the user during this step.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        519629,
                        519827
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllLineItems": {
                    "annotation": "method",
                    "name": "getAllLineItems",
                    "text": "return an array of the names of all sublists entered by the user during this step.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        519891,
                        520094
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getAllLineItemFields": {
                    "annotation": "method",
                    "name": "getAllLineItemFields",
                    "text": "return an array of the names of all sublist fields entered by the user during this step\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "group",
                            "text": "sublist name\n *",
                            "theRestString": "@return {Array<String>}\n *\n * \n * @memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<String>}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjAssistantStep\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjAssistantStep",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        520161,
                        520412
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjFieldGroup": {
            "annotation": "class",
            "name": "nlobjFieldGroup",
            "text": "object used for grouping fields on pages (currently only supported on assistant pages).Return a new instance of nlobjFieldGroup (currently only supported on nlobjAssistant pages)\n *\n *",
            "children": [
                {
                    "annotation": "since",
                    "name": "2009.2",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                520490,
                520729
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjFieldGroup",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this field group.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "display label for field group\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFieldGroup\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFieldGroup",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        520765,
                        520968
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setCollapsible": {
                    "annotation": "method",
                    "name": "setCollapsible",
                    "text": "set collapsibility property for this field group.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "collapsible",
                            "text": "if true then this field group is collapsible\n *",
                            "theRestString": "@param {boolean} [defaultcollapsed] if true and the field group is collapsible, collapse this field group by default\n * @return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "text": "[defaultcollapsed] if true and the field group is collapsible, collapse this field group by default\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFieldGroup\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFieldGroup",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        521031,
                        521399
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setSingleColumn": {
                    "annotation": "method",
                    "name": "setSingleColumn",
                    "text": "set singleColumn property for this field group.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "singleColumn",
                            "text": "if true then this field group is displayed in single column\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2011.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFieldGroup\n *\n * @since 2011.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFieldGroup",
                            "text": "*\n *",
                            "theRestString": "@since 2011.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2011.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        521492,
                        521755
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setShowBorder": {
                    "annotation": "method",
                    "name": "setShowBorder",
                    "text": "set showBorder property for this field group.\n *\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "showBorder",
                            "text": "if true then this field group shows border including label of group\n *",
                            "theRestString": "@return {nlobjFieldGroup}\n *\n * \n * @memberOf nlobjFieldGroup\n *\n * @since 2011.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFieldGroup}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjFieldGroup\n *\n * @since 2011.1"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjFieldGroup",
                            "text": "*\n *",
                            "theRestString": "@since 2011.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2011.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        521832,
                        522097
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.ui.nlobjButton": {
            "annotation": "class",
            "name": "nlobjButton",
            "text": "buttons used for triggering custom behaviors on pages.Return a new instance of nlobjButton.\n *\n *",
            "children": [
                {
                    "annotation": "since",
                    "name": "2009.2",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                522170,
                522318
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.ui",
                "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
                "commentRange": [
                    480317,
                    480818
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.ui.nlobjButton",
            "methods": {
                "setLabel": {
                    "annotation": "method",
                    "name": "setLabel",
                    "text": "set the label for this button.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "label",
                            "text": "display label for button\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * \n * @memberOf nlobjButton\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjButton\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjButton",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        522350,
                        522535
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setDisabled": {
                    "annotation": "method",
                    "name": "setDisabled",
                    "text": "disable or enable button.\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "disabled",
                            "text": "if true then this button should be disabled on the page\n *",
                            "theRestString": "@return {nlobjButton}\n *\n * @memberOf nlobjButton\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjButton}",
                            "text": "*\n *",
                            "theRestString": "@memberOf nlobjButton\n *\n * @since 2008.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjButton",
                            "text": "*\n *",
                            "theRestString": "@since 2008.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2008.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        522594,
                        522812
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjSelectOption": {
            "annotation": "class",
            "name": "nlobjSelectOption",
            "text": "Primary object used to encapsulate available select options for a select field. This object is returned after a call to nlobjField.getSelectOptions(filter, filteroperator). The object contains a key, value pair that represents a select option, for example: 87, Abe Simpson. select|radio option used for building select fields via the UI Object API and for describing select|radio fields.\n * Return a new instance of nlobjSelectOption.\n *\n *",
            "children": [
                {
                    "annotation": "since",
                    "name": "2009.2",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                522950,
                523447
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjSelectOption",
            "methods": {
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "return internal ID for select option\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSelectOption\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSelectOption",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        523485,
                        523624
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getText": {
                    "annotation": "method",
                    "name": "getText",
                    "text": "return display value for select option.\n *",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{string}",
                            "text": "*\n * \n *",
                            "theRestString": "@memberOf nlobjSelectOption\n *\n * @since 2009.2"
                        },
                        {
                            "annotation": "memberOf",
                            "name": "nlobjSelectOption",
                            "text": "*\n *",
                            "theRestString": "@since 2009.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2009.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        523680,
                        523824
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.globals": {
            "annotation": "class",
            "name": "globals",
            "text": "",
            "commentRange": [
                523890,
                524543
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.globals",
            "methods": {
                "nlapiGetLogin": {
                    "annotation": "method",
                    "name": "nlapiGetLogin",
                    "text": "Returns the NetSuite login credentials of currently logged-in user.\n\nThis API is supported in user event, portlet, Suitelet, RESTlet, and SSP scripts. For information about the unit cost associated with this API, see API Governance.\n\nThis example shows how to get the credentials of the currently logged-in user.\n\n\t//Get credentials of currently logged-in user\n\tvar login = nlapiGetLogin();",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{nlapiLogin}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        523890,
                        524543
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlapiLogin": {
            "annotation": "class",
            "name": "nlapiLogin",
            "text": "Primary object used to encapsulate NetSuite user login credentials. Note that nlapiGetLogin() returns a reference to this object.\n *",
            "commentRange": [
                523890,
                524543
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlapiLogin"
        },
        "ns.suitescript.standard.nlapiGetLogin": {
            "annotation": "class",
            "name": "nlapiGetLogin",
            "text": "*\n *",
            "children": [
                {
                    "annotation": "since",
                    "name": "2012.2",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                523890,
                524543
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlapiGetLogin",
            "methods": {
                "changeEmail": {
                    "annotation": "method",
                    "name": "changeEmail",
                    "text": "*",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "newEmail",
                            "text": "new Email\n *",
                            "theRestString": "@param {boolean} justThisAccount indicates whether to apply email change only to roles within this account or apply email change to its all NetSuite accounts and roles\n * @return {void}\n *\n * @since 2012.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "justThisAccount",
                            "text": "indicates whether to apply email change only to roles within this account or apply email change to its all NetSuite accounts and roles\n *",
                            "theRestString": "@return {void}\n *\n * @since 2012.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2012.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2012.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        524579,
                        524853
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "changePassword": {
                    "annotation": "method",
                    "name": "changePassword",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "newPassword",
                            "text": "new Password.\n *",
                            "theRestString": "@return {void}\n *\n * @since 2012.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2012.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2012.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        524952,
                        525065
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "nlapiGetJobManager": {
                    "annotation": "method",
                    "name": "nlapiGetJobManager",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "Job",
                            "text": "Type\n *",
                            "theRestString": "@return {nlobjJobManager}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjJobManager}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525152,
                        525263
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "createJobRequest": {
                    "annotation": "method",
                    "name": "createJobRequest",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{nlobjJobRequest}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525312,
                        525393
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "submit": {
                    "annotation": "method",
                    "name": "submit",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjJobRequest}",
                            "name": "Job",
                            "text": "request\n *",
                            "theRestString": "@return {String} Job Id\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "Job",
                            "text": "Id\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525459,
                        525568
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getFuture": {
                    "annotation": "method",
                    "name": "getFuture",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Job",
                            "text": "Id\n *",
                            "theRestString": "@return {nlobjFuture}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjFuture}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525631,
                        525727
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjDuplicateJobRequest": {
            "annotation": "class",
            "name": "nlobjDuplicateJobRequest",
            "text": "Primary object used to encapsulate all the properties of a merge duplicate record job request. Note that nlobjJobManager.createJobRequest() returns a reference to this object.\n\nUse the methods in nlobjDuplicateJobRequest to define the criteria of your merge duplicate request.\n\nNote When submitting a merge duplicate job, the maximum number of records you and submit is 200.\n\n *",
            "commentRange": [
                525788,
                526830
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjDuplicateJobRequest",
            "properties": {
                "ENTITY_CUSTOMER": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_CUSTOMER",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "ENTITY_CONTACT": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_CONTACT",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "ENTITY_LEAD": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_LEAD",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "ENTITY_PROSPECT": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_PROSPECT",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "ENTITY_PARTNER": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_PARTNER",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "ENTITY_VENDOR": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ENTITY_VENDOR",
                    "text": "Constant for Merge Duplicate recrods Entity Types\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        525788,
                        526830
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "MASTERSELECTIONMODE_CREATED_EARLIEST": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "MASTERSELECTIONMODE_CREATED_EARLIEST",
                    "text": "Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        527206,
                        527774
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "MASTERSELECTIONMODE_MOST_RECENT_ACTIVITY": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "MASTERSELECTIONMODE_MOST_RECENT_ACTIVITY",
                    "text": "Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        527206,
                        527774
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "MASTERSELECTIONMODE_MOST_POPULATED_FIELDS": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "MASTERSELECTIONMODE_MOST_POPULATED_FIELDS",
                    "text": "Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        527206,
                        527774
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "MASTERSELECTIONMODE_SELECT_BY_ID": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "MASTERSELECTIONMODE_SELECT_BY_ID",
                    "text": "Constant for Merge Duplicate recrods Merge MASTERSELECTIONMODE\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        527206,
                        527774
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "OPERATION_MERGE": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "OPERATION_MERGE",
                    "text": "Constant for Merge Duplicate recrods Merge operation\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        528162,
                        528627
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "OPERATION_DELETE": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "OPERATION_DELETE",
                    "text": "Constant for Merge Duplicate recrods Merge operation\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        528162,
                        528627
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "OPERATION_MAKE_MASTER_PARENT": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "OPERATION_MAKE_MASTER_PARENT",
                    "text": "Constant for Merge Duplicate recrods Merge operation\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "*",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        528162,
                        528627
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "OPERATION_MARK_AS_NOT_DUPES": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "OPERATION_MARK_AS_NOT_DUPES",
                    "text": "Constant for Merge Duplicate recrods Merge operation\n *",
                    "children": [
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        528162,
                        528627
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            },
            "methods": {
                "setEntityType": {
                    "annotation": "method",
                    "name": "setEntityType",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Entity",
                            "text": "Type\n *",
                            "theRestString": "@return {void}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        528928,
                        529026
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setMasterId": {
                    "annotation": "method",
                    "name": "setMasterId",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Master",
                            "text": "record ID\n *",
                            "theRestString": "@return {void}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        529108,
                        529209
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setMasterSelectionMode": {
                    "annotation": "method",
                    "name": "setMasterSelectionMode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Criteria",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        529287,
                        529391
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setRecords": {
                    "annotation": "method",
                    "name": "setRecords",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Array",
                            "text": "of duplicate records IDs\n *",
                            "theRestString": "@return {void}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        529491,
                        529606
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "setOperation": {
                    "annotation": "method",
                    "name": "setOperation",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "Operation",
                            "text": "*",
                            "theRestString": "@return {void}\n *\n * @since 2013.1"
                        },
                        {
                            "annotation": "return",
                            "type": "{void}",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        529686,
                        529781
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getEntityType": {
                    "annotation": "method",
                    "name": "getEntityType",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "Entity",
                            "text": "Type\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        529861,
                        529933
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMasterId": {
                    "annotation": "method",
                    "name": "getMasterId",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "Master",
                            "text": "record ID\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530004,
                        530079
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getMasterSelectionMode": {
                    "annotation": "method",
                    "name": "getMasterSelectionMode",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "Master",
                            "text": "Selection Mode\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530148,
                        530239
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getRecords": {
                    "annotation": "method",
                    "name": "getRecords",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "Array",
                            "text": "of duplicate records IDs\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530319,
                        530407
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getOperation": {
                    "annotation": "method",
                    "name": "getOperation",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "name": "Operation",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530475,
                        530544
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjFuture": {
            "annotation": "class",
            "name": "nlobjFuture",
            "text": "Encapsulates the properties of a merge duplicate record job status. Note that nlobjJobManager.getFuture() returns a reference to this object\n *",
            "commentRange": [
                530614,
                530844
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjFuture",
            "methods": {
                "isDone": {
                    "annotation": "method",
                    "name": "isDone",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "name": "status",
                            "text": "*\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530614,
                        530844
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "getId": {
                    "annotation": "method",
                    "name": "getId",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "Job",
                            "text": "ID\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        530895,
                        530963
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "cancel": {
                    "annotation": "method",
                    "name": "cancel",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "name": "cancelled",
                            "text": "or not\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531013,
                        531093
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "isCancelled": {
                    "annotation": "method",
                    "name": "isCancelled",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "name": "is",
                            "text": "cancelled or not\n *\n *",
                            "theRestString": "@since 2013.1"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.1",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531144,
                        531232
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "ns.suitescript.standard.nlobjCache": {
            "annotation": "class",
            "name": "nlobjCache",
            "text": "support simple application cache",
            "commentRange": [
                531288,
                531606
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
            "module": {
                "annotation": "module",
                "name": "ns.suitescript.standard",
                "text": "",
                "commentRange": [
                    522910,
                    522944
                ],
                "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
            },
            "absoluteName": "ns.suitescript.standard.nlobjCache",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{name}",
                            "name": "cacheName",
                            "text": "the name to identify this cache",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531288,
                        531606
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{name}",
                            "name": "cacheName",
                            "text": "the name to identify this cache",
                            "theRestString": ""
                        }
                    ],
                    "throws": []
                }
            ],
            "methods": {
                "put": {
                    "annotation": "method",
                    "name": "put",
                    "text": "insert a named value into the cache\n *",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "key",
                            "text": "*",
                            "theRestString": "@param {string} value\n * @param {int} ttl, time to live in seconds.\n * @return {Object} status.\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "value",
                            "text": "*",
                            "theRestString": "@param {int} ttl, time to live in seconds.\n * @return {Object} status.\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "param",
                            "type": "{int}",
                            "name": "ttl",
                            "text": ", time to live in seconds.\n *",
                            "theRestString": "@return {Object} status.\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "name": "status.",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531288,
                        531606
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "key",
                            "text": "*",
                            "theRestString": "@return {String}  value associate with that key.\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "value",
                            "text": "associate with that key.\n *\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531667,
                        531781
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                },
                "remove": {
                    "annotation": "method",
                    "name": "remove",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{string}",
                            "name": "key",
                            "text": "*",
                            "theRestString": "@return {Object} status.\n *\n * @since 2013.2"
                        },
                        {
                            "annotation": "return",
                            "type": "{Object}",
                            "name": "status.",
                            "text": "*\n *",
                            "theRestString": "@since 2013.2"
                        },
                        {
                            "annotation": "since",
                            "name": "2013.2",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        531830,
                        531923
                    ],
                    "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
                }
            }
        },
        "Transaction.Transaction.Model": {
            "annotation": "class",
            "name": "Transaction.Model",
            "text": "Defines the base model used by all transactions providing a base implementation with common features\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "children": [
                {
                    "annotation": "extends",
                    "name": "SCModel",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                537278,
                537427
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        550829,
                        550854
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "storeItem": {
                    "annotation": "property",
                    "type": "{StoreItem.Model}",
                    "name": "storeItem",
                    "text": "",
                    "commentRange": [
                        537506,
                        537545
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "isMultiCurrency": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isMultiCurrency",
                    "text": "",
                    "commentRange": [
                        537573,
                        537610
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "isMultiSite": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isMultiSite",
                    "text": "",
                    "commentRange": [
                        537681,
                        537714
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "now": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "now",
                    "text": "Now in milliseconds",
                    "commentRange": [
                        537777,
                        537821
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "paymentterms": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.PaymentMethod.Terms}",
                    "name": "paymentterms",
                    "text": "This value is present only of the type is invoice",
                    "commentRange": [
                        550464,
                        550644
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        550740,
                        550771
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{Transaction.Model.Get.PaymentMethod.CreditCard?} creditcard This value is present only if the type is creditcard",
                    "commentRange": [
                        568906,
                        569031
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "currentRecord": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.Result}",
                    "name": "currentRecord",
                    "text": "This property is used so when performing any update \n operation you can know what is the current state \n This property is only present when performing an update operation",
                    "commentRange": [
                        576137,
                        576372
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "status": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        584034,
                        584062
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        584085,
                        584111
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "",
                    "commentRange": [
                        584154,
                        584183
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            },
            "methods": {
                "list": {
                    "annotation": "method",
                    "name": "list",
                    "text": "Allow search among transactions",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.List.Parameters}",
                            "name": "data",
                            "text": "",
                            "theRestString": "@return {Transaction.Model.List.Result}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        537854,
                        537996
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setExtraListColumns": {
                    "annotation": "method",
                    "name": "setExtraListColumns",
                    "text": "Abstract method used to be overridden by child classes. \n The aim of this method is set extra column called by the list method. The list of all column is in the 'columns' property of 'this'",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        542534,
                        542776
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setExtraListFilters": {
                    "annotation": "method",
                    "name": "setExtraListFilters",
                    "text": "Abstract method used to be overridden by child classes. \n The aim of this method is set extra filters called by the list method. The list of all column is in the 'filters' property of 'this'",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        542822,
                        543065
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "mapListResult": {
                    "annotation": "method",
                    "name": "mapListResult",
                    "text": "Abstract method used to be overridden by child classes. \n The aim of this method is apply any custom extension over each record to be returned by the list method",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.List.Result.Record}",
                            "name": "result",
                            "text": "Base result to be extended",
                            "theRestString": "@param {nlobjSearchResult} record Instance of the record returned by NetSuite search _lineCommentSeparatorMark_ @return {Transaction.Model.List.Result.Record}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjSearchResult}",
                            "name": "record",
                            "text": "Instance of the record returned by NetSuite search",
                            "theRestString": "@return {Transaction.Model.List.Result.Record}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.List.Result.Record}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        543111,
                        543526
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getTransactionRecord": {
                    "annotation": "method",
                    "name": "getTransactionRecord",
                    "text": "Load a NetSuite record (transaction)",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type",
                            "text": "",
                            "theRestString": "@param {String} id _lineCommentSeparatorMark_ @return {nlobjRecord}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@return {nlobjRecord}"
                        },
                        {
                            "annotation": "return",
                            "type": "{nlobjRecord}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        543592,
                        543740
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "Return one single transaction",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type",
                            "text": "",
                            "theRestString": "@param {String} id _lineCommentSeparatorMark_ @return {Transaction.Model.Get.Result}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@return {Transaction.Model.Get.Result}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        543902,
                        544043
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getSalesRep": {
                    "annotation": "method",
                    "name": "getSalesRep",
                    "text": "Gets the sales representative information into the current transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        545008,
                        545214
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordFields": {
                    "annotation": "method",
                    "name": "getRecordFields",
                    "text": "Get the main (and simple) field of the transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        546519,
                        546709
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getStatus": {
                    "annotation": "method",
                    "name": "getStatus",
                    "text": "Get the status field for a single retrieved record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        548609,
                        548793
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getExtraRecordFields": {
                    "annotation": "method",
                    "name": "getExtraRecordFields",
                    "text": "Overridable method used to add extra field in the final result of the get method",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        549449,
                        549674
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordPromocode": {
                    "annotation": "method",
                    "name": "getRecordPromocode",
                    "text": "Get the promocode information into the get result",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        549719,
                        549911
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getTerms": {
                    "annotation": "method",
                    "name": "getTerms",
                    "text": "Get the terms in the current Transaction",
                    "commentRange": [
                        550464,
                        550644
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordPaymentMethod": {
                    "annotation": "method",
                    "name": "getRecordPaymentMethod",
                    "text": "Get the payment methods used in the current Transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        550937,
                        551139
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordSummary": {
                    "annotation": "method",
                    "name": "getRecordSummary",
                    "text": "Get the summary of the current transaction model",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        553457,
                        553646
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getLines": {
                    "annotation": "method",
                    "name": "getLines",
                    "text": "Get the lines (and its item) to the current transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        556784,
                        556972
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "preLoadItems": {
                    "annotation": "method",
                    "name": "preLoadItems",
                    "text": "Preload Items",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Transaction.Model.PreLoadItemData>}",
                            "name": "items_to_preload",
                            "text": "",
                            "theRestString": "@return {PreloadedItems}"
                        },
                        {
                            "annotation": "return",
                            "type": "{PreloadedItems}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        560998,
                        561134
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "loadItemsWithStoreItem": {
                    "annotation": "method",
                    "name": "loadItemsWithStoreItem",
                    "text": "Preload a group of items the StoreItem (Commerce API)",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Transaction.Model.PreLoadItemData>}",
                            "name": "items_to_preload",
                            "text": "",
                            "theRestString": "@return {PreloadedItems}"
                        },
                        {
                            "annotation": "return",
                            "type": "{PreloadedItems}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        561481,
                        561667
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "loadItemsWithSuiteScript": {
                    "annotation": "method",
                    "name": "loadItemsWithSuiteScript",
                    "text": "Preload a group of items using SuiteScript",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Transaction.Model.PreLoadItemData>}",
                            "name": "items_to_query",
                            "text": "",
                            "theRestString": "@return {PreloadedItems}"
                        },
                        {
                            "annotation": "return",
                            "type": "{PreloadedItems}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        562458,
                        562633
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getExtraLineFields": {
                    "annotation": "method",
                    "name": "getExtraLineFields",
                    "text": "Set extra projected field on items when retrieving a single record's lines",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Get.Line}",
                            "name": "result",
                            "text": "Result being generated",
                            "theRestString": "@param {nlobjRecord} record Record to extract fields from _lineCommentSeparatorMark_ @param {Number} i Index of the item in the current record being retrieved _lineCommentSeparatorMark_ @return {Void} This method does not return anything as it works with the parameters passed in"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "record",
                            "text": "Record to extract fields from",
                            "theRestString": "@param {Number} i Index of the item in the current record being retrieved _lineCommentSeparatorMark_ @return {Void} This method does not return anything as it works with the parameters passed in"
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "i",
                            "text": "Index of the item in the current record being retrieved",
                            "theRestString": "@return {Void} This method does not return anything as it works with the parameters passed in"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the parameters passed in",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        563950,
                        564361
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordShippingMethods": {
                    "annotation": "method",
                    "name": "getRecordShippingMethods",
                    "text": "Get the shipping methods of the current transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        564408,
                        564608
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "addShippingMethod": {
                    "annotation": "method",
                    "name": "addShippingMethod",
                    "text": "Concatenated the parameter shipping method into the list of the current result's property shipmethods",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Get.ShipMethod}",
                            "name": "shipping_method",
                            "text": "",
                            "theRestString": "@return {Number} The internal id of the added internal id"
                        },
                        {
                            "annotation": "return",
                            "type": "{Number}",
                            "name": "The",
                            "text": "internal id of the added internal id",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        573564,
                        573817
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "addAddress": {
                    "annotation": "method",
                    "name": "addAddress",
                    "text": "Auxiliary method to generate address ids from its properties",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Model.Attributes}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@return {String} address id"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "address",
                            "text": "id",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        574264,
                        574423
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getAddressInternalId": {
                    "annotation": "method",
                    "name": "getAddressInternalId",
                    "text": "Internal method used to generate the internal id of an address",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Model.Attributes}",
                            "name": "address",
                            "text": "",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        575158,
                        575318
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "update": {
                    "annotation": "method",
                    "name": "update",
                    "text": "Updates a transaction",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "record_type",
                            "text": "",
                            "theRestString": "@param {Number} id _lineCommentSeparatorMark_ @param {Transaction.Model.UpdateAttributes} data_model _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "id",
                            "text": "",
                            "theRestString": "@param {Transaction.Model.UpdateAttributes} data_model _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.UpdateAttributes}",
                            "name": "data_model",
                            "text": "",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        575761,
                        575932
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setMemo": {
                    "annotation": "method",
                    "name": "setMemo",
                    "text": "Sets the memo attribute into the current transaction \n This method does not use any parameters as it use this.data and this.record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        576642,
                        576811
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setPaymentMethod": {
                    "annotation": "method",
                    "name": "setPaymentMethod",
                    "text": "Update in the current record the set payment method \n This method does not use any parameters as it use this.data and this.record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        576980,
                        577157
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setAddress": {
                    "annotation": "method",
                    "name": "setAddress",
                    "text": "Set the shipping address for the current transaction when performing an update \n This method does not accept any parameter as it used this.data and this.record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prefix",
                            "text": "Possible values are 'bill' or 'ship' depending on the address, if it is removing billing address or shipping address",
                            "theRestString": "@param {String} address_id _lineCommentSeparatorMark_ @param {String} other_address_name Name of the other address to compare in case of address creation and _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "address_id",
                            "text": "",
                            "theRestString": "@param {String} other_address_name Name of the other address to compare in case of address creation and _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "other_address_name",
                            "text": "Name of the other address to compare in case of address creation and",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        577725,
                        578209
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "hasCurrentCustomerAddress": {
                    "annotation": "method",
                    "name": "hasCurrentCustomerAddress",
                    "text": "Indicate if certain address id exist in the current user or not",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "address_id",
                            "text": "",
                            "theRestString": "@return {Boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        579146,
                        579298
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "createAddress": {
                    "annotation": "method",
                    "name": "createAddress",
                    "text": "Creates an address for the current user",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Address.Data.Model}",
                            "name": "address_model",
                            "text": "",
                            "theRestString": "@return {String} internal id of the new created address"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "internal",
                            "text": "id of the new created address",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        579485,
                        579654
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "removeAddress": {
                    "annotation": "method",
                    "name": "removeAddress",
                    "text": "Auxiliary method used when updated a transaction to remove selected address \n This method does not accept any parameter as it used this.data and this.record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prefix",
                            "text": "Possible values are 'bill' or 'ship' depending on the address, if it is removing billing address or shipping address",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        579780,
                        580125
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setLines": {
                    "annotation": "method",
                    "name": "setLines",
                    "text": "Set the line of a transaction when performing an update \n This method does not accept any parameter as it used this.data and this.record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        580941,
                        581117
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setLinesRemoveLines": {
                    "annotation": "method",
                    "name": "setLinesRemoveLines",
                    "text": "Extension method used to apply extra logic when removing lines from the current transaction",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "current_transaction",
                            "text": "",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        582062,
                        582247
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setLinesUpdateLines": {
                    "annotation": "method",
                    "name": "setLinesUpdateLines",
                    "text": "Extension method used to set extra values into line when they are being added/updated into the current transaction",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.set.Line}",
                            "name": "line",
                            "text": "",
                            "theRestString": "@param {nlobjRecord} current_transaction _lineCommentSeparatorMark_ @return {Void}"
                        },
                        {
                            "annotation": "param",
                            "type": "{nlobjRecord}",
                            "name": "current_transaction",
                            "text": "",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        582295,
                        582548
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "removeAllItemLines": {
                    "annotation": "method",
                    "name": "removeAllItemLines",
                    "text": "Auxiliary method used to remove all lines of the current transaction \n This method does not accept any parameter as it used this.data and this.record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        582598,
                        582797
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setPaymentMethodINVOICE": {
                    "annotation": "method",
                    "name": "setPaymentMethodINVOICE",
                    "text": "Internal method to set an invoice payment method into the current record. \n Used to update the current record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Get.PaymentMethod}",
                            "name": "payment_method",
                            "text": "",
                            "theRestString": "@return {Void}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        583042,
                        583270
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "setPaymentMethodCREDITCARD": {
                    "annotation": "method",
                    "name": "setPaymentMethodCREDITCARD",
                    "text": "Internal method to set a credit card payment method into the current record. \n Used to update the current record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Get.PaymentMethod}",
                            "name": "payment_method",
                            "text": "",
                            "theRestString": "@return {Void} _lineCommentSeparatorMark_ WARNING! We throw an error in case our CreditCard hasn't name. This is a workaround because this should come from backend. _lineCommentSeparatorMark_ Please remove the conditional when issue #368300 is fixed."
                        },
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "_lineCommentSeparatorMark_",
                            "text": "WARNING! We throw an error in case our CreditCard hasn't name. This is a workaround because this should come from backend. \n Please remove the conditional when issue #368300 is fixed.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        583484,
                        583908
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "removePaymentMethod": {
                    "annotation": "method",
                    "name": "removePaymentMethod",
                    "text": "Removes the specified payment method from the current record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        584444,
                        584553
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "preSubmitRecord": {
                    "annotation": "method",
                    "name": "preSubmitRecord",
                    "text": "Overridable method used to execute any logic before submit a transaction record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        584953,
                        585156
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "postSubmitRecord": {
                    "annotation": "method",
                    "name": "postSubmitRecord",
                    "text": "Overridable method used to execute any logic before submit a transaction record",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Transaction.Model.Confirmation}",
                            "name": "confirmation_result",
                            "text": "",
                            "theRestString": "@return {Transaction.Model.Confirmation}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Confirmation}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        585196,
                        585411
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "submit": {
                    "annotation": "method",
                    "name": "submit",
                    "text": "Saves the current record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Confirmation}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        585506,
                        585592
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "preList": {
                    "annotation": "method",
                    "name": "preList",
                    "text": "Overridable method used to execute any logic before list() executes",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        586042,
                        586146
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "postList": {
                    "annotation": "method",
                    "name": "postList",
                    "text": "Overridable method used to execute any logic after list() executes",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        586177,
                        586281
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "preGet": {
                    "annotation": "method",
                    "name": "preGet",
                    "text": "Overridable method used to execute any logic before get() executes",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        586313,
                        586415
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "postGet": {
                    "annotation": "method",
                    "name": "postGet",
                    "text": "Overridable method used to execute any logic after get() executes",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        586445,
                        586547
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.List.Result.Record": {
            "annotation": "class",
            "name": "Transaction.Model.List.Result.Record",
            "text": "",
            "commentRange": [
                541207,
                541252
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.List.Result.Record",
            "properties": {
                "recordtype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "recordtype",
                    "text": "",
                    "commentRange": [
                        541277,
                        541308
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        541354,
                        541385
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        541439,
                        541466
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "trandate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "trandate",
                    "text": "",
                    "commentRange": [
                        541512,
                        541541
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "status": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "status",
                    "text": "",
                    "commentRange": [
                        541591,
                        541618
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "amount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "amount",
                    "text": "",
                    "commentRange": [
                        541729,
                        541756
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "amount_formatted": {
                    "annotation": "property",
                    "type": "{Strung}",
                    "name": "amount_formatted",
                    "text": "",
                    "commentRange": [
                        541828,
                        541865
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "currency": {
                    "annotation": "property",
                    "type": "{Currency}",
                    "name": "currency",
                    "text": "",
                    "commentRange": [
                        541951,
                        541982
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Currency": {
            "annotation": "class",
            "name": "Currency",
            "text": "",
            "commentRange": [
                542027,
                542044
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Currency",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        542058,
                        542089
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        542142,
                        542167
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.Result": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Result",
            "text": "",
            "commentRange": [
                544283,
                544320
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.Result",
            "children": [],
            "properties": {
                "undefined": {
                    "annotation": "property",
                    "text": "{Currency?} currency",
                    "commentRange": [
                        547261,
                        547293
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        546749,
                        546821
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "recordtype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "recordtype",
                    "text": "",
                    "commentRange": [
                        546868,
                        546899
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tranid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tranid",
                    "text": "",
                    "commentRange": [
                        546949,
                        546976
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "memo": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "memo",
                    "text": "",
                    "commentRange": [
                        547041,
                        547066
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "trandate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "trandate",
                    "text": "",
                    "commentRange": [
                        547127,
                        547156
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "createdfrom": {
                    "annotation": "property",
                    "type": "{CreatedFrom}",
                    "name": "createdfrom",
                    "text": "",
                    "commentRange": [
                        548201,
                        548279
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "Status": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.Status}",
                    "name": "Status",
                    "text": "",
                    "commentRange": [
                        548827,
                        549170
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "promocode": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.Promocode}",
                    "name": "promocode",
                    "text": "",
                    "commentRange": [
                        550038,
                        550135
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "paymentmethods": {
                    "annotation": "property",
                    "type": "{Array<Transaction.Model.Get.PaymentMethod>}",
                    "name": "paymentmethods",
                    "text": "",
                    "commentRange": [
                        553163,
                        553275
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "summary": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.Summary}",
                    "name": "summary",
                    "text": "",
                    "commentRange": [
                        553687,
                        553779
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "lines": {
                    "annotation": "property",
                    "type": "{Array<Transaction.Model.Get.Line>}",
                    "name": "lines",
                    "text": "",
                    "commentRange": [
                        557005,
                        557099
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipmethod": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipmethod",
                    "text": "Id of the selected shipping method",
                    "commentRange": [
                        565896,
                        566003
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "addresses": {
                    "annotation": "property",
                    "type": "{Array<Address.Model.Attributes>}",
                    "name": "addresses",
                    "text": "",
                    "commentRange": [
                        570845,
                        570941
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipaddress",
                    "text": "Id of the shipping address",
                    "commentRange": [
                        572080,
                        572168
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "billaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "billaddress",
                    "text": "Id of the billing address",
                    "commentRange": [
                        572808,
                        572891
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipmethods": {
                    "annotation": "property",
                    "type": "{Array<Transaction.Model.Get.ShipMethod>}",
                    "name": "shipmethods",
                    "text": "",
                    "commentRange": [
                        573874,
                        573980
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            },
            "methods": {
                "getCreatedFrom": {
                    "annotation": "method",
                    "name": "getCreatedFrom",
                    "text": "Get the created from field for a single retrieved record",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        547499,
                        547694
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.SalesRepresentative": {
            "annotation": "class",
            "name": "Transaction.Model.Get.SalesRepresentative",
            "text": "",
            "commentRange": [
                545524,
                545574
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.SalesRepresentative",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        545586,
                        545611
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        545642,
                        545673
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} mobilephone",
                    "commentRange": [
                        546264,
                        546297
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "email": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "email",
                    "text": "",
                    "commentRange": [
                        546057,
                        546083
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "fullname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fullname",
                    "text": "",
                    "commentRange": [
                        546156,
                        546185
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "fax": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "fax",
                    "text": "",
                    "commentRange": [
                        546382,
                        546406
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.CreatedFrom": {
            "annotation": "class",
            "name": "CreatedFrom",
            "text": "",
            "commentRange": [
                548312,
                548332
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.CreatedFrom",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        548342,
                        548373
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        548418,
                        548443
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "recordtype": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "recordtype",
                    "text": "",
                    "commentRange": [
                        548499,
                        548530
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.Status": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Status",
            "text": "",
            "commentRange": [
                549198,
                549235
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.Status",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        549245,
                        549276
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        549333,
                        549358
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.Promocode": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Promocode",
            "text": "",
            "commentRange": [
                550168,
                550208
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.Promocode",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        550220,
                        550251
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        550284,
                        550309
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "code",
                    "text": "",
                    "commentRange": [
                        550337,
                        550362
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.PaymentMethod": {
            "annotation": "class",
            "name": "Transaction.Model.Get.PaymentMethod",
            "text": "",
            "commentRange": [
                551186,
                551230
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.PaymentMethod",
            "properties": {
                "type": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "type",
                    "text": "Possible values: 'creditcard', 'invoice', 'paypal'",
                    "commentRange": [
                        551261,
                        551337
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "primary": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "primary",
                    "text": "",
                    "commentRange": [
                        551395,
                        551424
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        551450,
                        551475
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{Transaction.Model.Get.PaymentMethod.CreditCard?} creditcard This value is present only if the type is creditcard",
                    "commentRange": [
                        551689,
                        551814
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.PaymentMethod.CreditCard": {
            "annotation": "class",
            "name": "Transaction.Model.Get.PaymentMethod.CreditCard",
            "text": "",
            "commentRange": [
                551850,
                551905
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.PaymentMethod.CreditCard",
            "properties": {
                "ccnumber": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ccnumber",
                    "text": "",
                    "commentRange": [
                        569142,
                        569171
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "ccexpiredate": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ccexpiredate",
                    "text": "",
                    "commentRange": [
                        569205,
                        569238
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "ccname": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ccname",
                    "text": "",
                    "commentRange": [
                        569297,
                        569324
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        552160,
                        552191
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "paymentmethod": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.PaymentMethod.CreditCard.Details}",
                    "name": "paymentmethod",
                    "text": "",
                    "commentRange": [
                        569380,
                        569462
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            },
            "children": []
        },
        "Transaction.Transaction.Model.Get.PaymentMethod.CreditCard.Details": {
            "annotation": "class",
            "name": "Transaction.Model.Get.PaymentMethod.CreditCard.Details",
            "text": "",
            "commentRange": [
                552367,
                552466
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.PaymentMethod.CreditCard.Details",
            "properties": {
                "ispaypal": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "ispaypal",
                    "text": "",
                    "commentRange": [
                        569495,
                        569596
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        569627,
                        569652
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "creditcard": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "creditcard",
                    "text": "Value: 'T'",
                    "commentRange": [
                        569695,
                        569737
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        569771,
                        569802
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} purchasenumber This value is present only of the type is invoice",
                    "commentRange": [
                        552826,
                        552912
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "paymentterms": {
                    "annotation": "property",
                    "type": "{Transaction.Model.Get.PaymentMethod.Terms}",
                    "name": "paymentterms",
                    "text": "This value is present only of the type is invoice",
                    "commentRange": [
                        552995,
                        553113
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            },
            "children": [],
            "methods": {
                "getTransactionType": {
                    "annotation": "method",
                    "name": "getTransactionType",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array}",
                            "name": "ids",
                            "text": "",
                            "theRestString": "@return {Transaction.Model.List.Result.Record}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.List.Result.Record}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        570034,
                        570137
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "getRecordAddresses": {
                    "annotation": "method",
                    "name": "getRecordAddresses",
                    "text": "Get the list of address of the current transaction",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "This",
                            "text": "method does not return anything as it works with the value of this.result and this.record",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        570609,
                        570802
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.Summary": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Summary",
            "text": "",
            "commentRange": [
                553808,
                553846
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.Summary",
            "properties": {
                "subtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "subtotal",
                    "text": "",
                    "commentRange": [
                        553856,
                        553885
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "subtotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "subtotal_formatted",
                    "text": "",
                    "commentRange": [
                        553960,
                        553999
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxtotal",
                    "text": "",
                    "commentRange": [
                        554090,
                        554119
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxtotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxtotal_formatted",
                    "text": "",
                    "commentRange": [
                        554195,
                        554234
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tax2total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "tax2total",
                    "text": "",
                    "commentRange": [
                        554325,
                        554355
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tax2total_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tax2total_formatted",
                    "text": "",
                    "commentRange": [
                        554396,
                        554436
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shippingcost": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "shippingcost",
                    "text": "",
                    "commentRange": [
                        554492,
                        554525
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shippingcost_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shippingcost_formatted",
                    "text": "",
                    "commentRange": [
                        554609,
                        554652
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "handlingcost": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "handlingcost",
                    "text": "",
                    "commentRange": [
                        554751,
                        554784
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "handlingcost_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "handlingcost_formatted",
                    "text": "",
                    "commentRange": [
                        554871,
                        554914
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "estimatedshipping": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "estimatedshipping",
                    "text": "",
                    "commentRange": [
                        555016,
                        555054
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "estimatedshipping_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "estimatedshipping_formatted",
                    "text": "",
                    "commentRange": [
                        555085,
                        555133
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxonshipping": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxonshipping",
                    "text": "",
                    "commentRange": [
                        555197,
                        555231
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxonshipping_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxonshipping_formatted",
                    "text": "",
                    "commentRange": [
                        555276,
                        555320
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discounttotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discounttotal",
                    "text": "",
                    "commentRange": [
                        555380,
                        555414
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discounttotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discounttotal_formatted",
                    "text": "",
                    "commentRange": [
                        555500,
                        555544
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxondiscount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "taxondiscount",
                    "text": "",
                    "commentRange": [
                        555645,
                        555679
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "taxondiscount_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "taxondiscount_formatted",
                    "text": "",
                    "commentRange": [
                        555724,
                        555768
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discountrate": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discountrate",
                    "text": "",
                    "commentRange": [
                        555828,
                        555861
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discountrate_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discountrate_formatted",
                    "text": "",
                    "commentRange": [
                        555945,
                        555988
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discountedsubtotal": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discountedsubtotal",
                    "text": "",
                    "commentRange": [
                        556047,
                        556086
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discountedsubtotal_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "discountedsubtotal_formatted",
                    "text": "",
                    "commentRange": [
                        556136,
                        556185
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "giftcertapplied": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "giftcertapplied",
                    "text": "",
                    "commentRange": [
                        556250,
                        556286
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "giftcertapplied_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "giftcertapplied_formatted",
                    "text": "",
                    "commentRange": [
                        556376,
                        556422
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "total",
                    "text": "",
                    "commentRange": [
                        556527,
                        556553
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "total_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "total_formatted",
                    "text": "",
                    "commentRange": [
                        556623,
                        556659
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.Get.Line": {
            "annotation": "class",
            "name": "Transaction.Model.Get.Line",
            "text": "",
            "commentRange": [
                558550,
                558585
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.Line",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        558628,
                        558659
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "quantity": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "quantity",
                    "text": "",
                    "commentRange": [
                        558692,
                        558721
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "rate": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "rate",
                    "text": "",
                    "commentRange": [
                        558811,
                        558836
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "amount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "amount",
                    "text": "",
                    "commentRange": [
                        558861,
                        558888
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tax_amount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "tax_amount",
                    "text": "",
                    "commentRange": [
                        558917,
                        558948
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tax_rate": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "tax_rate",
                    "text": "",
                    "commentRange": [
                        558985,
                        559014
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "tax_code": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "tax_code",
                    "text": "",
                    "commentRange": [
                        559090,
                        559119
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "isfulfillable": {
                    "annotation": "property",
                    "type": "{Boolean}",
                    "name": "isfulfillable",
                    "text": "",
                    "commentRange": [
                        559202,
                        559237
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "discount": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "discount",
                    "text": "",
                    "commentRange": [
                        559329,
                        559358
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "total": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "total",
                    "text": "",
                    "commentRange": [
                        559384,
                        559410
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "item": {
                    "annotation": "property",
                    "type": "{Item}",
                    "name": "item",
                    "text": "",
                    "commentRange": [
                        559437,
                        559460
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "type": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "type",
                    "text": "",
                    "commentRange": [
                        559488,
                        559513
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "options": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "options",
                    "text": "",
                    "commentRange": [
                        559543,
                        559571
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipaddress": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipaddress",
                    "text": "",
                    "commentRange": [
                        559673,
                        559705
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipmethod": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipmethod",
                    "text": "",
                    "commentRange": [
                        559884,
                        559915
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.PreLoadItemData": {
            "annotation": "class",
            "name": "Transaction.Model.PreLoadItemData",
            "text": "",
            "commentRange": [
                560012,
                560054
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.PreLoadItemData",
            "properties": {
                "id": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "id",
                    "text": "",
                    "commentRange": [
                        560096,
                        560119
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "type": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "type",
                    "text": "",
                    "commentRange": [
                        560144,
                        560169
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.PreloadedItems": {
            "annotation": "class",
            "name": "PreloadedItems",
            "text": "In this class each property is the id of an item and each property's value if the item itself",
            "commentRange": [
                561187,
                561340
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.PreloadedItems"
        },
        "Transaction.Transaction.Model.Get.ShipMethod": {
            "annotation": "class",
            "name": "Transaction.Model.Get.ShipMethod",
            "text": "",
            "commentRange": [
                564739,
                564780
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Get.ShipMethod",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        564815,
                        564846
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        564909,
                        564934
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "rate": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "rate",
                    "text": "",
                    "commentRange": [
                        564991,
                        565016
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "rate_formatted": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "rate_formatted",
                    "text": "",
                    "commentRange": [
                        565095,
                        565130
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "shipcarrier": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "shipcarrier",
                    "text": "",
                    "commentRange": [
                        565223,
                        565255
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.UpdateAttributes": {
            "annotation": "class",
            "name": "Transaction.Model.UpdateAttributes",
            "text": "",
            "commentRange": [
                577312,
                577431
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.UpdateAttributes",
            "properties": {
                "paymentmethods": {
                    "annotation": "property",
                    "type": "{Array<Transaction.Model.Get.PaymentMethod>}",
                    "name": "paymentmethods",
                    "text": "",
                    "commentRange": [
                        577312,
                        577431
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "lines": {
                    "annotation": "property",
                    "type": "{Array<Transaction.Model.set.Line>}",
                    "name": "lines",
                    "text": "",
                    "commentRange": [
                        581233,
                        581334
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            },
            "children": []
        },
        "Transaction.Transaction.Model.Confirmation": {
            "annotation": "class",
            "name": "Transaction.Model.Confirmation",
            "text": "",
            "commentRange": [
                585831,
                585870
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.Confirmation",
            "properties": {
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        585892,
                        585923
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.List.Result": {
            "annotation": "class",
            "name": "Transaction.Model.List.Result",
            "text": "",
            "commentRange": [
                586586,
                588059
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.List.Result",
            "properties": {
                "totalRecordsFound": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "totalRecordsFound",
                    "text": "",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "page": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "page",
                    "text": "",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "records": {
                    "annotation": "property",
                    "type": "{Arra<Transaction.Model.List.Result.Record>}",
                    "name": "records",
                    "text": "",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.List.Parameters": {
            "annotation": "class",
            "name": "Transaction.Model.List.Parameters",
            "text": "",
            "commentRange": [
                586586,
                588059
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.List.Parameters",
            "properties": {
                "undefined": {
                    "annotation": "property",
                    "text": "{String?} filter Generic filter value",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.Model.set.Line": {
            "annotation": "class",
            "name": "Transaction.Model.set.Line",
            "text": "",
            "commentRange": [
                586586,
                588059
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.Model.set.Line",
            "properties": {
                "quantity": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "quantity",
                    "text": "",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "internalid": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "internalid",
                    "text": "",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "options": {
                    "annotation": "property",
                    "type": "{Object}",
                    "name": "options",
                    "text": "This object is used like a dictionary where each property indicate the option name and the value of the property is the property value",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                },
                "item": {
                    "annotation": "property",
                    "type": "{Item}",
                    "name": "item",
                    "text": "When updated or creating a transaction only the type and id are mandatory the rest of the field of this class are optional",
                    "commentRange": [
                        586586,
                        588059
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
                }
            }
        },
        "Transaction.Transaction.ServiceController": {
            "annotation": "class",
            "name": "Transaction.ServiceController",
            "text": "List transactions",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                588230,
                588318
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.Transaction.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        588359,
                        588423
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions"
                },
                "options.": {
                    "annotation": "property",
                    "type": "{Service.ValidationOptions}",
                    "name": "options.",
                    "text": "All the required validation, permissions, etc. \n The values in this object are the validation needed for the current service. \n Can have values for all the request methods ('common' values) and specific for each one.",
                    "commentRange": [
                        588469,
                        588743
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions"
                }
            },
            "methods": {
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to Transaction.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Transaction.Model.Get.Result || Transaction.Model.List.Result}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        588812,
                        588990
                    ],
                    "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions"
                }
            }
        },
        "Transaction.TransactionHistory.ServiceController": {
            "annotation": "class",
            "name": "TransactionHistory.ServiceController",
            "text": "List transactions",
            "children": [
                {
                    "annotation": "extend",
                    "name": "ServiceController",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                590708,
                590803
            ],
            "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions",
            "module": {
                "annotation": "module",
                "name": "Transaction",
                "text": "",
                "commentRange": [
                    536784,
                    536905
                ],
                "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
            },
            "absoluteName": "Transaction.TransactionHistory.ServiceController",
            "properties": {
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "Mandatory for all ssp-libraries model",
                    "commentRange": [
                        590844,
                        590907
                    ],
                    "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions"
                }
            },
            "methods": {
                "_validatePermission": {
                    "annotation": "method",
                    "name": "_validatePermission",
                    "text": "Validate permissions of this specific Service Controller. We use this function as an exception here, \n because the validation conditions are particular and not repeated in other services.",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Void}",
                            "name": "If",
                            "text": "the validation fails, we throw an error",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        591025,
                        591311
                    ],
                    "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions"
                },
                "get": {
                    "annotation": "method",
                    "name": "get",
                    "text": "The call to TransactionHistory.Service.ss with http method 'get' is managed by this function",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{TransactionHistoryModel.list}",
                            "name": "A",
                            "text": "list featuring the transaction history",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        591704,
                        591897
                    ],
                    "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions"
                }
            }
        },
        "javascript.Boolean": {
            "annotation": "class",
            "name": "Boolean",
            "text": "#Summary\nThe Boolean object is an object wrapper for a boolean value.\n\n#Constructor\n\tnew Boolean(value)\n\n#Description\nThe value passed as the first parameter is converted to a boolean value, if necessary. If value is omitted or is 0, -0, null, false, NaN, undefined, or the empty string (\"\"), the object has an initial value of false. All other values, including any object or the string \"false\", create an object with an initial value of true.\n\nDo not confuse the primitive Boolean values true and false with the true and false values of the Boolean object.\n\nAny object whose value is not undefined or null, including a Boolean object whose value is false, evaluates to true when passed to a conditional statement. For example, the condition in the following if statement evaluates to true:\n\n\tx = new Boolean(false);\n\tif (x) {\n\t  // . . . this code is executed\n\t}\n\tThis behavior does not apply to Boolean primitives. For example, the condition in the following if statement evaluates to false:\n\n\tx = false;\n\tif (x) {\n\t  // . . . this code is not executed\n\t}\nDo not use a Boolean object to convert a non-boolean value to a boolean value. Instead, use Boolean as a function to perform this task:\n\n\tx = Boolean(expression);     // preferred\n\tx = new Boolean(expression); // don't use\n\tIf you specify any object, including a Boolean object whose value is false, as the initial value of a Boolean object, the new Boolean object has a value of true.\n\n\tmyFalse = new Boolean(false);   // initial value of false\n\tg = new Boolean(myFalse);       // initial value of true\n\tmyString = new String(\"Hello\"); // string object\n\ts = new Boolean(myString);      // initial value of true\n\tDo not use a Boolean object in place of a Boolean primitive.\n\n#Properties\nFor properties available on Boolean instances, see Properties of Boolean instances.\n\nBoolean.length\nLength property whose value is 1.\nBoolean.prototype\nRepresents the prototype for the Boolean constructor.\n#Properties inherited from Function:\narity, caller, constructor, length, name\n##Methods\nFor methods available on Boolean instances, see Methods of Boolean instances.\n\nThe global Boolean object contains no methods of its own, however, it does inherit some methods through the prototype chain:\n\n#Methods inherited from Function:\napply, call, toSource, toString\n\n#Boolean instances\nAll Boolean instances inherit from Boolean.prototype. As with all constructors, the prototype object dictates instances' inherited properties and methods.\n\n#Properties\n\nBoolean.prototype.constructor\nReturns the function that created an instance's prototype. This is the Boolean function by default.\nProperties inherited from Object:\n__parent__, __proto__\n#Methods\n\nBoolean.prototype.toSource() \nReturns a string containing the source of the Boolean object; you can use this string to create an equivalent object. Overrides the Object.prototype.toSource() method.\nBoolean.prototype.toString()\nReturns a string of either \"true\" or \"false\" depending upon the value of the object. Overrides the Object.prototype.toString() method.\nBoolean.prototype.valueOf()\nReturns the primitive value of the Boolean object. Overrides the Object.prototype.valueOf() method.\n\n\n#Examples\nCreating Boolean objects with an initial value of false\n\n\tvar bNoParam = new Boolean();\n\tvar bZero = new Boolean(0);\n\tvar bNull = new Boolean(null);\n\tvar bEmptyString = new Boolean(\"\");\n\tvar bfalse = new Boolean(false);\n\tCreating Boolean objects with an initial value of true\n\n\tvar btrue = new Boolean(true);\n\tvar btrueString = new Boolean(\"true\");\n\tvar bfalseString = new Boolean(\"false\");\n\tvar bSuLin = new Boolean(\"Su Lin\");",
            "commentRange": [
                766821,
                770489
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    766821,
                    770489
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js"
            },
            "absoluteName": "javascript.Boolean",
            "methods": {
                "valueOf": {
                    "annotation": "method",
                    "name": "valueOf",
                    "text": "#Summary\nThe valueOf() method returns the primitive value of a Boolean object.\n\n#Syntax\n\tbool.valueOf()\n\n#Description\nThe valueOf method of Boolean returns the primitive value of a Boolean object or literal Boolean as a Boolean data type.\n\nThis method is usually called internally by JavaScript and not explicitly in code.\n\n#Examples\n##Example: Using valueOf\n\n\tx = new Boolean();\n\tmyVar = x.valueOf()      // assigns false to myVar",
                    "commentRange": [
                        770492,
                        770945
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js"
                }
            }
        },
        "javascript.Error": {
            "annotation": "class",
            "name": "Error",
            "text": "#Summary\nThe Error constructor creates an error object. Instances of Error objects are thrown when runtime errors occur. The Error object can also be used as a base objects for user-defined exceptions. See below for standard built-in error types.\n\n#Syntax\n\tnew Error([message[, fileName[,lineNumber]]])\n#Description\nRuntime errors result in new Error objects being created and thrown.\n\nThis page documents the use of the Error object itself and its use as a constructor function. For a list of properties and methods inherited by Error instances, see Error.prototype.\n\n#Error types\n\nBesides the generic Error constructor, there are six other core error constructors in JavaScript. For client-side exceptions, see Exception Handling Statements.\n\n\tEvalError\n\tCreates an instance representing an error that occurs regarding the global function eval().\n\tInternalError \n\tCreates an instance representing an error that occurs when an internal error in the JavaScript engine is thrown. E.g. \"too much recursion\".\n\tRangeError\n\tCreates an instance representing an error that occurs when a numeric variable or parameter is outside of its valid range.\n\tReferenceError\n\tCreates an instance representing an error that occurs when de-referencing an invalid reference.\n\tSyntaxError\n\tCreates an instance representing a syntax error that occurs while parsing code in eval().\n\tTypeError\n\tCreates an instance representing an error that occurs when a variable or parameter is not of a valid type.\n\tURIError\n\tCreates an instance representing an error that occurs when encodeURI() or decodeURl() are passed invalid parameters.\n\n#Properties\nError.prototype\nAllows the addition of properties to Error instances.\n#Methods\nThe global Error object contains no methods of its own, however, it does inherit some methods through the prototype chain.\n\n#Error instances\nAll Error instances and instances of non-generic errors inherit from Error.prototype. As with all constructor functions, you can use the prototype of the constructor to add properties or methods to all instances created with that constructor.\n\n#Properties\n\n##Standard properties\n\nError.prototype.constructor\nSpecifies the function that created an instance's prototype.\n\tError.prototype.message\n\tError message.\n\tError.prototype.name\n\tError name.\n\n\n#Vendor-specific extensions\n\n##Non-standard\nThis feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n##Microsoft\n\n\tError.prototype.description\n\tError description. Similar to message.\n\tError.prototype.number\n\tError number.\n##Mozilla\n\n\tError.prototype.fileName\n\tPath to file that raised this error.\n\tError.prototype.lineNumber\n\tLine number in file that raised this error.\n\tError.prototype.columnNumber\n\tColumn number in line that raised this error.\n\tError.prototype.stack\n\tStack trace.\n\n#Examples\n##Example: Throwing a generic error\n\nUsually you create an Error object with the intention of raising it using the throw keyword. You can handle the error using the try...catch construct:\n\n\ttry {\n\t  throw new Error(\"Whoops!\");\n\t} catch (e) {\n\t  alert(e.name + \": \" + e.message);\n\t}\n\tExample: Handling a specific error\n\n\tYou can choose to handle only specific error types by testing the error type with the error's constructor property or, if you're writing for modern JavaScript engines, instanceof keyword:\n\n\ttry {\n\t  foo.bar();\n\t} catch (e) {\n\t  if (e instanceof EvalError) {\n\t    alert(e.name + \": \" + e.message);\n\t  } else if (e instanceof RangeError) {\n\t    alert(e.name + \": \" + e.message);\n\t  }\n\t  // ... etc\n\t}\n##Custom Error Types\n\nYou might want to define your own error types deriving from Error to be able to throw new MyError() and use instanceof MyError to check the kind of error in the exception handler. The common way to do this is demonstrated below.\n\nNote that the thrown MyError will report incorrect lineNumber and fileName at least in Firefox.\nSee also the \"What's a good way to extend Error in JavaScript?\" discussion on Stackoverflow.\n\n\t// Create a new object, that prototypally inherits from the Error constructor.\n\tfunction MyError(message) {\n\t  this.name = \"MyError\";\n\t  this.message = message || \"Default Message\";\n\t}\n\tMyError.prototype = new Error();\n\tMyError.prototype.constructor = MyError;\n\n\ttry {\n\t  throw new MyError();\n\t} catch (e) {\n\t  console.log(e.name);     // \"MyError\"\n\t  console.log(e.message);  // \"Default Message\"\n\t}\n\n\ttry {\n\t  throw new MyError(\"custom message\");\n\t} catch (e) {\n\t  console.log(e.name);     // \"MyError\"\n\t  console.log(e.message);  // \"custom message\"\n\t}",
            "commentRange": [
                771038,
                775772
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.Error",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Boolean",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "message",
                            "text": "Human-readable description of the error",
                            "theRestString": "@param {String} fileName The value for the fileName property on the created Error object. Defaults to the name of the file containing the code that called the Error() constructor.\n@param {Number} lineNumber The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation."
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "fileName",
                            "text": "The value for the fileName property on the created Error object. Defaults to the name of the file containing the code that called the Error() constructor.",
                            "theRestString": "@param {Number} lineNumber The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation."
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "lineNumber",
                            "text": "The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        775774,
                        776214
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "message",
                            "text": "Human-readable description of the error",
                            "theRestString": "@param {String} fileName The value for the fileName property on the created Error object. Defaults to the name of the file containing the code that called the Error() constructor.\n@param {Number} lineNumber The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation."
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "fileName",
                            "text": "The value for the fileName property on the created Error object. Defaults to the name of the file containing the code that called the Error() constructor.",
                            "theRestString": "@param {Number} lineNumber The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation."
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "lineNumber",
                            "text": "The value for the lineNumber property on the created Error object. Defaults to the line number containing the Error() constructor invocation.",
                            "theRestString": ""
                        }
                    ],
                    "throws": []
                }
            ],
            "properties": {
                "message": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "message",
                    "text": "#Summary\nThe message property is a human-readable description of the error.\n\n#Description\nThis property contains a brief description of the error if one is available or has been set. SpiderMonkey makes extensive use of the message property for exceptions. The message property combined with the name property is used by the Error.prototype.toString() method to create a string representation of the Error.\n\nBy default, the message property is an empty string, but this behavior can be overridden for an instance by specifying a message as the first argument to the Error constructor.\n\n#Examples\n##Example: Throwing a custom error\n\n\tvar e = new Error(\"Could not parse input\"); // e.message is \"Could not parse input\"\n\tthrow e;",
                    "commentRange": [
                        776218,
                        776977
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "#Summary\nThe name property represents a name for the type of error. The initial value is \"Error\".\n\n#Description\nBy default, Error instances are given the name \"Error\". The name property, in addition to the message property, is used by the Error.prototype.toString() method to create a string representation of the error.\n\n#Examples\n##Example: Throwing a custom error\n\n\tvar e = new Error(\"Malformed input\"); // e.name is \"Error\"\n\n\te.name = \"ParseError\"; \n\tthrow e;\n\t// e.toString() would return \"ParseError: Malformed input\"",
                    "commentRange": [
                        776983,
                        777537
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
                }
            }
        },
        "javascript.EvalError": {
            "annotation": "class",
            "name": "EvalError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "The EvalError object indicates an error regarding the global eval() function.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                777542,
                777657
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.EvalError"
        },
        "javascript.RangeError": {
            "annotation": "class",
            "name": "RangeError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "The RangeError object indicates an error when a value is not in the set or range of allowed values.\n\nA RangeError is thrown when trying to pass a number as an argument to a function that does not allow a range that includes that number. This can be encountered when to create an array of an illegal length with the Array constructor, or when passing bad values to the numeric methods Number.toExponential(), Number.toFixed() or Number.toPrecision().",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                777659,
                778148
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.RangeError"
        },
        "javascript.ReferenceError": {
            "annotation": "class",
            "name": "ReferenceError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "#Summary\nThe ReferenceError object represents an error when a non-existent variable is referenced.\n\n#Description\nA ReferenceError is thrown when trying to dereference a variable that has not been declared.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                778151,
                778399
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.ReferenceError"
        },
        "javascript.SyntaxError": {
            "annotation": "class",
            "name": "SyntaxError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "#Summary\nThe SyntaxError object represents an error when trying to interpret syntactically invalid code.\n\n#Description\nA SyntaxError is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                778403,
                778717
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.SyntaxError"
        },
        "javascript.TypeError": {
            "annotation": "class",
            "name": "TypeError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "The TypeError object represents an error when a value is not of the expected type.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                778720,
                778840
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.TypeError"
        },
        "javascript.URIError": {
            "annotation": "class",
            "name": "URIError",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Error",
                    "text": "The URIError object represents an error when a global URI handling function was used in a wrong way.",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                778842,
                778980
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    771038,
                    775772
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
            },
            "absoluteName": "javascript.URIError"
        },
        "javascript.Function": {
            "annotation": "class",
            "name": "Function",
            "text": "#Summary\nThe Function.prototype property represents the Function prototype object.\n\n#Description\nFunction objects inherit from Function.prototype.  Function.prototype cannot be modified.",
            "commentRange": [
                779077,
                779306
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    779077,
                    779306
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
            },
            "absoluteName": "javascript.Function",
            "properties": {
                "length": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "length",
                    "text": "#Summary\nThe length property specifies the number of arguments expected by the function.\n\n#Description\nlength is a property of a function object, and indicates how many arguments the function expects, i.e. the number of formal parameters. This number does not include the rest parameter. By contrast, arguments.length is local to a function and provides the number of arguments actually passed to the function.\n\nData property of the Function constructor\n\nThe Function constructor is itself a Function object. It's length data property has a value of 1. The property attributes are: Writable: false, Enumerable: false, Configurable: true.\n\nProperty of the Function prototype object\n\nThe length property of the Function prototype object has a value of 0.\n\n#Examples\n\tconsole.log ( Function.length ); //1\n\n\tconsole.log( (function ()        {}).length ); //0\n\tconsole.log( (function (a)       {}).length ); //1\n\tconsole.log( (function (a, b)    {}).length ); //2 etc. \n\tconsole.log( (function (...args) {}).length ); //0, rest parameter is no",
                    "commentRange": [
                        779309,
                        780381
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                },
                "prototype": {
                    "annotation": "property",
                    "type": "{FunctionPrototype}",
                    "name": "prototype",
                    "text": "#Summary\nThe Function.prototype property represents the Function prototype object.\n\n#Description\nFunction objects inherit from Function.prototype.  Function.prototype cannot be modified.",
                    "commentRange": [
                        780384,
                        780616
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                }
            },
            "methods": {
                "apply": {
                    "annotation": "method",
                    "name": "apply",
                    "text": "The apply() method calls a function with a given this value and arguments provided as an array (or an array-like object).\n\nNote: While the syntax of this function is almost identical to that of call(), the fundamental difference is that call() accepts an argument list, while apply() accepts a single array of arguments.\n#Syntax\n\tfun.apply(thisArg, [argsArray])\n#Description\nYou can assign a different this object when calling an existing function. this refers to the current object, the calling object. With apply, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.\n\napply is very similar to call(), except for the type of arguments it supports. You can use an arguments array instead of a named set of parameters. With apply, you can use an array literal, for example, fun.apply(this, ['eat', 'bananas']), or an Array object, for example, fun.apply(this, new Array('eat', 'bananas')).\n\nYou can also use arguments for the argsArray parameter. arguments is a local variable of a function. It can be used for all unspecified arguments of the called object. Thus, you do not have to know the arguments of the called object when you use the apply method. You can use arguments to pass all the arguments to the called object. The called object is then responsible for handling the arguments.\n\nSince ECMAScript 5th Edition you can also use any kind of object which is array-like, so in practice this means it's going to have a property length and integer properties in the range [0...length). As an example you can now use a NodeList or a own custom object like {'length': 2, '0': 'eat', '1': 'bananas'}.\n\nNote: Most browsers, including Chrome 14 and Internet Explorer 9, still do not accept array-like objects and will throw an exception.\n#Examples\nUsing apply to chain constructors\n\nYou can use apply to chain constructors for an object, similar to Java. In the following example we will create a global Function method called construct, which will make you able to use an array-like object with a constructor instead of an arguments list.\n\n\tFunction.prototype.construct = function (aArgs) {\n\t    var fConstructor = this, fNewConstr = function () { fConstructor.apply(this, aArgs); };\n\t    fNewConstr.prototype = fConstructor.prototype;\n\t    return new fNewConstr();\n\t};\n\nExample usage:\n\n\tfunction MyConstructor () {\n\t    for (var nProp = 0; nProp < arguments.length; nProp++) {\n\t        this[\"property\" + nProp] = arguments[nProp];\n\t    }\n\t}\n\n\tvar myArray = [4, \"Hello world!\", false];\n\tvar myInstance = MyConstructor.construct(myArray);\n\n\talert(myInstance.property1); // alerts \"Hello world!\"\n\talert(myInstance instanceof MyConstructor); // alerts \"true\"\n\talert(myInstance.constructor); // alerts \"MyConstructor\"\n\nNote: This non-native Function.construct method will not work with some native constructors (like Date, for example). In these cases you have to use the Function.bind method (for example, imagine to have an array like the following, to be used with Date constructor: [2012, 11, 4]; in this case you have to write something like: new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))() – anyhow this is not the best way to do things and probably should not be used in any production environment).\nUsing apply and built-in functions\n\nClever usage of apply allows you to use built-ins functions for some tasks that otherwise probably would have been written by looping over the array values. As an example here we are going to use Math.max/Math.min to find out the maximum/minimum value in an array.\n\n\t//min/max number in an array \n\tvar numbers = [5, 6, 2, 3, 7];\n\n\t//using Math.min/Math.max apply \n\tvar max = Math.max.apply(null, numbers); // This about equal to Math.max(numbers[0], ...) or Math.max(5, 6, ..) \n\tvar min = Math.min.apply(null, numbers);\n\n\t/ vs. simple loop based algorithm \n\tmax = -Infinity, min = +Infinity;\n\n\tfor (var i = 0; i < numbers.length; i++) {\n\t  if (numbers[i] > max)\n\t    max = numbers[i];\n\t  if (numbers[i] < min) \n\t    min = numbers[i];\n\t}\n\nBut beware: in using apply this way, you run the risk of exceeding the JavaScript engine's argument length limit. The consequences of applying a function with too many arguments (think more than tens of thousands of arguments) vary across engines (JavaScriptCore has hard-coded argument limit of 65536), because the limit (indeed even the nature of any excessively-large-stack behavior) is unspecified. Some engines will throw an exception. More perniciously, others will arbitrarily limit the number of arguments actually passed to the applied function. (To illustrate this latter case: if such an engine had a limit of four arguments [actual limits are of course significantly higher], it would be as if the arguments 5, 6, 2, 3 had been passed to apply in the examples above, rather than the full array.) If your value array might grow into the tens of thousands, use a hybrid strategy: apply your function to chunks of the array at a time:\n\n\tfunction minOfArray(arr) {\n\t  var min = Infinity;\n\t  var QUANTUM = 32768;\n\n\t  for (var i = 0, len = arr.length; i < len; i += QUANTUM) {\n\t    var submin = Math.min.apply(null, arr.slice(i, Math.min(i + QUANTUM, len)));\n\t    min = Math.min(submin, min);\n\t  }\n\n\t  return min;\n\t}\n\n\tvar min = minOfArray([5, 6, 2, 3, 7]);\nUsing apply in \"monkey-patching\"\n\nApply can be the best way to monkey-patch a builtin function of Firefox, or JS libraries. Given someobject.foo function, you can modify the function in a somewhat hacky way, like so:\n\n\tvar originalfoo = someobject.foo;\n\tsomeobject.foo = function() {\n\t  //Do stuff before calling function\n\t  console.log(arguments);\n\t  //Call the function as it would have been called normally:\n\t  originalfoo.apply(this,arguments);\n\t  //Run stuff after, here.\n\t}\n\nThis method is especially handy where you want to debug events, or interface with something that has no API like the various .on([event]... events, such as those usable on the Devtools Inspector).",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "thisArg",
                            "text": "The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, null and undefined will be replaced with the global object, and primitive values will be boxed.",
                            "theRestString": "@param {Array} argsArray An array-like object, specifying the arguments with which fun should be called, or null or undefined if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for browser compatibility information.\n\n@returns the result of evaluating this function with given context and parameters"
                        },
                        {
                            "annotation": "param",
                            "type": "{Array}",
                            "name": "argsArray",
                            "text": "An array-like object, specifying the arguments with which fun should be called, or null or undefined if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for browser compatibility information.",
                            "theRestString": "@returns the result of evaluating this function with given context and parameters"
                        },
                        {
                            "annotation": "returns",
                            "name": "the",
                            "text": "result of evaluating this function with given context and parameters",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        780620,
                        787350
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                },
                "bind": {
                    "annotation": "method",
                    "name": "bind",
                    "text": "#Summary\nThe bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.\n\n#Syntax\n\tfun.bind(thisArg[, arg1[, arg2[, ...]]])\n\n#Description\nThe bind() function creates a new function (a bound function) with the same function body (internal call property in ECMAScript 5 terms) as the function it is being called on (the bound function's target function) with the this value bound to the first argument of bind(), which cannot be overridden. bind() also accepts leading default arguments to provide to the target function when the bound function is called. A bound function may also be constructed using the new operator: doing so acts as though the target function had instead been constructed. The provided this value is ignored, while prepended arguments are provided to the emulated function.\n\n#Examples\nCreating a bound function\n\nThe simplest use of bind() is to make a function that, no matter how it is called, is called with a particular this value. A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its this (e.g. by using that method in callback-based code). Without special care, however, the original object is usually lost. Creating a bound function from the function, using the original object, neatly solves this problem:\n\n\tthis.x = 9; \n\tvar module = {\n\t  x: 81,\n\t  getX: function() { return this.x; }\n\t};\n\n\tmodule.getX(); // 81\n\n\tvar getX = module.getX;\n\tgetX(); // 9, because in this case, \"this\" refers to the global object\n\n\t// create a new function with 'this' bound to module\n\tvar boundGetX = getX.bind(module);\n\tboundGetX(); // 81\n\n##Partial Functions\n\nThe next simplest use of bind() is to make a function with pre-specified initial arguments. These arguments (if any) follow the provided this value and are then inserted at the start of the arguments passed to the target function, followed by the arguments passed to the bound function, whenever the bound function is called.\n\n\tfunction list() {\n\t  return Array.prototype.slice.call(arguments);\n\t}\n\n\tvar list1 = list(1, 2, 3); // [1, 2, 3]\n\n\t//  Create a function with a preset leading argument\n\tvar leadingThirtysevenList = list.bind(undefined, 37);\n\n\tvar list2 = leadingThirtysevenList(); // [37]\n\tvar list3 = leadingThirtysevenList(1, 2, 3); // [37, 1, 2, 3]\n\n##With setTimeout\n\nBy default within window.setTimeout(), the this keyword will be set to the window (or global) object. When working with class methods that require this to refer to class instances, you may explicitly bind this to the callback function, in order to maintain the instance.\n\n\tfunction LateBloomer() {\n\t  this.petalCount = Math.ceil( Math.random() * 12 ) + 1;\n\t}\n\n\t// declare bloom after a delay of 1 second\n\tLateBloomer.prototype.bloom = function() {\n\t  window.setTimeout( this.declare.bind( this ), 1000 );\n\t};\n\n\tLateBloomer.prototype.declare = function() {\n\t  console.log('I am a beautiful flower with ' + \n\t    this.petalCount + ' petals!');\n\t};\n\n##Bound functions used as constructors\n\nWarning: This section demonstrates JavaScript capabilities and documents some edge cases of the bind() method. The methods shown below are not the best way to do things and probably should not be used in any production environment.\nBound functions are automatically suitable for use with the new operator to construct new instances created by the target function. When a bound function is used to construct a value, the provided this is ignored. However, provided arguments are still prepended to the constructor call:\n\n\tfunction Point(x, y) {\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\n\tPoint.prototype.toString = function() { \n\t  return this.x + \",\" + this.y; \n\t};\n\n\tvar p = new Point(1, 2);\n\tp.toString(); // \"1,2\"\n\n\n\tvar emptyObj = {};\n\tvar YAxisPoint = Point.bind(emptyObj, 0);\n\t// not supported in the polyfill below, works fine with native bind:\n\tvar YAxisPoint = Point.bind(null,0 );\n\n\tvar axisPoint = new YAxisPoint(5);\n\taxisPoint.toString(); //  \"0,5\"\n\n\taxisPoint instanceof Point; // true\n\taxisPoint instanceof YAxisPoint; // true\n\tnew Point(17, 42) instanceof YAxisPoint; // false\nNote that you need do nothing special to create a bound function for use with new. The corollary is that you need do nothing special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using new.\n\n\t// Example can be run directly in your JavaScript console\n\t// ...continuing from above\n\n\t// Can still be called as a normal function \n\t// (although usually this is undesired)\n\tYAxisPoint(13);\n\n\temptyObj.x + \",\" + emptyObj.y;\n\t// >  \"0,13\"\nIf you wish to support use of a bound function only using new, or only by calling it, the target function must enforce that restriction.\n\n##Creating shortcuts\n\nbind() is also helpful in cases where you want to create a shortcut to a function which requires a specific this value.\n\nTake Array.prototype.slice, for example, which you want to use for converting an array-like object to a real array. You could create a shortcut like this:\n\n\tvar slice = Array.prototype.slice;\n\n\t// ...\n\n\tslice.call(arguments);\n\tWith bind(), this can be simplified. In the following piece of code, slice is a bound function to the call() function of Function.prototype, with the this value set to the slice() function of Array.prototype. This means that additional call() calls can be eliminated:\n\n\t// same as \"slice\" in the previous example\n\tvar unboundSlice = Array.prototype.slice;\n\tvar slice = Function.prototype.call.bind(unboundSlice);\n\n\t// ...\n\n\tslice(arguments);\n#Polyfill\nThe bind function is a recent addition to ECMA-262, 5th edition; as such it may not be present in all browsers. You can partially work around this by inserting the following code at the beginning of your scripts, allowing use of much of the functionality of bind() in implementations that do not natively support it.\n\n\tif (!Function.prototype.bind) {\n\t  Function.prototype.bind = function (oThis) {\n\t    if (typeof this !== \"function\") {\n\t      // closest thing possible to the ECMAScript 5\n\t      // internal IsCallable function\n\t      throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t    }\n\n\t    var aArgs = Array.prototype.slice.call(arguments, 1), \n\t        fToBind = this, \n\t        fNOP = function () {},\n\t        fBound = function () {\n\t          return fToBind.apply(this instanceof fNOP && oThis\n\t                 ? this\n\t                 : oThis,\n\t                 aArgs.concat(Array.prototype.slice.call(arguments)));\n\t        };\n\n\t    fNOP.prototype = this.prototype;\n\t    fBound.prototype = new fNOP();\n\n\t    return fBound;\n\t  };\n\t}\n\nSome of the many differences (there may well be others, as this list does not seriously attempt to be exhaustive) between this algorithm and the specified algorithm are:\n\nThe partial implementation relies Array.prototype.slice, Array.prototype.concat, Function.prototype.call and Function.prototype.apply, built-in methods to have their original values.\nThe partial implementation creates functions that do not have immutable \"poison pill\" caller and arguments properties that throw a TypeError upon get, set, or deletion. (This could be added if the implementation supports Object.defineProperty, or partially implemented [without throw-on-delete behavior] if the implementation supports the __defineGetter__ and __defineSetter__ extensions.)\nThe partial implementation creates functions that have a prototype property. (Proper bound functions have none.)\nThe partial implementation creates bound functions whose length property does not agree with that mandated by ECMA-262: it creates functions with length 0, while a full implementation, depending on the length of the target function and the number of pre-specified arguments, may return a non-zero length.\nIf you choose to use this partial implementation, you must not rely on those cases where behavior deviates from ECMA-262, 5th edition! With some care, however (and perhaps with additional modification to suit specific needs), this partial implementation may be a reasonable bridge to the time when bind() is widely implemented according to the specification.",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "thisArg",
                            "text": "The value to be passed as the this parameter to the target function when the bound function is called. The value is ignored if the bound function is constructed using the new operator.",
                            "theRestString": "@param args Arguments to prepend to arguments provided to the bound function when invoking the target function."
                        },
                        {
                            "annotation": "param",
                            "name": "args",
                            "text": "Arguments to prepend to arguments provided to the bound function when invoking the target function.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        787358,
                        796042
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                },
                "call": {
                    "annotation": "method",
                    "name": "call",
                    "text": "#Summary\nThe call() method calls a function with a given this value and arguments provided individually.\n\nNOTE: While the syntax of this function is almost identical to that of apply(), the fundamental difference is that call() accepts an argument list, while apply() accepts a single array of arguments.\n#Syntax\n\tfun.call(thisArg[, arg1[, arg2[, ...]]])\n\n#Description\nYou can assign a different this object when calling an existing function. this refers to the current object, the calling object.\n\nWith call, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.\n\n#Examples\n##Using call to chain constructors for an object\n\nYou can use call to chain constructors for an object, similar to Java. In the following example, the constructor for the Product object is defined with two parameters, name and price. Two other functions Food and Toy invoke Product passing this and name and price. Product initializes the properties name and price, both specialized functions define the category.\n\n\tfunction Product(name, price) {\n\t  this.name = name;\n\t  this.price = price;\n\n\t  if (price < 0) {\n\t    throw RangeError('Cannot create product ' +\n\t                      this.name + ' with a negative price');\n\t  }\n\n\t  return this;\n\t}\n\n\tfunction Food(name, price) {\n\t  Product.call(this, name, price);\n\t  this.category = 'food';\n\t}\n\n\tFood.prototype = Object.create(Product.prototype);\n\n\tfunction Toy(name, price) {\n\t  Product.call(this, name, price);\n\t  this.category = 'toy';\n\t}\n\n\tToy.prototype = Object.create(Product.prototype);\n\n\tvar cheese = new Food('feta', 5);\n\tvar fun = new Toy('robot', 40);\n \n##Using call to invoke an anonymous function\n\nIn this purely constructed example, we create anonymous function and use call to invoke it on every object in an array. The main purpose of the anonymous function here is to add a print function to every object, which is able to print the right index of the object in the array. Passing the object as this value was not strictly necessary, but is done for explanatory purpose.\n\n\tvar animals = [\n\t  {species: 'Lion', name: 'King'},\n\t  {species: 'Whale', name: 'Fail'}\n\t];\n\n\tfor (var i = 0; i < animals.length; i++) {\n\t  (function (i) { \n\t    this.print = function () { \n\t      console.log('#' + i  + ' ' + this.species \n\t                  + ': ' + this.name); \n\t    } \n\t    this.print();\n\t  }).call(animals[i], i);\n\t}",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "thisArg",
                            "text": "The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, null and undefined will be replaced with the global object, and primitive values will be boxed.",
                            "theRestString": "@param arg1,arg2,... Arguments for the object."
                        },
                        {
                            "annotation": "param",
                            "name": "arg1",
                            "text": ",arg2,... Arguments for the object.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        796049,
                        798818
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                },
                "toString": {
                    "annotation": "method",
                    "name": "toString",
                    "text": "#Summary\nThe toString() method returns a string representing the source code of the function.\n\n#Syntax\n\tfunction.toString(indentation)\n#Description\nThe Function object overrides the toString method inherited from Object; it does not inherit Object.prototype.toString. For Function objects, the toString method returns a string representation of the object in the form of a function declaration. That is, toString decompiles the function, and the string returned includes the function keyword, the argument list, curly braces, and the source of the function body.\n\nJavaScript calls the toString method automatically when a Function is to be represented as a text value, e.g. when a function is concatenated with a string.",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        798823,
                        799584
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
                }
            }
        },
        "javascript.Number": {
            "annotation": "class",
            "name": "Number",
            "text": "#Summary\nThe Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor.\n\n#Constructor\n\tnew Number(value);\n\n#Description\nThe primary uses for the Number object are:\n\nIf the argument cannot be converted into a number, it returns NaN.\nIn a non-constructor context (i.e., without the new operator, Number can be used to perform a type conversion.\n\n\n#Examples\n##Example: Using the Number object to assign values to numeric variables\n\nThe following example uses the Number object's properties to assign values to several numeric variables:\n\n\tvar biggestNum = Number.MAX_VALUE;\n\tvar smallestNum = Number.MIN_VALUE;\n\tvar infiniteNum = Number.POSITIVE_INFINITY;\n\tvar negInfiniteNum = Number.NEGATIVE_INFINITY;\n\tvar notANum = Number.NaN;\n##Example: Integer range for Number\n\nThe following example shows minimum and maximum integer values that can be represented as Number object (for details, refer to EcmaScript standard, chapter 8.5 The Number Type):\n\n\tvar biggestInt = 9007199254740992;\n\tvar smallestInt = -9007199254740992;\n\nWhen parsing data that has been serialized to JSON, integer values falling out of this range can be expected to become corrupted when JSON parser coerces them to Number type. Using String instead is a possible workaround.\n\n##Example: Using Number to convert a Date object\n\nThe following example converts the Date object to a numerical value using Number as a function:\n\n\tvar d = new Date(\"December 17, 1995 03:24:00\");\n\tprint(Number(d));\n\nThis displays \"819199440000\".",
            "commentRange": [
                799678,
                801295
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    799678,
                    801295
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
            },
            "absoluteName": "javascript.Number",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Number",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Any}",
                            "name": "value",
                            "text": "The numeric value of the object being created.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        801297,
                        801387
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{Any}",
                            "name": "value",
                            "text": "The numeric value of the object being created.",
                            "theRestString": ""
                        }
                    ],
                    "throws": []
                }
            ],
            "properties": {
                "MAX_VALUE": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "MAX_VALUE",
                    "text": "#Summary\nThe Number.MAX_VALUE property represents the maximum numeric value representable in JavaScript.\n\n#Description\nThe MAX_VALUE property has a value of approximately 1.79E+308. Values larger than MAX_VALUE are represented as \"Infinity\".\n\nBecause MAX_VALUE is a static property of Number, you always use it as Number.MAX_VALUE, rather than as a property of a Number object you created.\n\n#Examples\n##Example: Using MAX_VALUE\n\n\tThe following code multiplies two numeric values. If the result is less than or equal to MAX_VALUE, the func1 function is called; otherwise, the func2 function is called.\n\n\tif (num1 * num2 <= Number.MAX_VALUE) {\n\t   func1();\n\t} else {\n\t   func2();\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        801394,
                        802120
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
                },
                "MIN_VALUE": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "MIN_VALUE",
                    "text": "#Summary\nThe Number.MIN_VALUE property represents the smallest positive numeric value representable in JavaScript.\n\n#Description\nThe MIN_VALUE property is the number closest to 0, not the most negative number, that JavaScript can represent.\n\nMIN_VALUE has a value of approximately 5e-324. Values smaller than MIN_VALUE (\"underflow values\") are converted to 0.\n\nBecause MIN_VALUE is a static property of Number, you always use it as Number.MIN_VALUE, rather than as a property of a Number object you created.\n\n#Examples\n##Example: Using MIN_VALUE\n\nThe following code divides two numeric values. If the result is greater than or equal to MIN_VALUE, the func1 function is called; otherwise, the func2 function is called.\n\n\tif (num1 / num2 >= Number.MIN_VALUE) {\n\t    func1();\n\t} else {\n\t    func2();\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        802124,
                        802968
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
                },
                "NEGATIVE_INFINITY": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "NEGATIVE_INFINITY",
                    "text": "#Summary\nThe Number.NEGATIVE_INFINITY property represents the negative Infinity value.\n\nYou do not have to create a Number object to access this static property (use Number.NEGATIVE_INFINITY).\n\n#Description\nThe value of Number.NEGATIVE_INFINITY is the same as the negative value of the global object's Infinity property.\n\nThis value behaves slightly differently than mathematical infinity:\n\n* Any positive value, including POSITIVE_INFINITY, multiplied by NEGATIVE_INFINITY is NEGATIVE_INFINITY.\n* Any negative value, including NEGATIVE_INFINITY, multiplied by NEGATIVE_INFINITY is POSITIVE_INFINITY.\n* Zero multiplied by NEGATIVE_INFINITY is NaN.\n* NaN multiplied by NEGATIVE_INFINITY is NaN.\n* NEGATIVE_INFINITY, divided by any negative value except NEGATIVE_INFINITY, is POSITIVE_INFINITY.\n* NEGATIVE_INFINITY, divided by any positive value except POSITIVE_INFINITY, is NEGATIVE_INFINITY.\n* NEGATIVE_INFINITY, divided by either NEGATIVE_INFINITY or POSITIVE_INFINITY, is NaN.\n* Any number divided by NEGATIVE_INFINITY is zero.\n\nYou might use the Number.NEGATIVE_INFINITY property to indicate an error condition that returns a finite number in case of success. Note, however, that isFinite would be more appropriate in such a case.\n\n#Example\nIn the following example, the variable smallNumber is assigned a value that is smaller than the minimum value. When the if statement executes, smallNumber has the value \"-Infinity\", so smallNumber is set to a more manageable value before continuing.\n\n\tvar smallNumber = (-Number.MAX_VALUE) * 2\n\n\tif (smallNumber == Number.NEGATIVE_INFINITY) {\n\t smallNumber = returnFinite();\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        802973,
                        804646
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
                },
                "NaN": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "NaN",
                    "text": "#Summary\nThe Number.NaN property represents Not-A-Number. Equivalent of NaN.\n\nYou do not have to create a Number object to access this static property (use Number.NaN).",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        804650,
                        804855
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
                },
                "POSITIVE_INFINITY": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "POSITIVE_INFINITY",
                    "text": "#Summary\nThe Number.POSITIVE_INFINITY property represents the positive Infinity value.\n\nYou do not have to create a Number object to access this static property (use Number.POSITIVE_INFINITY).\n\n#Description\nThe value of Number.POSITIVE_INFINITY is the same as the value of the global object's Infinity property.\n\nThis value behaves slightly differently than mathematical infinity:\n\n* Any positive value, including POSITIVE_INFINITY, multiplied by POSITIVE_INFINITY is POSITIVE_INFINITY.\n* Any negative value, including NEGATIVE_INFINITY, multiplied by POSITIVE_INFINITY is NEGATIVE_INFINITY.\n* Zero multiplied by POSITIVE_INFINITY is NaN.\n* NaN multiplied by POSITIVE_INFINITY is NaN.\n* POSITIVE_INFINITY, divided by any negative value except NEGATIVE_INFINITY, is NEGATIVE_INFINITY.\n* POSITIVE_INFINITY, divided by any positive value except POSITIVE_INFINITY, is POSITIVE_INFINITY.\n* POSITIVE_INFINITY, divided by either NEGATIVE_INFINITY or POSITIVE_INFINITY, is NaN.\n* Any number divided by POSITIVE_INFINITY is Zero.\n* You might use the Number.POSITIVE_INFINITY property to indicate an error condition that returns a finite number in case of success. Note, however, that isFinite would be more appropriate in such a case.\n\n#Example\nIn the following example, the variable bigNumber is assigned a value that is larger than the maximum value. When the if statement executes, bigNumber has the value \"Infinity\", so bigNumber is set to a more manageable value before continuing.\n\n\tvar bigNumber = Number.MAX_VALUE * 2\n\tif (bigNumber == Number.POSITIVE_INFINITY) {\n\t bigNumber = returnFinite();\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        804859,
                        806507
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
                }
            }
        },
        "javascript.Object": {
            "annotation": "class",
            "name": "Object",
            "text": "Adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\n\n#Description\nThe Object constructor creates an object wrapper for the given value. If the value is null or undefined, it will create and return an empty object, otherwise, it will return an object of a Type that corresponds to the given value. If the value is an object already, it will return the value.\n\nWhen called in a non-constructor context, Object behaves identically to new Object().\n\n#Object instances and Object prototype object\nAll objects in JavaScript are descended from Object; all objects inherit methods and properties from Object.prototype, although they may be overridden. For example, other constructors' prototypes override the constructor property and provide their own toString methods. Changes to the Object prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.\n\n#Examples\n##Example: Using Object given undefined and null types\n\nThe following examples store an empty Object object in o:\n\n\tvar o = new Object();\n\tvar o = new Object(undefined);\n\tvar o = new Object(null);\n##Example: Using Object to create Boolean objects\n\nThe following examples store Boolean objects in o:\n\n\t// equivalent to o = new Boolean(true);\n\tvar o = new Object(true);\n\t// equivalent to o = new Boolean(false);\n\tvar o = new Object(Boolean());",
            "commentRange": [
                806601,
                808133
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    806601,
                    808133
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
            },
            "absoluteName": "javascript.Object",
            "properties": {
                "prototype": {
                    "annotation": "property",
                    "type": "{ObjectPrototype}",
                    "name": "prototype",
                    "text": "",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        806601,
                        808133
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                }
            },
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "bla bla\n\n\t// Object initialiser or literal \n\t{ [ nameValuePair1 [, nameValuePair2 [, ...nameValuePairN] ] ] }  \n\t// Called as a constructor \n\tnew Object( [ value ] )",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "nameValuePair1",
                            "text": ",nameValuePair2,...nameValuePairN Pairs of names (strings) and values (any value) where the name is separated from the value by a colon.",
                            "theRestString": "@param value Any value."
                        },
                        {
                            "annotation": "param",
                            "name": "value",
                            "text": "Any value.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        808135,
                        808502
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js",
                    "params": [
                        {
                            "annotation": "param",
                            "name": "nameValuePair1",
                            "text": ",nameValuePair2,...nameValuePairN Pairs of names (strings) and values (any value) where the name is separated from the value by a colon.",
                            "theRestString": "@param value Any value."
                        },
                        {
                            "annotation": "param",
                            "name": "value",
                            "text": "Any value.",
                            "theRestString": ""
                        }
                    ],
                    "throws": []
                }
            ],
            "methods": {
                "__defineGetter__": {
                    "annotation": "method",
                    "name": "__defineGetter__",
                    "text": "()  \nAssociates a function with a property that, when accessed, executes that function and returns its return value.",
                    "commentRange": [
                        808518,
                        808664
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "hasOwnProperty": {
                    "annotation": "method",
                    "name": "hasOwnProperty",
                    "text": "#Summary\nThe hasOwnProperty() method returns a boolean indicating whether the object has the specified property.\n\n#Syntax\n\tobj.hasOwnProperty(prop)\n\n#Description\nEvery object descended from Object inherits the hasOwnProperty method. This method can be used to determine whether an object has the specified property as a direct property of that object; unlike the in operator, this method does not check down the object's prototype chain.\n\n#Examples\n##Example: Using hasOwnProperty to test for a property's existence\n\nThe following example determines whether the o object contains a property named prop:\n\n\to = new Object();\n\to.prop = 'exists';\n\n\tfunction changeO() {\n\t  o.newprop = o.prop;\n\t  delete o.prop;\n\t}\n\n\to.hasOwnProperty('prop');   // returns true\n\tchangeO();\n\to.hasOwnProperty('prop');   // returns false\n\tExample: Direct versus inherited properties\n\n\tThe following example differentiates between direct properties and properties inherited through the prototype chain:\n\n\to = new Object();\n\to.prop = 'exists';\n\to.hasOwnProperty('prop');             // returns true\n\to.hasOwnProperty('toString');         // returns false\n\to.hasOwnProperty('hasOwnProperty');   // returns false\n##Example: Iterating over the properties of an object\n\nThe following example shows how to iterate over the properties of an object without executing on inherit properties. Note that the for...in loop is already only iterating enumerable items, so one should not assume based on the lack of non-enumerable properties shown in the loop that hasOwnProperty itself is confined strictly to enumerable items (as with Object.getOwnPropertyNames()).\n\n\tvar buz = {\n\t  fog: 'stack'\n\t};\n\n\tfor (var name in buz) {\n\t  if (buz.hasOwnProperty(name)) {\n\t    alert('this is fog (' + name + ') for sure. Value: ' + buz[name]);\n\t  }\n\t  else {\n\t    alert(name); // toString or something else\n\t  }\n\t}\n##Example: hasOwnProperty as a property\n\nJavaScript does not protect the property name hasOwnProperty; thus, if the possibility exists that an object might have a property with this name, it is necessary to use an external hasOwnProperty to get correct results:\n\n\tvar foo = {\n\t  hasOwnProperty: function() {\n\t    return false;\n\t  },\n\t  bar: 'Here be dragons'\n\t};\n\n\tfoo.hasOwnProperty('bar'); // always returns false\n\n\t// Use another Object's hasOwnProperty and call it with 'this' set to foo\n\t({}).hasOwnProperty.call(foo, 'bar'); // true\n\n\t// It's also possible to use the hasOwnProperty property from the Object prototype for this purpose\n\tObject.prototype.hasOwnProperty.call(foo, 'bar'); // true\nNote that in the last case there are no newly created objects.",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {String}prop The name of the property to test."
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prop",
                            "text": "The name of the property to test.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        855394,
                        858116
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "isPrototypeOf": {
                    "annotation": "method",
                    "name": "isPrototypeOf",
                    "text": "#Summary\nThe isPrototypeOf() method tests for an object in another object's prototype chain.\n\nNote: isPrototypeOf differs from the instanceof operator. In the expression \"object instanceof AFunction\", the object prototype chain is checked against AFunction.prototype, not against AFunction itself.\n#Syntax\n\tprototypeObj.isPrototypeOf(obj)\n#Description\nThe isPrototypeOf method allows you to check whether or not an object exists within another object's prototype chain.\n\nFor example, consider the following prototype chain:\n\n\tfunction Fee() {\n\t  // ...\n\t}\n\n\tfunction Fi() {\n\t  // ...\n\t}\n\tFi.prototype = new Fee();\n\n\tfunction Fo() {\n\t  // ...\n\t}\n\tFo.prototype = new Fi();\n\n\tfunction Fum() {\n\t  // ...\n\t}\n\tFum.prototype = new Fo();\nLater on down the road, if you instantiate Fum and need to check if Fi's prototype exists within the Fum prototype chain, you could do this:\n\n\tvar fum = new Fum();\n\t// ...\n\n\tif (Fi.prototype.isPrototypeOf(fum)) {\n\t  // do something safe\n\t}\nThis, along with the instanceof operator particularly comes in handy if you have code that can only function when dealing with objects descended from a specific prototype chain, e.g., to guarantee that certain methods or properties will be present on that object.",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} prototypeObj An object to be tested against each link in the prototype chain of the object argument.\n@param {Object}object The object whose prototype chain will be searched.\n@returns {boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "prototypeObj",
                            "text": "An object to be tested against each link in the prototype chain of the object argument.",
                            "theRestString": "@param {Object}object The object whose prototype chain will be searched.\n@returns {boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "object",
                            "text": "The object whose prototype chain will be searched.",
                            "theRestString": "@returns {boolean}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        858124,
                        859608
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "propertyIsEnumerable": {
                    "annotation": "method",
                    "name": "propertyIsEnumerable",
                    "text": "#Summary\nThe propertyIsEnumerable() method returns a Boolean indicating whether the specified property is enumerable.\n#Syntax\n\tobj.propertyIsEnumerable(prop)\n\n#Description\nEvery object has a propertyIsEnumerable method. This method can determine whether the specified property in an object can be enumerated by a for...in loop, with the exception of properties inherited through the prototype chain. If the object does not have the specified property, this method returns false.\n\n#Examples\n##Example: A basic use of propertyIsEnumerable\n\nThe following example shows the use of propertyIsEnumerable on objects and arrays:\n\n\tvar o = {};\n\tvar a = [];\n\to.prop = 'is enumerable';\n\ta[0] = 'is enumerable';\n\n\to.propertyIsEnumerable('prop');   // returns true\n\ta.propertyIsEnumerable(0);        // returns true\n##Example: User-defined versus built-in objects\n\nThe following example demonstrates the enumerability of user-defined versus built-in properties:\n\n\tvar a = ['is enumerable'];\n\n\ta.propertyIsEnumerable(0);          // returns true\n\ta.propertyIsEnumerable('length');   // returns false\n\n\tMath.propertyIsEnumerable('random');   // returns false\n\tthis.propertyIsEnumerable('Math');     // returns false\n##Example: Direct versus inherited properties\n\n\tvar a = [];\n\ta.propertyIsEnumerable('constructor');         // returns false\n\n\tfunction firstConstructor() {\n\t  this.property = 'is not enumerable';\n\t}\n\n\tfirstConstructor.prototype.firstMethod = function() {};\n\n\tfunction secondConstructor() {\n\t  this.method = function method() { return 'is enumerable'; };\n\t}\n\n\tsecondConstructor.prototype = new firstConstructor;\n\tsecondConstructor.prototype.constructor = secondConstructor;\n\n\tvar o = new secondConstructor();\n\to.arbitraryProperty = 'is enumerable';\n\n\to.propertyIsEnumerable('arbitraryProperty');   // returns true\n\to.propertyIsEnumerable('method');              // returns true\n\to.propertyIsEnumerable('property');            // returns false\n\n\to.property = 'is enumerable';\n\n\to.propertyIsEnumerable('property');            // returns true\n\n\t// These return false as they are on the prototype which \n\t// propertyIsEnumerable does not consider (even though the last two\n\t// are iteratable with for-in)\n\to.propertyIsEnumerable('prototype');   // returns false (as of JS 1.8.1/FF3.6)\n\to.propertyIsEnumerable('constructor'); // returns false\n\to.propertyIsEnumerable('firstMethod'); // returns false",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prop",
                            "text": "The name of the property to test.",
                            "theRestString": "@return {boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        859615,
                        862122
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "toLocaleString": {
                    "annotation": "method",
                    "name": "toLocaleString",
                    "text": "#Summary\nThe toLocaleString() method returns a string representing the object. This method is meant to be overriden by derived objects for locale-specific purposes.\n\n#Syntax\n\tobj.toLocaleString();\n#Description\nObject's toLocaleString returns the result of calling toString().\n\nThis function is provided to give objects a generic toLocaleString method, even though not all may use it. See the list below.\n\nObjects overriding toLocaleString\n\n\tArray: Array.prototype.toLocaleString()\n\tNumber: Number.prototype.toLocaleString()\n\tDate: Date.prototype.toLocaleString()",
                    "commentRange": [
                        862126,
                        862717
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "toString": {
                    "annotation": "method",
                    "name": "toString",
                    "text": "#Summary\nThe toString() method returns a string representing object.\n\n#Syntax\n\tobj.toString()\n#Description\nEvery object has a toString() method that is automatically called when the object is to be represented as a text value or when an object is referred to in a manner in which a string is expected. By default, the toString() method is inherited by every object descended from Object. If this method is not overridden in a custom object, toString() returns \"[object type]\", where type is the object type. The following code illustrates this:\n\n\tvar o = new Object();\n\to.toString();           // returns [object Object]\nNote: Starting in JavaScript 1.8.5 toString() called on null returns [object Null], and undefined returns [object Undefined], as defined in the 5th Edition of ECMAScript and a subsequent Errata. See Using toString to detect object type.\n#Examples\n##Example: Overriding the default toString method\n\nYou can create a function to be called in place of the default toString() method. The toString() method takes no arguments and should return a string. The toString() method you create can be any value you want, but it will be most useful if it carries information about the object.\n\nThe following code defines the Dog object type and creates theDog, an object of type Dog:\n\n\tfunction Dog(name, breed, color, sex) {\n\t  this.name = name;\n\t  this.breed = breed;\n\t  this.color = color;\n\t  this.sex = sex;\n\t}\n\n\ttheDog = new Dog('Gabby', 'Lab', 'chocolate', 'female');\nIf you call the toString() method on this custom object, it returns the default value inherited from Object:\n\n\ttheDog.toString(); // returns [object Object]\nThe following code creates and assigns dogToString() to override the default toString() method. This function generates a string containing the name, breed, color, and sex of the object, in the form \"property = value;\".\n\n\tDog.prototype.toString = function dogToString() {\n\t  var ret = 'Dog ' + this.name + ' is a ' + this.sex + ' ' + this.color + ' ' + this.breed;\n\t  return ret;\n\t}\n\nWith the preceding code in place, any time theDog is used in a string context, JavaScript automatically calls the dogToString() function, which returns the following string:\n\n\tDog Gabby is a female chocolate Lab\n\n##Example: Using toString() to detect object class\n\ntoString() can be used with every object and allows you to get its class. To use the Object.prototype.toString() with every object, you need to call Function.prototype.call() or Function.prototype.apply() on it, passing the object you want to inspect as the first parameter called thisArg.\n\n\tvar toString = Object.prototype.toString;\n\n\ttoString.call(new Date);    // [object Date]\n\ttoString.call(new String);  // [object String]\n\ttoString.call(Math);        // [object Math]\n\n\t// Since JavaScript 1.8.5\n\ttoString.call(undefined);   // [object Undefined]\n\ttoString.call(null);        // [object Null]",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "returns",
                            "text": "a string representing object.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        862721,
                        865686
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "create": {
                    "annotation": "method",
                    "name": "create",
                    "text": "#Summary\nThe Object.create() method creates a new object with the specified prototype object and properties.\n\n#Syntax\n\tObject.create(proto[, propertiesObject])\n\n#Examples\n\n##Example: Classical inheritance with Object.create\n\nBelow is an example of how to use Object.create to achieve classical inheritance. This is for single inheritance, which is all that Javascript supports.\n\n\t// Shape - superclass\n\tfunction Shape() {\n\t  this.x = 0;\n\t  this.y = 0;\n\t}\n\n\t// superclass method\n\tShape.prototype.move = function(x, y) {\n\t  this.x += x;\n\t  this.y += y;\n\t  console.info('Shape moved.');\n\t};\n\n\t// Rectangle - subclass\n\tfunction Rectangle() {\n\t  Shape.call(this); // call super constructor.\n\t}\n\n\t// subclass extends superclass\n\tRectangle.prototype = Object.create(Shape.prototype);\n\tRectangle.prototype.constructor = Rectangle;\n\n\tvar rect = new Rectangle();\n\n\trect instanceof Rectangle; // true\n\trect instanceof Shape; // true\n\n\trect.move(1, 1); // Outputs, 'Shape moved.'\n\tIf you wish to inherit from multiple objects, then mixins are a possibility.\n\n\tfunction MyClass() {\n\t  SuperClass.call(this);\n\t  OtherSuperClass.call(this);\n\t}\n\n\tMyClass.prototype = Object.create(SuperClass.prototype); // inherit\n\tmixin(MyClass.prototype, OtherSuperClass.prototype); // mixin\n\n\tMyClass.prototype.myMethod = function() {\n\t  // do a thing\n\t};\n\nThe mixin function would copy the functions from the superclass prototype to the subclass prototype, the mixin function needs to be supplied by the user. An example of a mixin like function would be jQuery.extend.\n\n##Example: Using propertiesObject argument with Object.create\n\n\tvar o;\n\n\t// create an object with null as prototype\n\to = Object.create(null);\n\n\n\to = {};\n\t// is equivalent to:\n\to = Object.create(Object.prototype);\n\n\n\t// Example where we create an object with a couple of sample properties.\n\t// (Note that the second parameter maps keys to *property descriptors*.)\n\to = Object.create(Object.prototype, {\n\t  // foo is a regular 'value property'\n\t  foo: { writable: true, configurable: true, value: 'hello' },\n\t  // bar is a getter-and-setter (accessor) property\n\t  bar: {\n\t    configurable: false,\n\t    get: function() { return 10; },\n\t    set: function(value) { console.log('Setting `o.bar` to', value); }\n\t  }\n\t});\n\n\n\tfunction Constructor() {}\n\to = new Constructor();\n\t// is equivalent to:\n\to = Object.create(Constructor.prototype);\n\t// Of course, if there is actual initialization code in the\n\t// Constructor function, the Object.create cannot reflect it\n\n\n\t// create a new object whose prototype is a new, empty object\n\t// and a adding single property 'p', with value 42\n\to = Object.create({}, { p: { value: 42 } });\n\n\t// by default properties ARE NOT writable, enumerable or configurable:\n\to.p = 24;\n\to.p;\n\t// 42\n\n\to.q = 12;\n\tfor (var prop in o) {\n\t  console.log(prop);\n\t}\n\t// 'q'\n\n\tdelete o.p;\n\t// false\n\n\t// to specify an ES3 property\n\to2 = Object.create({}, {\n\t  p: {\n\t    value: 42,\n\t    writable: true,\n\t    enumerable: true,\n\t    configurable: true\n\t  }\n\t});\n\n##Polyfill\nThis polyfill covers the main use case which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.\n\n\tif (typeof Object.create != 'function') {\n\t  Object.create = (function() {\n\t    var Object = function() {};\n\t    return function (prototype) {\n\t      if (arguments.length > 1) {\n\t        throw Error('Second argument not supported');\n\t      }\n\t      if (typeof prototype != 'object') {\n\t        throw TypeError('Argument must be an object');\n\t      }\n\t      Object.prototype = prototype;\n\t      var result = new Object();\n\t      Object.prototype = null;\n\t      return result;\n\t    };\n\t  })();\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} proto The object which should be the prototype of the newly-created object.\n\n@param {Object} propertiesObject If specified and not undefined, an object whose enumerable own properties (that is, those properties defined upon itself and not enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of Object.defineProperties(). @optional dummy @throws Throws a TypeError exception if the proto parameter isn't null or an object."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "proto",
                            "text": "The object which should be the prototype of the newly-created object.",
                            "theRestString": "@param {Object} propertiesObject If specified and not undefined, an object whose enumerable own properties (that is, those properties defined upon itself and not enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of Object.defineProperties(). @optional dummy @throws Throws a TypeError exception if the proto parameter isn't null or an object."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "propertiesObject",
                            "text": "If specified and not undefined, an object whose enumerable own properties (that is, those properties defined upon itself and not enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of Object.defineProperties().",
                            "theRestString": "@optional dummy @throws Throws a TypeError exception if the proto parameter isn't null or an object."
                        },
                        {
                            "annotation": "optional",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@throws Throws a TypeError exception if the proto parameter isn't null or an object."
                        },
                        {
                            "annotation": "throws",
                            "name": "Throws",
                            "text": "a TypeError exception if the proto parameter isn't null or an object.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        818342,
                        822644
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "defineProperties": {
                    "annotation": "method",
                    "name": "defineProperties",
                    "text": "#Summary\nThe Object.defineProperties() method defines new or modifies existing properties directly on an object, returning the object.\n\n#Syntax\n\tObject.defineProperties(obj, props)\n\n#Description\nObject.defineProperties, in essence, defines all properties corresponding to the enumerable own properties of props on the object obj object.\n\n#Example\n\n\tObject.defineProperties(obj, {\n\t  \"property1\": {\n\t    value: true,\n\t    writable: true\n\t  },\n\t  \"property2\": {\n\t    value: \"Hello\",\n\t    writable: false\n\t  }\n\t  // etc. etc.\n\t});\n\n\n# Polyfill\n\nAssuming a pristine execution environment with all names and properties referring to their initial values, Object.defineProperties is almost completely equivalent (note the comment in isCallable) to the following reimplementation in JavaScript:\n\n\tfunction defineProperties(obj, properties) {\n\t  function convertToDescriptor(desc) {\n\t    function hasProperty(obj, prop) {\n\t      return Object.prototype.hasOwnProperty.call(obj, prop);\n\t    }\n\n\t    function isCallable(v) {\n\t      // NB: modify as necessary if other values than functions are callable.\n\t      return typeof v === \"function\";\n\t    }\n\n\t    if (typeof desc !== \"object\" || desc === null)\n\t      throw new TypeError(\"bad desc\");\n\n\t    var d = {};\n\n\t    if (hasProperty(desc, \"enumerable\"))\n\t      d.enumerable = !!obj.enumerable;\n\t    if (hasProperty(desc, \"configurable\"))\n\t      d.configurable = !!obj.configurable;\n\t    if (hasProperty(desc, \"value\"))\n\t      d.value = obj.value;\n\t    if (hasProperty(desc, \"writable\"))\n\t      d.writable = !!desc.writable;\n\t    if (hasProperty(desc, \"get\")) {\n\t      var g = desc.get;\n\n\t      if (!isCallable(g) && typeof g !== \"undefined\")\n\t        throw new TypeError(\"bad get\");\n\t      d.get = g;\n\t    }\n\t    if (hasProperty(desc, \"set\")) {\n\t      var s = desc.set;\n\t      if (!isCallable(s) && typeof s !== \"undefined\")\n\t        throw new TypeError(\"bad set\");\n\t      d.set = s;\n\t    }\n\n\t    if ((\"get\" in d || \"set\" in d) && (\"value\" in d || \"writable\" in d))\n\t      throw new TypeError(\"identity-confused descriptor\");\n\n\t    return d;\n\t  }\n\n\t  if (typeof obj !== \"object\" || obj === null)\n\t    throw new TypeError(\"bad obj\");\n\n\t  properties = Object(properties);\n\n\t  var keys = Object.keys(properties);\n\t  var descs = [];\n\n\t  for (var i = 0; i < keys.length; i++)\n\t    descs.push([keys[i], convertToDescriptor(properties[keys[i]])]);\n\n\t  for (var i = 0; i < descs.length; i++)\n\t    Object.defineProperty(obj, descs[i][0], descs[i][1]);\n\n\t  return obj;\n\t}",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object on which to define or modify properties.\n@param {Object} props An object whose own enumerable properties constitute descriptors for the properties to be defined or modified."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object on which to define or modify properties.",
                            "theRestString": "@param {Object} props An object whose own enumerable properties constitute descriptors for the properties to be defined or modified."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "props",
                            "text": "An object whose own enumerable properties constitute descriptors for the properties to be defined or modified.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        822653,
                        825405
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "defineProperty": {
                    "annotation": "method",
                    "name": "defineProperty",
                    "text": "#Summary\nThe Object.defineProperty() method defines a new property directly on an object, or modifies an existing property on an object, and returns the object.\n\n#Syntax\nObject.defineProperty(obj, prop, descriptor)\n\n#Description\nThis method allows precise addition to or modification of a property on an object. Normal property addition through assignment creates properties which show up during property enumeration (for...in loop or Object.keys method), whose values may be changed, and which may be deleted. This method allows these extra details to be changed from their defaults.\n\nProperty descriptors present in objects come in two main flavors: data descriptors and accessor descriptors. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter pair of functions. A descriptor must be one of these two flavors; it cannot be both.\n\nBoth data and accessor descriptors are objects. They share the following optional keys:\n\n###configurable\ntrue if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.\nDefaults to false.\n\n###enumerable\ntrue if and only if this property shows up during enumeration of the properties on the corresponding object.\nDefaults to false.\nA data descriptor also has the following optional keys:\n\n###value\nThe value associated with the property. Can be any valid JavaScript value (number, object, function, etc).\nDefaults to undefined.\nwritable\ntrue if and only if the value associated with the property may be changed with an assignment operator.\nDefaults to false.\nAn accessor descriptor also has the following optional keys:\n\n###get\nA function which serves as a getter for the property, or undefined if there is no getter. The function return will be used as the value of property.\nDefaults to undefined.\n\n###set\nA function which serves as a setter for the property, or undefined if there is no setter. The function will receive as only argument the new value being assigned to the property.\nDefaults to undefined.\nBear in mind that these options are not necessarily own properties so, if inherited, will be considered too. In order to ensure these defaults are preserved you might freeze the Object.prototype upfront, specify all options explicitly, or point to null as __proto__ property.\n\n\t// using __proto__\n\tObject.defineProperty(obj, 'key', {\n\t  __proto__: null, // no inherited properties\n\t  value: 'static'  // not enumerable\n\t                   // not configurable\n\t                   // not writable\n\t                   // as defaults\n\t});\n\n\t// being explicit\n\tObject.defineProperty(obj, 'key', {\n\t  enumerable: false,\n\t  configurable: false,\n\t  writable: false,\n\t  value: 'static'\n\t});\n\n\t// recycling same object\n\tfunction withValue(value) {\n\t  var d = withValue.d || (\n\t    withValue.d = {\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false,\n\t      value: null\n\t    }\n\t  );\n\t  d.value = value;\n\t  return d;\n\t}\n\t// ... and ...\n\tObject.defineProperty(obj, 'key', withValue('static'));\n\n\t// if freeze is available, prevents the code to add\n\t// value, get, set, enumerable, writable, configurable\n\t// to the Object prototype\n\t(Object.freeze || Object)(Object.prototype);\n\n#Examples\n\nIf you want to see how to use the Object.defineProperty method with a binary-flags-like syntax, see additional examples.\n\n##Example: Creating a property\n\nWhen the property specified doesn't exist in the object, Object.defineProperty() creates a new property as described. Fields may be omitted from the descriptor, and default values for those fields are imputed. All of the Boolean-valued fields default to false. The value, get, and set fields default to undefined. A property which is defined without get/set/value/writable is called “generic” and is “typed” as a data descriptor.\n\n\tvar o = {}; // Creates a new object\n\n\t// Example of an object property added with defineProperty with a data property descriptor\n\tObject.defineProperty(o, 'a', {\n\t  value: 37,\n\t  writable: true,\n\t  enumerable: true,\n\t  configurable: true\n\t});\n\t// 'a' property exists in the o object and its value is 37\n\n\t// Example of an object property added with defineProperty with an accessor property descriptor\n\tvar bValue = 38;\n\tObject.defineProperty(o, 'b', {\n\t  get: function() { return bValue; },\n\t  set: function(newValue) { bValue = newValue; },\n\t  enumerable: true,\n\t  configurable: true\n\t});\n\to.b; // 38\n\t// 'b' property exists in the o object and its value is 38\n\t// The value of o.b is now always identical to bValue, unless o.b is redefined\n\n\t// You cannot try to mix both:\n\tObject.defineProperty(o, 'conflict', {\n\t  value: 0x9f91102,\n\t  get: function() { return 0xdeadbeef; }\n\t});\n\t// throws a TypeError: value appears only in data descriptors, get appears only in accessor descriptors\n\n##Example: Modifying a property\n\nWhen the property already exists, Object.defineProperty() attempts to modify the property according to the values in the descriptor and the object's current configuration. If the old descriptor had its configurable attribute set to false (the property is said to be “non-configurable”), then no attribute besides writable can be changed. In that case, it is also not possible to switch back and forth between the data and accessor property types.\n\nIf a property is non-configurable, its writable attribute can only be changed to false.\n\nA TypeError is thrown when attempts are made to change non-configurable property attributes (besides the writable attribute) unless the current and new values are the same.\n\n##Writable attribute\n\nWhen the writable property attribute is set to false, the property is said to be “non-writable”. It cannot be reassigned.\n\n\tvar o = {}; // Creates a new object\n\n\tObject.defineProperty(o, 'a', {\n\t  value: 37,\n\t  writable: false\n\t});\n\n\tconsole.log(o.a); // logs 37\n\to.a = 25; // No error thrown (it would throw in strict mode, even if the value had been the same)\n\tconsole.log(o.a); // logs 37. The assignment didn't work.\n\nAs seen in the example, trying to write into the non-writable property doesn't change it but doesn't throw an error either.\n\n##Enumerable attribute\n\nThe enumerable property attribute defines whether the property shows up in a for...in loop and Object.keys() or not.\n\n\tvar o = {};\n\tObject.defineProperty(o, 'a', { value: 1, enumerable: true });\n\tObject.defineProperty(o, 'b', { value: 2, enumerable: false });\n\tObject.defineProperty(o, 'c', { value: 3 }); // enumerable defaults to false\n\to.d = 4; // enumerable defaults to true when creating a property by setting it\n\n\tfor (var i in o) {\n\t  console.log(i);\n\t}\n\t// logs 'a' and 'd' (in undefined order)\n\n\tObject.keys(o); // ['a', 'd']\n\n\to.propertyIsEnumerable('a'); // true\n\to.propertyIsEnumerable('b'); // false\n\to.propertyIsEnumerable('c'); // false\n\tConfigurable attribute\n\n\tThe configurable attribute controls at the same time whether the property can be deleted from the object and whether its attributes (other than writable) can be changed.\n\n\tvar o = {};\n\tObject.defineProperty(o, 'a', {\n\t  get: function() { return 1; },\n\t  configurable: false\n\t});\n\n\tObject.defineProperty(o, 'a', { configurable: true }); // throws a TypeError\n\tObject.defineProperty(o, 'a', { enumerable: true }); // throws a TypeError\n\tObject.defineProperty(o, 'a', { set: function() {} }); // throws a TypeError (set was undefined previously)\n\tObject.defineProperty(o, 'a', { get: function() { return 1; } }); // throws a TypeError (even though the new get does exactly the same thing)\n\tObject.defineProperty(o, 'a', { value: 12 }); // throws a TypeError\n\n\tconsole.log(o.a); // logs 1\n\tdelete o.a; // Nothing happens\n\tconsole.log(o.a); // logs 1\n\n\nIf the configurable attribute of o.a had been true, none of the errors would be thrown and the property would be deleted at the end.\n\n##Example: Adding properties and default values\n\nIt's important to consider the way default values of attributes are applied. There is often a difference between simply using dot notation to assign a value and using Object.defineProperty(), as shown in the example below.\n\n\tvar o = {};\n\n\to.a = 1;\n\t// is equivalent to:\n\tObject.defineProperty(o, 'a', {\n\t  value: 1,\n\t  writable: true,\n\t  configurable: true,\n\t  enumerable: true\n\t});\n\n\n\t// On the other hand,\n\tObject.defineProperty(o, 'a', { value: 1 });\n\t// is equivalent to:\n\tObject.defineProperty(o, 'a', {\n\t  value: 1,\n\t  writable: false,\n\t  configurable: false,\n\t  enumerable: false\n\t});\n\n\n##Example: Custom Setters and Getters\n\nExample below shows how to implement a self-archiving object. When temperature property is set, the archive array gets a log entry.\n\n\tfunction Archiver() {\n\t  var temperature = null;\n\t  var archive = [];\n\n\t  Object.defineProperty(this, 'temperature', {\n\t    get: function() {\n\t      console.log('get!');\n\t      return temperature;\n\t    },\n\t    set: function(value) {\n\t      temperature = value;\n\t      archive.push({ val: temperature });\n\t    }\n\t  });\n\n\t  this.getArchive = function() { return archive; };\n\t}\n\n\tvar arc = new Archiver();\n\tarc.temperature; // 'get!'\n\tarc.temperature = 11;\n\tarc.temperature = 13;\n\tarc.getArchive(); // [{ val: 11 }, { val: 13 }]",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object on which to define the property.\n@param {String} prop The name of the property to be defined or modified.\n@param {Object} descriptor The descriptor for the property being defined or modified."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object on which to define the property.",
                            "theRestString": "@param {String} prop The name of the property to be defined or modified.\n@param {Object} descriptor The descriptor for the property being defined or modified."
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prop",
                            "text": "The name of the property to be defined or modified.",
                            "theRestString": "@param {Object} descriptor The descriptor for the property being defined or modified."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "descriptor",
                            "text": "The descriptor for the property being defined or modified.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        825417,
                        834911
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "freeze": {
                    "annotation": "method",
                    "name": "freeze",
                    "text": "#Summary\nThe Object.freeze() method freezes an object: that is, prevents new properties from being added to it; prevents existing properties from being removed; and prevents existing properties, or their enumerability, configurability, or writability, from being changed. In essence the object is made effectively immutable. The method returns the object being frozen.\n\n#Syntax\nObject.freeze(obj)\n\n#Description\nNothing can be added to or removed from the properties set of a frozen object. Any attempt to do so will fail, either silently or by throwing a TypeError exception (most commonly, but not exclusively, when in strict mode).\n\nValues cannot be changed for data properties. Accessor properties (getters and setters) work the same (and still give the illusion that you are changing the value). Note that values that are objects can still be modified, unless they are also frozen.\n\n#Examples\n\tvar obj = {\n\t  prop: function() {},\n\t  foo: 'bar'\n\t};\n\n\t// New properties may be added, existing properties may be changed or removed\n\tobj.foo = 'baz';\n\tobj.lumpy = 'woof';\n\tdelete obj.prop;\n\n\tvar o = Object.freeze(obj);\n\n\tassert(Object.isFrozen(obj) === true);\n\n\t// Now any changes will fail\n\tobj.foo = 'quux'; // silently does nothing\n\tobj.quaxxor = 'the friendly duck'; // silently doesn't add the property\n\n\t// ...and in strict mode such attempts will throw TypeErrors\n\tfunction fail(){\n\t  'use strict';\n\t  obj.foo = 'sparky'; // throws a TypeError\n\t  delete obj.quaxxor; // throws a TypeError\n\t  obj.sparky = 'arf'; // throws a TypeError\n\t}\n\n\tfail();\n\n\t// Attempted changes through Object.defineProperty will also throw\n\tObject.defineProperty(obj, 'ohai', { value: 17 }); // throws a TypeError\n\tObject.defineProperty(obj, 'foo', { value: 'eit' }); // throws a TypeError\n\tThe following example shows that object values in a frozen object can be mutated (freeze is shallow).\n\n\tobj = {\n\t  internal: {}\n\t};\n\n\tObject.freeze(obj);\n\tobj.internal.a = 'aValue';\n\n\tobj.internal.a // 'aValue'\n\n\t// To make obj fully immutable, freeze each object in obj.\n\t// To do so, we use this function.\n\n\tfunction deepFreeze(o) {\n\t  var prop, propKey;\n\t  Object.freeze(o); // First freeze the object.\n\t  for (propKey in o) {\n\t    prop = o[propKey];\n\t    if (!o.hasOwnProperty(propKey) || !(typeof prop === 'object') || Object.isFrozen(prop)) {\n\t      // If the object is on the prototype, not an object, or is already frozen,\n\t      // skip it. Note that this might leave an unfrozen reference somewhere in the\n\t      // object if there is an already frozen object containing an unfrozen object.\n\t      continue;\n\t    }\n\n\t    deepFreeze(prop); // Recursively call deepFreeze.\n\t  }\n\t}\n\n\tobj2 = {\n\t  internal: {}\n\t};\n\n\tdeepFreeze(obj2);\n\tobj2.internal.a = 'anotherValue';\n\tobj2.internal.a; // undefined",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param obj The object to freeze."
                        },
                        {
                            "annotation": "param",
                            "name": "obj",
                            "text": "The object to freeze.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        834922,
                        837768
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "getOwnPropertyDescriptor": {
                    "annotation": "method",
                    "name": "getOwnPropertyDescriptor",
                    "text": "#Summary\nThe Object.getOwnPropertyDescriptor() method returns a property descriptor for an own property (that is, one directly present on an object, not present by dint of being along an object's prototype chain) of a given object.\n\n#Syntax\n\tObject.getOwnPropertyDescriptor(obj, prop)\n\n#Description\nThis method permits examination of the precise description of a property. A property in JavaScript consists of a string-valued name and a property descriptor. Further information about property descriptor types and their attributes can be found in Object.defineProperty().\n\nA property descriptor is a record with some of the following attributes:\n\n###value\nThe value associated with the property (data descriptors only).\n###writable\ntrue if and only if the value associated with the property may be changed (data descriptors only).\n###get\nA function which serves as a getter for the property, or undefined if there is no getter (accessor descriptors only).\n###set\nA function which serves as a setter for the property, or undefined if there is no setter (accessor descriptors only).\n###configurable\ntrue if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.\n###enumerable\ntrue if and only if this property shows up during enumeration of the properties on the corresponding object.\n\n#Examples\n\n\tvar o, d;\n\n\to = { get foo() { return 17; } };\n\td = Object.getOwnPropertyDescriptor(o, 'foo');\n\t// d is { configurable: true, enumerable: true, get: , set: undefined }\n\n\to = { bar: 42 };\n\td = Object.getOwnPropertyDescriptor(o, 'bar');\n\t// d is { configurable: true, enumerable: true, value: 42, writable: true }\n\n\to = {};\n\tObject.defineProperty(o, 'baz', { value: 8675309, writable: false, enumerable: false });\n\td = Object.getOwnPropertyDescriptor(o, 'baz');\n\t// d is { value: 8675309, writable: false, enumerable: false, configurable: false }",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object}obj The object in which to look for the property.\n@param {String}prop The name of the property whose description is to be retrieved.\n@returns A property descriptor of the given property if it exists on the object, undefined otherwise."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object in which to look for the property.",
                            "theRestString": "@param {String}prop The name of the property whose description is to be retrieved.\n@returns A property descriptor of the given property if it exists on the object, undefined otherwise."
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "prop",
                            "text": "The name of the property whose description is to be retrieved.",
                            "theRestString": "@returns A property descriptor of the given property if it exists on the object, undefined otherwise."
                        },
                        {
                            "annotation": "returns",
                            "name": "A",
                            "text": "property descriptor of the given property if it exists on the object, undefined otherwise.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        837779,
                        839994
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "getOwnPropertyNames": {
                    "annotation": "method",
                    "name": "getOwnPropertyNames",
                    "text": "#Summary\nThe Object.getOwnPropertyNames() method returns an array of all properties (enumerable or not) found directly upon a given object.\n\n#Syntax\nObject.getOwnPropertyNames(obj)\n\n#Description\nObject.getOwnPropertyNames returns an array whose elements are strings corresponding to the enumerable and non-enumerable properties found directly upon obj. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a for...in loop (or by Object.keys) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.\n\n#Examples\n##Example: Using getOwnPropertyNames\n\n\tvar arr = ['a', 'b', 'c'];\n\tprint(Object.getOwnPropertyNames(arr).sort()); // prints '0,1,2,length'\n\n\t// Array-like object\n\tvar obj = { 0: 'a', 1: 'b', 2: 'c' };\n\tprint(Object.getOwnPropertyNames(obj).sort()); // prints '0,1,2'\n\n\t// Printing property names and values using Array.forEach\n\tObject.getOwnPropertyNames(obj).forEach(function(val, idx, array) {\n\t  print(val + ' -> ' + obj[val]);\n\t});\n\t// prints\n\t// 0 -> a\n\t// 1 -> b\n\t// 2 -> c\n\n\t// non-enumerable property\n\tvar my_obj = Object.create({}, { getFoo: { value: function() { return this.foo; }, enumerable: false } });\n\tmy_obj.foo = 1;\n\n\tprint(Object.getOwnPropertyNames(my_obj).sort()); // prints 'foo,getFoo'\n\nIf you want only the enumerable properties, see Object.keys() or use a for...in loop (although note that this will return enumerable properties not found directly upon that object but also along the prototype chain for the object unless the latter is filtered with hasOwnProperty()).\n\nItems on the prototype chain are not listed:\n\n\tfunction ParentClass() {}\n\tParentClass.prototype.inheritedMethod = function() {};\n\n\tfunction ChildClass() {\n\t  this.prop = 5;\n\t  this.method = function() {};\n\t}\n\tChildClass.prototype = new ParentClass;\n\tChildClass.prototype.prototypeMethod = function() {};\n\n\talert(\n\t  Object.getOwnPropertyNames(\n\t    new ChildClass() // ['prop', 'method']\n\t  )\n\t);\n\n##Example: Get Non-Enumerable Only\n\nThis uses the Array.prototype.filter() function to remove the enumerable keys (obtained with Object.keys()) from a list of all keys (obtained with Object.getOwnPropertyNames) leaving only the non-enumerable keys.\n\n\tvar target = myObject;\n\tvar enum_and_nonenum = Object.getOwnPropertyNames(target);\n\tvar enum_only = Object.keys(target);\n\tvar nonenum_only = enum_and_nonenum.filter(function(key) {\n\t  var indexInEnum = enum_only.indexOf(key);\n\t  if (indexInEnum == -1) {\n\t    // not found in enum_only keys mean the key is non-enumerable,\n\t    // so return true so we keep this in the filter\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t});\n\n\tconsole.log(nonenum_only);",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object whose enumerable and non-enumerable own properties are to be returned."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object whose enumerable and non-enumerable own properties are to be returned.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        840005,
                        842904
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "isExtensible": {
                    "annotation": "method",
                    "name": "isExtensible",
                    "text": "#Summary\nThe Object.isExtensible() method determines if an object is extensible (whether it can have new properties added to it).\n\n#Syntax\n\tObject.isExtensible(obj)\n\n#Description\nObjects are extensible by default: they can have new properties added to them, and (in engines that support __proto__  their __proto__ property) can be modified. An object can be marked as non-extensible using Object.preventExtensions(), Object.seal(), or Object.freeze().\n\n#Examples\n\t// New objects are extensible.\n\tvar empty = {};\n\tassert(Object.isExtensible(empty) === true);\n\n\t// ...but that can be changed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isExtensible(empty) === false);\n\n\t// Sealed objects are by definition non-extensible.\n\tvar sealed = Object.seal({});\n\tassert(Object.isExtensible(sealed) === false);\n\n\t// Frozen objects are also by definition non-extensible.\n\tvar frozen = Object.freeze({});\n\tassert(Object.isExtensible(frozen) === false);\n\tNotes\n\tIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n\n\t> Object.isExtensible(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isExtensible(1)\n\tfalse",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object which should be checked.\n@return {boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object which should be checked.",
                            "theRestString": "@return {boolean}"
                        },
                        {
                            "annotation": "return",
                            "type": "{boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        842915,
                        844316
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "isFrozen": {
                    "annotation": "method",
                    "name": "isFrozen",
                    "text": "#Summary\nThe Object.isFrozen() determines if an object is frozen.\n\n#Syntax\n\tObject.isFrozen(obj)\n\n#Description\nAn object is frozen if and only if it is not extensible, all its properties are non-configurable, and all its data properties (that is, properties which are not accessor properties with getter or setter components) are non-writable.\n\n#Examples\n\t// A new object is extensible, so it is not frozen.\n\tassert(Object.isFrozen({}) === false);\n\n\t// An empty object which is not extensible is vacuously frozen.\n\tvar vacuouslyFrozen = Object.preventExtensions({});\n\tassert(Object.isFrozen(vacuouslyFrozen) === true);\n\n\t// A new object with one property is also extensible, ergo not frozen.\n\tvar oneProp = { p: 42 };\n\tassert(Object.isFrozen(oneProp) === false);\n\n\t// Preventing extensions to the object still doesn't make it frozen,\n\t// because the property is still configurable (and writable).\n\tObject.preventExtensions(oneProp);\n\tassert(Object.isFrozen(oneProp) === false);\n\n\t// ...but then deleting that property makes the object vacuously frozen.\n\tdelete oneProp.p;\n\tassert(Object.isFrozen(oneProp) === true);\n\n\t// A non-extensible object with a non-writable but still configurable property is not frozen.\n\tvar nonWritable = { e: 'plep' };\n\tObject.preventExtensions(nonWritable);\n\tObject.defineProperty(nonWritable, 'e', { writable: false }); // make non-writable\n\tassert(Object.isFrozen(nonWritable) === false);\n\n\t// Changing that property to non-configurable then makes the object frozen.\n\tObject.defineProperty(nonWritable, 'e', { configurable: false }); // make non-configurable\n\tassert(Object.isFrozen(nonWritable) === true);\n\n\t// A non-extensible object with a non-configurable but still writable property also isn't frozen.\n\tvar nonConfigurable = { release: 'the kraken!' };\n\tObject.preventExtensions(nonConfigurable);\n\tObject.defineProperty(nonConfigurable, 'release', { configurable: false });\n\tassert(Object.isFrozen(nonConfigurable) === false);\n\n\t// Changing that property to non-writable then makes the object frozen.\n\tObject.defineProperty(nonConfigurable, 'release', { writable: false });\n\tassert(Object.isFrozen(nonConfigurable) === true);\n\n\t// A non-extensible object with a configurable accessor property isn't frozen.\n\tvar accessor = { get food() { return 'yum'; } };\n\tObject.preventExtensions(accessor);\n\tassert(Object.isFrozen(accessor) === false);\n\n\t// ...but make that property non-configurable and it becomes frozen.\n\tObject.defineProperty(accessor, 'food', { configurable: false });\n\tassert(Object.isFrozen(accessor) === true);\n\n\t// But the easiest way for an object to be frozen is if Object.freeze has been called on it.\n\tvar frozen = { 1: 81 };\n\tassert(Object.isFrozen(frozen) === false);\n\tObject.freeze(frozen);\n\tassert(Object.isFrozen(frozen) === true);\n\n\t// By definition, a frozen object is non-extensible.\n\tassert(Object.isExtensible(frozen) === false);\n\n\t// Also by definition, a frozen object is sealed.\n\tassert(Object.isSealed(frozen) === true);\n\n#Notes\nIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n\n\t> Object.isFrozen(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isFrozen(1)\n\ttrue                          // ES6 code",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object}obj The object which should be checked.\n@returns boolean"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object which should be checked.",
                            "theRestString": "@returns boolean"
                        },
                        {
                            "annotation": "returns",
                            "name": "boolean",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        844321,
                        847761
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "isSealed": {
                    "annotation": "method",
                    "name": "isSealed",
                    "text": "#Summary\nThe Object.isSealed() method determines if an object is sealed.\n\n#Syntax\n\tObject.isSealed(obj)\n#Description\nReturns true if the object is sealed, otherwise false. An object is sealed if it is not extensible and if all its properties are non-configurable and therefore not removable (but not necessarily non-writable).\n\n#Examples\n\t// Objects aren't sealed by default.\n\tvar empty = {};\n\tassert(Object.isSealed(empty) === false);\n\n\t// If you make an empty object non-extensible, it is vacuously sealed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isSealed(empty) === true);\n\n\t// The same is not true of a non-empty object, unless its properties are all non-configurable.\n\tvar hasProp = { fee: 'fie foe fum' };\n\tObject.preventExtensions(hasProp);\n\tassert(Object.isSealed(hasProp) === false);\n\n\t// But make them all non-configurable and the object becomes sealed.\n\tObject.defineProperty(hasProp, 'fee', { configurable: false });\n\tassert(Object.isSealed(hasProp) === true);\n\n\t// The easiest way to seal an object, of course, is Object.seal.\n\tvar sealed = {};\n\tObject.seal(sealed);\n\tassert(Object.isSealed(sealed) === true);\n\n\t// A sealed object is, by definition, non-extensible.\n\tassert(Object.isExtensible(sealed) === false);\n\n\t// A sealed object might be frozen, but it doesn't have to be.\n\tassert(Object.isFrozen(sealed) === true); // all properties also non-writable\n\n\tvar s2 = Object.seal({ p: 3 });\n\tassert(Object.isFrozen(s2) === false); // 'p' is still writable\n\n\tvar s3 = Object.seal({ get p() { return 0; } });\n\tassert(Object.isFrozen(s3) === true); // only configurability matters for accessor properties\n\n#Notes\n\tIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n\n\t> Object.isSealed(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.isSealed(1)\n\ttrue                          // ES6 code",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object which should be checked.\n@returns {boolean}"
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object which should be checked.",
                            "theRestString": "@returns {boolean}"
                        },
                        {
                            "annotation": "returns",
                            "type": "{boolean}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        847767,
                        849849
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "keys": {
                    "annotation": "method",
                    "name": "keys",
                    "text": "#Summary\nThe Object.keys() method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).\n\n#Syntax\n\tObject.keys(obj)\n\n#Examples\n\tvar arr = ['a', 'b', 'c'];\n\tconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\n\n\t// array like object\n\tvar obj = { 0: 'a', 1: 'b', 2: 'c' };\n\tconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\n\n\t// array like object with random key ordering\n\tvar an_obj = { 100: 'a', 2: 'b', 7: 'c' };\n\tconsole.log(Object.keys(an_obj)); // console: ['2', '7', '100']\n\n\t// getFoo is property which isn't enumerable\n\tvar my_obj = Object.create({}, { getFoo: { value: function() { return this.foo; } } });\n\tmy_obj.foo = 1;\n\n\tconsole.log(Object.keys(my_obj)); // console: ['foo']\nIf you want all properties, even not enumerables, see Object.getOwnPropertyNames().\n\n#Polyfill\nTo add compatible Object.keys support in older environments that do not natively support it, copy the following snippet:\n\n\t// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\tif (!Object.keys) {\n\t  Object.keys = (function() {\n\t    'use strict';\n\t    var hasOwnProperty = Object.prototype.hasOwnProperty,\n\t        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n\t        dontEnums = [\n\t          'toString',\n\t          'toLocaleString',\n\t          'valueOf',\n\t          'hasOwnProperty',\n\t          'isPrototypeOf',\n\t          'propertyIsEnumerable',\n\t          'constructor'\n\t        ],\n\t        dontEnumsLength = dontEnums.length;\n\n\t    return function(obj) {\n\t      if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n\t        throw new TypeError('Object.keys called on non-object');\n\t      }\n\n\t      var result = [], prop, i;\n\n\t      for (prop in obj) {\n\t        if (hasOwnProperty.call(obj, prop)) {\n\t          result.push(prop);\n\t        }\n\t      }\n\n\t      if (hasDontEnumBug) {\n\t        for (i = 0; i < dontEnumsLength; i++) {\n\t          if (hasOwnProperty.call(obj, dontEnums[i])) {\n\t            result.push(dontEnums[i]);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }());\n\t}\nPlease note that the above code includes non-enumerable keys in IE7 (and maybe IE8), when passing in an object from a different window.\n\nFor a simple browser polyfill, see Javascript - Object.keys Browser Compatibility.",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object} obj The object whose enumerable own properties are to be returned.\n@returns {Array<String>} method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well)."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object whose enumerable own properties are to be returned.",
                            "theRestString": "@returns {Array<String>} method returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well)."
                        },
                        {
                            "annotation": "returns",
                            "type": "{Array<String>}",
                            "name": "method",
                            "text": "returns an array of a given object's own enumerable properties, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        849857,
                        852697
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "preventExtensions": {
                    "annotation": "method",
                    "name": "preventExtensions",
                    "text": "#Summary\nThe Object.preventExtensions() method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).\n\n#Syntax\n\tObject.preventExtensions(obj)\n\n#Description\nAn object is extensible if new properties can be added to it. Object.preventExtensions() marks an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible. Note that the properties of a non-extensible object, in general, may still be deleted. Attempting to add new properties to a non-extensible object will fail, either silently or by throwing a TypeError (most commonly, but not exclusively, when in strict mode).\n\nObject.preventExtensions() only prevents addition of own properties. Properties can still be added to the object prototype. However, calling Object.preventExtensions() on an object will also prevent extensions on its __proto__  property.\n\nIf there is a way to turn an extensible object to a non-extensible one, there is no way to do the opposite in ECMAScript 5.\n\n#Examples\n\t// Object.preventExtensions returns the object being made non-extensible.\n\tvar obj = {};\n\tvar obj2 = Object.preventExtensions(obj);\n\tassert(obj === obj2);\n\n\t// Objects are extensible by default.\n\tvar empty = {};\n\tassert(Object.isExtensible(empty) === true);\n\n\t// ...but that can be changed.\n\tObject.preventExtensions(empty);\n\tassert(Object.isExtensible(empty) === false);\n\n\t// Object.defineProperty throws when adding a new property to a non-extensible object.\n\tvar nonExtensible = { removable: true };\n\tObject.preventExtensions(nonExtensible);\n\tObject.defineProperty(nonExtensible, 'new', { value: 8675309 }); // throws a TypeError\n\n\t// In strict mode, attempting to add new properties to a non-extensible object throws a TypeError.\n\tfunction fail() {\n\t  'use strict';\n\t  nonExtensible.newProperty = 'FAIL'; // throws a TypeError\n\t}\n\tfail();\n\n\t// EXTENSION (only works in engines supporting __proto__\n\t// (which is deprecated. Use Object.getPrototypeOf instead)):\n\t// A non-extensible object's prototype is immutable.\n\tvar fixed = Object.preventExtensions({});\n\tfixed.__proto__ = { oh: 'hai' }; // throws a TypeError\n\n#Notes\nIn ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError. In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return it.\n\n\t> Object.preventExtensions(1)\n\tTypeError: 1 is not an object // ES5 code\n\n\t> Object.preventExtensions(1)\n\t1                             // ES6 code",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param {Object}obj The object which should be made non-extensible."
                        },
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "obj",
                            "text": "The object which should be made non-extensible.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        852706,
                        855386
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "valueOf": {
                    "annotation": "method",
                    "name": "valueOf",
                    "text": "#Summary\nThe valueOf() method returns the primitive value of the specified object.\n\n#Syntax\n\tobject.valueOf()\n#Description\nJavaScript calls the valueOf method to convert an object to a primitive value. You rarely need to invoke the valueOf method yourself; JavaScript automatically invokes it when encountering an object where a primitive value is expected.\n\nBy default, the valueOf method is inherited by every object descended from Object. Every built-in core object overrides this method to return an appropriate value. If an object has no primitive value, valueOf returns the object itself, which is displayed as:\n\n\t[object Object]\nYou can use valueOf within your own code to convert a built-in object into a primitive value. When you create a custom object, you can override Object.prototype.valueOf() to call a custom method instead of the default Object method.\n\n##Overriding valueOf for custom objects\n\nYou can create a function to be called in place of the default valueOf method. Your function must take no arguments.\n\nSuppose you have an object type myNumberType and you want to create a valueOf method for it. The following code assigns a user-defined function to the object's valueOf method:\n\n\tmyNumberType.prototype.valueOf = function() { return customPrimitiveValue; };\nWith the preceding code in place, any time an object of type myNumberType is used in a context where it is to be represented as a primitive value, JavaScript automatically calls the function defined in the preceding code.\n\nAn object's valueOf method is usually invoked by JavaScript, but you can invoke it yourself as follows:\n\n\tmyNumber.valueOf()\nNote: Objects in string contexts convert via the toString() method, which is different from String objects converting to string primitives using valueOf. All objects have a string conversion, if only \"[object type]\". But many objects do not convert to number, boolean, or function.\n#Examples\n##Example: Using valueOf\n\n\to = new Object();\n\tmyVar = o.valueOf();      // [object Object]",
                    "commentRange": [
                        865692,
                        867729
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                },
                "seal": {
                    "annotation": "method",
                    "name": "seal",
                    "text": "#Summary\nThe Object.seal() method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.\n\n#Syntax\n\tObject.seal(obj)\n\n#Description\nBy default, objects are extensible (new properties can be added to them). Sealing an object prevents new properties from being added and marks all existing properties as non-configurable. This has the effect of making the set of properties on the object fixed and immutable. Making all properties non-configurable also prevents them from being converted from data properties to accessor properties and vice versa, but it does not prevent the values of data properties from being changed. Attempting to delete or add properties to a sealed object, or to convert a data property to accessor or vice versa, will fail, either silently or by throwing a TypeError (most commonly, although not exclusively, when in strict mode code).\n\nThe prototype chain remains untouched. However, the __proto__  property is sealed as well.\n\n#Examples\n\tvar obj = {\n\t  prop: function() {},\n\t  foo: 'bar'\n\t};\n\n\t// New properties may be added, existing properties may be changed or removed.\n\tobj.foo = 'baz';\n\tobj.lumpy = 'woof';\n\tdelete obj.prop;\n\n\tvar o = Object.seal(obj);\n\n\tassert(o === obj);\n\tassert(Object.isSealed(obj) === true);\n\n\t// Changing property values on a sealed object still works.\n\tobj.foo = 'quux';\n\n\t// But you can't convert data properties to accessors, or vice versa.\n\tObject.defineProperty(obj, 'foo', { get: function() { return 'g'; } }); // throws a TypeError\n\n\t// Now any changes, other than to property values, will fail.\n\tobj.quaxxor = 'the friendly duck'; // silently doesn't add the property\n\tdelete obj.foo; // silently doesn't delete the property\n\n\t// ...and in strict mode such attempts will throw TypeErrors.\n\tfunction fail() {\n\t  'use strict';\n\t  delete obj.foo; // throws a TypeError\n\t  obj.sparky = 'arf'; // throws a TypeError\n\t}\n\tfail();\n\n\t// Attempted additions through Object.defineProperty will also throw.\n\tObject.defineProperty(obj, 'ohai', { value: 17 }); // throws a TypeError\n\tObject.defineProperty(obj, 'foo', { value: 'eit' }); // changes existing property value",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param  obj The object which should be sealed."
                        },
                        {
                            "annotation": "param",
                            "name": "obj",
                            "text": "The object which should be sealed.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        867734,
                        870075
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
                }
            }
        },
        "javascript.Any": {
            "annotation": "class",
            "name": "Any",
            "text": "This is an artificial type that means 'any value is valid here'",
            "commentRange": [
                870081,
                870161
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    806601,
                    808133
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
            },
            "absoluteName": "javascript.Any"
        },
        "javascript.ObjectPrototype": {
            "annotation": "class",
            "name": "ObjectPrototype",
            "text": "Adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype\n\n#Description\nThe Object.prototype property represents the Object prototype object.\n\nAll objects in JavaScript are descended from Object; all objects inherit methods and properties from Object.prototype, although they may be overridden (except an Object with a null prototype, i.e. Object.create(null)). For example, other constructors' prototypes override the constructor property and provide their own toString() methods. Changes to the Object prototype object are propagated to all objects unless the properties and methods subject to those changes are overridden further along the prototype chain.\n\n#Examples\nSince Javascript doesn't exactly have sub-class objects, prototype is a useful workaround to make a “base class” object of certain functions that act as objects. For example:\n\n\tvar Person = function() {\n\t  this.canTalk = true;\n\t  this.greet = function() {\n\t    if (this.canTalk) {\n\t      console.log('Hi, I'm ' + this.name);\n\t    }\n\t  };\n\t};\n\n\tvar Employee = function(name, title) {\n\t  this.name = name;\n\t  this.title = title;\n\t  this.greet = function() {\n\t    if (this.canTalk) {\n\t      console.log(\"Hi, I'm \" + this.name + \", the \" + this.title);\n\t    }\n\t  };\n\t};\n\tEmployee.prototype = new Person();\n\n\tvar Customer = function(name) {\n\t  this.name = name;\n\t};\n\tCustomer.prototype = new Person();\n\n\tvar Mime = function(name) {\n\t  this.name = name;\n\t  this.canTalk = false;\n\t};\n\tMime.prototype = new Person();\n\n\tvar bob = new Employee('Bob', 'Builder');\n\tvar joe = new Customer('Joe');\n\tvar rg = new Employee('Red Green', 'Handyman');\n\tvar mike = new Customer('Mike');\n\tvar mime = new Mime('Mime');\n\tbob.greet();\n\tjoe.greet();\n\trg.greet();\n\tmike.greet();\n\tmime.greet();\n\nThis will output:\n\n\tHi, I'm Bob, the Builder\n\tHi, I'm Joe\n\tHi, I'm Red Green, the Handyman\n\tHi, I'm Mike",
            "commentRange": [
                870265,
                872218
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    870265,
                    872218
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js"
            },
            "absoluteName": "javascript.ObjectPrototype",
            "properties": {
                "constructor": {
                    "annotation": "property",
                    "type": "{Function}",
                    "name": "constructor",
                    "text": "Specifies the function that creates an object's prototype.\n\n##Summary\nReturns a reference to the Object function that created the instance's prototype. Note that the value of this property is a reference to the function itself, not a string containing the function's name. The value is only read-only for primitive values such as 1, true and \"test\".\n\n##Description\n\nAll objects inherit a constructor property from their prototype:\n\n\tvar o = {};\n\to.constructor === Object; // true\n\n\tvar a = [];\n\ta.constructor === Array; // true\n\n\tvar n = new Number(3);\n\tn.constructor === Number; // true\n\n##Examples\n\n###Example: Displaying the constructor of an object\n\nThe following example creates a prototype, Tree, and an object of that type, theTree. The example then displays the constructor property for the object theTree.\n\n\tfunction Tree(name) {\n\t  this.name = name;\n\t}\n\n\tvar theTree = new Tree('Redwood');\n\tconsole.log('theTree.constructor is ' + theTree.constructor);\n\tThis example displays the following output:\n\n\ttheTree.constructor is function Tree(name) {\n\t  this.name = name;\n\t}\n\n###Example: Changing the constructor of an object\n\nThe following example shows how to modify constructor value of generic objects. Only true, 1 and \"test\" will not be affected as they have read-only native constructors. This example shows that it is not always safe to rely on the constructor property of an object.\n\n\tfunction Type () {}\n\n\tvar types = [\n\t  new Array(),\n\t  [],\n\t  new Boolean(),\n\t  true,             // remains unchanged\n\t  new Date(),\n\t  new Error(),\n\t  new Function(),\n\t  function () {},\n\t  Math,\n\t  new Number(),\n\t  1,                // remains unchanged\n\t  new Object(),\n\t  {},\n\t  new RegExp(),\n\t  /(?:)/,\n\t  new String(),\n\t  'test'            // remains unchanged\n\t];\n\tfor (var i = 0; i < types.length; i++) {\n\t  types[i].constructor = Type;\n\t  types[i] = [types[i].constructor, types[i] instanceof Type, types[i].toString()];\n\t}\n\tconsole.log(types.join('\\n'));\n\tThis example displays the following output:\n\n\tfunction Type() {},false,\n\tfunction Type() {},false,\n\tfunction Type() {},false,false\n\tfunction Boolean() {\n\t    [native code]\n\t},false,true\n\tfunction Type() {},false,Mon Sep 01 2014 16:03:49 GMT+0600\n\tfunction Type() {},false,Error\n\tfunction Type() {},false,function anonymous() {\n\n\t}\n\tfunction Type() {},false,function () {}\n\tfunction Type() {},false,[object Math]\n\tfunction Type() {},false,0\n\tfunction Number() {\n\t    [native code]\n\t},false,1\n\tfunction Type() {},false,[object Object]\n\tfunction Type() {},false,[object Object]\n\tfunction Type() {},false,/(?:)/\n\tfunction Type() {},false,/(?:)/\n\tfunction Type() {},false,\n\tfunction String() {\n\t    [native code]\n\t},false,тест",
                    "commentRange": [
                        872222,
                        874950
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js"
                },
                "__noSuchMethod__": {
                    "annotation": "property",
                    "type": "{Function}",
                    "name": "__noSuchMethod__",
                    "text": "Allows a function to be defined that will be executed when an undefined object member is called as a method.",
                    "commentRange": [
                        874958,
                        875225
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js"
                }
            }
        },
        "javascript.String": {
            "annotation": "class",
            "name": "String",
            "text": "#Summary\nThe String global object is a constructor for strings, or a sequence of characters.\n\n#Syntax\nString literals take the forms:\n\n\t'string text' \"string text\" \"中文 español English हिन्दी العربية português বাংলা русский 日本語 ਪੰਜਾਬੀ 한국어\"\n\nBeside regular, printable characters, special characters can be encoded using escape notation:\n\n\tCode\tOutput\n\t\\0\tthe NUL character\n\t\\'\tsingle quote\n\t\\\"\tdouble quote\n\t\\\\\tbackslash\n\t\\n\tnew line\n\t\\r\tcarriage return\n\t\\v\tvertical tab\n\t\\t\ttab\n\t\\b\tbackspace\n\t\\f\tform feed\n\t\\uXXXX\tunicode codepoint\n\t\\xXX\tthe Latin-1 character\n\nOr, using the String global object directly:\n\n\tString(thing) new String(thing)\n\n#Description\nStrings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their length, to build and concatenate them using the + and += string operators, checking for the existence or location of substrings with the indexOf method, or extracting substrings with the substring method.\n\n##Character access\n\nThere are two ways to access an individual character in a string. The first is the charAt method:\n\n\treturn 'cat'.charAt(1); // returns \"a\"\n\nThe other way (introduced in ECMAScript 5) is to treat the string as an array-like object, where individual characters correspond to a numerical index:\n\n\treturn 'cat'[1]; // returns \"a\"\n\nFor character access using bracket notation, attempting to delete or assign a value to these properties will not succeed. The properties involved are neither writable nor configurable. (See Object.defineProperty for more information.)\n\n##Comparing strings\n\nC developers have the strcmp() function for comparing strings. In JavaScript, you just use the less-than and greater-than operators:\n\n\tvar a = \"a\";\n\tvar b = \"b\";\n\tif (a < b) // true\n\t  print(a + \" is less than \" + b);\n\telse if (a > b)\n\t  print(a + \" is greater than \" + b);\n\telse\n\t  print(a + \" and \" + b + \" are equal.\");\n\nA similar result can be achieved using the localeCompare method inherited by String instances.\n\n##Distinction between string primitives and String objects\n\nNote that JavaScript distinguishes between String objects and primitive string values. (The same is true of Boolean and Numbers.)\n\nString literals (denoted by double or single quotes) and strings returned from String calls in a non-constructor context (i.e., without using the new keyword) are primitive strings. JavaScript automatically converts primitives to String objects, so that it's possible to use String object methods for primitive strings. In contexts where a method is to be invoked on a primitive string or a property lookup occurs, JavaScript will automatically wrap the string primitive and call the method or perform the property lookup.\n\n\tvar s_prim = \"foo\";\n\tvar s_obj = new String(s_prim);\n\n\tconsole.log(typeof s_prim); // Logs \"string\"\n\tconsole.log(typeof s_obj);  // Logs \"object\"\n\tString primitives and String objects also give different results when using eval. Primitives passed to eval are treated as source code; String objects are treated as all other objects are, by returning the object. For example:\n\n\ts1 = \"2 + 2\";               // creates a string primitive\n\ts2 = new String(\"2 + 2\");   // creates a String object\n\tconsole.log(eval(s1));      // returns the number 4\n\tconsole.log(eval(s2));      // returns the string \"2 + 2\"\n\nFor these reasons, code may break when it encounters String objects when it expects a primitive string instead, although generally authors need not worry about the distinction.\n\nA String object can always be converted to its primitive counterpart with the valueOf method.\n\n\tconsole.log(eval(s2.valueOf())); // returns the number 4\n\nNote: For another possible approach to strings in JavaScript, please read the article about StringView – a C-like representation of strings based on typed arrays.\n\n\n#String generic methods\nThe String instance methods are also available in Firefox as of JavaScript 1.6 (though not part of the ECMAScript standard) on the String object for applying String methods to any object:\n\n\tvar num = 15;\n\talert(String.replace(num, /5/, '2'));\n\nGenerics are also available on Array methods.\n\nThe following is a shim to provide support to non-supporting browsers:\n\n\t//globals define\n\t// Assumes all supplied String instance methods already present\n\t// (one may use shims for these if not available)\n\t(function () {\n\t    'use strict';\n\n\t    var i,\n\t        // We could also build the array of methods with the following, but the\n\t        //   getOwnPropertyNames() method is non-shimable:\n\t        // Object.getOwnPropertyNames(String).filter(function (methodName)\n\t        //  {return typeof String[methodName] === 'function'});\n\t        methods = [\n\t            'quote', 'substring', 'toLowerCase', 'toUpperCase', 'charAt',\n\t            'charCodeAt', 'indexOf', 'lastIndexOf', 'startsWith', 'endsWith',\n\t            'trim', 'trimLeft', 'trimRight', 'toLocaleLowerCase',\n\t            'toLocaleUpperCase', 'localeCompare', 'match', 'search',\n\t            'replace', 'split', 'substr', 'concat', 'slice'\n\t        ],\n\t        methodCount = methods.length,\n\t        assignStringGeneric = function (methodName) {\n\t            var method = String.prototype[methodName];\n\t            String[methodName] = function (arg1) {\n\t                return method.apply(arg1, Array.prototype.slice.call(arguments, 1));\n\t            };\n\t        };\n\n\t    for (i = 0; i < methodCount; i++) {\n\t        assignStringGeneric(methods[i]);\n\t    }\n\t}());\n\n#Examples\n##String conversion\n\nIt's possible to use String as a \"safer\" toString alternative, as although it still normally calls the underlying toString, it also works for null and undefined. For example:\n\n\tvar outputStrings = [];\n\tfor (let i = 0, n = inputValues.length; i < n; ++i) {\n\t  outputStrings.push(String(inputValues[i]));\n\t}",
            "commentRange": [
                875321,
                881187
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js",
            "module": {
                "annotation": "module",
                "name": "javascript",
                "text": "",
                "commentRange": [
                    875321,
                    881187
                ],
                "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
            },
            "absoluteName": "javascript.String",
            "properties": {
                "length": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "length",
                    "text": "#Summary\nThe length property represents the length of a string.\n\n#Syntax\n\n\tstr.length\n\n#Description\n\nThis property returns the number of code units in the string. UTF-16, the string format used by JavaScript, uses a single 16-bit code unit to represent the most common characters, but needs to use two code units for less commonly-used characters, so it's possible for the value returned by length to not match the actual number of characters in the string.\n\nFor an empty string, length is 0.\n\nThe static property String.length returns the value 1.\n\n#Examples\n\n\tvar x = \"Mozilla\";\n\tvar empty = \"\";\n\n\tconsole.log(\"Mozilla is \" + x.length + \" code units long\");\n\t// \"Mozilla is 7 code units long\" \n\n\tconsole.log(\"The empty string is has a length of \" + empty.length);\n\t // \"The empty string is has a length of 0\"",
                    "commentRange": [
                        881194,
                        882039
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                }
            },
            "methods": {
                "fromCharCode": {
                    "annotation": "method",
                    "name": "fromCharCode",
                    "text": "#Summary\nThe static String.fromCharCode() method returns a string created by using the specified sequence of Unicode values.\n\n#Syntax\nString.fromCharCode(num1, ..., numN)\n#Description\nThis method returns a string and not a String object.\n\nBecause fromCharCode is a static method of String, you always use it as String.fromCharCode(), rather than as a method of a String object you created.\n\n#Examples\nExample: Using fromCharCode\n\nThe following example returns the string \"ABC\".\n\n\tString.fromCharCode(65,66,67)\n\n#Getting it to work with higher values\nAlthough most common Unicode values can be represented with one 16-bit number (as expected early on during JavaScript standardization) and fromCharCode() can be used to return a single character for the most common values (i.e., UCS-2 values which are the subset of UTF-16 with the most common characters), in order to deal with ALL legal Unicode values (up to 21 bits), fromCharCode() alone is inadequate. Since the higher code point characters use two (lower value) \"surrogate\" numbers to form a single character, String.fromCodePoint() (part of the ES6 draft) can be used to return such a pair and thus adequately represent these higher valued characters.",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "returns",
                            "text": "a string created by using the specified sequence of Unicode values.}",
                            "theRestString": "@param p1,...pn A sequence of numbers that are Unicode values"
                        },
                        {
                            "annotation": "param",
                            "name": "p1",
                            "text": ",...pn A sequence of numbers that are Unicode values",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        882044,
                        883440
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                },
                "charAt": {
                    "annotation": "method",
                    "name": "charAt",
                    "text": "#Summary\nThe charAt() method returns the specified character from a string.\n\n#Syntax\n\tstr.charAt(index)\n#Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character in a string called stringName is stringName.length - 1. If the index you supply is out of range, JavaScript returns an empty string.\n\n#Examples\n##Example: Displaying characters at different locations in a string\n\nThe following example displays characters at different locations in the string \"Brave new world\":\n\n\tvar anyString = \"Brave new world\";\n\n\tconsole.log(\"The character at index 0   is '\" + anyString.charAt(0)   + \"'\");\n\tconsole.log(\"The character at index 1   is '\" + anyString.charAt(1)   + \"'\");\n\tconsole.log(\"The character at index 2   is '\" + anyString.charAt(2)   + \"'\");\n\tconsole.log(\"The character at index 3   is '\" + anyString.charAt(3)   + \"'\");\n\tconsole.log(\"The character at index 4   is '\" + anyString.charAt(4)   + \"'\");\n\tconsole.log(\"The character at index 999 is '\" + anyString.charAt(999) + \"'\");\n\nThese lines display the following:\n\n\tThe character at index 0 is 'B'\n\tThe character at index 1 is 'r'\n\tThe character at index 2 is 'a'\n\tThe character at index 3 is 'v'\n\tThe character at index 4 is 'e'\n\tThe character at index 999 is ''\n\n##Example: Getting whole characters\n\nThe following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.\n\n\tvar str = 'A \\uD87E\\uDC04 Z'; // We could also use a non-BMP character directly\n\tfor (var i=0, chr; i < str.length; i++) {\n\t  if ((chr = getWholeChar(str, i)) === false) {\n\t    continue;\n\t  } // Adapt this line at the top of each loop, passing in the whole string and\n\t    // the current iteration and returning a variable to represent the \n\t    // individual character\n\n\t  alert(chr);\n\t}\n\n\tfunction getWholeChar (str, i) {\n\t  var code = str.charCodeAt(i);     \n\t \n\t  if (isNaN(code)) {\n\t    return ''; // Position not found\n\t  }\n\t  if (code < 0xD800 || code > 0xDFFF) {\n\t    return str.charAt(i);\n\t  }\n\n\t  // High surrogate (could change last hex to 0xDB7F to treat high private\n\t  // surrogates as single characters)\n\t  if (0xD800 <= code && code <= 0xDBFF) { \n\t    if (str.length <= (i+1))  {\n\t      throw 'High surrogate without following low surrogate';\n\t    }\n\t    var next = str.charCodeAt(i+1);\n\t      if (0xDC00 > next || next > 0xDFFF) {\n\t        throw 'High surrogate without following low surrogate';\n\t      }\n\t      return str.charAt(i)+str.charAt(i+1);\n\t  }\n\t  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\t  if (i === 0) {\n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  var prev = str.charCodeAt(i-1);\n\t  \n\t  // (could change last hex to 0xDB7F to treat high private\n\t  // surrogates as single characters)\n\t  if (0xD800 > prev || prev > 0xDBFF) { \n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  // We can pass over low surrogates now as the second component\n\t  // in a pair which we have already processed\n\t  return false; \n\t}\n\nIn an exclusive JavaScript 1.7+ environment (such as Firefox) which allows destructured assignment, the following is a more succinct and somewhat more flexible alternative in that it does incrementing for an incrementing variable automatically (if the character warrants it in being a surrogate pair).\n\n\tvar str = 'A\\uD87E\\uDC04Z'; // We could also use a non-BMP character directly\n\tfor (var i=0, chr; i < str.length; i++) {\n\t  [chr, i] = getWholeCharAndI(str, i);\n\t  // Adapt this line at the top of each loop, passing in the whole string and\n\t  // the current iteration and returning an array with the individual character\n\t  // and 'i' value (only changed if a surrogate pair)\n\n\t  alert(chr);\n\t}\n\n\tfunction getWholeCharAndI (str, i) {\n\t  var code = str.charCodeAt(i);\n\n\t  if (isNaN(code)) {\n\t    return ''; // Position not found\n\t  }\n\t  if (code < 0xD800 || code > 0xDFFF) {\n\t    return [str.charAt(i), i]; // Normal character, keeping 'i' the same\n\t  }\n\n\t  // High surrogate (could change last hex to 0xDB7F to treat high private \n\t  // surrogates as single characters)\n\t  if (0xD800 <= code && code <= 0xDBFF) { \n\t    if (str.length <= (i+1))  {\n\t      throw 'High surrogate without following low surrogate';\n\t    }\n\t    var next = str.charCodeAt(i+1);\n\t      if (0xDC00 > next || next > 0xDFFF) {\n\t        throw 'High surrogate without following low surrogate';\n\t      }\n\t      return [str.charAt(i)+str.charAt(i+1), i+1];\n\t  }\n\t  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\t  if (i === 0) {\n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  var prev = str.charCodeAt(i-1);\n\n\t  // (could change last hex to 0xDB7F to treat high private surrogates\n\t  // as single characters)\n\t  if (0xD800 > prev || prev > 0xDBFF) { \n\t    throw 'Low surrogate without preceding high surrogate';\n\t  }\n\t  // Return the next character instead (and increment)\n\t  return [str.charAt(i+1), i+1]; \n\t}\n\n\n##Example: Fixing charAt to support non-Basic-Multilingual-Plane (BMP) characters\n\nWhile the example above may be more frequently useful for those wishing to support non-BMP characters (since it does not require the caller to know where any non-BMP character might appear), in the event that one does wish, in choosing a character by index, to treat the surrogate pairs within a string as the single characters they represent, one can use the following:\n\n\tfunction fixedCharAt (str, idx) {\n\t  var ret = '';\n\t  str += '';\n\t  var end = str.length;\n\n\t  var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t  while ((surrogatePairs.exec(str)) != null) {\n\t    var li = surrogatePairs.lastIndex;\n\t    if (li - 2 < idx) {\n\t      idx++;\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\n\t  if (idx >= end || idx < 0) {\n\t    return '';\n\t  }\n\n\t  ret += str.charAt(idx);\n\n\t  if (/[\\uD800-\\uDBFF]/.test(ret) && /[\\uDC00-\\uDFFF]/.test(str.charAt(idx+1))) {\n\t    // Go one further, since one of the \"characters\" is part of a surrogate pair\n\t    ret += str.charAt(idx+1); \n\t  }\n\t  return ret;\n\t}",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "index",
                            "text": "An integer between 0 and 1-less-than the length of the string.",
                            "theRestString": "@return {String} the specified character from a string."
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "name": "the",
                            "text": "specified character from a string.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        883448,
                        889740
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                },
                "charCodeAt": {
                    "annotation": "method",
                    "name": "charCodeAt",
                    "text": "#Summary\nThe charCodeAt() method returns the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000).\n\n#Syntax\n\tstr.charCodeAt(index)\n#Description\nUnicode code points range from 0 to 1,114,111. The first 128 Unicode code points are a direct match of the ASCII character encoding. For information on Unicode, see the JavaScript Guide.\n\nNote that charCodeAt will always return a value that is less than 65,536. This is because the higher code points are represented by a pair of (lower valued) \"surrogate\" pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65,536 and above, for such characters, it is necessary to retrieve not only charCodeAt(i), but also charCodeAt(i+1) (as if examining/reproducing a string with two letters). See example 2 and 3 below.\n\ncharCodeAt returns NaN if the given index is not greater than 0 or is greater than the length of the string.\n\nBackward compatibilty: In historic versions (like JavaScript 1.2) the charCodeAt method returns a number indicating the ISO-Latin-1 codeset value of the character at the given index. The ISO-Latin-1 codeset ranges from 0 to 255. The first 0 to 127 are a direct match of the ASCII character set.\n\n#Examples\n##Example: Using charCodeAt\n\nThe following example returns 65, the Unicode value for A.\n\n\t\"ABC\".charCodeAt(0) // returns 65\n\n#Example: Fixing charCodeAt to handle non-Basic-Multilingual-Plane characters if their presence earlier in the string is unknown\n\nThis version might be used in for loops and the like when it is unknown whether non-BMP characters exist before the specified index position.\n\n\tfunction fixedCharCodeAt (str, idx) {\n\t    // ex. fixedCharCodeAt ('\\uD800\\uDC00', 0); // 65536\n\t    // ex. fixedCharCodeAt ('\\uD800\\uDC00', 1); // false\n\t    idx = idx || 0;\n\t    var code = str.charCodeAt(idx);\n\t    var hi, low;\n\t    \n\t    // High surrogate (could change last hex to 0xDB7F to treat high\n\t    // private surrogates as single characters)\n\t    if (0xD800 <= code && code <= 0xDBFF) {\n\t        hi = code;\n\t        low = str.charCodeAt(idx+1);\n\t        if (isNaN(low)) {\n\t            throw 'High surrogate not followed by low surrogate in fixedCharCodeAt()';\n\t        }\n\t        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    if (0xDC00 <= code && code <= 0xDFFF) { // Low surrogate\n\t        // We return false to allow loops to skip this iteration since should have\n\t        // already handled high surrogate above in the previous iteration\n\t        return false;\n\t        //hi = str.charCodeAt(idx-1);\n\t        //low = code;\n\t        //return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    return code;\n\t}\n\n##Example: Fixing charCodeAt to handle non-Basic-Multilingual-Plane characters if their presence earlier in the string is known\n\n\tfunction knownCharCodeAt (str, idx) {\n\t    str += '';\n\t    var code,\n\t        end = str.length;\n\n\t    var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t    while ((surrogatePairs.exec(str)) != null) {\n\t        var li = surrogatePairs.lastIndex;\n\t        if (li - 2 < idx) {\n\t            idx++;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\n\t    if (idx >= end || idx < 0) {\n\t        return NaN;\n\t    }\n\n\t    code = str.charCodeAt(idx);\n\n\t    var hi, low;\n\t    if (0xD800 <= code && code <= 0xDBFF) {\n\t        hi = code;\n\t        low = str.charCodeAt(idx+1);\n\t        // Go one further, since one of the \"characters\" is part of a surrogate pair\n\t        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n\t    }\n\t    return code;\n\t}",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "index",
                            "text": "An integer greater than or equal to 0 and less than the length of the string; if it is not a number, it defaults to 0.",
                            "theRestString": "@returns {Number}returns the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000)."
                        },
                        {
                            "annotation": "returns",
                            "type": "{Number}",
                            "name": "returns",
                            "text": "the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000).",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        889745,
                        893739
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                },
                "concat": {
                    "annotation": "method",
                    "name": "concat",
                    "text": "#Summary\nThe concat() method combines the text of two or more strings and returns a new string.\n\n#Syntax\n\tstr.concat(string2, string3[, ..., stringN])\n\n#Description\nThe concat function combines the text from one or more strings and returns a new string. Changes to the text in one string do not affect the other string.\n\n#Examples\n##Example: Using concat\n\nThe following example combines strings into a new string.\n\n\tvar hello = \"Hello, \";\n\tconsole.log(hello.concat(\"Kevin\", \" have a nice day.\")); \n\n\t// Hello, Kevin have a nice day. \n\n#Performance\nIt is strongly recommended that assignment operators (+, +=) are used instead of the concat method. See this perfomance test.",
                    "children": [
                        {
                            "annotation": "param",
                            "name": "string2...stringN",
                            "text": "Strings to concatenate to this string.",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        893745,
                        894524
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                },
                "indexOf": {
                    "annotation": "method",
                    "name": "indexOf",
                    "text": "#Summary\nThe indexOf() method returns the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.\n\n#Syntax\n\tstr.indexOf(searchValue[, fromIndex])\n#Description\nCharacters in a string are indexed from left to right. The index of the first character is 0, and the index of the last character of a string called stringName is stringName.length - 1.\n\n\t\"Blue Whale\".indexOf(\"Blue\");     // returns  0\n\t\"Blue Whale\".indexOf(\"Blute\");    // returns -1\n\t\"Blue Whale\".indexOf(\"Whale\", 0); // returns  5\n\t\"Blue Whale\".indexOf(\"Whale\", 5); // returns  5\n\t\"Blue Whale\".indexOf(\"\", 9);      // returns  9\n\t\"Blue Whale\".indexOf(\"\", 10);     // returns 10\n\t\"Blue Whale\".indexOf(\"\", 11);     // returns 10\n\n##Case-sensitivity\n\nThe indexOf method is case sensitive. For example, the following expression returns -1:\n\n\"Blue Whale\".indexOf(\"blue\") // returns -1\n##Checking occurrences\n\nNote that '0' doesn't evaluate to true and '-1' doesn't evaluate to false. Therefore, when checking if a specific string exists within another string the correct way to check would be:\n\n\"Blue Whale\".indexOf(\"Blue\") != -1; // true\n\"Blue Whale\".indexOf(\"Bloe\") != -1; // false\n\n#Examples\n##Example: Using indexOf and lastIndexOf\n\nThe following example uses indexOf and lastIndexOf to locate values in the string \"Brave new world\".\n\n\tvar anyString = \"Brave new world\";\n\n\tconsole.log(\"The index of the first w from the beginning is \" + anyString.indexOf(\"w\"));\n\t// Displays 8\n\tconsole.log(\"The index of the first w from the end is \" + anyString.lastIndexOf(\"w\")); \n\t// Displays 10\n\n\tconsole.log(\"The index of 'new' from the beginning is \" + anyString.indexOf(\"new\"));   \n\t// Displays 6\n\tconsole.log(\"The index of 'new' from the end is \" + anyString.lastIndexOf(\"new\"));\n\t// Displays 6\n##Example: indexOf and case-sensitivity\n\nThe following example defines two string variables. The variables contain the same string except that the second string contains uppercase letters. The first log method displays 19. But because the indexOf method is case sensitive, the string \"cheddar\" is not found in myCapString, so the second log method displays -1.\n\n\tvar myString    = \"brie, pepper jack, cheddar\";\n\tvar myCapString = \"Brie, Pepper Jack, Cheddar\";\n\n\tconsole.log('myString.indexOf(\"cheddar\") is ' + myString.indexOf(\"cheddar\"));    \n\t// Displays 19\n\tconsole.log('myCapString.indexOf(\"cheddar\") is ' + myCapString.indexOf(\"cheddar\")); \n\t// Displays -1\n##Example: Using indexOf to count occurrences of a letter in a string\n\nThe following example sets count to the number of occurrences of the letter x in the string str:\n\n\tcount = 0;\n\tpos = str.indexOf(\"x\");\n\n\twhile ( pos != -1 ) {\n\t   count++;\n\t   pos = str.indexOf( \"x\",pos + 1 );\n\t}",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "searchValue",
                            "text": "A string representing the value to search for.",
                            "theRestString": "@param {Number} fromIndex The location within the calling string to start the search from. It can be any integer. The default value is 0. If fromIndex < 0 the entire string is searched (same as passing 0). If fromIndex >= str.length, the method will return -1 unless searchValue is an empty string in which case str.length is returned. \n@optional dummy @returns {Number} the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found."
                        },
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "fromIndex",
                            "text": "The location within the calling string to start the search from. It can be any integer. The default value is 0. If fromIndex < 0 the entire string is searched (same as passing 0). If fromIndex >= str.length, the method will return -1 unless searchValue is an empty string in which case str.length is returned.",
                            "theRestString": "@optional dummy @returns {Number} the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found."
                        },
                        {
                            "annotation": "optional",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@returns {Number} the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found."
                        },
                        {
                            "annotation": "returns",
                            "type": "{Number}",
                            "name": "the",
                            "text": "index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        894529,
                        897952
                    ],
                    "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
                }
            }
        }
    },
    "modules": {
        "Account": {
            "annotation": "module",
            "name": "Account",
            "text": "---------- \n Handles account creation, login, logout and password reset \n module Account",
            "commentRange": [
                1926,
                2129
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
        },
        "Address": {
            "annotation": "module",
            "name": "Address",
            "text": "",
            "commentRange": [
                10733,
                10832
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
        },
        "Case": {
            "annotation": "module",
            "name": "Case",
            "text": "",
            "commentRange": [
                19575,
                19676
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
        },
        "CMSadapter": {
            "annotation": "module",
            "name": "CMSadapter",
            "text": "",
            "commentRange": [
                37245,
                37364
            ],
            "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js"
        },
        "CreditMemo": {
            "annotation": "module",
            "name": "CreditMemo",
            "text": "",
            "commentRange": [
                42380,
                42498
            ],
            "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
        },
        "LiveOrder": {
            "annotation": "module",
            "name": "LiveOrder",
            "text": "",
            "commentRange": [
                66649,
                66669
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
        },
        "Payment": {
            "annotation": "module",
            "name": "Payment",
            "text": "",
            "commentRange": [
                151131,
                151318
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
        },
        "ProductList": {
            "annotation": "module",
            "name": "ProductList",
            "text": "",
            "commentRange": [
                159880,
                160112
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
        },
        "Quote": {
            "annotation": "module",
            "name": "Quote",
            "text": "",
            "commentRange": [
                210248,
                210352
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
        },
        "QuoteToSalesOrder": {
            "annotation": "module",
            "name": "QuoteToSalesOrder",
            "text": "",
            "commentRange": [
                227000,
                227139
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
        },
        "QuoteToSalesOrderValidator": {
            "annotation": "module",
            "name": "QuoteToSalesOrderValidator",
            "text": "",
            "commentRange": [
                239983,
                240149
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
        },
        "SiteSettings": {
            "annotation": "module",
            "name": "SiteSettings",
            "text": "Pre-processes the SiteSettings to be used on the site",
            "commentRange": [
                266368,
                266550
            ],
            "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js"
        },
        "ssp.libraries": {
            "annotation": "module",
            "name": "ssp.libraries",
            "text": "Contains the @?class Application with basic utilities for accessing netsuite environment, searches, dealing with requests and \n responses, defining error types.\n\n\n\nContains the core utilities and base classes to build high level back-end entity models that then are used by .ss services. \n\nThis code is based on suitescript and Commerce API.\n\n * Supports a simple events infrastructure (inspired on Backbone.Events)\n\n * Supports an Application object that can be used for high level operations like obtaining environment data, \npaginated search results\n\n * Supports console.log, console.err, etc\n\n * High level utilities for mapping search results, format dates and currencies, records meta information, etc.\n\n\n\nSupports infrastructure for defining model classes by using @?class SCModel.\n\n\n\nProvides @?class ServiceController utility class for nice service definitions.\n\n",
            "commentRange": [
                271774,
                271965
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
        },
        "ns.commerce": {
            "annotation": "module",
            "name": "ns.commerce",
            "text": "The Commerce API exposes a new set of shopping objects and functions, designed especially for use in developing web store customizations. This API can be used in SSP application scripts, along with the full range of existing server-side SuiteScript.",
            "commentRange": [
                342349,
                342865
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
        },
        "ns.suitescript": {
            "annotation": "module",
            "name": "ns.suitescript",
            "text": "* Note that there are some restrictions on API usage. Also note that the only 2 objects that can be\n* contructed are nlobjSearchFilter and nlobjSearchColumn. All other objects can only be created via\n* top-level function or method calls.\n*\n* The governance tag refers to the usage governance for an API call\n* The restricted tag refers to any known restrictions with a particular API call\n*\n* All Object arguments are Javascript Objects used as hash tables for specifying key-value pairs\n*\n*",
            "children": [
                {
                    "annotation": "since",
                    "name": "2005.0",
                    "text": "Support scripting of current record in Client SuiteScript\n*",
                    "theRestString": "@version\t2007.0 Support scripting of records in user events, portlets, and scheduled scripts\n* @version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2007.0",
                    "text": "Support scripting of records in user events, portlets, and scheduled scripts\n*",
                    "theRestString": "@version\t2008.1 Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n* @version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2008.1",
                    "text": "Support scripting of web requests (Suitelets) and user interfaces (UI Object API)\n*",
                    "theRestString": "@version\t2009.1 Support scripting of file objects\n* @version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2009.1",
                    "text": "Support scripting of file objects\n*",
                    "theRestString": "@version\t2009.2 Support scripting of setup records and assistant (multi-step) pages\n* @version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2009.2",
                    "text": "Support scripting of setup records and assistant (multi-step) pages\n*",
                    "theRestString": "@version\t2009.2 converted JS template to use eclipse code completion friendly format\n* @version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2009.2",
                    "text": "converted JS template to use eclipse code completion friendly format\n*",
                    "theRestString": "@version\t2010.1 Suppport dynamic scripting"
                },
                {
                    "annotation": "version",
                    "name": "2010.1",
                    "text": "Suppport dynamic scripting",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                368946,
                370074
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
        },
        "ns.suitescript.standard": {
            "annotation": "module",
            "name": "ns.suitescript.standard",
            "text": "The objects in this list are standard objects. Unlike UI Objects, they are not used to build NetSuite UI components such as buttons, forms, fields, sublists, etc. Standard objects are used more for manipulating backend data and to handle form GET and POST processing.\n\nEach standard object has methods that can be performed against it once it is returned in the script. The following is a list of all standard NetSuite objects.\n\n",
            "commentRange": [
                429518,
                429985
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
        },
        "ns.suitescript.ui": {
            "annotation": "module",
            "name": "ns.suitescript.ui",
            "text": "UI Objects\n\nSuiteScript UI objects are a collection of objects that can be used as a UI toolkit for server scripts such as Suitelets and user event scripts. UI objects encapsulate scriptable user interface components such as NetSuite portlets, forms, fields, lists, sublists, tabs, and columns. They can also encapsulate all components necessary for building a custom NetSuite-looking assistant wizard. If you are not familiar with UI objects, see UI Objects Overview.",
            "commentRange": [
                480317,
                480818
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
        },
        "Transaction": {
            "annotation": "module",
            "name": "Transaction",
            "text": "",
            "commentRange": [
                536784,
                536905
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
        },
        "javascript": {
            "annotation": "module",
            "name": "javascript",
            "text": "",
            "commentRange": [
                766821,
                770489
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js"
        }
    },
    "files": {
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js \n Account.ForgotPassword.ServiceController.js \n ---------------- \n Service to enable the user to recover the password when he forgets it": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                2,
                260
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ForgotPassword.ServiceController.js \n Account.ForgotPassword.ServiceController.js \n ---------------- \n Service to enable the user to recover the password when he forgets it"
        },
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js \n Account.Login.ServiceController.js \n ---------------- \n Service to handle the login of a user into the system": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                1013,
                1237
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Login.ServiceController.js \n Account.Login.ServiceController.js \n ---------------- \n Service to handle the login of a user into the system"
        },
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                1926,
                2129
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Model.js"
        },
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js \n Account.Register.ServiceController.js \n ---------------- \n Service to receive a new user registration": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                7560,
                8019
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.Register.ServiceController.js \n Account.Register.ServiceController.js \n ---------------- \n Service to receive a new user registration"
        },
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js \n Account.RegisterAsGuest.ServiceController.js \n ---------------- \n Service to enable the user to be registered as a guest.": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                8730,
                8976
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.RegisterAsGuest.ServiceController.js \n Account.RegisterAsGuest.ServiceController.js \n ---------------- \n Service to enable the user to be registered as a guest."
        },
        "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js \n Account.ResetPassword.ServiceController.js \n ---------------- \n Service to reset the password of a user": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                9682,
                9908
            ],
            "fileName": "./Modules/suitecommerce/Account@ML/SuiteScript/Account.ResetPassword.ServiceController.js \n Account.ResetPassword.ServiceController.js \n ---------------- \n Service to reset the password of a user"
        },
        "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                10619,
                10709
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.Model.js"
        },
        "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                15915,
                16188
            ],
            "fileName": "./Modules/suitecommerce/Address@ML/SuiteScript/Address.ServiceController.js \n Address.ServiceController.js \n ---------------- \n Service to manage addresses requests"
        },
        "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                18327,
                18528
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Fields.ServiceController.js \n Case.Fields.ServiceController.js \n ---------------- \n Service to manage support case fields"
        },
        "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                19575,
                19676
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.Model.js"
        },
        "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                33277,
                33458
            ],
            "fileName": "./Modules/suitecommerce/Case@ML/SuiteScript/Case.ServiceController.js \n Case.ServiceController.js \n ---------------- \n Service to manage support cases"
        },
        "./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.Model.js \n Category.js \n ----------- \n Handles the Category tree": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                35648,
                35804
            ],
            "fileName": "./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.Model.js \n Category.js \n ----------- \n Handles the Category tree"
        },
        "./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.ServiceController.js \n Categories.ServiceController.js \n ---------------- \n Service to manage categories": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                36597,
                36793
            ],
            "fileName": "./Modules/suitecommerce/Categories@ML/SuiteScript/Categories.ServiceController.js \n Categories.ServiceController.js \n ---------------- \n Service to manage categories"
        },
        "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                37245,
                37364
            ],
            "fileName": "./Modules/suitecommerce/CMSadapter@ML/SuiteScript/CMSadapter.Model.js"
        },
        "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                38393,
                38489
            ],
            "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.Model.js"
        },
        "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                40069,
                40276
            ],
            "fileName": "./Modules/suitecommerce/CreditCard@ML/SuiteScript/CreditCard.ServiceController.js \n CreditCard.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
        },
        "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                42380,
                42498
            ],
            "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.Model.js"
        },
        "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                48208,
                48414
            ],
            "fileName": "./Modules/suitecommerce/CreditMemo@ML/SuiteScript/CreditMemo.ServiceController.js \n CreditMemo.ServiceController.js \n ---------------- \n Service to manage credit memo requests"
        },
        "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.Model.js \n Deposit.Model.js \n ----------------": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                49438,
                49572
            ],
            "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.Model.js \n Deposit.Model.js \n ----------------"
        },
        "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                53060,
                53253
            ],
            "fileName": "./Modules/suitecommerce/Deposit@ML/SuiteScript/Deposit.ServiceController.js \n Deposit.ServiceController.js \n ---------------- \n Service to manage deposit requests"
        },
        "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.Model.js \n Deposit.Model.js \n ----------------": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                54249,
                54405
            ],
            "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.Model.js \n Deposit.Model.js \n ----------------"
        },
        "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                56466,
                56697
            ],
            "fileName": "./Modules/suitecommerce/DepositApplication@ML/SuiteScript/DepositApplication.ServiceController.js \n DepositApplication.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
        },
        "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.Model.js \n Invoice.Model.js \n ---------- \n Handles fetching invoices": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                57780,
                57934
            ],
            "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.Model.js \n Invoice.Model.js \n ---------- \n Handles fetching invoices"
        },
        "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                61263,
                61446
            ],
            "fileName": "./Modules/suitecommerce/Invoice@ML/SuiteScript/Invoice.ServiceController.js \n Invoice.Service.ss \n ---------------- \n Service to manage invoice requests"
        },
        "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js \n LiveOrder.GiftCertificate.ServiceController.js \n ---------------- \n Service to manage gift certificates in the live order": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                62860,
                63110
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.GiftCertificate.ServiceController.js \n LiveOrder.GiftCertificate.ServiceController.js \n ---------------- \n Service to manage gift certificates in the live order"
        },
        "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                63945,
                64161
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Line.ServiceController.js \n LiveOrder.Line.ServiceController.js \n ---------------- \n Service to manage lines in the live order"
        },
        "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                66373,
                66467
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.Model.js"
        },
        "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                108101,
                108303
            ],
            "fileName": "./Modules/suitecommerce/LiveOrder@ML/SuiteScript/LiveOrder.ServiceController.js \n LiveOrder.ServiceController.js \n ---------------- \n Service to manage cart items requests"
        },
        "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                110235,
                110333
            ],
            "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.Model.js"
        },
        "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                122899,
                123107
            ],
            "fileName": "./Modules/suitecommerce/LivePayment@ML/SuiteScript/LivePayment.ServiceController.js \n LivePayment.ServiceController.js \n ---------------- \n Service to manage cart items requests"
        },
        "./Modules/suitecommerce/NativesExtras@ML/JavaScript/String.format.js \n ! © 2015 NetSuite Inc. \n String.format.js \n ---------------- \n Used for the translation method in Utils.js \n Will replace $(n) for the n parameter entered \n eg: \"This $(0) a $(1), $(0) it?\".format(\"is\", \"test\"); \n returns \"This is a test, is it?\"": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                124433,
                124789
            ],
            "fileName": "./Modules/suitecommerce/NativesExtras@ML/JavaScript/String.format.js \n ! © 2015 NetSuite Inc. \n String.format.js \n ---------------- \n Used for the translation method in Utils.js \n Will replace $(n) for the n parameter entered \n eg: \"This $(0) a $(1), $(0) it?\".format(\"is\", \"test\"); \n returns \"This is a test, is it?\""
        },
        "./Modules/suitecommerce/NativesExtras@ML/JavaScript/Synthetic.Click.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                125066,
                125163
            ],
            "fileName": "./Modules/suitecommerce/NativesExtras@ML/JavaScript/Synthetic.Click.js"
        },
        "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                127219,
                127386
            ],
            "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.Model.js \n OrderHistory.Model.js \n ---------- \n Handles fetching orders"
        },
        "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                138879,
                139093
            ],
            "fileName": "./Modules/suitecommerce/OrderHistory@ML/SuiteScript/OrderHistory.ServiceController.js \n OrderHistory.ServiceController.js \n ---------------- \n Service to manage placed orders requests"
        },
        "./Modules/suitecommerce/ReleaseMetadata@ML/SuiteScript/ReleaseMetadata.js \n ! © 2015 NetSuite Inc.": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                141632,
                141758
            ],
            "fileName": "./Modules/suitecommerce/ReleaseMetadata@ML/SuiteScript/ReleaseMetadata.js \n ! © 2015 NetSuite Inc."
        },
        "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                142459,
                142636
            ],
            "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.Model.js \n ReorderItems.Model.js \n ---------- \n Handles fetching of ordered items"
        },
        "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                149201,
                149415
            ],
            "fileName": "./Modules/suitecommerce/ReorderItems@ML/SuiteScript/ReorderItems.ServiceController.js \n ReorderItems.ServiceController.js \n ---------------- \n Service to manage reorder items requests"
        },
        "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                151131,
                151318
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.Model.js \n Payment.js \n ------- \n Defines the model used by the payment.ss service"
        },
        "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                155480,
                155673
            ],
            "fileName": "./Modules/suitecommerce/Payment@ML/SuiteScript/Payment.ServiceController.js \n Payment.ServiceController.js \n ---------------- \n Service to manage payment requests"
        },
        "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                156774,
                156878
            ],
            "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.Model.js"
        },
        "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                158522,
                158734
            ],
            "fileName": "./Modules/suitecommerce/PrintStatement@ML/SuiteScript/PrintStatement.ServiceController.js \n PrintStatement.ServiceController.js \n ---------------- \n Service to manage print requests"
        },
        "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                159880,
                160112
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Model.js"
        },
        "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Search.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                165047,
                165151
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.Search.js"
        },
        "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                173086,
                173312
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Item.ServiceController.js \n ProductList.Item.ServiceController.js \n ---------------- \n Service to manage product list items requests"
        },
        "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Model.js \n ProductList.Model.js \n ---------------- \n Handles creating, fetching and updating Product Lists": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                176730,
                176930
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.Model.js \n ProductList.Model.js \n ---------------- \n Handles creating, fetching and updating Product Lists"
        },
        "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                186460,
                186670
            ],
            "fileName": "./Modules/suitecommerce/ProductList@ML/SuiteScript/ProductList.ServiceController.js \n ProductList.ServiceController.js \n ---------------- \n Service to manage credit cards requests"
        },
        "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.Model.js \n ProductReviews.Model.js \n ---------------- \n Handles creating, fetching and updating ProductReviews": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                189852,
                190062
            ],
            "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.Model.js \n ProductReviews.Model.js \n ---------------- \n Handles creating, fetching and updating ProductReviews"
        },
        "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                200432,
                200653
            ],
            "fileName": "./Modules/suitecommerce/ProductReviews@ML/SuiteScript/ProductReviews.ServiceController.js \n ProductReviews.ServiceController.js \n ---------------- \n Service to manage product review requests"
        },
        "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                203218,
                203308
            ],
            "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.Model.js"
        },
        "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                208725,
                208918
            ],
            "fileName": "./Modules/suitecommerce/Profile@ML/SuiteScript/Profile.ServiceController.js \n Profile.ServiceController.js \n ---------------- \n Service to manage profile requests"
        },
        "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                210248,
                210352
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.Model.js"
        },
        "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                224053,
                224370
            ],
            "fileName": "./Modules/suitecommerce/Quote@ML/SuiteScript/Quote.ServiceController.js \n Quote.ServiceController.js \n ---------------- \n Service to manage quote requests"
        },
        "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                227000,
                227139
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.Model.js"
        },
        "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                237466,
                237701
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrder@ML/SuiteScript/QuoteToSalesOrder.ServiceController.js \n QuoteToSalesOrder.ServiceController.js \n ---------------- \n Service to manage quote to sales order request"
        },
        "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                239983,
                240149
            ],
            "fileName": "./Modules/suitecommerce/QuoteToSalesOrderValidator@ML/SuiteScript/QuoteToSalesOrderValidator.Model.js"
        },
        "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.Model.js \n Receipt.Model.js \n ---------- \n Handles fetching receipts": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                244616,
                244770
            ],
            "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.Model.js \n Receipt.Model.js \n ---------- \n Handles fetching receipts"
        },
        "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                245851,
                246044
            ],
            "fileName": "./Modules/suitecommerce/Receipt@ML/SuiteScript/Receipt.ServiceController.js \n Receipt.ServiceController.js \n ---------------- \n Service to manage invoice requests"
        },
        "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                247533,
                247703
            ],
            "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.Model.js \n ReturnAuthorization.Model.js \n ----------------"
        },
        "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                263839,
                264081
            ],
            "fileName": "./Modules/suitecommerce/ReturnAuthorization@ML/SuiteScript/ReturnAuthorization.ServiceController.js \n ReturnAuthorization.ServiceController.js \n ---------------- \n Service to manage return authorization requests"
        },
        "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                266368,
                266550
            ],
            "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.Model.js"
        },
        "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                270293,
                270506
            ],
            "fileName": "./Modules/suitecommerce/SiteSettings@ML/SuiteScript/SiteSettings.ServiceController.js \n SiteSettings.ServiceController.js \n ---------------- \n Service to manage sitesettings requests"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                271507,
                271611
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Application.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                292009,
                292454
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Configuration.js \n Backend Configuration file"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Console.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                302751,
                302851
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Console.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                305415,
                305514
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Events.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Models.Init.js \n Init.js \n ------- \n Global variables to be used accross models \n This is the head of combined file Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                310198,
                310417
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Models.Init.js \n Init.js \n ------- \n Global variables to be used accross models \n This is the head of combined file Model.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                311703,
                311837
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.EventWrapper.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                314579,
                314787
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/SC.Model.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                316192,
                316340
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.Validations.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                320274,
                320492
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ServiceController.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                328924,
                329048
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/Utils.js"
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page.": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                342349,
                342865
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.commerce-docs.js \n jsdocs for commerce api. Most of this was taken from netsuite Help 'Commerce API Refence' page."
        },
        "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                368562,
                368674
            ],
            "fileName": "./Modules/suitecommerce/SspLibraries@chaos-apidocs/SuiteScript/ns.suitescript-docs.js"
        },
        "./Modules/suitecommerce/StoreItem@ML/SuiteScript/StoreItem.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                532000,
                532094
            ],
            "fileName": "./Modules/suitecommerce/StoreItem@ML/SuiteScript/StoreItem.Model.js"
        },
        "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                536784,
                536905
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.Model.js"
        },
        "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                586586,
                588059
            ],
            "fileName": "./Modules/suitecommerce/Transaction@ML/SuiteScript/Transaction.ServiceController.js \n Transaction.ServiceController.js \n ---------------- \n Service to list transactions"
        },
        "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.Model.js \n TransactionHistory.Model.js \n ----------------": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                589708,
                589875
            ],
            "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.Model.js \n TransactionHistory.Model.js \n ----------------"
        },
        "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                590264,
                590484
            ],
            "fileName": "./Modules/suitecommerce/TransactionHistory@ML/SuiteScript/TransactionHistory.ServiceController.js \n TransactionHistory.ServiceController.js \n ---------------- \n Service to list transactions"
        },
        "./Modules/third_parties/almond@0.3.0/almond.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                592324,
                592397
            ],
            "fileName": "./Modules/third_parties/almond@0.3.0/almond.js"
        },
        "./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.js \n Backbone.Validation v0.9.1 \n \n Copyright (c) 2011-2014 Thomas Pedersen \n Distributed under MIT License \n \n Documentation and full license available at: \n http://thedersen.com/projects/backbone-validation": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                607505,
                607825
            ],
            "fileName": "./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.js \n Backbone.Validation v0.9.1 \n \n Copyright (c) 2011-2014 Thomas Pedersen \n Distributed under MIT License \n \n Documentation and full license available at: \n http://thedersen.com/projects/backbone-validation"
        },
        "./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.server.custom.js \n Customized Backbone Validation Library": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                635903,
                636066
            ],
            "fileName": "./Modules/third_parties/backbone.validation@0.9.1-custom/backbone-validation.server.custom.js \n Customized Backbone Validation Library"
        },
        "./Modules/third_parties/bignumber@1.5.0/bignumber.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                658940,
                659019
            ],
            "fileName": "./Modules/third_parties/bignumber@1.5.0/bignumber.js"
        },
        "./Modules/third_parties/underscore.js@1.7.0/underscore.js \n Underscore.js 1.7.0 \n http://underscorejs.org \n (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors \n Underscore may be freely distributed under the MIT license.": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                719012,
                719312
            ],
            "fileName": "./Modules/third_parties/underscore.js@1.7.0/underscore.js \n Underscore.js 1.7.0 \n http://underscorejs.org \n (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors \n Underscore may be freely distributed under the MIT license."
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                766728,
                766819
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Boolean.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                770947,
                771036
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Error.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                778983,
                779075
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Function.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                799586,
                799676
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Number.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                806509,
                806599
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                870163,
                870263
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/Object.prototype.js"
        },
        "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js": {
            "annotation": "filename",
            "type": "{Foo}",
            "name": "fileName",
            "commentRange": [
                875229,
                875319
            ],
            "fileName": "/Users/sgurin/git/short-jsdoc/vendor-jsdoc/javascript/String.js"
        }
    },
    "alias": {
        "string": {
            "type": "class",
            "name": "string",
            "target": "String"
        },
        "int": {
            "type": "class",
            "name": "int",
            "target": "Number"
        },
        "boolean": {
            "type": "class",
            "name": "boolean",
            "target": "Boolean"
        },
        "array": {
            "type": "class",
            "name": "array",
            "target": "Array"
        },
        "float": {
            "type": "class",
            "name": "float",
            "target": "Number"
        }
    },
    "projectMetadata": {
        "jsdoc": {
            "dontMinifyOutput": true
        },
        "name": "SuiteCommerce Advanced 2.0",
        "version": "2.0",
        "javascript entrypoints": [
            "SC.Shopping.Starter",
            "SC.MyAccount.Starter",
            "SC.Checkout.Starter"
        ],
        "ssp-libraries entrypoint": "SCA",
        "modules": [
            "suitecommerce/Account@ML",
            "suitecommerce/Address@ML",
            "suitecommerce/AjaxRequestsKiller@ML",
            "suitecommerce/ApplicationSkeleton@chaos-apidocs",
            "suitecommerce/AutomationCore@ML",
            "suitecommerce/Backbone.CollectionView@chaos-apidocs",
            "suitecommerce/Backbone.CompositeView@chaos-apidocs",
            "suitecommerce/Backbone.FormView@chaos-apidocs",
            "suitecommerce/BackboneExtras@chaos-apidocs",
            "suitecommerce/Balance@ML",
            "suitecommerce/BaseSassStyleguide@ML",
            "suitecommerce/BaseSassStyles@ML",
            "suitecommerce/BootstrapExtras@ML",
            "suitecommerce/BrontoIntegration@ML",
            "suitecommerce/Cart@ML",
            "suitecommerce/Case@ML",
            "suitecommerce/Categories@ML",
            "suitecommerce/CheckoutApplication@ML",
            "suitecommerce/CheckoutSkipLogin@ML",
            "suitecommerce/CMSadapter@ML",
            "suitecommerce/Content@ML",
            "suitecommerce/CookieWarningBanner@ML",
            "suitecommerce/CreditCard@ML",
            "suitecommerce/CreditMemo@ML",
            "suitecommerce/CustomerPayment@ML",
            "suitecommerce/Deposit@ML",
            "suitecommerce/DepositApplication@ML",
            "suitecommerce/ErrorManagement@chaos-apidocs",
            "suitecommerce/Facets@ML",
            "suitecommerce/Footer@ML",
            "suitecommerce/GlobalImages@ML",
            "suitecommerce/GlobalViews@ML",
            "suitecommerce/GoogleAdWords@ML",
            "suitecommerce/GoogleUniversalAnalytics@ML",
            "suitecommerce/GoogleTagManager@ML",
            "suitecommerce/HandlebarsExtras@ML",
            "suitecommerce/Header@ML",
            "suitecommerce/Home@ML",
            "suitecommerce/ImageLoader@ML",
            "suitecommerce/ImageNotAvailable@ML",
            "suitecommerce/Invoice@ML",
            "suitecommerce/ItemDetails@ML",
            "suitecommerce/ItemOptionsHelper@ML",
            "suitecommerce/ItemRelations@ML",
            "suitecommerce/ItemViews@ML",
            "suitecommerce/ItemsKeyMapping@ML",
            "suitecommerce/ItemsSearcher@ML",
            "suitecommerce/jQueryExtras@ML",
            "suitecommerce/ListHeader@chaos-apidocs",
            "suitecommerce/LiveOrder@ML",
            "suitecommerce/LivePayment@ML",
            "suitecommerce/LoginRegister@ML",
            "suitecommerce/Main@chaos-apidocs",
            "suitecommerce/MenuTree@ML",
            "suitecommerce/Merchandising@ML",
            "suitecommerce/MyAccountApplication@ML",
            "suitecommerce/MyAccountApplication.SCA@ML",
            "suitecommerce/NativesExtras@ML",
            "suitecommerce/NavigationHelper@ML",
            "suitecommerce/Order@ML",
            "suitecommerce/OrderHistory@ML",
            "suitecommerce/ReleaseMetadata@ML",
            "suitecommerce/ReorderItems@ML",
            "suitecommerce/OrderWizard@ML",
            "suitecommerce/OrderWizard.Module.Address@ML",
            "suitecommerce/OrderWizard.Module.CartItems@ML",
            "suitecommerce/OrderWizard.Module.Package@ML",
            "suitecommerce/OrderWizard.Module.PaymentMethod@ML",
            "suitecommerce/OrderWizard.Module.PromocodeForm@ML",
            "suitecommerce/OrderWizard.Module.Shipmethod@ML",
            "suitecommerce/OrderWizard.Module.Register@ML",
            "suitecommerce/OrderWizard.Module.Confirmation@ML",
            "suitecommerce/OrderWizard.Module.CartSummary@ML",
            "suitecommerce/OrderWizard.Module.NonShippableItems@ML",
            "suitecommerce/OrderWizard.Module.MultiShipTo.EnableLink@ML",
            "suitecommerce/OrderWizard.Module.SubmitButton@ML",
            "suitecommerce/OrderWizard.Module.TermsAndConditions@ML",
            "suitecommerce/OrderWizard.Module.Title@ML",
            "suitecommerce/Overview@ML",
            "suitecommerce/PaymentWizard@ML",
            "suitecommerce/Payment@ML",
            "suitecommerce/PluginContainer@chaos-apidocs",
            "suitecommerce/PrintStatement@ML",
            "suitecommerce/ProductList@ML",
            "suitecommerce/ProductReviews@ML",
            "suitecommerce/Profile@ML",
            "suitecommerce/PromocodeSupport@ML",
            "suitecommerce/QuickAdd@ML",
            "suitecommerce/Quote@ML",
            "suitecommerce/QuoteToSalesOrder@ML",
            "suitecommerce/QuoteToSalesOrderValidator@ML",
            "suitecommerce/QuoteToSalesOrderWizard@ML",
            "suitecommerce/Receipt@ML",
            "suitecommerce/RecordViews@ML",
            "suitecommerce/ReturnAuthorization@ML",
            "suitecommerce/RecentlyViewedItems@ML",
            "suitecommerce/RequestQuoteAccessPoints@ML",
            "suitecommerce/RequestQuoteWizard@ML",
            "suitecommerce/SCA@ML",
            "suitecommerce/Sensors@ML",
            "suitecommerce/Session@ML",
            "suitecommerce/ShoppingApplication@ML",
            "suitecommerce/SiteSearch@ML",
            "suitecommerce/SiteSettings@ML",
            "suitecommerce/SocialSharing@ML",
            "suitecommerce/SspLibraries@chaos-apidocs",
            "suitecommerce/StoreItem@ML",
            "suitecommerce/Tracker@ML",
            "suitecommerce/TrackingServices@ML",
            "suitecommerce/Transaction@ML",
            "suitecommerce/TransactionHistory@ML",
            "suitecommerce/UnitTestHelper@ML",
            "suitecommerce/UrlHelper@ML",
            "suitecommerce/Utilities@ML",
            "suitecommerce/Wizard@ML",
            "third_parties/almond@0.3.0",
            "third_parties/backbone.js@1.1.2-custom",
            "third_parties/backbone.validation@0.9.1-custom",
            "third_parties/backbone.stickit@0.8.0",
            "third_parties/bignumber@1.5.0",
            "third_parties/blanket@1.1.5",
            "third_parties/bootstrap-datepicker@1.3.1",
            "third_parties/font-awesome@4.2.0-custom",
            "third_parties/handlebars@2.0.0",
            "third_parties/html5shiv@3.7.2",
            "third_parties/respond@1.4.2-custom",
            "third_parties/jasmine2-typechecking-matchers@1.1.0",
            "third_parties/jasmine-ajax@2.0.2",
            "third_parties/jasmine@2.1.3",
            "third_parties/jQuery-bxslider@4.1.2-custom",
            "third_parties/jQuery-Cookie@1.4.1",
            "third_parties/jQuery-Zoom@1.7.13",
            "third_parties/jQuery@1.11.1-custom",
            "third_parties/json2@2.0.1",
            "third_parties/require.js@2.1.15",
            "third_parties/twitter-bootstrap-sass@3.3.1",
            "third_parties/twitter-typeahead@0.10.5",
            "third_parties/underscore.js@1.7.0"
        ]
    }
}