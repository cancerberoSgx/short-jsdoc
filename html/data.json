{
    "source": "//@module ideal\n//@class BaseObject \nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n//@property {Date} creationDate\n//@property {String} name\n//@property {String} description\n//@property {Object<String,User>} owners the owners, a map by owner id\nfunction BaseObject(){};\n\n//@class ObjectPool\nfunction ObjectPool(){};\n//@method loadObjects @param {Array<String>} objects_ids @return {Object<String,BaseObject>}\nObjectPool.prototype.getOwners = function(objects_ids){return null;}\n//@method getOwners this method is useful for *blabla* blabla _blabla_ bab\nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n\n\n/*@param {Array<String>} objects_ids @return {Object<String,Object<String,User>>}*/\nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n//@event objectCreated event fired when an object is created in this pool.\n\nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n\n\n//@class Thing @extends BaseObject\n//@property {Number} importance\n\nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n\n\n/** @class Action @extends BaseObject */\n\nvar s = 'these are just js sample sentences'; \nif(typeof sentence === 'undefined')\n{\n\tconsole.log('alert'); \n}\n\n//@method extract @param {String|BaseObject|Array<BaseObject>} what\n\n// @module Problems\n\n// @class Idea\n// @class Problem\n\n//@module life\n//@class Living @extends Thing\n//@method breath @param {Number} size\n\n//@class Animal @extends Living\n//@method eat @param {Array<Food>} food @return {Array<Energy>}\n\n//@class Person @extends Animal\n//@method walk @return {Action}\n/*@method crossStreet\n\nThis try to be a markdown [text](http://google.com)\n\nAnother paragraph \n\n\tvar someMarkup = {\n\t\ta: 1\n\t,\tn: 2\n\t,\tg: function (e)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t};\n\nand some final text with a list\n\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n  2. hello\n4. And another item.\n*/\n\n\n// @module problem1 This is a description of planet earth city from the point of view of an alien observing us from a space ship.\n//@class TerranObject\n// @class Person @extends TerranObject\n\n//@class List This is just a semantic alias for javascript Array. @extends Array\n//@class Map This is just a semantic alias for javascript Object. @extends Object\n\n/*@class Building @extends TerranObject */\n\n//@class Hospital @extends Building\n//@constructor Neque porro quisquam est qui _dolorem_ *ipsum* quia dolor sit amet, consectetur, adipisci velit... \n//@param {Number} availableBeds\n//Neque porro quisquam est qui _dolorem_ *ipsum* quia dolor sit amet, consectetur, adipisci velit...\n//@method getActiveDoctors @returns {List<Doctor>} the currently active doctors in this hospital\n//@property {Array<Person>} todayIngresedPatients all the patiens that entered this hospital today\n\n// @class Doctor @extend Person\n// @property {Map<String,MedicalTopic>} skills\n\n/*@class MedicalTopic\nLorem *ipsum* dolor sit amet, consectetur adipisicing elit, \n\n\tsed do eiusmod tempor \n\tincididunt ut labore et dolore \n\tmagna aliqua. \n\t\tUt enim ad minim \n\t\t\tveniam, quis nostrud exercitation\n\t\t\tullamco laboris nisi ut aliquip ex \n\t\tea commodo consequat. Duis aute irure dolor\n\tin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n\nExcepteur sint occaecat *cupidatat* non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\n*/\n\n//@module shortjsdoc\n//@class AbstractView @extend Backbone.View @module shortjsdoc\n\nvar AbstractView = Backbone.View.extend({\n\n\ttagName: \"div\"\n\n,\tinitialize: function(application) \n\t{\n\t\tthis.application = application;\n\t}\n\n\t//@method renderIn renders this view in given parent element @param {jQuery} $parent\n,\trenderIn: function($parent)\n\t{\n\t\tvar template = this.application.templates[this.template]; \n\t\tif(template)\n\t\t{\t\t\t\n\t\t\tvar html = template.apply(this, []); \n\t\t\tthis.$el.html(html);\n\t\t\t$parent.append(this.$el); \n\t\t}\n\t\tthis.afterRender();\n\t}\n\n\t// @method afterRender called b the application jsut after this view is shown. Ooverridable b subclasses for doing some post rendering like installing js widgets, or something. Do nothing b default so you extenders don't need to call super\n,\tafterRender: function()\n\t{\n\t}\n});\n\n\n\n//@module shortjsdoc\n// this is the main class for all the application\n// utilities for rendering jsdoc data generated by jsdocgenerator1 js-indentator plugin\n// using backbone. The user should provide with underscore templates. \n// @class AbstractView @extend Backbone.View @module shortjsdoc\n// @author: sgurin\n\n//@class Application \n//@constructor Application @param {Object} data\nvar Application = function(data)\n{\n\tthis.textFormat = 'markdown'; \n\t\n\tthis.templates = shortjsdoc; //global variable given b templates.js\n\n\t// this.parser = jsindentator.styles.shortJsDoc; \n\tthis.data = data; \n\n\tthis.maker = new JsDocMaker();\n\tthis.maker.data = data;\n\tthis.maker.postProccessBinding();\n\tthis.maker.postProccessInherited(); // <-- important - explicitly ask the framework to calculate inherited methods&properties\n\n\tif(jQuery('#mainContainer').size()===0)\n\t{\n\t\tjQuery('body').append('<div id=\"mainContainer\"></div>'); \n\t}\n\tthis.$containerEl = jQuery('#mainContainer'); \n};\n\n_(Application.prototype).extend({\n\n\t//@method start starts the application by instantiating routers and history and navigating to the index.\n\tstart: function()\n\t{\t\t\n\t\tthis.router = new JsDocRouter(this);\n\t\tBackbone.history.start();\n\t\tvar navigateTo = Backbone.history.getHash() || 'index'; \n\t\tBackbone.history.navigate(navigateTo, {trigger: true});\n\t}\n\n\t//@method showView @param {AbstractView} view\n,\tshowView: function(view)\n\t{\n\t\tthis.applicationView = this.applicationView || new ApplicationView(this); \n\t\tthis.currentView = view;\n\t\tthis.$containerEl.empty();\n\t\tthis.applicationView.renderIn(this.$containerEl);\n\t}\n\n\t//@method refreshWithNewModel @param {Object}data\n,\trefreshWithNewModel: function(data)\n\t{\n\t\tthis.data = data; \n\t\tBackbone.history.navigate('#index', {trigger: true}); \n\t\tthis.showView(this.currentView);\n\t}\n\n\t//@method showErrorView @param {String}s \n,\tshowErrorView: function(s) \n\t{\n\t\tthis.$containerEl.empty().append('<h1>'+s+'</h1>'); \n\t}\n\n});\n\n//@method start an application loading it with given data. @static\n//@param data the output of passing jsindentator JsDocMaker. \nApplication.startApplication = function(data)\n{\n\tvar app = new Application(data); \n\tapp.start();\n}; \n  \n\n//@module shortjsdoc\n//@class ApplicationView @extends AbstractView\nvar ApplicationView = AbstractView.extend({\n\n\tclassName: \"application-view\"\n\n,\ttemplate: 'application'\n\n,\tinitialize: function(application) \n\t{\n\t\tthis.application = application;\n\t}\n\n,\trenderIn: function($el)\n\t{\n\t\tAbstractView.prototype.renderIn.apply(this, arguments); \n\n\t\tthis.headerView = this.headerView || new HeaderView(this.application);\n\t\tthis.headerView.renderIn(this.$('[data-type=\"header-container\"]')); \n\n\t\tthis.mainView = this.application.currentView; \n\n\t\tthis.mainView.renderIn(this.$('[data-type=\"main-view-container\"]')); \n\t}\n\n});\n\n//@module shortjsdoc\n//@class ClassView @extends AbstractView\n\nvar ClassView = AbstractView.extend({\n\n\tclassName: \"class-view\"\n\n,\ttemplate: 'class'\n\n,\tinitialize: function(application, className, options) \n\t{\n\t\tthis.application = application;\n\t\tthis.jsdoc = this.application.data.classes[className]; \n\t\tif(!this.jsdoc)\n\t\t{\n\t\t\tthis.resourceNotFound = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.jsdoc.textHtml = this.getTextHtml(this.jsdoc);\t\n\n\t\tthis.options = options || {};\n\n\t\t// this.hierarchy = this.computeHierarchy();\n\t}\n/*\n,\tcomputeHierarchy: function()\n\t{\n\t\tvar hierarchy = [];\n\t\tvar c = this.jsdoc;\n\t\tdo \n\t\t{\n\t\t\thierarchy = [c].concat(hierarchy);\n\t\t\tif(c.name===this.jsdoc.name)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile( (c = c.extends) ); \n\t\treturn hierarchy;\n\t}\n*/\n,\tafterRender: function()\n\t{\n\t\tthis.renderSource(this.jsdoc, this.$('[data-type=\"sources\"]')); \n\t}\n});\n\n//@module shortjsdoc\n//@class HeaderView @extends AbstractView\nvar HeaderView = AbstractView.extend({\n\n\tclassName: \"header-view\"\n\n,\ttemplate: 'header'\n\n,\tinitialize: function(application) \n\t{\n\t\tthis.application = application;\n\t}\n\t\n,\trenderIn: function()\n\t{\n\t\tAbstractView.prototype.renderIn.apply(this, arguments); \n\t\tthis.installTypeAhead();\n\t}\n\n,\tinstallTypeAhead: function()\n\t{\n\t\tthis.classes = this.application.data.classes;\n\t\tthis.modules = this.application.data.modules;\n\n\t\tthis.typeahead = $('.main-header .typeahead1').typeahead({\n\t\t\thint: true,\n\t\t\thighlight: true,\n\t\t\tminLength: 1\n\t\t},\t{\n\t\t\tname: 'jsdoc',\n\t\t\tdisplayKey: 'value',\n\t\t\tsource: this.substringMatcher()\n\t\t});\n\n\t\tvar self = this;\n\t\tthis.typeahead.on('typeahead:selected', function()\n\t\t{\n\t\t\tself.handleSearchSelection.apply(self, arguments);\n\t\t});\n\t}\n\n,\thandleSearchSelection: function(event, object, dataset)\n\t{\n\t\tvar href = this.makeLink(object.node);\n\t\tBackbone.history.navigate(href, {trigger: true}); \n\t}\n\n,\tsearch: function(q)\n\t{\n\t\tvar self=this,matches = []\n\n\t\t// regex used to determine if a string contains the substring `q`\n\t\t,\tsubstrRegex = new RegExp(q, 'i');\n\n\t\t// iterate through the pool of strings and for any string that\n\t\t// contains the substring `q`, add it to the `matches` array\n\t\t_(self.classes).each(function (c)\n\t\t{\n\t\t\tif (substrRegex.test(c.name)) \n\t\t\t{\n\t\t\t\tmatches.push({ value: c.name, node: c });\n\t\t\t}\n\t\t\t_(c.methods).each(function (m)\n\t\t\t{\n\t\t\t\tif (substrRegex.test(m.name)) \n\t\t\t\t{\n\t\t\t\t\tmatches.push({ value: m.name, node: m });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}); \n\t\t}); \n\n\t\t_(self.modules).each(function (m)\n\t\t{\n\t\t\tif (substrRegex.test(m.name)) \n\t\t\t{\n\t\t\t\tmatches.push({ value: m.name, node: m });\n\t\t\t}\n\t\t}); \n\n\t\treturn matches;\n\t}\n\n,\tsubstringMatcher: function() \n\t{\n\t\tvar self = this;\n\t\treturn function findMatches(q, cb) \n\t\t{\n\t\t\tvar matches;\n\t\t\t// an array that will be populated with substring matches\n\t\t\tmatches = self.search(q);\t\t\t\n\t\t\tcb(matches);\n\t\t};\n\t}\n\n});\n\n\n//@module shortjsdoc\n//@class IndexView @extends AbstractView\nvar IndexView = AbstractView.extend({\n\n\tclassName: \"index\"\n\n,\ttemplate: 'index'\n\n});\n\n//@module shortjsdoc\n//@class JsDocRouter @extends BackboneRouter\nvar JsDocRouter = Backbone.Router.extend({\n\n\troutes: {\n\t\t'class/:class': 'showClass'\n\t,\t'class/:class?:options': 'showClass'\n\n\t// ,\t'classHierarchy/:class': 'showClass'event\n\n\t,\t'module/:module': 'showModule'\n\n\t,\t'method/:method': 'showMethod'\n\t,\t'constructor/:method': 'showMethod'\n\n\t,\t'property/:property': 'showProperty'\n\t,\t'event/:event': 'showEvent'\n\n\t,\t'index': 'showIndex'\n\t,\t'modules': 'showModules'\n\t,\t'classes': 'showClasses'\n\n\t,\t'parse': 'showParse'\n\t// ,\t'search': 'showSearch'\n\t}\n\n,\tinitialize: function(application) \n\t{\n\t\tthis.application=application;\n\t}\n\n\t//@method showView @param {AbstractView}view @param {String} resourceName\n,\tshowView: function(view, resourceName)\n\t{\n\t\tresourceName = resourceName||'Resource'; \n\t\tif(view.resourceNotFound)\n\t\t{\n\t\t\tthis.application.showErrorView(resourceName+' '+resourceName+' not found!'); \n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.application.showView(view); \n\t\t}\n\t}\n\n\t//@method showModule  @param {String} moduleName\n,\tshowModule: function(moduleName) \n\t{\n\t\tvar view = new ModuleView(this.application, moduleName);\n\t\tthis.showView(view); \n\t}\n\n\t//method parseOptions @return {Object<String,String>}\n,\tparseOptions: function(options)\n\t{\n\n\t}\n\n\t//@method showClass  @param {String} className\n,\tshowClass: function(className, options) \n\t{\n\t\toptions = options || '';\n\t\tvar params = this.parseOptions(options);\n\t\t_(options.split('&')).each(function(p)\n\t\t{\n\t\t\tvar a = p.split('='); \n\t\t\tif (a.length >= 2)\n\t\t\t{\n\t\t\t\tparams[a[0]] = a[1]; \n\t\t\t}\n\t\t}); \n\t\tvar view = new ClassView(this.application, className, params);\n\t\tthis.showView(view); \n\t}\n\n\t//@method showMethod  @param {String} method\n,\tshowMethod: function(method)\n\t{\n\t\tvar view = new MethodView(this.application, method);\n\t\tthis.showView(view); \n\t}\n\n\t//@method showProperty  @param {String} property\n,\tshowProperty: function(property)\n\t{\n\t\tvar view = new PropertyView(this.application, property);\n\t\tthis.showView(view); \n\t}\n\n\t//@method showEvent  @param {String} event\n,\tshowEvent: function(event)\n\t{\n\t\tvar view = new PropertyView(this.application, event, true);\n\t\tthis.showView(view); \n\t}\n\n\t//@method showModules\n,\tshowModules: function()\n\t{\n\t\tvar view = new AbstractView(this.application);\n\t\tview.template = 'modules';\n\t\tthis.showView(view);\n\t}\n\t\n\t//@method showClasses\n,\tshowClasses: function()\n\t{\n\t\tvar view = new AbstractView(this.application);\n\t\tview.template = 'classes';\n\t\tthis.showView(view);\n\t}\n\t\n\t//@method showIndex\n,\tshowIndex: function() \n\t{\n\t\tvar view = new IndexView(this.application);\n\t\tthis.application.showView(view); \n\t}\n\n\t//@method showParse\n,\tshowParse: function() \n\t{\n\t\tvar view = new ParseView(this.application);\n\t\tthis.application.showView(view); \n\t}\n\n});\n\n\n//@module shortjsdoc\n//@class MethodView @extends AbstractView\nvar MethodView = AbstractView.extend({\n\n\tclassName: \"method-view\"\n\n,\ttemplate: 'method'\n\n,\tinitialize: function(application, methodName) \n\t{\n\t\tthis.application = application;\n\t\tvar a = methodName.split('.');\n\t\tvar className = a[0] + '.' + a[1]; \n\t\tvar class_ = this.application.data.classes[className];\n\t\tvar methodSimpleName = a[2];\n\t\tif(!isNaN(parseInt(methodSimpleName, 10)))\n\t\t{\n\t\t\tthis.jsdoc = class_.constructors[parseInt(methodSimpleName, 10)]; \n\t\t\tthis.isConstructor = true;\n\t\t}\n\t\telse\n\t\t{\t\t\t\n\t\t\tthis.jsdoc = class_.methods[methodSimpleName]; \n\t\t\tthis.isConstructor = false;\n\t\t}\n\t\tif(!this.jsdoc)\n\t\t{\n\t\t\tthis.resourceNotFound = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.jsdoc.textHtml = this.getTextHtml(this.jsdoc);\t\t\n\t}\n\n,\tafterRender: function()\n\t{\n\t\tthis.renderSource(this.jsdoc, this.$('[data-type=\"sources\"]')); \n\t}\n});\n\n\n\n//@module shortjsdoc\n//@class ModuleView @extends AbstractView\nvar ModuleView = AbstractView.extend({\n\n\tclassName: \"module\"\n\n,\ttemplate: 'module'\n\n,\tinitialize: function(application, moduleName) \n\t{\n\t\tthis.application = application;\n\t\tthis.jsdoc = this.application.data.modules[moduleName]; \n\t\tthis.classes = _( _(this.application.data.classes).values() ).filter(function(c){\n\t\t\treturn c.module.name === moduleName; \n\t\t}); \n\t\t\n\t\tthis.jsdoc.textHtml = this.getTextHtml(this.jsdoc);\t\n\t}\n\n});\n\n//@module shortjsdoc\n//@class ParseView @extends AbstractView\nvar ParseView = AbstractView.extend({\n\n\tclassName: \"parse\"\n\n,\tevents: {\n\t\t'click [data-action=\"inputcode_doit\"]': 'inputCodeDoit'\n\t}\n\n,\ttemplate: 'parse'\n\n,\tinputCodeDoit: function()\n\t{\n\t\tvar code = this.$('[data-type=\"inputcode\"]').val();\n\t\tvar maker = this.application.maker;\n\t\tmaker.parseFile(code, 'textarea');\t\t\n\t\tmaker.postProccess();\n\t\t//console.log(JSON.stringify(maker.data));\n\t\tmaker.postProccessBinding();\n\t\tthis.application.refreshWithNewModel(maker.data);\n\t\t// \n\t}\n\n});\n\n//@module shortjsdoc\n//@class PropertyView @extends AbstractView\nvar PropertyView = AbstractView.extend({\n\n\tclassName: \"property-view\"\n\n,\ttemplate: 'property'\n\n,\tinitialize: function(application, propertyName, isEvent) \n\t{\n\t\tthis.application = application;\n\t\tthis.isEvent = isEvent;\n\t\tvar a = propertyName.split('.');\n\t\tvar className = a[0] + '.' + a[1]; \n\t\tvar class_ = this.application.data.classes[className];\n\t\tvar propertySimpleName = a[2];\n\t\tthis.jsdoc = isEvent ? class_.events[propertySimpleName] : class_.properties[propertySimpleName];\n\t\tif(!this.jsdoc)\n\t\t{\n\t\t\tthis.resourceNotFound = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.jsdoc.textHtml = this.getTextHtml(this.jsdoc);\t\t\n\t}\n\n,\tafterRender: function()\n\t{\n\t\tthis.renderSource(this.jsdoc, this.$('[data-type=\"sources\"]')); \n\t}\n});\n\n\n\n//@module shortjsdoc\n//@class SourcesView @extends AbstractView\nvar SourcesView = AbstractView.extend({\n\n\tclassName: \"sources\"\n\n,\ttemplate: 'sources'\n\n,\tevents: {\n\t\t'click [data-type=\"goto-source\"]': 'gotoSource'\n\t}\n\n,\tinitialize: function(application, jsdoc)\n\t{\n\t\tthis.application = application;\n\t\tthis.jsdoc = jsdoc;\n\t\tthis.allSource = this.application.maker.data.source; \n\n\t\tvar rangeRatio = 400;\n\t\tvar rangeMin = Math.max(0, this.jsdoc.commentRange[0] - rangeRatio);\n\t\tvar rangeMax = Math.min(this.allSource.length - 1, this.jsdoc.commentRange[1] + rangeRatio);\n\t\tthis.sourceSubset = this.allSource.substring(rangeMin, rangeMax);\n\t\tvar jsdocSource = this.allSource.substring(this.jsdoc.commentRange[0], this.jsdoc.commentRange[1]); \n\t\tvar previusSource = this.sourceSubset.substring(0, this.sourceSubset.indexOf(jsdocSource));\n\t\tvar previusSourceLineCount = previusSource.split('\\n').length; \n\n\t\tthis.jsdocLineNumber = previusSourceLineCount - 1;\n\n\t\tthis.lineCount = jsdocSource.split('\\n').length; \n\n\t\t//TODO: count the lines of the comment and show all the lines - not only the first one\n\t}\n\n,\tafterRender: function()\n\t{\n\t\tif(typeof prettyPrint !== 'undefined') \n\t\t{\n\t\t\tprettyPrint();\n\t\t}\n\t}\n\n,\tgotoSource: function()\n\t{\n\t\tvar selector = 'ol.linenums>li'\n\t\t,\t$target = jQuery(jQuery(selector).get(this.jsdocLineNumber));\n\t\tif($target.size())\n\t\t{\n\t\t\tjQuery(window).scrollTop($target.position().top);\n\t\t\t$target.addClass('selectedJsDocLine'); \n\t\t}\n\n\t\tfor (var i = 0; i < this.lineCount; i++) \n\t\t{\n\t\t\t$target = jQuery(jQuery(selector).get(this.jsdocLineNumber+i));\n\t\t\t$target.addClass('selectedJsDocLine'); \n\t\t}\n\t}\n});\n\n//@module shortjsdoc\n// this file add methods to Abstract Application for dealing with types and html markup. \n// @class AbstractView @extends BackboneView\n\n_(AbstractView.prototype).extend({\n\n\t//@method printTag\n\tprintTag: function(text, classAttribute, tag) {\n\t\ttag = tag || 'span'; \n\t\tclassAttribute = classAttribute ||'';\n\t\tif(text)\n\t\t{\n\t\t\treturn '<'+tag+ (classAttribute?(' class=\"'+classAttribute+'\"'):'') +'>'+text+'</'+tag+'>'; \n\t\t}\n\t\treturn '';\n\t}\n\n\t//@method simpleName @param {String}name\n,\tsimpleName: function(name)\n\t{\n\t\treturn this.application.maker.simpleName(name);\n\t}\n\n\t//@method makeLink @param {boolean} htmlAnchors will output anchor elements html\n,\tmakeLink: function(node, htmlAnchors)\n\t{\n\t\t// if (!node || !node.type) // no type for this node. This isn't undefined ! This means we just simply doesn't have the information.\n\t\t// {\n\t\t//\treturn '';\n\t\t// }\n\t\tvar s = htmlAnchors?'<a href=\"':'';\n\t\tif(node.annotation==='method')\n\t\t{\n\t\t\ts += '#method/' + node.absoluteName; \n\t\t}\n\t\telse if(node.annotation==='constructor')\n\t\t{\t\t\t\n\t\t\ts += '#constructor/' + node.absoluteName; \n\t\t}\n\t\telse if(node.annotation==='property')\n\t\t{\n\t\t\ts += '#property/' + node.absoluteName; \n\t\t}\n\t\telse if(node.annotation==='event')\n\t\t{\n\t\t\ts += '#event/' + node.absoluteName; \n\t\t}\n\t\telse if(node.annotation==='class')\n\t\t{\n\t\t\ts += '#class/' + node.absoluteName; \n\t\t}\n\t\telse if(node.annotation==='module')\n\t\t{\n\t\t\ts += '#module/' + node.name; \n\t\t}\n\n\t\ts += htmlAnchors?('\">'+node.name+'</a>'):'';\n\t\treturn s;\n\t}\n\t\n\t//@method printType @param {Object}context\n,\tprintType: function(context)\n\t{\n\t\tif(!context || !context.type)\n\t\t{\n\t\t\treturn ''; \n\t\t}\n\t\tvar self = this;\n\t\tvar href = context.type.nativeTypeUrl || '#class/'+context.type.absoluteName; \n\t\tvar htmlText = context.type.name; \n\t\t// htmlText += (context.type.nativeTypeUrl ? '<span class=\"external-label\">(external)</span>' : '');\n\t\t// htmlText += (context.type.nativeTypeUrl ? '<span class=\"glyphicon glyphicon-star\"></span>' : '');\n\t\tvar aclass = (context.type.nativeTypeUrl ? ' type external ' : ' type ');\n\t\tvar iconHtml = context.type.nativeTypeUrl ? '<span class=\"glyphicon glyphicon-share\"></span>' : ''; \n\n\t\tcontext.buffer.push('<a class=\"'+aclass+'\" href=\"'+href+'\">'+iconHtml+htmlText+'</a>');\n\n\t\tif(context.type.params) \n\t\t{ \n\t\t\tcontext.buffer.push('&lt;');\n\t\t\tfor (var i = 0; i < (context.type.params||[]).length; i++) \n\t\t\t{\n\t\t\t\tvar param = context.type.params[i]; \n\t\t\t\tself.printType({ //recurse!\n\t\t\t\t\ttype:param\n\t\t\t\t,\tbuffer: context.buffer\n\t\t\t\t});\n\t\t\t\tif(i < context.type.params.length - 1)\n\t\t\t\t{\n\t\t\t\t\tcontext.buffer.push(','); \n\t\t\t\t}\n\t\t\t}\n\t\t\tcontext.buffer.push('>'); \n\t\t} \n\t}\n\n\t//@method printTypeAsString @param {String} type @return {String}\n,\tprintSingleTypeAsString: function(type)\n\t{\n\t\tvar buffer = [];\n\t\tvar context = {type: type, typeTemplate: this.printType, buffer: buffer}; \n\t\tthis.printType(context); \n\t\tvar typeOutput = buffer.join(''); \n\t\treturn typeOutput; \n\t}\n,\tprintTypeAsString: function(type)\n\t{\n\t\tvar self = this;\n\t\tif(_(type).isArray())\n\t\t{\n\t\t\tvar a = [];\n\t\t\t_(type).each(function(t)\n\t\t\t{\n\t\t\t\ta.push(self.printSingleTypeAsString(t));\n\t\t\t}); \n\t\t\treturn a.join('<span class=\"type-separator\">or</span>'); \n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.printSingleTypeAsString(type); \n\t\t}\n\t}\n\t//@method getTextHtml depends on lib/marked/\n,\tgetTextHtml: function(node)\n\t{\n\t\tif(!node || !node.text)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\tvar text = node.text\n\t\t,\ttype = this.application.textFormat\n\t\t,\thtml = _(node.children).find(function(c){return c.annotation==='html'; })\n\t\t,\tmarkdown = _(node.children).find(function(c){return c.annotation==='markdown'; });\n\t\t\n\t\tif(html)\n\t\t{\n\t\t\ttype = 'html'; \n\t\t}\n\t\tif(markdown)\n\t\t{\n\t\t\ttype = 'markdown'; \n\t\t}\n\n\t\tif(type === 'markdown')\n\t\t{\n\t\t\treturn marked(text); \n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn text; \n\t\t}\n\t}\n\n\t//@method printMethod\n,\tprintMethod: function(m)\n\t{\n\t\tvar isConstructor = m.annotation==='constructor'; \n\t\tvar s = '<span class=\"method\">';\n\t\tvar methodName = isConstructor ? this.simpleName(m.ownerClass) : m.name;\n\t\tif(!isConstructor && m.returns)\n\t\t{\n\t\t\ts += this.printTypeAsString(m.returns) + '&nbsp;'; \n\t\t}\n\n\t\ts += '<a href=\"' + this.makeLink(m) + '\">' + methodName + '</a>'; \n\n\t\treturn s + '</span>';\n\t}\n\n,\trenderSource: function(jsdoc, $container)\n\t{\n\t\tvar view = new SourcesView(this.application, jsdoc); \n\t\tview.renderIn($container); \n\t\t// this.application.templates.sources.apply(this, arguments)\t\n\t}\n\n,\tgetInherited: function(c, what)\n\t{\n\t\tvar data = {};\n\t\tif(what==='method')\n\t\t{\n\t\t\tdata = _(c.methods).clone();\n\t\t\t_(data).extend(c.inherited.methods || {});\n\t\t}\n\t\treturn data;\n\t}\n});\n\n\n//@module Backbone\n// @class BackboneView\n// @class BackboneRouter\n// @class BackboneModel\n\n//@module jQuery\n// @class jQuery a jQuery Object",
    "classes": {
        "ideal.BaseObject": {
            "annotation": "class",
            "name": "BaseObject",
            "text": "",
            "commentRange": [
                0,
                36
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "ideal",
                "text": "",
                "commentRange": [
                    0,
                    36
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "ideal.BaseObject",
            "properties": {
                "creationDate": {
                    "annotation": "property",
                    "type": "{Date}",
                    "name": "creationDate",
                    "text": "",
                    "commentRange": [
                        148,
                        309
                    ],
                    "fileName": "ALL.js"
                },
                "name": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "name",
                    "text": "",
                    "commentRange": [
                        148,
                        309
                    ],
                    "fileName": "ALL.js"
                },
                "description": {
                    "annotation": "property",
                    "type": "{String}",
                    "name": "description",
                    "text": "",
                    "commentRange": [
                        148,
                        309
                    ],
                    "fileName": "ALL.js"
                },
                "owners": {
                    "annotation": "property",
                    "type": "{Object<String,User>}",
                    "name": "owners",
                    "text": "the owners, a map by owner id",
                    "commentRange": [
                        148,
                        309
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "ideal.ObjectPool": {
            "annotation": "class",
            "name": "ObjectPool",
            "text": "",
            "commentRange": [
                336,
                355
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "ideal",
                "text": "",
                "commentRange": [
                    0,
                    36
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "ideal.ObjectPool",
            "methods": {
                "loadObjects": {
                    "annotation": "method",
                    "name": "loadObjects",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "objects_ids",
                            "text": "",
                            "theRestString": "@return {Object<String,BaseObject>}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Object<String,BaseObject>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        381,
                        473
                    ],
                    "fileName": "ALL.js"
                },
                "getOwners": {
                    "annotation": "method",
                    "name": "getOwners",
                    "text": "this method is useful for *blabla* blabla _blabla_ bab",
                    "commentRange": [
                        543,
                        617
                    ],
                    "fileName": "ALL.js",
                    "params": {
                        "objects_ids": {
                            "annotation": "param",
                            "type": "{Array<String>}",
                            "name": "objects_ids",
                            "text": "",
                            "children": [
                                {
                                    "annotation": "return",
                                    "type": "{Object<String,Object<String,User>>}",
                                    "text": "",
                                    "theRestString": ""
                                }
                            ],
                            "commentRange": [
                                731,
                                814
                            ],
                            "fileName": "ALL.js"
                        }
                    }
                }
            },
            "events": {
                "objectCreated": {
                    "annotation": "event",
                    "name": "objectCreated",
                    "text": "event fired when an object is created in this pool.",
                    "commentRange": [
                        926,
                        1000
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "ideal.Thing": {
            "annotation": "class",
            "name": "Thing",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "BaseObject",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1115,
                1181
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "ideal",
                "text": "",
                "commentRange": [
                    0,
                    36
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "ideal.Thing",
            "properties": {
                "importance": {
                    "annotation": "property",
                    "type": "{Number}",
                    "name": "importance",
                    "text": "",
                    "commentRange": [
                        1115,
                        1181
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "ideal.Action": {
            "annotation": "class",
            "name": "Action",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "BaseObject",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1296,
                1336
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "ideal",
                "text": "",
                "commentRange": [
                    0,
                    36
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "ideal.Action",
            "methods": {
                "extract": {
                    "annotation": "method",
                    "name": "extract",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String|BaseObject|Array<BaseObject>}",
                            "name": "what",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        1450,
                        1819
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "Problems.Idea": {
            "annotation": "class",
            "name": "Idea",
            "text": "",
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "Problems",
                "text": "",
                "commentRange": [
                    1450,
                    1819
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "Problems.Idea"
        },
        "Problems.Problem": {
            "annotation": "class",
            "name": "Problem",
            "text": "",
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "Problems",
                "text": "",
                "commentRange": [
                    1450,
                    1819
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "Problems.Problem"
        },
        "life.Living": {
            "annotation": "class",
            "name": "Living",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Thing",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "life",
                "text": "",
                "commentRange": [
                    1450,
                    1819
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "life.Living",
            "methods": {
                "breath": {
                    "annotation": "method",
                    "name": "breath",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "size",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        1450,
                        1819
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "life.Animal": {
            "annotation": "class",
            "name": "Animal",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Living",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "life",
                "text": "",
                "commentRange": [
                    1450,
                    1819
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "life.Animal",
            "methods": {
                "eat": {
                    "annotation": "method",
                    "name": "eat",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Array<Food>}",
                            "name": "food",
                            "text": "",
                            "theRestString": "@return {Array<Energy>}"
                        },
                        {
                            "annotation": "return",
                            "type": "{Array<Energy>}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        1450,
                        1819
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "life.Person": {
            "annotation": "class",
            "name": "Person",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Animal",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "life",
                "text": "",
                "commentRange": [
                    1450,
                    1819
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "life.Person",
            "methods": {
                "walk": {
                    "annotation": "method",
                    "name": "walk",
                    "text": "",
                    "children": [
                        {
                            "annotation": "return",
                            "type": "{Action}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        1450,
                        1819
                    ],
                    "fileName": "ALL.js"
                },
                "crossStreet": {
                    "annotation": "method",
                    "name": "crossStreet",
                    "text": "This try to be a markdown [text](http://google.com)\n\nAnother paragraph \n\n\tvar someMarkup = {\n\t\ta: 1\n\t,\tn: 2\n\t,\tg: function (e)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t};\n\nand some final text with a list\n\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n  2. hello\n4. And another item.",
                    "commentRange": [
                        1820,
                        2208
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "problem1.TerranObject": {
            "annotation": "class",
            "name": "TerranObject",
            "text": "",
            "commentRange": [
                2211,
                2565
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.TerranObject"
        },
        "problem1.Person": {
            "annotation": "class",
            "name": "Person",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "TerranObject",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2211,
                2565
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.Person"
        },
        "problem1.List": {
            "annotation": "class",
            "name": "List",
            "text": "This is just a semantic alias for javascript Array.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Array",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2211,
                2565
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.List"
        },
        "problem1.Map": {
            "annotation": "class",
            "name": "Map",
            "text": "This is just a semantic alias for javascript Object.",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Object",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2211,
                2565
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.Map"
        },
        "problem1.Building": {
            "annotation": "class",
            "name": "Building",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "TerranObject",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2567,
                2609
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.Building"
        },
        "problem1.Hospital": {
            "annotation": "class",
            "name": "Hospital",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "Building",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2611,
                3170
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.Hospital",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Neque porro quisquam est qui _dolorem_ *ipsum* quia dolor sit amet, consectetur, adipisci velit...",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "availableBeds",
                            "text": "Neque porro quisquam est qui _dolorem_ *ipsum* quia dolor sit amet, consectetur, adipisci velit...",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        2611,
                        3170
                    ],
                    "fileName": "ALL.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{Number}",
                            "name": "availableBeds",
                            "text": "Neque porro quisquam est qui _dolorem_ *ipsum* quia dolor sit amet, consectetur, adipisci velit...",
                            "theRestString": ""
                        }
                    ]
                }
            ],
            "methods": {
                "getActiveDoctors": {
                    "annotation": "method",
                    "name": "getActiveDoctors",
                    "text": "",
                    "children": [
                        {
                            "annotation": "returns",
                            "type": "{List<Doctor>}",
                            "name": "the",
                            "text": "currently active doctors in this hospital",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        2611,
                        3170
                    ],
                    "fileName": "ALL.js"
                }
            },
            "properties": {
                "todayIngresedPatients": {
                    "annotation": "property",
                    "type": "{Array<Person>}",
                    "name": "todayIngresedPatients",
                    "text": "all the patiens that entered this hospital today",
                    "commentRange": [
                        2611,
                        3170
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "problem1.Doctor": {
            "annotation": "class",
            "name": "Doctor",
            "text": "",
            "children": [
                {
                    "annotation": "extend",
                    "name": "Person",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                2611,
                3170
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.Doctor",
            "properties": {
                "skills": {
                    "annotation": "property",
                    "type": "{Map<String,MedicalTopic>}",
                    "name": "skills",
                    "text": "",
                    "commentRange": [
                        2611,
                        3170
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "problem1.MedicalTopic": {
            "annotation": "class",
            "name": "MedicalTopic",
            "text": "Lorem *ipsum* dolor sit amet, consectetur adipisicing elit, \n\n\tsed do eiusmod tempor \n\tincididunt ut labore et dolore \n\tmagna aliqua. \n\t\tUt enim ad minim \n\t\t\tveniam, quis nostrud exercitation\n\t\t\tullamco laboris nisi ut aliquip ex \n\t\tea commodo consequat. Duis aute irure dolor\n\tin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n\nExcepteur sint occaecat *cupidatat* non proident, sunt in culpa qui officia deserunt mollit anim id est laborum",
            "commentRange": [
                3172,
                3669
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "problem1",
                "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
                "commentRange": [
                    2211,
                    2565
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "problem1.MedicalTopic"
        },
        "shortjsdoc.AbstractView": {
            "annotation": "class",
            "name": "AbstractView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "BackboneView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                17310,
                17465
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "this file add methods to Abstract Application for dealing with types and html markup.",
                "commentRange": [
                    17310,
                    17465
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.AbstractView",
            "methods": {
                "printTag": {
                    "annotation": "method",
                    "name": "printTag",
                    "text": "",
                    "commentRange": [
                        17504,
                        17522
                    ],
                    "fileName": "ALL.js"
                },
                "simpleName": {
                    "annotation": "method",
                    "name": "simpleName",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "name",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        17769,
                        17809
                    ],
                    "fileName": "ALL.js"
                },
                "makeLink": {
                    "annotation": "method",
                    "name": "makeLink",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{boolean}",
                            "name": "htmlAnchors",
                            "text": "will output anchor elements html",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        17897,
                        17977
                    ],
                    "fileName": "ALL.js"
                },
                "printType": {
                    "annotation": "method",
                    "name": "printType",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "context",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        18812,
                        18854
                    ],
                    "fileName": "ALL.js"
                },
                "printTypeAsString": {
                    "annotation": "method",
                    "name": "printTypeAsString",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "type",
                            "text": "",
                            "theRestString": "@return {String}"
                        },
                        {
                            "annotation": "return",
                            "type": "{String}",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        19948,
                        20013
                    ],
                    "fileName": "ALL.js"
                },
                "getTextHtml": {
                    "annotation": "method",
                    "name": "getTextHtml",
                    "text": "depends on lib/marked/",
                    "commentRange": [
                        20563,
                        20607
                    ],
                    "fileName": "ALL.js"
                },
                "printMethod": {
                    "annotation": "method",
                    "name": "printMethod",
                    "text": "",
                    "commentRange": [
                        21100,
                        21121
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "shortjsdoc.Application": {
            "annotation": "class",
            "name": "Application",
            "text": "",
            "commentRange": [
                4501,
                4884
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "children": [
                    {
                        "annotation": "author",
                        "text": ": sgurin",
                        "theRestString": ""
                    }
                ],
                "commentRange": [
                    4501,
                    4884
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.Application",
            "constructors": [
                {
                    "annotation": "constructor",
                    "name": "n",
                    "text": "Application",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        4501,
                        4884
                    ],
                    "fileName": "ALL.js",
                    "params": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ]
                }
            ],
            "methods": {
                "start": {
                    "annotation": "method",
                    "name": "start",
                    "text": "an application loading it with given data.",
                    "children": [
                        {
                            "annotation": "static",
                            "name": "dummy",
                            "text": "",
                            "theRestString": "@param data the output of passing jsindentator JsDocMaker."
                        },
                        {
                            "annotation": "param",
                            "name": "data",
                            "text": "the output of passing jsindentator JsDocMaker.",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        6443,
                        6571
                    ],
                    "fileName": "ALL.js"
                },
                "showView": {
                    "annotation": "method",
                    "name": "showView",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{AbstractView}",
                            "name": "view",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        5829,
                        5874
                    ],
                    "fileName": "ALL.js"
                },
                "refreshWithNewModel": {
                    "annotation": "method",
                    "name": "refreshWithNewModel",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{Object}",
                            "name": "data",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        6095,
                        6144
                    ],
                    "fileName": "ALL.js"
                },
                "showErrorView": {
                    "annotation": "method",
                    "name": "showErrorView",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "s",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        6304,
                        6345
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "shortjsdoc.ApplicationView": {
            "annotation": "class",
            "name": "ApplicationView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                6677,
                6744
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    6677,
                    6744
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.ApplicationView"
        },
        "shortjsdoc.ClassView": {
            "annotation": "class",
            "name": "ClassView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                7292,
                7353
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    7292,
                    7353
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.ClassView"
        },
        "shortjsdoc.HeaderView": {
            "annotation": "class",
            "name": "HeaderView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                8148,
                8210
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    8148,
                    8210
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.HeaderView"
        },
        "shortjsdoc.IndexView": {
            "annotation": "class",
            "name": "IndexView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                10098,
                10159
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    10098,
                    10159
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.IndexView"
        },
        "shortjsdoc.JsDocRouter": {
            "annotation": "class",
            "name": "JsDocRouter",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "BackboneRouter",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                10246,
                10311
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    10246,
                    10311
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.JsDocRouter",
            "methods": {
                "showView": {
                    "annotation": "method",
                    "name": "showView",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{AbstractView}",
                            "name": "view",
                            "text": "",
                            "theRestString": "@param {String} resourceName"
                        },
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "resourceName",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        10883,
                        10956
                    ],
                    "fileName": "ALL.js"
                },
                "showModule": {
                    "annotation": "method",
                    "name": "showModule",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "moduleName",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        11219,
                        11267
                    ],
                    "fileName": "ALL.js"
                },
                "showClass": {
                    "annotation": "method",
                    "name": "showClass",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "className",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        11492,
                        11538
                    ],
                    "fileName": "ALL.js"
                },
                "showMethod": {
                    "annotation": "method",
                    "name": "showMethod",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "method",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        11885,
                        11929
                    ],
                    "fileName": "ALL.js"
                },
                "showProperty": {
                    "annotation": "method",
                    "name": "showProperty",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "property",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        12048,
                        12096
                    ],
                    "fileName": "ALL.js"
                },
                "showEvent": {
                    "annotation": "method",
                    "name": "showEvent",
                    "text": "",
                    "children": [
                        {
                            "annotation": "param",
                            "type": "{String}",
                            "name": "event",
                            "text": "",
                            "theRestString": ""
                        }
                    ],
                    "commentRange": [
                        12223,
                        12265
                    ],
                    "fileName": "ALL.js"
                },
                "showModules": {
                    "annotation": "method",
                    "name": "showModules",
                    "text": "",
                    "commentRange": [
                        12389,
                        12410
                    ],
                    "fileName": "ALL.js"
                },
                "showClasses": {
                    "annotation": "method",
                    "name": "showClasses",
                    "text": "",
                    "commentRange": [
                        12547,
                        12568
                    ],
                    "fileName": "ALL.js"
                },
                "showIndex": {
                    "annotation": "method",
                    "name": "showIndex",
                    "text": "",
                    "commentRange": [
                        12705,
                        12724
                    ],
                    "fileName": "ALL.js"
                },
                "showParse": {
                    "annotation": "method",
                    "name": "showParse",
                    "text": "",
                    "commentRange": [
                        12840,
                        12859
                    ],
                    "fileName": "ALL.js"
                }
            }
        },
        "shortjsdoc.MethodView": {
            "annotation": "class",
            "name": "MethodView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                12980,
                13042
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    12980,
                    13042
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.MethodView"
        },
        "shortjsdoc.ModuleView": {
            "annotation": "class",
            "name": "ModuleView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                13867,
                13929
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    13867,
                    13929
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.ModuleView"
        },
        "shortjsdoc.ParseView": {
            "annotation": "class",
            "name": "ParseView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                14358,
                14419
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    14358,
                    14419
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.ParseView"
        },
        "shortjsdoc.PropertyView": {
            "annotation": "class",
            "name": "PropertyView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                14904,
                14968
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    14904,
                    14968
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.PropertyView"
        },
        "shortjsdoc.SourcesView": {
            "annotation": "class",
            "name": "SourcesView",
            "text": "",
            "children": [
                {
                    "annotation": "extends",
                    "name": "AbstractView",
                    "text": "",
                    "theRestString": ""
                }
            ],
            "commentRange": [
                15687,
                15750
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "shortjsdoc",
                "text": "",
                "commentRange": [
                    15687,
                    15750
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "shortjsdoc.SourcesView"
        },
        "Backbone.BackboneView": {
            "annotation": "class",
            "name": "BackboneView",
            "text": "",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "Backbone",
                "text": "",
                "commentRange": [
                    21898,
                    22039
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "Backbone.BackboneView"
        },
        "Backbone.BackboneRouter": {
            "annotation": "class",
            "name": "BackboneRouter",
            "text": "",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "Backbone",
                "text": "",
                "commentRange": [
                    21898,
                    22039
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "Backbone.BackboneRouter"
        },
        "Backbone.BackboneModel": {
            "annotation": "class",
            "name": "BackboneModel",
            "text": "",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "Backbone",
                "text": "",
                "commentRange": [
                    21898,
                    22039
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "Backbone.BackboneModel"
        },
        "jQuery.jQuery": {
            "annotation": "class",
            "name": "jQuery",
            "text": "a jQuery Object",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js",
            "module": {
                "annotation": "module",
                "name": "jQuery",
                "text": "",
                "commentRange": [
                    21898,
                    22039
                ],
                "fileName": "ALL.js"
            },
            "absoluteName": "jQuery.jQuery"
        }
    },
    "modules": {
        "ideal": {
            "annotation": "module",
            "name": "ideal",
            "text": "",
            "commentRange": [
                0,
                36
            ],
            "fileName": "ALL.js"
        },
        "Problems": {
            "annotation": "module",
            "name": "Problems",
            "text": "",
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js"
        },
        "life": {
            "annotation": "module",
            "name": "life",
            "text": "",
            "commentRange": [
                1450,
                1819
            ],
            "fileName": "ALL.js"
        },
        "problem1": {
            "annotation": "module",
            "name": "problem1",
            "text": "This is a description of planet earth city from the point of view of an alien observing us from a space ship.",
            "commentRange": [
                2211,
                2565
            ],
            "fileName": "ALL.js"
        },
        "shortjsdoc": {
            "annotation": "module",
            "name": "shortjsdoc",
            "text": "",
            "commentRange": [
                3671,
                3754
            ],
            "fileName": "ALL.js"
        },
        "Backbone": {
            "annotation": "module",
            "name": "Backbone",
            "text": "",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js"
        },
        "jQuery": {
            "annotation": "module",
            "name": "jQuery",
            "text": "",
            "commentRange": [
                21898,
                22039
            ],
            "fileName": "ALL.js"
        }
    }
}
